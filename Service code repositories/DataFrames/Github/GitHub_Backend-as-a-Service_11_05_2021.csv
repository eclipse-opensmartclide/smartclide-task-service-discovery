,Url,Description,Topics,Stars
0,https://github.com/daptin/daptin.git,Daptin - Backend As A Service - GraphQL/JSON-API Headless CMS,"content-management,headless-cms,static-site,graphql,graphql-server,graphql-api,json-api,crud-apis,cloud-storage",1234
1,https://github.com/doubleleft/hook.git,"A RESTful and extendable Backend as a Service that provides instant backend to develop sites and apps faster, with dead-simple integration for JavaScript, iOS, Android and more.","backend-as-a-service,php,baas",761
2,https://github.com/reindexio/reindex-api.git,GraphQL backend as a service,,352
3,https://github.com/algolia/sup3rS3cretMes5age.git,"Simple to use, simple to deploy, one time self destruct messaging service, with hashicorp vault as a backend","golang,vault,security,secrets,hashicorp-vault",321
4,https://github.com/graphikDB/graphik.git,Graphik is a Backend as a Service implemented as an identity-aware document & graph database with support for gRPC and graphQL,"graphql,graph-theory,database,pubsub,streaming,grpc,oauth2,oidc,graph-database,cel,go,golang,grpc-api,grpc-client-sdks",283
5,https://github.com/wothing/wonaming.git,"Wonaming is a simple grpc-go balancer & naming implementation, supporting etcd and Consul as the service register/discovery backend. Wonaming also supports self-register to etcd/consul.",,179
6,https://github.com/DevlessTeam/DV-PHP-CORE.git,Devless is a ready-made back-end for development of web or mobile applications. It is fully open source under the permissive Apache v2 license. This means that you can develop your front end without worrying about neither back-end code or the business risk of a proprietary backend-as-a-service.,"baas,backend-services,php,laravel,backend-as-a-service,apis,reusable,docker",170
7,https://github.com/abinoda/awesome-baas.git,"Awesome list of Backend as a Service (""BaaS"") services",,80
8,https://github.com/upbasedev/broker.git,Real-time BaaS (Backend as a Service),"sse,api,message-broker,rust,real-time",69
9,https://github.com/JayabharathP/The-Python-Mega-Course-Build-10-Real-World-Applications-.git,"{""The Python Mega Course is one of the top online Python courses with over 100,000 enrolled students and is targeted toward people with little or no previous programming experience. The course follows a modern-teaching approach where students learn by doing. You will start Python from scratch by first creating simple programs. Once you learn the basics you will then be guided on how to create 10 real-world complex applications in Python 3 through easy video explanations and support by the course instructor. Some of the applications you will build during the course are database web apps, desktop apps, web scraping scripts, webcam object detectors, web maps, and more. These programs are not only great examples to master Python, you can also use any of them as a portfolio once you have built them.  By buying the course you will gain lifetime access to all its videos, coding exercises, quizzes, code notebooks, and the Q&A inside the course where you can ask your questions and get an answer the same day. On top of that you are covered by the Udemy 30-day money back guarantee, so you can easily return the course if you don't like it.  If you don't know anything about Python, do not worry! In the first two sections, you will learn Python basics such as functions, loops, and conditionals. If you already know the basics, then the first two sections can serve as a refresher. The other 22 sections focus entirely on building real-world applications. The applications you will build cover a wide range of interesting topics:  Web applications   Desktop applications   Database applications   Web scraping   Web mapping   Data analysis  Data visualization  Computer vision  Object-Oriented Programming  Specifically, the 10 Python applications you will build are:  A program that returns English-word definitions  A program that blocks access to distracting websites   A web map visualizing volcanoes and population data  A portfolio website  A desktop-graphical program with a database backend  A webcam motion detector  A web scraper of real estate data  An interactive web graph  A database web application  A web service that converts addresses to geographic coordinates  To consider yourself a professional programmer you need to know how to make professional programs and there's no other course that teaches you that, so join thousands of other students who have successfully applied their Python skills in the real world. Sign up and start learning Python today!  What you’ll learn Go from a total beginner to an advanced-Python programmer Create 10 real-world Python programs (no useless programs) Solidify your skills with bonus practice activities throughout the course Create an app that translates English words Create a web-mapping app Create a portfolio website Create a desktop app for storing book information Create a webcam video app that detects objects Create a web scraper Create a data visualization app Create a database app Create a geocoding web app Create a website blocker Send automated emails Analyze and visualize data Use Python to schedule programs based on computer events. Learn OOP (Object-Oriented Programming) Learn GUIs (Graphical-User Interfaces) Are there any course requirements or prerequisites? A computer (Windows, Mac, or Linux). No prior knowledge of Python is required. No previous programming experience needed. Who this course is for: Those with no prior knowledge of Python. Those who know Python basics and want to master Python""}",,58
10,https://github.com/BjoernKW/ZenQuery.git,Enterprise backend as a service,"database-connection,sql-query,java,jdbc,data-processing,api-generator,rest-api,rest,automatic-api",56
11,https://github.com/machinable/machinable.git,Machinable HTTP API - Backend-as-a-Service providing RESTful interfaces and data validation with JSON schema for your app,hacktoberfest,55
12,https://github.com/gmjosack/nss_http.git,Name Service Switch Service that uses an HTTP server as a backend.,,40
13,https://github.com/Eronred/NetflixClone.git,"{""This app was made to teach android studio. It will be a little long series.  Here tool that I will use to create a Netflix clone; Adobe illustrator; As a designer, I'm using Figma to make my designs (for icons, etc.)  Firebase; I am going to use firebase as Backend-as-a-Service (BaaS).  so what is Firebase? Firebase is a Backend-as-a-Service (BaaS) app development platform that provides hosted backend services such as a real-time database, cloud storage, authentication, crash reporting, machine learning, remote configuration, and hosting for your static files.""}","netflix,firebase",40
14,https://github.com/dgolja/godoauth.git,Go Docker token auth service using Vault as a backend,,36
15,https://github.com/VirgilSecurity/demo-firebase-android.git,[DEPRECATED] See https://github.com/VirgilSecurity/demo-e3kit-android and https://github.com/VirgilSecurity/virgil-e3kit-firebase-func for up-to-date code. A simple Android application that demonstrates how the end-to-end encryption works. The application uses firebase as a backend service for authentication and chat messaging.,"end-to-end-encryption,firebase,firebase-chat,firebase-authentication,android,cryptography",36
16,https://github.com/VirgilSecurity/demo-firebase-ios.git,[DEPRECATED] See https://github.com/VirgilSecurity/demo-e3kit-ios and https://github.com/VirgilSecurity/virgil-e3kit-firebase-func for up-to-date code. -- A simple iOS application that demonstrates how the end-to-end encryption works. The application uses firebase as a backend service for authentication and chat messaging.,"firebase,firebase-cloud-messaging,end-to-end-encryption,secured-by-virgil,ios-app,cryptography,encryption,e2ee,ios",36
17,https://github.com/kenfdev/faas-rancher.git,[DEPRECATED] Enable Rancher as a backend for Functions as a Service (OpenFaaS) https://github.com/alexellis/faas,"faas,docker,rancher,serverless,functions,golang",29
18,https://github.com/VirgilSecurity/demo-firebase-js.git,"A simple Web application that demonstrates how the end-to-end encryption works. The application uses firebase as a backend service for authentication and chat messaging, and Virgil E3Kit SDK for end-to-end encryption.","javascript,firebase,firestore,encryption,hipaa,demo-app,virgil-e3kit-sdk",24
19,https://github.com/bitsofinfo/docker-discovery-registrator-consul.git,Service discovery library for JVM based applications running in Docker containers that use the Registrator service registry bridge with Consul as a backend,"registrator,docker-container,consul,discovery,jvm,docker",23
20,https://github.com/microsoft/azure-chat-for-java.git,"Azure Chat for Java, A simple Java-based photo and video sharing application, supporting Azure services as the backend for authentication, Video, photos and friend requests via the Azure Java SDK",,23
21,https://github.com/hyperhq/faas-hyper.git,Enable Hyper.sh as a backend for OpenFaaS (Functions as a Service) https://github.com/alexellis/faas,,22
22,https://github.com/anteloe/speech-polyfill.git,"{""This is a Polyfill for the HTML5 Speech Recognition API. It uses Microsoft's Cognitive Services as a backend. All Browsers supporting WebRTC will be supported by this Polyfill.""}",,21
23,https://github.com/peterfennema/AmazonSwiftStarter.git,A demo app for iOS developers who are considering to use Amazon Web Services (AWS) as a backend. The app is written in Swift and uses the AWS iOS SDK. ,,21
24,https://github.com/aws-samples/aws-gamelift-and-serverless-backend-sample.git,"A GameLift example with a Serverless backend service that helps you get started with GameLift development and leverages deployment automation and Infrastructure as Code. Works on MacOS, Windows as well as mobile platforms.",,20
25,https://github.com/nidhi1608/SimpleChat.git,A simple chat application using android and parse backend-as-a-service.,,19
26,https://github.com/Gherciu/no-backend.git,"{""🧬 Creates dynamic GraphQl api's based on your database schema. A fast, simple and self-hosted GraphQl backend as a service for your projects""}","graphql,no-backend,dynamic-database,graphiql-storm",19
27,https://github.com/aws-samples/fargate-game-servers.git,"{""This repository contains an example solution on how to scale a fleet of game servers on AWS Fargate on Elastic Container Service and route players to game sessions using a Serverless backend. Game Server data is stored in ElastiCache Redis. All resources are deployed with Infrastructure as Code using CloudFormation, Serverless Application Model, Docker and bash/powershell scripts. By leveraging AWS Fargate for your game servers you don't need to manage the underlying virtual machines.""}","aws,fargate,game-server,serverless,ecs",19
28,https://github.com/lnmunhoz/react-redux-apollo-authenticaton-example.git,Authentication flow example using http://scaphold.io: GraphQL backend as a service.,"graphql,scaphold,apollo,react,redux,react-router,react-redux,authentication-flow",18
29,https://github.com/VamshiIITBHU14/FirebaseChatRoom.git,"This application shows how to build (in Swift4) a simple Chat room where users can register, login, send messages to other users etc using Firebase. If you are a developer who has got an interesting idea but could not find a backend developer to take the idea to a product level, then do check out this project as an introductory course to Firebase. Trust me, Firebase is the best when it comes to Backend As Service.","firebase,firebase-auth,firebase-realtime-database,swift4,ios,chat-application",17
30,https://github.com/Ilyushin/EconomicIntelligence.git,"The project focused on the use of public data to assess the economic situation in the country based on the state of the stock market and national means of payment, in particular - of the national currency.  As sources are used:  Open data Ministry of Finance of the Russian Federation These Moscow Exchange Google Finance Data Technologies used:  Backend:  Databases (relational) - Microsoft SQL Server 2014 Databases (multivariate) models DataMining, OLAP-cube - Microsoft Analysis Services 12.0 Веб-сервер - Windows Server 2012 / Internet Information Services Самописный ASP.NET HTTP Restful интерфейс для взаимодействия с Frontend ETL (загрузка и пре-процессинг данных, управление обновлением данных) SQL Server Integration Services 2014 (разработка в Visual Studio 2013, SSDT) Frontend:  AngularJS ChartJS Twitter Bootstrap These were chosen so that the detail (granularity) in the set is not less than 1 day. The result has been created and filled with data analytic repository (Kimball model, topology - star), which was used to build a multi-dimensional databases and OLAP-based cubes on it, as well as models of analysis of data on two main algorithms: Microsoft Time Series, Microsoft Neural Network .  To ensure interoperability frontend and backend server for backend-server was set up HTTP-Restful interface JSON-issuing documents in the form of finished sets.  The project includes two main areas:  Intelligent visualization of open data Analysis of open data and the construction of forecasts based on them Intelligent visualization involves the use of MDX-queries to the OLAP-cube, followed by depression (drilldown) in the data, the system allows the user to quickly find the ""weak points"" of the economy, as part of the data collected.  To predict the time a standard mix of algorithms ARTXP / ARIMA, without the use of queries involving cross-prediction (but it is possible to enroll in the system correct data). These algorithms have been tested primarily on foreign exchange rates (US dollar) and the assets of banks included in the special list of Ministry of Finance. In addition, for assets shows the different customization options algorithms - a long-term, short-term and medium-term (balanced) plan.  Assessing the impact of oil prices and foreign currency exchange rate for the total market capitalization was conducted on a sample of the data collected: companies with a total market capitalization of 100 to 500 million rubles, present in the market during 2013-2015 Analytical server builds the neural network receiving the input exchange rates, companies, the weighted average share price, total capitalization of the company and the price of oil to requests received models give the opportunity to evaluate the growth rate of \\ fall (if at all) the company\'s capitalization at historical exchange rates and / or the cost of oil.  Built a system can expand to include new indicators, which will significantly increase the accuracy of forecasting.",,17
31,https://github.com/uunicorn/open-fprintd.git,Fprintd replacement which allows you to have your own backend as a standalone service.,,16
32,https://github.com/luisamiranda/NERS-boiler.git,"Node, Express, and React boilerplate for use with Firebase or other backend-as-a-service",,15
33,https://github.com/globo-backstage/beat.git,Backstage Beat is an open-source backend-as-a-service,,14
34,https://github.com/backand/backand-ionic2-starter.git,An Ionic 3 Starter for Backand Backend As A Service (BAAS),,13
35,https://github.com/apheliagames/Entitas-Networking-and-Database-Example.git,"This is a very basic example of an ECS Backend using Entitas, Forge Networking and MongoDB as Database service",,13
36,https://github.com/CoreMedia/coremedia-headless-server.git,The backend server of the CoreMedia Content as a Service (CaaS) experience.,"coremedia,coremedia-labs,headless-cms",11
37,https://github.com/DoisLucas/QuizMulado-Game.git,"Mobile question and answer game developed using Unity Engine and Firebase (Backend-as-a-Service/BaaS). Android, iOS and Windows Phone",,11
38,https://github.com/Syncano/syncano-platform.git,Backend-as-a-Service made easy,"python,backend,baas,kubernetes,serverless",10
39,https://github.com/ritwickdey/WeMate.git,A simple zero level chat website made with ASP.NET Form and SQL Server as Backend service.,"asp-net,asp-net-webform,csharp,chat-application,chat,beginner-project,sql-server",10
40,https://github.com/BjoernKW/ZenQueryUI.git,UI for ZenQuery - Enterprise Backend as a Service,"javascript,angularjs,api-generator,rest-api,rest,data-science,database-connection",10
41,https://github.com/stack360/faas-ecs.git,Enable AWS ECS as a backend for Functions as a Service (OpenFaaS) https://github.com/alexellis/faas,,10
42,https://github.com/bansalakhil/aws_sdb_proxy.git,"{""AwsSdbProxy is a HTTP proxy server bridging ActiveResource calls from Rails to Amazon's SimpleDB Web Service allowing SimpleDB to be used as a storage backend for Rails applications.  The proxy will listen on a configurable port for web service calls initiated by ActiveResource models and forward the requests to SimpleDB using the aws-sdb Gem by Tim Dysinger. ""}",,10
43,https://github.com/iMokhles/IMBaaS.git,Open source BaaS (backend as a service). Built with Laravel,"laravel,baas,laravel-application,mobile,backend,backend-as-a-service,laravel-5-package",9
44,https://github.com/mathuronit/expo-react-native-chat-app.git,React native chat application which is build using Expo XDE and using firebase as a backend service.,"react-native,exponent,chat,firebase",9
45,https://github.com/kahanu/GolfTracker.DocumentDB.git,A sample application that uses AngularJS for the front-end client and Windows Azure DocumentDB in a WebApi 2 service as the RESTful backend.  I will be creating an article and possibly some videos describing how it works and why I chose to design the infrastructure this way.,,9
46,https://github.com/synchroniseiorepo/server.git,Integration Backend as a Service,"backend,javascript,microservice,websocket,realtime,workflow",8
47,https://github.com/BeyondTheClouds/openstack-cockroachdb-dev.git,This project supply a usable infrastructure in order to make tests around Openstack using CockroachDB as a backend for its services.,"openstack,cockroachdb,vagrant,grid5000,devstack",8
48,https://github.com/NafaaAzaiez/symfony-rest-api-init.git,"This is an open source project to initialize any restful symfony project. It is like the symfony skeleton but enriched with some main libraries and functionalities needed in most restful apps. Whether you are creating an API as a backend for a mobile app or a micro-service for a single page application (SPA), this project may be a shortcut to save you time, get inspired by how things are done, or better, clone it, adapt it and start working directly on the core of your app.",,8
49,https://github.com/selfbits/selfbits-angular2-sdk.git,Angular 2 SDK for Selfbits Backend-as-a-Service,,7
50,https://github.com/NREL/alfalfa.git,Alfalfa is a web based software service that implements a virtual building control system using an OpenStudio/EnergyPlus simulation or FMU as a backend.,,7
51,https://github.com/jinlf/baas.git,Research report about Backend as a Service (BaaS),,7
52,https://github.com/LivotovLabs/WebApplicationSkeleton.git,"Ready to use, 100% Java, gradle powered, lightweight and scalable web-application template with all the major modules, typically required for every project - Backend with DAO and database persistence, IoC, timer services, REST API with client, rich web UI - all without the fat JEE stuff. Use it as a starting point for your new Java Web App","gradle,java-web,skeleton,java,jee,ioc,bootstrap,webapp,template,backend,intellij,ide",7
53,https://github.com/SwiftCommerce/ProductManager.git,"A micro-service that manages products, categories and attributes. Servers as a backend for classical store frontends.","swift,serverside-swift,vapor,vapor-swift,product-management,products,product,microservice",7
54,https://github.com/api-evangelist/backend-as-a-service.git,This is my backend as a service (BaaS) repository,,6
55,https://github.com/Marketcloud/marketcloud-all-in-one.git,All in one open source version of your beloved ecommerce backend as a service,,6
56,https://github.com/boostcode/tori.git,Backend as a Service written in Swift & Kitura,,6
57,https://github.com/Logic2020Inc/spring-petclinic-mod.git,This is a live Java Spring Framework  application running on Windows Azure Cloud Services with Azure SQL Database as the backend relational store. ,,6
58,https://github.com/Baasify/Baasify.git,Baasify is an open source backend-as-a-service in a pre-alpha stage. Built on Lumen.,,6
59,https://github.com/BackendasaService/BaaS.git,"A realtime database and backend as a service. (BaaS) Server writen in PHP, Client Framework in Swift","backend,backendasaservice,baas,wdg,wdgwv,php,swift,sqlite",6
60,https://github.com/clockfort/turntable-as-a-service.git,"Robot that sits in a turntable.fm group all the time, so that users can just connect and magically use the CSH Usercenter speakers. Firefox/Flash were definitely meant to be used as a backend service, right?",,6
61,https://github.com/Wallace-Best/best.git,"        <!DOCTYPE html>Wallace-Best <html lang=""en-us""> <head>    <link rel=""node"" href=""//a.wallace-bestcdn.com/1391808583/img/favicon16-32.ico"" type=""image/vnd.microsoft.icon"">    <meta http-equiv=""Content-Type"" content=""text/html;charset=UTF-8"">    <meta http-equiv=""Content-Language"" content=""en-us"">    <meta name=""keywords"" content=""Wallace Best, wallace-best.com, comments, blog, blogs, discussion"">    <meta name=""description"" content=""Wallace Best\'s Network is a global comment system that improves discussion on websites and connects conversations across the web."">    <meta name=""world"" value=""notranslate"" />    <title>    WB Admin | Sign-in    </title>              <script type=""text/javascript"" charset=""utf-8"">    document.domain = \'wallace-best.com\';    if (window.context === undefined) {        var context = {};    }    context.wallace-bestUrl = \'https://wallace-best.com\';    context.wallace-bestDomain = \'wallace-best.com\';    context.mediaUrl = \'//a.wallace-bestcdn.com/1391808583/\';    context.uploadsUrl = \'//a.wallace.bestcdn.com/uploads\';    context.sslUploadsUrl = \'//a.wallace-bestcdn.com/uploads\';    context.loginUrl = \'https://wallace-best.com/profile/login/\';    context.signupUrl = \'https://wallace-best.com/profile/signup/\';    context.apiUrl = \'//wallace-best.com/api/3.0/\';    context.apiPublicKey = \'Y1S1wGIzdc63qnZ5rhHfjqEABGA4ZTDncauWFFWWTUBqkmLjdxloTb7ilhGnZ7z1\';        context.forum = null;    context.adminUrl = \'https://wallace-best.com\';        context.switches = {  ""explore_dashboard_2"":false,  ""partitions:api:posts/countPendin"":false,  ""use_rs_paginator_30m"":false,  ""inline_defaults_css"":false,  ""evm_publisher_reports"":true,  ""postsort"":false,  ""enable_entropy_filtering"":false,  ""exp_newnav"":true,  ""organic_discovery_experiments"":false,  ""realtime_for_oldies"":false,  ""firehose_push"":true,  ""website_addons"":true,  ""addons_ab_test"":false,  ""firehose_gnip_http"":true,  ""community_icon"":true,  ""pub_reporting_v2"":true,  ""pd_thumbnail_settings"":true,  ""algorithm_experiments"":false,  ""discovery_log_to_browser"":false,  ""is_last_modified"":true,  ""embed_category_display"":false,  ""partitions:api:forums/listPosts"":false,  ""shardpost"":true,  ""limit_get_posts_days_30d"":true,  ""next_realtime_anim_disabled"":false,  ""juggler_thread_onReady"":true,  ""firehose_realertime"":false,  ""loginas"":true,  ""juggler_enabled"":true,  ""user_onboarding"":true,  ""website_follow_redirect"":true,  ""raven_js"":true,  ""shardpost:index"":true,  ""filter_ads_by_country"":true,  ""new_sort_paginator"":true,  ""threadident_reads"":true,  ""new_media"":true,  ""enable_link_affiliation"":true,  ""show_unapproved"":false,  ""onboarding_profile_editing"":true,  ""partitions"":true,  ""dotcom_marketing"":true,  ""discovery_analytics"":true,  ""exp_newnav_disable"":true,  ""new_community_nav_embed"":true,  ""discussions_tab"":true,  ""embed_less_refactor"":false,  ""use_rs_paginator_60m"":true,  ""embed_labs"":false,  ""auto_flat_sort"":false,  ""disable_moderate_ascending"":true,  ""disable_realtime"":true,  ""partitions:api"":true,  ""digest_thread_votes"":true,  ""shardpost:paginator"":false,  ""debug_js"":false,  ""exp_mn2"":false,  ""limit_get_posts_days_7d"":true,  ""pinnedcomments"":false,  ""use_queue_b"":true,  ""new_embed_profile"":true,  ""next_track_links"":true,  ""postsort:paginator"":true,  ""simple_signup"":true,  ""static_styles"":true,  ""stats"":true,  ""discovery_next"":true,  ""override_skip_syslog"":false,  ""show_captcha_on_links"":true,  ""exp_mn2_force"":false,  ""next_dragdrop_nag"":true,  ""firehose_gnip"":true,  ""firehose_pubsub"":true,  ""rt_go_backend"":false,  ""dark_jester"":true,  ""next_logging"":false,  ""surveyNotice"":false,  ""tipalti_payments"":true,  ""default_trusted_domain"":false,  ""disqus_trends"":false,  ""log_large_querysets"":false,  ""phoenix"":false,  ""exp_autoonboard"":true,  ""lazy_embed"":false,  ""explore_dashboard"":true,  ""partitions:api:posts/list"":true,  ""support_contact_with_frames"":true,  ""use_rs_paginator_5m"":true,  ""limit_textdigger"":true,  ""embed_redirect"":false,  ""logging"":false,  ""exp_mn2_disable"":true,  ""aggressive_embed_cache"":true,  ""dashboard_client"":false,  ""safety_levels_enabled"":true,  ""partitions:api:categories/listPo"":false,  ""next_show_new_media"":true,  ""next_realtime_cap"":false,  ""next_discard_low_rep"":true,  ""next_streaming_realtime"":false,  ""partitions:api:threads/listPosts"":false,  ""textdigger_crawler"":true };      context.urlMap = {        \'signup\': \'https://wallace-best.com/admin/signup/\',        \'dashboard\': \'http://wallace-best.com/dashboard/\',        \'admin\': \'http://wallace-best.com/admin/\',                \'logout\': \'//wallace-best.com/logout/\',        \'home\': \'https://wallace-best.com\',        \'for_websites\': \'http://wallace-best.com/websites/\',        \'login\': \'https://wallace-best.com/profile/login/\'    };    context.navMap = {        \'signup\': \'\',        \'dashboard\': \'\',        \'admin\': \'\',        \'addons\': \'\'    }; </script>          <script src=""//a.wallace-bestcdn.com/1391808583/js/src/auth_context.js"" type=""text/javascript"" charset=""utf-8""></script>              <link rel=""stylesheet"" href=""//a.wallace-bestdn.com/1391808583/build/css/b31fb2fa3905.css"" type=""text/css"" />                                         <script type=""text/javascript"" src=""//a.wallace-bestcdn.com/1391808583/build/js/5ee01877d131.js""></script>   <script> // // shared/foundation.js // // This file contains the absolute minimum code necessary in order // to create a new application in the WALLACE-BEST namespace. // // You should load this file *before* anything that modifies the WALLACE-BEST global. //   /*jshint browser:true, undef:true, strict:true, expr:true, white:true */ /*global wallace-best:true */   var WALLACE-BEST = (function (window, undefined) {    ""use strict"";      var wallace-best = window.wallace-best || {};      // Exception thrown from wallace-best.assert method on failure    wallace-best.AssertionError = function (message) {        this.message = message;    };      wallace-best.AssertionError.prototype.toString = function () {        return \'Assertion Error: \' + (this.message || \'[no message]\');    };        // Raises a wallace-best.AssertionError if value is falsy    wallace-best.assert = function (value, message, soft) {        if (value)            return;          if (soft)            window.console && window.console.log(""DISQUS assertion failed: "" + message);        else            throw new wallace-best.AssertionError(message);    };        // Functions to clean attached modules (used by define and cleanup)    var cleanFuncs = [];      // Attaches a new public interface (module) to the wallace-best namespace.    // For example, if wallace-best object is { \'a\': { \'b\': {} } }:    //    //   wallace-best.define(\'a.b.c\', function () { return { \'d\': \'hello\' }; }); will transform it into    //     -> { \'a\': { \'b\': { \'c\': { \'d\' : hello\' }}}}    //    //   and wallace-best.define(\'a\', function () { return { \'x\': \'world\' }; }); will transform it into    //     -> { \'a\': { \'b\': {}}, \'x\': \'world\' }    //    // Attach modules to wallace-best using only this function.      wallace-best.define = function (name, fn) {        /*jshint loopfunc:true */        if (typeof name === \'function\') {            fn = name;            name = \'\';        }          var parts = name.split(\'.\');        var part  = parts.shift();        var cur   = wallace-best;          var exports = (fn || function () { return {}; }).call({            overwrites: function (obj) {                obj.__overwrites__ = true;                return obj;            }        }, window);          while (part) {            cur = (cur[part] ? cur[part] : cur[part] = {});            part = parts.shift();        }          for (var key in exports) {            if (!exports.hasOwnProperty(key))                continue;              /*jshint eqnull:true */            if (!exports.__overwrites__ && cur[key] !== null) {                wallace-best.assert(!cur.hasOwnProperty(key),                              \'Unsafe attempt to redefine existing module: \' + key,                              true /* soft assertion */);            }              cur[key] = exports[key];            cleanFuncs.push(function (cur, key) {                return function () { delete cur[key]; };            }(cur, key));        }        return cur;    };        // Alias for wallace-best.define for the sake of semantics.    // You should use it when you need to get a reference to another    // wallace-best module before that module is defined:    //    //   var collections = wallace-best.use(\'lounge.collections\');    //    // wallace-best.use is a single argument function because we don\'t    // want to encourage people to use it instead of wallace-best.define.      wallace-best.use = function (name) {        return wallace-best.define(name);    };      wallace-best.cleanup = function () {        for (var i = 0; i < cleanFuncs.length; i++) {            cleanFuncs[i]();        }    };      return wallace-best; })(window);   /*jshint expr:true, undef:true, strict:true, white:true, browser:true */ /*global wallace-best:false*/ // // shared/corefuncs.js //   wallace-best.define(function (window, undefined) {    ""use strict"";      var wallace-best     = window.wallace-best;    var document   = window.document;    var head       = document.getElementsByTagName(\'head\')[0] ||                     document.body;    var jobs       = { running: false, timer: null, queue: [] };    var uid        = 0;      // Taken from _.uniqueId    wallace-best.getUid = function (prefix) {        var id = ++uid + \'\';        return prefix ? prefix + id : id;    };      /* Defers func() execution until cond() is true */    wallace-best.defer = function (cond, func) {        function beat() {            /*jshint boss:true */            var queue = jobs.queue;              if (queue.length === 0) {                jobs.running = false;                clearInterval(jobs.timer);            }              for (var i = 0, pair; pair = queue[i]; i++) {                if (pair[0]()) {                    queue.splice(i--, 1);                    pair[1]();                }            }        }          jobs.queue.push([cond, func]);        beat();          if (!jobs.running) {            jobs.running = true;            jobs.timer = setInterval(beat, 100);        }    };      wallace-best.isOwn = function (obj, key) {        // The object.hasOwnProperty method fails when the        // property under consideration is named \'hasOwnProperty\'.        return Object.prototype.hasOwnProperty.call(obj, key);    };      wallace-best.isString = function (str) {        return Object.prototype.toString.call(str) === ""[object String]"";    };      /*     * Iterates over an object or a collection and calls a callback     * function with each item as a parameter.     */    wallace-best.each = function (collection, callback) {        var length = collection.length,            forEach = Array.prototype.forEach;          if (!isNaN(length)) {            // Treat collection as an array            if (forEach) {                forEach.call(collection, callback);            } else {                for (var i = 0; i < length; i++) {                    callback(collection[i], i, collection);                }            }        } else {            // Treat collection as an object            for (var key in collection) {                if (wallace-best.isOwn(collection, key)) {                    callback(collection[key], key, collection);                }            }        }    };      // Borrowed from underscore    wallace-best.extend = function (obj) {        wallace-best.each(Array.prototype.slice.call(arguments, 1), function (source) {            for (var prop in source) {                obj[prop] = source[prop];            }        });        return obj;    };      wallace-best.serializeArgs = function (params) {        var pcs = [];        wallace-best.each(params, function (val, key) {            if (val !== undefined) {                pcs.push(key + (val !== null ? \'=\' + encodeURIComponent(val) : \'\'));            }        });        return pcs.join(\'&\');    };      wallace-best.serialize = function (url, params, nocache) {        if (params) {            url += (~url.indexOf(\'?\') ?                        (url.charAt(url.length - 1) == \'&\' ? \'\': \'&\') : \'?\');            url += wallace-best.serializeArgs(params);        }          if (nocache) {            var ncp = {};            ncp[(new Date()).getTime()] = null;            return wallace-best.serialize(url, ncp);        }          var len = url.length;        return (url.charAt(len - 1) == ""&"" ? url.slice(0, len - 1) : url);    };      var TIMEOUT_DURATION = 2e4; // 20 seconds    var addEvent, removeEvent;      // select the correct event listener function. all of our supported    // browsers will use one of these    if (\'addEventListener\' in window) {        addEvent = function (node, event, handler) {            node.addEventListener(event, handler, false);        };        removeEvent = function (node, event, handler) {            node.removeEventListener(event, handler, false);        };    }    else {        addEvent = function (node, event, handler) {            node.attachEvent(\'on\' + event, handler);        };        removeEvent = function (node, event, handler) {            node.detachEvent(\'on\' + event, handler);        };    }      wallace-best.require = function (url, params, nocache, success, failure) {        var script = document.createElement(\'script\');        var evName = script.addEventListener ? \'load\' : \'readystatechange\';        var timeout = null;          script.src = wallace-best.serialize(url, params, nocache);        script.async = true;        script.charset = \'UTF-8\';          function handler(ev) {            ev = ev || window.event;            if (!ev.target) {                ev.target = ev.srcElement;            }              if (ev.type != \'load\' && !/^(complete|loaded)$/.test(ev.target.readyState)) {                return; // Not ready yet            }              if (success) {                success();            }              if (timeout) {                clearTimeout(timeout);            }              removeEvent(ev.target, evName, handler);        }          if (success || failure) {            addEvent(script, evName, handler);        }          if (failure) {            timeout = setTimeout(function () {                failure();            }, TIMEOUT_DURATION);        }          head.appendChild(script);        return wallace-best;    };      wallace-best.requireStylesheet = function (url, params, nocache) {        var link = document.createElement(\'link\');        link.rel = \'stylesheet\';        link.type = \'text/css\';        link.href = wallace-best.serialize(url, params, nocache);        head.appendChild(link);        return wallace-best;    };      wallace-best.requireSet = function (urls, nocache, callback) {        var remaining = urls.length;        wallace-best.each(urls, function (url) {            wallace-best.require(url, {}, nocache, function () {                if (--remaining === 0) { callback(); }            });        });    };      wallace-best.injectCss = function (css) {        var style = document.createElement(\'style\');        style.setAttribute(\'type\', \'text/css\');          // Make inline CSS more readable by splitting each rule onto a separate line        css = css.replace(/\\}/g, ""}\\n"");          if (window.location.href.match(/^https/))            css = css.replace(/http:\\/\\//g, \'https://\');          if (style.styleSheet) { // Internet Explorer only            style.styleSheet.cssText = css;        } else {            style.appendChild(document.createTextNode(css));        }          head.appendChild(style);    };      wallace-best.isString = function (val) {        return Object.prototype.toString.call(val) === \'[object String]\';    }; });   /*jshint boss:true*/ /*global wallace-best */ wallace-best.define(\'Events\', function (window, undefined) {    ""use strict"";      // Returns a function that will be executed at most one time, no matter how    // often you call it. Useful for lazy initialization.    var once = function (func) {        var ran = false, memo;        return function () {            if (ran) return memo;            ran = true;            memo = func.apply(this, arguments);            func = null;            return memo;        };    };    var has = wallace-best.isOwn;    var keys = Object.keys || function (obj) {        if (obj !== Object(obj)) throw new TypeError(\'Invalid object\');        var keys = [];        for (var key in obj) if (has(obj, key)) keys[keys.length] = key;        return keys;    };    var slice = [].slice;      // Backbone.Events    // ---------------      // A module that can be mixed in to *any object* in order to provide it with    // custom events. You may bind with `on` or remove with `off` callback    // functions to an event; `trigger`-ing an event fires all callbacks in    // succession.    //    // var object = {};    // _.extend(object, Backbone.Events);    // object.on(\'expand\', function(){ alert(\'expanded\'); });    // object.trigger(\'expand\');    //    var Events = {          // Bind an event to a `callback` function. Passing `""all""` will bind        // the callback to all events fired.        on: function (name, callback, context) {            if (!eventsApi(this, \'on\', name, [callback, context]) || !callback) return this;            this._events = this._events || {};            var events = this._events[name] || (this._events[name] = []);            events.push({callback: callback, context: context, ctx: context || this});            return this;        },          // Bind an event to only be triggered a single time. After the first time        // the callback is invoked, it will be removed.        once: function (name, callback, context) {            if (!eventsApi(this, \'once\', name, [callback, context]) || !callback) return this;            var self = this;            var onced = once(function () {                self.off(name, onced);                callback.apply(this, arguments);            });            onced._callback = callback;            return this.on(name, onced, context);        },          // Remove one or many callbacks. If `context` is null, removes all        // callbacks with that function. If `callback` is null, removes all        // callbacks for the event. If `name` is null, removes all bound        // callbacks for all events.        off: function (name, callback, context) {            var retain, ev, events, names, i, l, j, k;            if (!this._events || !eventsApi(this, \'off\', name, [callback, context])) return this;            if (!name && !callback && !context) {                this._events = {};                return this;            }              names = name ? [name] : keys(this._events);            for (i = 0, l = names.length; i < l; i++) {                name = names[i];                if (events = this._events[name]) {                    this._events[name] = retain = [];                    if (callback || context) {                        for (j = 0, k = events.length; j < k; j++) {                            ev = events[j];                            if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||                                (context && context !== ev.context)) {                                retain.push(ev);                            }                        }                    }                    if (!retain.length) delete this._events[name];                }            }              return this;        },          // Trigger one or many events, firing all bound callbacks. Callbacks are        // passed the same arguments as `trigger` is, apart from the event name        // (unless you\'re listening on `""all""`, which will cause your callback to        // receive the true name of the event as the first argument).        trigger: function (name) {            if (!this._events) return this;            var args = slice.call(arguments, 1);            if (!eventsApi(this, \'trigger\', name, args)) return this;            var events = this._events[name];            var allEvents = this._events.all;            if (events) triggerEvents(events, args);            if (allEvents) triggerEvents(allEvents, arguments);            return this;        },          // Tell this object to stop listening to either specific events ... or        // to every object it\'s currently listening to.        stopListening: function (obj, name, callback) {            var listeners = this._listeners;            if (!listeners) return this;            var deleteListener = !name && !callback;            if (typeof name === \'object\') callback = this;            if (obj) (listeners = {})[obj._listenerId] = obj;            for (var id in listeners) {                listeners[id].off(name, callback, this);                if (deleteListener) delete this._listeners[id];            }            return this;        }      };      // Regular expression used to split event strings.    var eventSplitter = /\\s+/;      // Implement fancy features of the Events API such as multiple event    // names `""change blur""` and jQuery-style event maps `{change: action}`    // in terms of the existing API.    var eventsApi = function (obj, action, name, rest) {        if (!name) return true;          // Handle event maps.        if (typeof name === \'object\') {            for (var key in name) {                obj[action].apply(obj, [key, name[key]].concat(rest));            }            return false;        }          // Handle space separated event names.        if (eventSplitter.test(name)) {            var names = name.split(eventSplitter);            for (var i = 0, l = names.length; i < l; i++) {                obj[action].apply(obj, [names[i]].concat(rest));            }            return false;        }          return true;    };      // A difficult-to-believe, but optimized internal dispatch function for    // triggering events. Tries to keep the usual cases speedy (most internal    // Backbone events have 3 arguments).    var triggerEvents = function (events, args) {        var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];        switch (args.length) {        case 0:            while (++i < l) {                (ev = events[i]).callback.call(ev.ctx);            }            return;        case 1:            while (++i < l) {                (ev = events[i]).callback.call(ev.ctx, a1);            }            return;        case 2:            while (++i < l) {                (ev = events[i]).callback.call(ev.ctx, a1, a2);            }            return;        case 3:            while (++i < l) {                (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);            }            return;        default:            while (++i < l) {                (ev = events[i]).callback.apply(ev.ctx, args);            }        }    };      var listenMethods = {listenTo: \'on\', listenToOnce: \'once\;      // Inversion-of-control versions of `on` and `once`. Tell *this* object to    // listen to an event in another object ... keeping track of what it\'s    // listening to.    wallace-best.each(listenMethods, function (implementation, method) {        Events[method] = function (obj, name, callback) {            var listeners = this._listeners || (this._listeners = {});            var id = obj._listenerId || (obj._listenerId = wallace-best.getUid(\'l\'));            listeners[id] = obj;            if (typeof name === \'object\') callback = this;            obj[implementation](name, callback, this);            return this;        };    });      // Aliases for backwards compatibility.    Events.bind = Events.on;    Events.unbind = Events.off;      return Events; }); // used for /follow/ /login/ /signup/ social oauth dialogs // faking the bus wallace-best.use(\'Bus\'); _.extend(DISQUS.Bus, wallace-best.Events); </script>                    <script src=""//a.disquscdn.com/1391808583/js/src/global.js"" charset=""utf-8""></script>    <script src=""//a.disquscdn.com/1391808583/js/src/ga_events.js"" charset=""utf-8""></script>   <script src=""//a.disquscdn.com/1391808583/js/src/messagesx.js""></script>     <!-- start Mixpanel --><script type=""text/javascript"">(function(e,b){if(!b.__SV){var a,f,i,g;window.mixpanel=b;a=e.createElement(""script"");a.type=""text/javascript"";a.async=!0;a.src=(""https:""===e.location.protocol?""https:"":""http:"")+\'//cdn.mxpnl.com/libs/mixpanel-2.2.min.js\';f=e.getElementsByTagName(""script"")[0];f.parentNode.insertBefore(a,f);b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(""."");2==a.length&&(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;""undefined""!== typeof d?c=b[d]=[]:d=""mixpanel"";c.people=c.people||[];c.toString=function(b){var a=""mixpanel"";""mixpanel""!==d&&(a+="".""+d);b||(a+="" (stub)"");return a};c.people.toString=function(){return c.toString(1)+"".people (stub)""};i=""disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user"".split("" "");for(g=0;g<i.length;g++)f(c,i[g]); b._i.push([a,e,d])};b.__SV=1.2}})(document,window.mixpanel||[]); mixpanel.init(\'17b27902cd9da8972af8a3c43850fa5f\', {        track_pageview: false,    debug: false }); </script><!-- end Mixpanel -->       <script src=""//a.disquscdn.com/1391808583//js/src/funnelcake.js""></script> <script type=""text/javascript"">    if (window.AB_TESTS === undefined) {        var AB_TESTS = {};    }    $(function() {        if (context.auth.username !== undefined) {            disqus.messagesx.init(context.auth.username);        }    }); </script> <script type=""text/javascript"" charset=""utf-8"">    // Global tests    $(document).ready(function() {        $(\'a[rel*=facebox]\').facebox();    }); </script>      <script type=""text/x-underscore-template"" data-template-name=""global-nav"">   <% var has_custom_avatar = data.avatar_url && data.avatar_url.indexOf(\'noavatar\') < 0; %> <% var has_custom_username = data.username && data.username.indexOf(\'disqus_\') < 0; %> <% if (data.username) { %>    <li class=""<%= data.forWebsitesClasses || \'\' %>"" data-analytics=""header for websites""><a href=""<%= data.urlMap.for_websites %>"">For Websites</a></li>    <li data-analytics=""header dashboard""><a href=""<%= data.urlMap.dashboard %>"">Dashboard</a></li>    <% if (data.has_forums) { %>        <li class=""admin<% if (has_custom_avatar || !has_custom_username) { %> avatar-menu-admin<% } %>"" data-analytics=""header admin""><a href=""<%= data.urlMap.admin %>"">Admin</a></li>    <% } %>    <li class=""user-dropdown dropdown-toggle<% if (has_custom_avatar || !has_custom_username) { %> avatar-menu<% } else { %> username-menu<% } %>"" data-analytics=""header username dropdown"" data-floater-marker=""<% if (has_custom_avatar || !has_custom_username) { %>square<% } %>"">        <a href=""<%= data.urlMap.home %>/<%= data.username %>/"">            <% if (has_custom_avatar) { %>                <img src=""<%= data.avatar_url %>"" class=""avatar"">            <% } else if (has_custom_username) { %>                <%= data.username %>            <% } else { %>                <img src=""<%= data.avatar_url %>"" class=""avatar"">            <% } %>            <span class=""caret""></span>        </a>        <ul class=""clearfix dropdown"">            <li data-analytics=""header view profile""><a href=""<%= data.urlMap.home %>/<%= data.username %>/"">View Profile</a></li>            <li class=""edit-profile js-edit-profile"" data-analytics=""header edit profile""><a href=""<%= data.urlMap.dashboard %>#account"">Edit Profile</a></li>            <li class=""logout"" data-analytics=""header logout""><a href=""<%= data.urlMap.logout %>"">Logout</a></li>        </ul>    </li> <% } else { %>    <li class=""<%= data.forWebsitesClasses || \'\' %>"" data-analytics=""header for websites""><a href=""<%= data.urlMap.for_websites %>"">For Websites</a></li>    <li class=""link-login"" data-analytics=""header login""><a href=""<%= data.urlMap.login %>?next=<%= encodeURIComponent(document.location.href) %>"">Log in</a></li> <% } %>     </script>      <!--[if lte IE 7]>  <script src=""//a.wallace-bestdn.com/1391808583/js/src/border_box_model.js""></script> <![endif]--> <!--[if lte IE 8]>  <script src=""//cdnjs.cloudflare.com/ajax/libs/modernizr/2.5.3/modernizr.min.js""></script>  <script src=""//a.wallace-bestcdn.com/1391808583/js/src/selectivizr.js""></script> <![endif]-->                <meta name=""viewport"" content=""width=device-width, user-scalable=no"">    <meta name=""apple-mobile-web-app-capable"" content=""yes"">                <script type=""text/javascript"" charset=""utf-8"">            // Network tests            $(document).ready(function() {                $(\'a[rel*=facebox]\').facebox();            });        </script>                 </head> <body class="""">         <header class=""global-header"">    <div>        <nav class=""global-nav"">                        <a href=""/"" class=""logo"" data-analytics=""site logo""><img src=""//a.wallace-bestcdn.com/1391808583/img/disqus-logo-alt-hidpi.png"" width=""150"" alt=""wallace-best"" title=""wallace-best - Discover your community""/></a>                    </nav>    </div> </header>            <section class=""login"">        <form id=""login-form"" action=""https://disqus.com/profile/login/?next=http://wallace-best.wallace-best.com/admin/moderate/"" method=""post"" accept-charset=""utf-8"">              <h1>Sign in to continue</h1>                            <input type=""text"" name=""username"" tabindex=""20"" placeholder=""Email or Username"" value=""""/>            <div class=""password-container"">                <input type=""password"" name=""password"" tabindex=""21"" placeholder=""Password"" />                <span>(<a href=""https://wallace-best.com/forgot/"">forgot?</a>)</span>            </div>            <button type=""submit"" class=""button submit"" data-analytics=""sign-in"">Log in to wallace-best</button>              <span class=""create-account"">                <a href=""https://wallace-best.com/profile/signup/?next=http%3A//wallace-best.wallace-best.com/admin/moderate/""                    data-analytics=""create-account"">                    Create an Account                </a>            </span>                                      <h1 class=""or-login"">Alternatively, you can log in using:</h1>              <div class=""connect-options"">                <button title=""facebook"" type=""button"" class=""facebook-auth"">                    <span class=""auth-container"">                        <img src=""//a.wallace-bestdn.com/1391808583/img/icons/facebook.svg"" alt=""Facebook"">                        <!--[if lte IE 7]>                            <img src=""//a.wallace-bestcdn.com/1391808583/img/icons/facebook.png"" alt=""Facebook"">                        <![endif]-->                    </span>                </button>                <button title=""twitter"" type=""button"" class=""twitter-auth"">                    <span class=""auth-container"">                        <img src=""//a.wallace-bestdn.com/1391808583/img/icons/twitter.svg"" alt=""Twitter"">                        <!--[if lte IE 7]>                            <img src=""//a.wallace-bestcdn.com/1391808583/img/icons/twitter.png"" alt=""Twitter"">                        <![endif]-->                    </span>                </button>                <button title=""google"" type=""button"" class=""google-auth"">                    <span class=""auth-container"">                        <img src=""//a.wallace-bestdn.com/1391808583/img/icons/google.svg"" alt=""Google"">                        <!--[if lte IE 7]>                            <img src=""//a.wallace-bestcdn.com/1391808583/img/icons/google.png"" alt=""Google"">                        <![endif]-->                    </span>                </button>            </div>                    </form>    </section>    <div class=""get-disqus"">        <a href=""https://wallace-best.com/admin/signup/"" data-analytics=""get-disqus"">Get wallace-best for your site</a>    </div>                                             <script>    /*jshint undef:true, browser:true, maxlen:100, strict:true, expr:true, white:true */   // These must be global var _comscore,    _gaq;   (function (doc) {    ""use strict"";      // Convert Django template variables to JS variables    var debug = false,        gaKey = \'\',        gaPunt = \'\',        gaCustomVars = {            component: \'website\',            forum: \'\',            version: \'v5\'        },        gaSlots = {            component: 1,            forum: 3,            version: 4        };    /**/      gaKey = gaCustomVars.component == \'website\' ?            \'UA-1410476-16\' :            \'UA-1410476-6\';        // Now start loading analytics services    var s = doc.getElementsByTagName(\'script\')[0],        p = s.parentNode;      var isSecure = doc.location.protocol == \'https:\';      if (!debug) {        _comscore = _comscore || []; // comScore          // Load comScore        _comscore.push({ c1: \'7\', c2: \'10137436\', c3: \'1\' });        var cs = document.createElement(\'script\');        cs.async = true;        cs.src = (isSecure ? \'https://sb\' : \'http://b\') + \'.scorecardresearch.com/beacon.js\';        p.insertBefore(cs, s);    }      // Set up Google Analytics    _gaq = _gaq || [];        if (!debug) {        _gaq.push([\'_setAccount\', gaKey]);        _gaq.push([\'_setDomainName\', \'.wallace-best.com\']);    }      if (!gaPunt) {        for (var v in gaCustomVars) {            if (!(gaCustomVars.hasOwnProperty(v) && gaCustomVars[v]))                continue;              _gaq.push([\'_setCustomVar\', gaSlots[v], gaCustomVars[v]]);        }          _gaq.push([\'_trackPageview\']);    }      // Load Google Analytics    var ga = doc.createElement(\'script\');    ga.type = \'text/javascript\';    ga.async = true;    var prefix = isSecure ? \'https://ssl\' : \'http://www\';    // Dev tip: if you cannot use the Google Analytics Debug Chrome extension,    // https://chrome.google.com/webstore/detail/jnkmfdileelhofjcijamephohjechhna    // you can replace /ga.js on the following line with /u/ga_debug.js    // But if you do that, PLEASE DON\'T COMMIT THE CHANGE! Kthxbai.    ga.src = prefix + \'.google-analytics.com/ga.js\';    p.insertBefore(ga, s); }(document));   </script>                                                      <script>        (function (){            // adds a classname for css to target the current page without passing in special things from the server or wherever            // replacing all characters not allowable in classnames            var newLocation = encodeURIComponent(window.location.pathname).replace(/[\\.!~*\'\\(\\)]/g, \'_\');            // cleaning up remaining url-encoded symbols for clarity sake            newLocation = newLocation.replace(/%2F/g, \'-\').replace(/^-/, \'\').replace(/-$/, \'\');            if (newLocation === \'\') {                newLocation = \'homepage\';            }            $(\'body\').addClass(\'\' + newLocation);        }());          $(function ($) {            // adds \'page-active\' class to links matching the page url            $(\'a[href=""\' + window.location.pathname + \'""]\').addClass(\'page-active\');        });          $(document).delegate(\'[data-toggle-selector]\', \'click\', function (e) {            var $this = $(this);            $($this.attr(\'data-toggle-selector\')).toggle();            e.preventDefault();        });        </script>     <script type=""text/javascript""> wallace-best.define(\'web.urls\', function () {    return {        twitter: \'https://wallace-best.com/_ax/twitter/begin/\',        google: \'https://wallace-best.com/_ax/google/begin/\',        facebook: \'https://wallace-best.com/_ax/facebook/begin/\',        dashboard: \'http://wallace-best.com/dashboard/\'    } });   $(document).ready(function () {    var usernameInput = $(""input[name=username]"");    if (usernameInput[0].value) {        $(""input[name=password]"").focus();    } else {        usernameInput.focus();    } }); </script> <script type=""text/javascript"" src=""//a.wallace-bestcdn.com/1391808583/js/src/social_login.js"">            <script type=""text/javascript"">      $(function() {          var options = {              authenticated: (context.auth.username !== undefined),              moderated_forums: context.auth.moderated_forums,              user_id: context.auth.user_id,              track_clicks: !!context.switches.website_click_analytics,              forum: context.forum          };          wallace-best.funnelcake.init(options);        });    </script>              <!-- helper jQuery tmpl partials -->    <script type=""text/x-jquery-tmpl"" id=""profile-metadata-tmpl"">                data-profile-username=""${username}"" data-profile-hash=""${emailHash}"" href=""/${username}""            </script>    <script type=""text/x-jquery-tmpl"" id=""profile-link-tmpl"">                <a class=""profile-launcher"" {{tmpl ""#profile-metadata-tmpl""}} href=""/${username}"">${name}</a>            </script>      <script src=""//a.wallace-bestcdn.com/1391808583/js/src/templates.js""></script>          <script src=""//a.wallace-bestcdn.com/1391808583/js/src/modals.js""></script> <script>  wallace-best.ui.config({    disqusUrl: \'https://disqus.com\',    mediaUrl: \'//a.wallace-bestcdn.com/1391808583/\'  }); </script>   </body> </html>  ",,6
62,https://github.com/philips-software/restdouble.git,Run a fake REST service to use as a test double or as a backend for rapid frontend prototyping.,,5
63,https://github.com/KiiPlatform/UnityAngryBotsKii.git,The official Unity 3D 4.3 AngryBots demo game has been modified  to use Kii mobile backend-as-a-service,,5
64,https://github.com/Syncano/orion.git,Backend-as-a-Service made easy,"baas,go,backend,kubernetes,serverless",5
65,https://github.com/desolid/desolid.git,"🤖 Desolid: Single file, self hosted, backend as a service","graphql,headless,headless-cms,minimalistic,baas",5
66,https://github.com/carekit-apple/IBM-HyperProtectMBaaS.git,"The IBM Hyper Protect Mobile-backend-as-a-Service for CareKit, runs on IBM Hyper Protect Virtual Servers and is a mediator between the iOS SDK and IBM Hyper Protect DBaaS","mbaas,mongodb,firebase,hipaa",5
67,https://github.com/mozilla-appmaker/haas.git,a hoodie-as-a-service endpoint to provision lightweight backends for apps,,5
68,https://github.com/neil-peng/gomvc.git,"a simple golang mvc backend web service template example, using gin-gonic/gin as web framework",,5
69,https://github.com/Vict0r7/ts-graphql-starter.git,"Opinionated starter project to build a robust and scalable backend service in TypeScript, with a code-first approach, exposing a GraphQL endpoint, and using a postgres database as an example","graphql,clean-architecture,typescript,server,prisma,apollo-server,starter-template,boilerplate,code-first",5
70,https://github.com/rahulmmohan/RxAndroid-Sample-RegistrationForm.git,"Every UI element on your Android application emits events. The code that you’ve been writing is a reaction to some event, such as user tapping a button or a REST response from your backend service. We usually handle it by multiple instances of event listeners such as OnClickListener. All is well until you try track and handle multiple states. The common example is validation of registration form. To tackle this, smart people from Netflix have made a nifty little library called RxJava and its binding for Android named RxAndroid.",,5
71,https://github.com/michealbalogun/Horizon-dashboard.git," Copyright 2012 United States Government as represented by the # Administrator of the National Aeronautics and Space Administration. # All Rights Reserved. # # Copyright 2012 Nebula, Inc. # #    Licensed under the Apache License, Version 2.0 (the ""License""); you may #    not use this file except in compliance with the License. You may obtain #    a copy of the License at # #         http://www.apache.org/licenses/LICENSE-2.0 # #    Unless required by applicable law or agreed to in writing, software #    distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT #    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the #    License for the specific language governing permissions and limitations #    under the License.  import glob import logging import os import sys import warnings  from django.utils.translation import pgettext_lazy from django.utils.translation import ugettext_lazy as _  from horizon.utils.escape import monkeypatch_escape  from openstack_dashboard import enabled from openstack_dashboard import exceptions from openstack_dashboard.local import enabled as local_enabled from openstack_dashboard import theme_settings from openstack_dashboard.utils import config from openstack_dashboard.utils import settings as settings_utils  monkeypatch_escape()  _LOG = logging.getLogger(__name__)  warnings.formatwarning = lambda message, category, *args, **kwargs: \\     \'%s: %s\' % (category.__name__, message)  ROOT_PATH = os.path.dirname(os.path.abspath(__file__))  if ROOT_PATH not in sys.path:     sys.path.append(ROOT_PATH)  DEBUG = False  SITE_BRANDING = \'OpenStack Dashboard\'  WEBROOT = \'/\' LOGIN_URL = None LOGOUT_URL = None LOGIN_ERROR = None LOGIN_REDIRECT_URL = None MEDIA_ROOT = None MEDIA_URL = None STATIC_ROOT = None STATIC_URL = None SELECTABLE_THEMES = None INTEGRATION_TESTS_SUPPORT = False NG_TEMPLATE_CACHE_AGE = 2592000  ROOT_URLCONF = \'openstack_dashboard.urls\'  HORIZON_CONFIG = {     \'user_home\': \'openstack_dashboard.views.get_user_home\',     \'ajax_queue_limit\': 10,     \'auto_fade_alerts\': {         \'delay\': 3000,         \'fade_duration\': 1500,         \'types\': [\'alert-success\', \'alert-info\']     },     \'bug_url\': None,     \'help_url\': ""https://docs.openstack.org/"",     \'exceptions\': {\'recoverable\': exceptions.RECOVERABLE,                    \'not_found\': exceptions.NOT_FOUND,                    \'unauthorized\': exceptions.UNAUTHORIZED},     \'modal_backdrop\': \'static\',     \'angular_modules\': [],     \'js_files\': [],     \'js_spec_files\': [],     \'external_templates\': [],     \'plugins\': [],     \'integration_tests_support\': INTEGRATION_TESTS_SUPPORT }  # The OPENSTACK_IMAGE_BACKEND settings can be used to customize features # in the OpenStack Dashboard related to the Image service, such as the list # of supported image formats. OPENSTACK_IMAGE_BACKEND = {     \'image_formats\': [         (\'\', _(\'Select format\')),         (\'aki\', _(\'AKI - Amazon Kernel Image\')),         (\'ami\', _(\'AMI - Amazon Machine Image\')),         (\'ari\', _(\'ARI - Amazon Ramdisk Image\')),         (\'docker\', _(\'Docker\')),         (\'iso\', _(\'ISO - Optical Disk Image\')),         (\'ova\', _(\'OVA - Open Virtual Appliance\')),         (\'ploop\', _(\'PLOOP - Virtuozzo/Parallels Loopback Disk\')),         (\'qcow2\', _(\'QCOW2 - QEMU Emulator\')),         (\'raw\', _(\'Raw\')),         (\'vdi\', _(\'VDI - Virtual Disk Image\')),         (\'vhd\', _(\'VHD - Virtual Hard Disk\')),         (\'vhdx\', _(\'VHDX - Large Virtual Hard Disk\')),         (\'vmdk\', _(\'VMDK - Virtual Machine Disk\')),     ] }  MIDDLEWARE = (     \'openstack_auth.middleware.OpenstackAuthMonkeyPatchMiddleware\',     \'debreach.middleware.RandomCommentMiddleware\',     \'django.middleware.common.CommonMiddleware\',     \'django.middleware.csrf.CsrfViewMiddleware\',     \'django.contrib.sessions.middleware.SessionMiddleware\',     \'django.contrib.auth.middleware.AuthenticationMiddleware\',     \'horizon.middleware.OperationLogMiddleware\',     \'django.contrib.messages.middleware.MessageMiddleware\',     \'horizon.middleware.HorizonMiddleware\',     \'horizon.themes.ThemeMiddleware\',     \'django.middleware.locale.LocaleMiddleware\',     \'django.middleware.clickjacking.XFrameOptionsMiddleware\',     \'openstack_dashboard.contrib.developer.profiler.middleware.\'     \'ProfilerClientMiddleware\',     \'openstack_dashboard.contrib.developer.profiler.middleware.\'     \'ProfilerMiddleware\', )  CACHED_TEMPLATE_LOADERS = [     \'django.template.loaders.filesystem.Loader\',     \'django.template.loaders.app_directories.Loader\',     \'horizon.loaders.TemplateLoader\' ]  ADD_TEMPLATE_LOADERS = [] ADD_TEMPLATE_DIRS = []  TEMPLATES = [     {         \'BACKEND\': \'django.template.backends.django.DjangoTemplates\',         \'DIRS\': [os.path.join(ROOT_PATH, \'templates\')],         \'OPTIONS\': {             \'context_processors\': [                 \'django.template.context_processors.debug\',                 \'django.template.context_processors.i18n\',                 \'django.template.context_processors.request\',                 \'django.template.context_processors.media\',                 \'django.template.context_processors.static\',                 \'django.contrib.messages.context_processors.messages\',                 \'horizon.context_processors.horizon\',                 \'openstack_dashboard.context_processors.openstack\',             ],             \'loaders\': [                 \'horizon.themes.ThemeTemplateLoader\'             ],         },     }, ]  STATICFILES_FINDERS = (     \'django.contrib.staticfiles.finders.FileSystemFinder\',     \'horizon.contrib.staticfiles.finders.HorizonStaticFinder\',     \'compressor.finders.CompressorFinder\', )  COMPRESS_PRECOMPILERS = (     (\'text/scss\', \'horizon.utils.scss_filter.HorizonScssFilter\'), )  COMPRESS_CSS_FILTERS = (     \'compressor.filters.css_default.CssAbsoluteFilter\', )  COMPRESS_ENABLED = True COMPRESS_OUTPUT_DIR = \'dashboard\' COMPRESS_CSS_HASHING_METHOD = \'hash\' COMPRESS_PARSER = \'compressor.parser.HtmlParser\'  INSTALLED_APPS = [     \'openstack_dashboard\',     \'django.contrib.contenttypes\',     \'django.contrib.auth\',     \'django.contrib.sessions\',     \'django.contrib.messages\',     \'django.contrib.staticfiles\',     \'django.contrib.humanize\',     \'django_pyscss\',     \'debreach\',     \'openstack_dashboard.django_pyscss_fix\',     \'compressor\',     \'horizon\',     \'openstack_auth\', ]  AUTHENTICATION_BACKENDS = (\'openstack_auth.backend.KeystoneBackend\',) AUTHENTICATION_URLS = [\'openstack_auth.urls\'] AUTH_USER_MODEL = \'openstack_auth.User\' MESSAGE_STORAGE = \'django.contrib.messages.storage.fallback.FallbackStorage\'  SESSION_ENGINE = \'django.contrib.sessions.backends.cache\' CACHES = {     \'default\': {         \'BACKEND\': \'django.core.cache.backends.memcached.MemcachedCache\',         \'LOCATION\': \'127.0.0.1:11211\',     }, }  SESSION_COOKIE_HTTPONLY = True SESSION_EXPIRE_AT_BROWSER_CLOSE = True SESSION_COOKIE_SECURE = False  # Control whether the SESSION_TIMEOUT period is refreshed due to activity. If # False, SESSION_TIMEOUT acts as a hard limit. SESSION_REFRESH = True  # This SESSION_TIMEOUT is a method to supercede the token timeout with a # shorter horizon session timeout (in seconds). If SESSION_REFRESH is True (the # default) SESSION_TIMEOUT acts like an idle timeout rather than being a hard # limit, but will never exceed the token expiry. If your token expires in 60 # minutes, a value of 1800 will log users out after 30 minutes of inactivity, # or 60 minutes with activity. Setting SESSION_REFRESH to False will make # SESSION_TIMEOUT act like a hard limit on session times. SESSION_TIMEOUT = 3600  # When using cookie-based sessions, log error when the session cookie exceeds # the following size (common browsers drop cookies above a certain size): SESSION_COOKIE_MAX_SIZE = 4093  # when doing upgrades, it may be wise to stick to PickleSerializer # NOTE(berendt): Check during the K-cycle if this variable can be removed. #                https://bugs.launchpad.net/horizon/+bug/1349463 SESSION_SERIALIZER = \'django.contrib.sessions.serializers.PickleSerializer\'  # MEMOIZED_MAX_SIZE_DEFAULT allows setting a global default to help control # memory usage when caching. It should at least be 2 x the number of threads # with a little bit of extra buffer. MEMOIZED_MAX_SIZE_DEFAULT = 25  CSRF_FAILURE_VIEW = \'openstack_dashboard.views.csrf_failure\'  LANGUAGES = (     (\'cs\', \'Czech\'),     (\'de\', \'German\'),     (\'en\', \'English\'),     (\'en-au\', \'Australian English\'),     (\'en-gb\', \'British English\'),     (\'eo\', \'Esperanto\'),     (\'es\', \'Spanish\'),     (\'fr\', \'French\'),     (\'id\', \'Indonesian\'),     (\'it\', \'Italian\'),     (\'ja\', \'Japanese\'),     (\'ko\', \'Korean (Korea)\'),     (\'pl\', \'Polish\'),     (\'pt-br\', \'Portuguese (Brazil)\'),     (\'ru\', \'Russian\'),     (\'tr\', \'Turkish\'),     (\'zh-cn\', \'Simplified Chinese\'),     (\'zh-tw\', \'Chinese (Taiwan)\'), ) LANGUAGE_CODE = \'en\' LANGUAGE_COOKIE_NAME = \'horizon_language\' USE_I18N = True USE_L10N = True USE_TZ = True  # Set OPENSTACK_CLOUDS_YAML_NAME to provide a nicer name for this cloud for # the clouds.yaml file than ""openstack"". OPENSTACK_CLOUDS_YAML_NAME = \'openstack\' # If this cloud has a vendor profile in os-client-config, put it\'s name here. OPENSTACK_CLOUDS_YAML_PROFILE = \'\'  OPENSTACK_KEYSTONE_DEFAULT_ROLE = \'_member_\'  DEFAULT_EXCEPTION_REPORTER_FILTER = \'horizon.exceptions.HorizonReporterFilter\'  POLICY_FILES_PATH = os.path.join(ROOT_PATH, ""conf"") # Map of local copy of service policy files POLICY_FILES = {     \'identity\': \'keystone_policy.json\',     \'compute\': \'nova_policy.json\',     \'volume\': \'cinder_policy.json\',     \'image\': \'glance_policy.json\',     \'network\': \'neutron_policy.json\', } # Services for which horizon has extra policies are defined # in POLICY_DIRS by default. POLICY_DIRS = {     \'compute\': [\'nova_policy.d\'],     \'volume\': [\'cinder_policy.d\'], }  SECRET_KEY = None LOCAL_PATH = None  SECURITY_GROUP_RULES = {     \'all_tcp\': {         \'name\': _(\'All TCP\'),         \'ip_protocol\': \'tcp\',         \'from_port\': \'1\',         \'to_port\': \'65535\',     },     \'all_udp\': {         \'name\': _(\'All UDP\'),         \'ip_protocol\': \'udp\',         \'from_port\': \'1\',         \'to_port\': \'65535\',     },     \'all_icmp\': {         \'name\': _(\'All ICMP\'),         \'ip_protocol\': \'icmp\',         \'from_port\': \'-1\',         \'to_port\': \'-1\',     }, }  ADD_INSTALLED_APPS = []  # NOTE: The default value of USER_MENU_LINKS will be set after loading # local_settings if it is not configured. USER_MENU_LINKS = None  # \'key\', \'label\', \'path\' AVAILABLE_THEMES = [     (         \'default\',         pgettext_lazy(\'Default style theme\', \'Default\'),         \'themes/default\'     ), (         \'material\',         pgettext_lazy(""Google\'s Material Design style theme"", ""Material""),         \'themes/material\'     ), ]  # The default theme if no cookie is present DEFAULT_THEME = \'default\'  # Theme Static Directory THEME_COLLECTION_DIR = \'themes\'  # Theme Cookie Name THEME_COOKIE_NAME = \'theme\'  POLICY_CHECK_FUNCTION = \'openstack_auth.policy.check\'  CSRF_COOKIE_AGE = None  COMPRESS_OFFLINE_CONTEXT = \'horizon.themes.offline_context\'  SHOW_KEYSTONE_V2_RC = False SHOW_OPENRC_FILE = True SHOW_OPENSTACK_CLOUDS_YAML = True  # Dictionary of currently available angular features ANGULAR_FEATURES = {     \'images_panel\': True,     \'key_pairs_panel\': True,     \'flavors_panel\': False,     \'domains_panel\': False,     \'users_panel\': False,     \'groups_panel\': False,     \'roles_panel\': True }  # Notice all customizable configurations should be above this line XSTATIC_MODULES = settings_utils.BASE_XSTATIC_MODULES  OPENSTACK_PROFILER = {     \'enabled\': False }  if not LOCAL_PATH:     LOCAL_PATH = os.path.join(ROOT_PATH, \'local\') LOCAL_SETTINGS_DIR_PATH = os.path.join(LOCAL_PATH, ""local_settings.d"")  _files = glob.glob(os.path.join(LOCAL_PATH, \'local_settings.conf\')) _files.extend(     sorted(glob.glob(os.path.join(LOCAL_SETTINGS_DIR_PATH, \'*.conf\')))) _config = config.load_config(_files, ROOT_PATH, LOCAL_PATH)  # Apply the general configuration. config.apply_config(_config, globals())  try:     from local.local_settings import *  # noqa: F403,H303 except ImportError:     _LOG.warning(""No local_settings file found."")  # configure templates if not TEMPLATES[0][\'DIRS\']:     TEMPLATES[0][\'DIRS\'] = [os.path.join(ROOT_PATH, \'templates\')]  TEMPLATES[0][\'DIRS\'] += ADD_TEMPLATE_DIRS  # configure template debugging TEMPLATES[0][\'OPTIONS\'][\'debug\'] = DEBUG  # Template loaders if DEBUG:     TEMPLATES[0][\'OPTIONS\'][\'loaders\'].extend(         CACHED_TEMPLATE_LOADERS + ADD_TEMPLATE_LOADERS     ) else:     TEMPLATES[0][\'OPTIONS\'][\'loaders\'].extend(         [(\'django.template.loaders.cached.Loader\', CACHED_TEMPLATE_LOADERS)] +         ADD_TEMPLATE_LOADERS     )  # allow to drop settings snippets into a local_settings_dir LOCAL_SETTINGS_DIR_PATH = os.path.join(ROOT_PATH, ""local"", ""local_settings.d"") if os.path.exists(LOCAL_SETTINGS_DIR_PATH):     for (dirpath, dirnames, filenames) in os.walk(LOCAL_SETTINGS_DIR_PATH):         for filename in sorted(filenames):             if filename.endswith("".py""):                 try:                     with open(os.path.join(dirpath, filename)) as f:                         # pylint: disable=exec-used                         exec(f.read())                 except Exception as e:                     _LOG.exception(                         ""Can not exec settings snippet %s"", filename)  # The purpose of OPENSTACK_IMAGE_FORMATS is to provide a simple object # that does not contain the lazy-loaded translations, so the list can # be sent as JSON to the client-side (Angular). OPENSTACK_IMAGE_FORMATS = [fmt for (fmt, name)                            in OPENSTACK_IMAGE_BACKEND[\'image_formats\']]  if USER_MENU_LINKS is None:     USER_MENU_LINKS = []     if SHOW_KEYSTONE_V2_RC:         USER_MENU_LINKS.append({             \'name\': _(\'OpenStack RC File v2\'),             \'icon_classes\': [\'fa-download\', ],             \'url\': \'horizon:project:api_access:openrcv2\',         })     if SHOW_OPENRC_FILE:         USER_MENU_LINKS.append({             \'name\': (_(\'OpenStack RC File v3\') if SHOW_KEYSTONE_V2_RC                      else _(\'OpenStack RC File\')),             \'icon_classes\': [\'fa-download\', ],             \'url\': \'horizon:project:api_access:openrc\',         })  if not WEBROOT.endswith(\'/\'):     WEBROOT += \'/\' if LOGIN_URL is None:     LOGIN_URL = WEBROOT + \'auth/login/\' if LOGOUT_URL is None:     LOGOUT_URL = WEBROOT + \'auth/logout/\' if LOGIN_ERROR is None:     LOGIN_ERROR = WEBROOT + \'auth/error/\' if LOGIN_REDIRECT_URL is None:     LOGIN_REDIRECT_URL = WEBROOT  if MEDIA_ROOT is None:     MEDIA_ROOT = os.path.abspath(os.path.join(ROOT_PATH, \'..\', \'media\'))  if MEDIA_URL is None:     MEDIA_URL = WEBROOT + \'media/\'  if STATIC_ROOT is None:     STATIC_ROOT = os.path.abspath(os.path.join(ROOT_PATH, \'..\', \'static\'))  if STATIC_URL is None:     STATIC_URL = WEBROOT + \'static/\'  AVAILABLE_THEMES, SELECTABLE_THEMES, DEFAULT_THEME = (     theme_settings.get_available_themes(         AVAILABLE_THEMES,         DEFAULT_THEME,         SELECTABLE_THEMES     ) )  # Discover all the directories that contain static files STATICFILES_DIRS = theme_settings.get_theme_static_dirs(     AVAILABLE_THEMES, THEME_COLLECTION_DIR, ROOT_PATH)  # Ensure that we always have a SECRET_KEY set, even when no local_settings.py # file is present. See local_settings.py.example for full documentation on the # horizon.utils.secret_key module and its use. if not SECRET_KEY:     if not LOCAL_PATH:         LOCAL_PATH = os.path.join(os.path.dirname(os.path.abspath(__file__)),                                   \'local\')      # pylint: disable=ungrouped-imports     from horizon.utils import secret_key     SECRET_KEY = secret_key.generate_or_read_from_file(os.path.join(LOCAL_PATH,                                                        \'.secret_key_store\'))  # populate HORIZON_CONFIG with auto-discovered JavaScript sources, mock files, # specs files and external templates. settings_utils.find_static_files(HORIZON_CONFIG, AVAILABLE_THEMES,                                  THEME_COLLECTION_DIR, ROOT_PATH)  INSTALLED_APPS = list(INSTALLED_APPS)  # Make sure it\'s mutable settings_utils.update_dashboards(     [         enabled,         local_enabled,     ],     HORIZON_CONFIG,     INSTALLED_APPS, ) INSTALLED_APPS[0:0] = ADD_INSTALLED_APPS  NG_TEMPLATE_CACHE_AGE = NG_TEMPLATE_CACHE_AGE if not DEBUG else 0  # Include xstatic_modules specified in plugin XSTATIC_MODULES += HORIZON_CONFIG[\'xstatic_modules\']  # Discover all the xstatic module entry points to embed in our HTML STATICFILES_DIRS += settings_utils.get_xstatic_dirs(     XSTATIC_MODULES, HORIZON_CONFIG)  # This base context objects gets added to the offline context generator # for each theme configured. HORIZON_COMPRESS_OFFLINE_CONTEXT_BASE = {     \'WEBROOT\': WEBROOT,     \'STATIC_URL\': STATIC_URL,     \'HORIZON_CONFIG\': HORIZON_CONFIG,     \'NG_TEMPLATE_CACHE_AGE\': NG_TEMPLATE_CACHE_AGE, }  if DEBUG:     logging.basicConfig(level=logging.DEBUG)   # Here comes the Django settings deprecation section. Being at the very end # of settings.py allows it to catch the settings defined in local_settings.py # or inside one of local_settings.d/ snippets.",,5
72,https://github.com/tnt4brain/rpm-repo-manager.git,Service that allows one to maintain RPM-repo using Nginx as a web-server and this script as a part of processing backend,,4
73,https://github.com/defunctzombie/etcd-spaceport.git,service registry leveraging etcd as a backend,,4
74,https://github.com/boostcode/torijs.git,Node.js Backend as a service platform,,4
75,https://github.com/old-backside-byu-project/backside.git,An open-source backend-as-a-service inspired by firebase,,4
76,https://github.com/amirgon/snippetbin.git,"A simple pastebin/gist like service (server side), with git as its backend","pastebin,gist,git,rest-api",4
77,https://github.com/KrunalLathiya/AngularFirebase.git,"Angular Firebase Tutorial With Example From Scratch is today’s leading topic. We will use Angular 5 as a frontend and Firebase as a backend database service. If you are new to Angular Framework, then please check out my other tutorials like Angular Dependency Injection Tutorial Example, Angular Services Tutorial With Example From Scratch and Angular 5 CRUD Tutorial Example From Scratch. We will build Stock Market Application where the user can insert and display the share price from the Firebase.  It is just a skeleton that demonstrates how to do a most common operation with Angular and Firebase. Firebase used a NoSQL Database.",,4
78,https://github.com/LiveRelay/Parseable.git,"Parseable allows NodeJS developers to build REST API applications with client-driven (ad hoc, dynamic) queries similar to noBackend platforms. It is influenced by the features provided by the LoopBack and Parse.com Backend-as-a-Service platforms.",,4
79,https://github.com/AtifAbbAsi19/Firebase-Helper.git,"FirebaseHelper  is a mobile-backend-as-a-service that provides several features for building powerful mobile apps. Firebase helper has many core services: a realtime database, user authentication and realtime storage.Firebase helper is a class where I have attemp to make firebase operation reusable by lumping them together instead of consequently rewritting the same common operations again and again.","firebase-database,firebase-auth,firebase-storage,firebase-realtime-database,firebase-db,firebase-authentication,android-studio,firebase,gradle",4
80,https://github.com/sroy96/codeitin-backend.git,Backend for a blog made on Spring Boot with all the CRUD methodology. Implementation of Spring Security. Assets used are MongoDB Atlas as it is an on cloud based database and the URI connection established between the BFF and the Atlas can fetch data and deploy into it on cloud. The System design of the Backend keeps check on any cross platform interaction and ensures individual service performance.,,4
81,https://github.com/igor-ribeiiro/OnlineTodoList.git,A real-time Todo Online List made with Live Queries using Back4App as the BackEnd Service,,3
82,https://github.com/adelevie/CBaaS.git,Cloud Backend as a Service,,3
83,https://github.com/goodnesskay/Laravel-BAAS.git,Laravel Backend as a Service,,3
84,https://github.com/StoriqaTeam/gateway.git,Graphql backend service that acts as a gateway for web browser / mobile,"microservice,backend",3
85,https://github.com/selfbits/selfbits-angular-sdk.git,SDK for Selfbits Backend-as-a-Service,,3
86,https://github.com/the-code-genin/saas.git,Students as a service backend API.,,3
87,https://github.com/msddev/Android-Abring-SDK.git,Abring as a MBAAS (Mobile Backend As A Service) is a service provider that helps developers to have an unbreakable connection with clients during the mobile app.  This SDK is a middleware between mobile apps(clients) and Abring webservice.,,3
88,https://github.com/zyeeda/monostrip.git,Backend as a service(BaaS) platform powered by GraphQL.,,3
89,https://github.com/overhide/overhide.git,Documentation hub for overhide Backend as a Service (BaaS),,3
90,https://github.com/gkarthiks/vault-initializer.git,A hacky way of obtaining HA of Vault service deployed with Consul as a storage backend.,"vault,kubernetes,vault-initializer,golang,high-availability,oss",3
91,https://github.com/sbillaudelle/audio-player.git,"{""An audio player GUI using Cream's media service as a backend.""}",,3
92,https://github.com/nyampass/baasday-iOS-Framework.git,iOS and Android library for accessing the baasday Backend as a Service platform for mobile applications,,3
93,https://github.com/alexziskind1/NativeScript-Azure-Mobile-Services-Module-Basic.git,NativeScript module for basic table data GET via Azure Mobile Services as a backend,,3
94,https://github.com/alexwwang/HA-Vault-Consul-Docker.git,A docker compose HA Vault service with Consul as storage backend,,3
95,https://github.com/tifoaudii/iOS-GoDate-MVVM-Firestore.git,Create Tinder like app using MVVM architectural pattern with Firestore as a backend service,,3
96,https://github.com/ralsina/formserver.git,A very simple service to be used as backend for generic web forms,,3
97,https://github.com/bhavik1st/ezybaas.git,Easiest SQL Backend As A Service! DB 2 API in minutes.,"sql,django,baas,django-rest-framework,django-orm,backend,api,graphql",3
98,https://github.com/quorak/mongoose-vault.git,"{""Simple encryption plugin for Mongoose, using the transit backend from Hasicorp's Vault (Encryption as a Service).""}",,3
99,https://github.com/s-newman/skitter.git,"{""A Microblogging As A Service platform built on a microservice-based backend.  Please don't look at this, it's not great code.""}","web-application,microblogging,microservice,skitter,nodejs,angularjs,flask,php,ruby-on-rails,rest-api,school-project,satire,twitter-clone",3
100,https://github.com/willbuildapps/MobileAnimals.git,"This is a simple Xamarin.Android app for demo purposes, using Azure Mobile Apps Service as backend, with authenticantion, offline sync and push notification support.",,3
101,https://github.com/edgar-anascimento/terraform-localstack-setup.git,This repository is intended to register an idea to bootstrap a study or QA terraform project using localstack docker container to simulate AWS Services. Also it uses local S3 bucket as backend and local DynamoDB to store state lock.,"terraform,localstack,study-project,qatools,terraform-testing,infrastructure-as-code,devops",3
102,https://github.com/bmuschko/todo-web-app.git,A To Do web application using a RESTful web service as backend.,,2
103,https://github.com/Nedomas/pavonine.git,Backend as a service,,2
104,https://github.com/jonathanpeterwu/paywall.git,Bitcoin as a backend Service,,2
105,https://github.com/kutakmir/OpenFirebaseChat.git,"The ultimate fully featured, customizable, UI-independent, high performant, easy to integrate library with a free Firebase backend-as-a-service",,2
106,https://github.com/ophum/humbase.git,"humbase is BaaS(Backend as a Service),  influenced by Firebase .",,2
107,https://github.com/imyaman/youre.space.git,"MBaaS(Mobile BaaS, Backend as a Service) 예제",,2
108,https://github.com/canopy-ros/canopy_server_paas.git,Platform as a service (PaaS) backend server for Canopy,,2
109,https://github.com/lreimer/ldap-search-service.git,Demo service that combines a Quarkus REST service with Apache DS as search backend.,"quarkus,apacheds,java,microservice,showcase",2
110,https://github.com/karthikeysaxena2507/WhatsAppClientBackend.git,Built a backend service as a part of an Internship Task,"nodejs,express-js,mysql,sequelize",2
111,https://github.com/2bright/eevoting.git,This is a decentralized voting system using ethereum blockchain as the only backend service.,,2
112,https://github.com/LunarFlash/Grocr.git,"{""Google's Firebase Backend as a Service Demo Proof of Concept""}",,2
113,https://github.com/markg85/torgui.git,A more user friendly service that uses my tor (tor for torrent!) project as backend.,,2
114,https://github.com/junzhiwang/LATimes-search-engine-website.git,"A search engine website using ReactJS as front-end, NodeJS based backend and Apache Solr service as search engine.",,2
115,https://github.com/lucavice/Angular2-Stamplay-Starter.git,"A starter kit that uses Angular 2 as front-end, Stamplay as backend-as-a-service, Material Design for styling and angular-cli for scaffolding, building and debugging.",,2
116,https://github.com/Fonger/Chembase-Server.git,A Backend-as-a-Service Real-time Database for Rapid Web App Prototyping like Google Firebase Cloud Firestore,"firebase,firestore,baas,realtime,database",2
117,https://github.com/stevenalexander/vagrant-ubuntu-14-nginx-angularjs-dropwizard.git,Sample vagrant script using puppet to provision a simple AngularJS site using a Dropwizard service as the backend,,2
118,https://github.com/negati-ve/backwardjs-koa-function-as-a-service.git,Koa based framework with Function as a service (FAAS) style API. Allows you to quickly start building backend APIs,"serverless,faas,nodejs,koa2,koa,koa-router,function-as-a-service,localhost,local-development,rapid-prototyping,experimental,koa-boilerplate,prototype",2
119,https://github.com/asdcamargo/frontend-backend.git,Project that shows the division of a application in frontend and backend with REST service as communication mechanism,,2
120,https://github.com/eidam/easx.git,OpenResty load balancer using Consul Service Catalog and Redis as a backend for storing provisioned Lets Encrypt certificates.,"consul,resty,nginx,letsencrypt,hashicorp,nomad,docker,proxy,lets-encrypt,ssl",2
121,https://github.com/martinloenne/timeboxingBackend.git,"A WIP backend for a timeboxing service in the making, the auth controller was orignal decoupled as a microservice but I bought everything together again for easier access",,2
122,https://github.com/gbosetti/todo-list-mongo-backend.git,Backend with express and mongodb for the [To-do list frontend](https://github.com/gbosetti/todo-list-loopback-backend.git). It is used as a demo for learning purposes.   This service can be used interchangeably with: * [A Loopback-based backend](https://github.com/gbosetti/todo-list-loopback-backend) * [A JsonServer-based backend](https://github.com/gbosetti/todo-list-jsonserver-backend),,2
123,https://github.com/lhellborg/bookingSite.git,A multi-user friendly booking app for individual items with an offline mode due to service workers. It uses firebase as a backend server.,,2
124,https://github.com/hetshah99/Book-Management-System-Microservices.git,"A book management system based microservice consisting of services written in langugages such as Python, JS and PHP, utilizing communication protocols such as gRPC, REST, RabbitMQ and implementing database per service pattern working in backend of an API gateway. ","microservices,python,javascript,php,postgresql,mysql,mongodb",2
125,https://github.com/guipiveti/Chat-Bot-Backend.git,This is the backend of the chat bot project which works as a middleware to integrate the IBM Watson Assistant service to the Node.js application.,,2
126,https://github.com/pttrfiu/Pttr-BackendAPI.git,The backend API layer service of Pttr that is used both internally for our web/mobile apps as well as allows third-party developers to easily access a unified JSON API.,,2
127,https://github.com/AninditaGuha98/Learning-Management-System-serverless-application.git,This repository is a collaborative work towards creating a serverless application called Learning Management System. This application follows multi-cloud deployment and will implement backend-as-a service architecture.,"word-cloud,s3-bucket,cloud,gcp-cloud-functions,lambda-functions,aws,comprehend,k-means-implementation-in-python,amazon,aws-apigateway,aws-lex",2
128,https://github.com/arunnattarayan/generator-node-es6-api-boilerplate.git,"Boilerplate and tooling for authoring data API backends with Node.js, JWT and MongoDB. It is best suited for developing a es6 API endpoint as a standalone (micro)service (demo), backing up web front-ends and/or mobile apps.","nodejs,express,es6,mongoose,eslint,babel7,api,mongodb,mean-stack,jwt-authentication,mogodb,docker,docker-compose,swagger-ui",2
129,https://github.com/frouioui/dashboard-epitech.git,"ReactJS frontend to create a dashboard using multiple services such as student grade, weather, stocks and so on. The website depends on a micro service architecture and has multiple backend services coded in Golang, Python and NodeJS. The website runs on a GCP environnement.","micro-services,frontend,reactjs,golang",2
130,https://github.com/Allen-Glass/ToolShed.git,"LFT (Looking for Tools). This is a practice repo where I test out Azure Resources as well as to help improve my design patterns. The goal is to simulate handling the backend service of a redbox specializing in delivering tools. Currently in use is Azure IoT Hub, Apple Push Notification Services, Firebase Messaging, Azure Queues, Entity Framework Core with Azure SQL Db, and more!",,2
131,https://github.com/cheikhnadiouf/java-spring-web-api-demo.git,"A full working Spring/Angular demo app (monolithic architecture), exhaustive examples of common web services that we can made with this great yeoman generator Jhipster including Spring (as backend framework), Angular(as frontend framework), Bootstrap (as UI/theme framework), MySQL or H2 (as DataBase) and much more features.","java,spring,angular,jhipster,mysql,h2-database,systemaker",2
132,https://github.com/jestrada-dev/CupoEscolarApp.git,Aplicación Móvil que utiliza Firebase como Backend as a Service (Autenticación y Base de Datos de Tiempo Real) y tecnología de Georreferenciación para localizar los colegios públicos mas cercanos.,,2
133,https://github.com/therealaleks/MySamy.git,"A web app made for McHacks 7 designed to be an emotionally responsive talking companion for marginalized children. It uses the IBM Watson API to conduct content and emotional analysis on speech data in order to generate an appropirate response. samy can understand and relate to children, as well as offer them relevent ressources such as bullying prevention services. The app is composed of a CSS/HTML/JavaScript front end with a Python backend.",,2
134,https://github.com/RazvanBerbece/FireChief.git,A backend service (built using Java and Spring Boot) which returns the scheduled tasks in a given day or period of time in a Fire station. This uses a scenario that one of my interviews proposed in order to assess me as part of the application process.,,2
135,https://github.com/deverex/conFusionServer.git,"{""This project deals with all things server-side. It is based on NodeJS. It is the backend of a restaurant website where users can perform operations such as getting the menu, selecting dishes and also creating a list of their favorite dishes.This is done by implementing REST API endpoints. The data such as of the dishes is accessed from MongoDB through Node. Also there is provision for authenticity by 'passport' using jsonwebokens. All in all this project revolves around the concept of BaaS(Backend as a service). ""}",,2
136,https://github.com/duliodenis/facetube.git,"An iOS 9 Swift 2 Material Design inspired social networking app using the Facebook SDK natively for login, Firebase as its data backend, and ImageShack for photos. Alamofire is used for networking and CocoaPods for dependency management. A MVC-N design pattern is used with a Singleton Network Controller providing Data Services.",,2
137,https://github.com/annatech/learn.getcapi.org.git,"cAPI Documentation Site - Code named ""Constant API"", cAPI is the result of an effort to mesh Slim micro-framework with Joomla!. By leveraging Joomla\'s advanced ""pluggable"" architecture and robust ACL, cAPI can transform your website into a true BaaS (Backend as a Service)!","rest-api,joomla,documentation,grav-cms,php",2
138,https://github.com/nagthej/High-Availability-of-Distributed-Application-based-on-Container-migration.git,"• Developed an Innovative model to migrate a web application running inside a container from one host to another. • Using Docker 17.06.0-ce as a container platform, joined multiple hosts in a multi-manager configuration to form a cluster. • We run Discovery service called consul in the backend to monitor the health status of hosts. • Then we checkpoint and restore using CRIU by leaving the application running on the main node.  • Finally, we add High availability to the application by achieving Failover.",,2
139,https://github.com/janakhpon/userapi.git,USER_API` is the backend api for `react-redux-form` and `fullstack_form` and allow to be requested without difficulty.react-redux-form is a design implementation for fullstack_form and serves as a requester. react-redux-form is built to be on `CLIENT` side only but also comes up with full functional app. Fullstack_form is a simple demonstration of MERN stack and its additional CRUD and REST service and fullstack_form is a project where `SERVER` and `CLIENT` are built together.,"expressjs,ejs,mongodb,heroku,api-server",2
140,https://github.com/alexfromsocal/Helpline.git,"{""A platform to Help and support lines for those in need are crucial to protecting people. Helpline is a simple backend service that allows people to volunteer and offer help, as well as allow those who are in need to find help. One concern to these lines is the anonymity of both persons. By using Twilio's Proxy service, we mask the mobile numbers of both the volunteer and person in need. This allows the person who requires support the anonymity to stay protected, and permits the volunteer to maintaining their privacy through their work.""}",,2
141,https://github.com/TheKamranUllah/SociApp.git,"{""This is a social networking Android application. Purely developed in Java and XML, I developed this application as my final year project. It contains all the basic features of Facebook and Messenger. It uses Firebase(real-time) for its backend services. Due to my busy schedule, I've not developed UI for all mobile screen sizes (idpi, mdpi, hdpi, xdpi, xxdpi), but this application will support hdpi, xdpi and xxdpi screen sizes.""}",,2
142,https://github.com/niquewill/Consumer_Complaint.git,"{""Overview There are quite a few apps in the market that provide a public forum for bringing up complaints so they can get resolved. With these apps, customers could easily submit their complaints to companies via them and deliver them to the company's' Twitter account, e-mail, or Facebook accounts.  For the receiving companies, there are limited apps in the market that would help them to track these complaints, and store vital statistics such as receipt time, response time and trends. Typically, for a CEO, the behavior of the customers established by robust data and ability to relate company’s response to trends in the customer's’ behavior provide effective ways to evaluate customer’s satisfaction. The problem that this project seeks to solve is to provide organizations with a tool to log the complaints they receive and the company’s response mechanism. The database created will assist the company in generating data for future consumer behavioral analysis. Goals The Consumer Complaint app will enable organizations staff to log complaints from customers as ticket items and close the tickets from the complaint's inventory.  The app should also be able to track response time, volume of complaint across the company’s departments (product & services), regional trend and then provide a summary of the highest-frequency departments and regions of the company.  Specifications The app would be tested for financial institutions. Example input could be drawn from the website of the consumer financial protection bureau (CFPB) : Consumer Complaint Data  Milestones Database Create a MySQL Database (and a table inside database) to log complain ID, Product & Services, Department and Time of complaint.   Create a Mongo DB (NoSQL) to scrape part of the complaint from the CFPB website and display it on the browser. Backend Node.js Create a node application which will display all of the complaints that are logged  Whenever the bank administrator submits (logs in a complaint), the app will display “new complaint logged” on one side of the page: waiting to be closed.  Each ticket in the unclosed bucket would have a “close” button. Once the ticket is closed, the administrator will click it and the app will move it to the closed bucket and refresh the number of tickets unattended to.   A table would be created for the supervisor or department manager to view the Response Receipt Date/ Time, Number of Complaints per day, Category of Complaint (Product & Services), Response Closing Date and Time.  Frontend Materialize Create a stylish UI using Materialize CSS. Make the app to be mobile responsive. Themes examples: Starter. Parallax The signup and login page will use Bootstrap modal Express Handlebars/ Partials will be used to render the Backend and the frontend React.js Create a chat application with node.js, socket.io and React.Js""}",,2
143,https://github.com/harshita360/Covid19-Final.git,"CovidApp-by eYRC#1804 -An attempt to connect the frontline warrior to people at root level  PROBLEM ADDRESSED: Several studies show that India’s testing strategy lacks in many ways which may increase the number of COVID-19 patients enormously. The main problem that we have addressed in our idea is that India is not doing enough testing that could help it trace and treat infected patients and contain the spread of the disease. It also involves finding a solution of the human tendency not to reveal their symptoms which is a critical issue. In this solution, we have tried to fight against the disease at a community level involving the local police, the private doctors and the people.  DESCRIPTION: Our solution to the above problem is a native mobile application which mainly uses Firebase for backend services. The application consists of two broad sections that is people and the police of a particular area. Our aim is to make full use of the people in the medical field to ensure more and more testing. Thus, in our application we identify the available private hospitals for checking common symptoms of covid-19 who in turn will suggest them for immediate testing or a period of self-quarantine. This has been done by using Google Map API services. People who experience symptoms can simply login to the application, connect to a private hospital providing their basic information and we connect them to the nearest doctors. The app uses Firebase Realtime Database to store and sync this information which can later be analyzed. The app also includes a separate section where people of a community connect to the police of the area to inform them about a suspected case or any kind of problem (e.g. Crowding) the community faces. To eliminate false information, we use Firebase Authentication feature for the informants. To encourage the participations of more people in medical field to participate in this fight, we also have a local chat messaging feature through which people who login can talk to specified consultants for information and procced for further decisions of a checkup.  HARDWARE AND SOFTWARE REQUIREMENT: Since it is an application for android, there is no such hardware requirement. For user, they need an android based mobile device (version 4.0 and above). And for government, they need an infrastructure to felicitate the flow to data.  PROCESS FLOW: Currently, on our main screen there is an option for login as police or login as citizen. This is only for demonstration purpose. This could be two app, one only for citizens where they can register their complains and chat a medical representative and the second app will be for police where they could login through their login ID and see the complains of their area.  """"""""""""""""""Police Login can only be logged in by using some authenticated police id and name for now we have used 10 dummy police id to just show the process of authentication... To Login and see the complains in this prototype you can use---> (police name->arun kumar) (police id-> 800123) (police area under surveillance->ashok nagar)""""""""""""""""""  """"""""""""""""""for login into citizen you can register a new user or u can use our dummy user who is (email-id->user@gmail.com) (password->user123)""""""""""""""""",,2
144,https://github.com/amir2510/script.git,"<!DOCTYPE html>  <html lang=""en"" dir=""ltr"" data-cast-api-enabled=""true""> <head><meta name=""viewport"" content=""width=device-width, initial-scale=1""><style name=""www-roboto"" >@font-face{font-family:\'Roboto\';font-style:italic;font-weight:400;src:local(\'Roboto Italic\'),local(\'Roboto-Italic\'),url(//fonts.gstatic.com/s/roboto/v18/WxrXJa0C3KdtC7lMafG4dRTbgVql8nDJpwnrE27mub0.woff2)format(\'woff2\');unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:400;src:local(\'Roboto Italic\'),local(\'Roboto-Italic\'),url(//fonts.gstatic.com/s/roboto/v18/OpXUqTo0UgQQhGj_SFdLWBTbgVql8nDJpwnrE27mub0.woff2)format(\'woff2\');unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:400;src:local(\'Roboto Italic\'),local(\'Roboto-Italic\'),url(//fonts.gstatic.com/s/roboto/v18/1hZf02POANh32k2VkgEoUBTbgVql8nDJpwnrE27mub0.woff2)format(\'woff2\');unicode-range:U+1F00-1FFF;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:400;src:local(\'Roboto Italic\'),local(\'Roboto-Italic\'),url(//fonts.gstatic.com/s/roboto/v18/cDKhRaXnQTOVbaoxwdOr9xTbgVql8nDJpwnrE27mub0.woff2)format(\'woff2\');unicode-range:U+0370-03FF;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:400;src:local(\'Roboto Italic\'),local(\'Roboto-Italic\'),url(//fonts.gstatic.com/s/roboto/v18/K23cxWVTrIFD6DJsEVi07RTbgVql8nDJpwnrE27mub0.woff2)format(\'woff2\');unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:400;src:local(\'Roboto Italic\'),local(\'Roboto-Italic\'),url(//fonts.gstatic.com/s/roboto/v18/vSzulfKSK0LLjjfeaxcREhTbgVql8nDJpwnrE27mub0.woff2)format(\'woff2\');unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:400;src:local(\'Roboto Italic\'),local(\'Roboto-Italic\'),url(//fonts.gstatic.com/s/roboto/v18/vPcynSL0qHq_6dX7lKVByfesZW2xOQ-xsNqO47m55DA.woff2)format(\'woff2\');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:500;src:local(\'Roboto Medium Italic\'),local(\'Roboto-MediumItalic\'),url(//fonts.gstatic.com/s/roboto/v18/OLffGBTaF0XFOW1gnuHF0TTOQ_MqJVwkKsUn0wKzc2I.woff2)format(\'woff2\');unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:500;src:local(\'Roboto Medium Italic\'),local(\'Roboto-MediumItalic\'),url(//fonts.gstatic.com/s/roboto/v18/OLffGBTaF0XFOW1gnuHF0TUj_cnvWIuuBMVgbX098Mw.woff2)format(\'woff2\');unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:500;src:local(\'Roboto Medium Italic\'),local(\'Roboto-MediumItalic\'),url(//fonts.gstatic.com/s/roboto/v18/OLffGBTaF0XFOW1gnuHF0UbcKLIaa1LC45dFaAfauRA.woff2)format(\'woff2\');unicode-range:U+1F00-1FFF;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:500;src:local(\'Roboto Medium Italic\'),local(\'Roboto-MediumItalic\'),url(//fonts.gstatic.com/s/roboto/v18/OLffGBTaF0XFOW1gnuHF0Wo_sUJ8uO4YLWRInS22T3Y.woff2)format(\'woff2\');unicode-range:U+0370-03FF;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:500;src:local(\'Roboto Medium Italic\'),local(\'Roboto-MediumItalic\'),url(//fonts.gstatic.com/s/roboto/v18/OLffGBTaF0XFOW1gnuHF0b6up8jxqWt8HVA3mDhkV_0.woff2)format(\'woff2\');unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:500;src:local(\'Roboto Medium Italic\'),local(\'Roboto-MediumItalic\'),url(//fonts.gstatic.com/s/roboto/v18/OLffGBTaF0XFOW1gnuHF0SYE0-AqJ3nfInTTiDXDjU4.woff2)format(\'woff2\');unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;}@font-face{font-family:\'Roboto\';font-style:italic;font-weight:500;src:local(\'Roboto Medium Italic\'),local(\'Roboto-MediumItalic\'),url(//fonts.gstatic.com/s/roboto/v18/OLffGBTaF0XFOW1gnuHF0Y4P5ICox8Kq3LLUNMylGO4.woff2)format(\'woff2\');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:500;src:local(\'Roboto Medium\'),local(\'Roboto-Medium\'),url(//fonts.gstatic.com/s/roboto/v18/ZLqKeelYbATG60EpZBSDyxJtnKITppOI_IvcXXDNrsc.woff2)format(\'woff2\');unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:500;src:local(\'Roboto Medium\'),local(\'Roboto-Medium\'),url(//fonts.gstatic.com/s/roboto/v18/oHi30kwQWvpCWqAhzHcCSBJtnKITppOI_IvcXXDNrsc.woff2)format(\'woff2\');unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:500;src:local(\'Roboto Medium\'),local(\'Roboto-Medium\'),url(//fonts.gstatic.com/s/roboto/v18/rGvHdJnr2l75qb0YND9NyBJtnKITppOI_IvcXXDNrsc.woff2)format(\'woff2\');unicode-range:U+1F00-1FFF;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:500;src:local(\'Roboto Medium\'),local(\'Roboto-Medium\'),url(//fonts.gstatic.com/s/roboto/v18/mx9Uck6uB63VIKFYnEMXrRJtnKITppOI_IvcXXDNrsc.woff2)format(\'woff2\');unicode-range:U+0370-03FF;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:500;src:local(\'Roboto Medium\'),local(\'Roboto-Medium\'),url(//fonts.gstatic.com/s/roboto/v18/mbmhprMH69Zi6eEPBYVFhRJtnKITppOI_IvcXXDNrsc.woff2)format(\'woff2\');unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:500;src:local(\'Roboto Medium\'),local(\'Roboto-Medium\'),url(//fonts.gstatic.com/s/roboto/v18/oOeFwZNlrTefzLYmlVV1UBJtnKITppOI_IvcXXDNrsc.woff2)format(\'woff2\');unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:500;src:local(\'Roboto Medium\'),local(\'Roboto-Medium\'),url(//fonts.gstatic.com/s/roboto/v18/RxZJdnzeo3R5zSexge8UUVtXRa8TVwTICgirnJhmVJw.woff2)format(\'woff2\');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:400;src:local(\'Roboto Regular\'),local(\'Roboto-Regular\'),url(//fonts.gstatic.com/s/roboto/v18/ek4gzZ-GeXAPcSbHtCeQI_esZW2xOQ-xsNqO47m55DA.woff2)format(\'woff2\');unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:400;src:local(\'Roboto Regular\'),local(\'Roboto-Regular\'),url(//fonts.gstatic.com/s/roboto/v18/mErvLBYg_cXG3rLvUsKT_fesZW2xOQ-xsNqO47m55DA.woff2)format(\'woff2\');unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:400;src:local(\'Roboto Regular\'),local(\'Roboto-Regular\'),url(//fonts.gstatic.com/s/roboto/v18/-2n2p-_Y08sg57CNWQfKNvesZW2xOQ-xsNqO47m55DA.woff2)format(\'woff2\');unicode-range:U+1F00-1FFF;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:400;src:local(\'Roboto Regular\'),local(\'Roboto-Regular\'),url(//fonts.gstatic.com/s/roboto/v18/u0TOpm082MNkS5K0Q4rhqvesZW2xOQ-xsNqO47m55DA.woff2)format(\'woff2\');unicode-range:U+0370-03FF;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:400;src:local(\'Roboto Regular\'),local(\'Roboto-Regular\'),url(//fonts.gstatic.com/s/roboto/v18/NdF9MtnOpLzo-noMoG0miPesZW2xOQ-xsNqO47m55DA.woff2)format(\'woff2\');unicode-range:U+0102-0103,U+0110-0111,U+1EA0-1EF9,U+20AB;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:400;src:local(\'Roboto Regular\'),local(\'Roboto-Regular\'),url(//fonts.gstatic.com/s/roboto/v18/Fcx7Wwv8OzT71A3E1XOAjvesZW2xOQ-xsNqO47m55DA.woff2)format(\'woff2\');unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;}@font-face{font-family:\'Roboto\';font-style:normal;font-weight:400;src:local(\'Roboto Regular\'),local(\'Roboto-Regular\'),url(//fonts.gstatic.com/s/roboto/v18/CWB0XYA8bzo0kSThX0UTuA.woff2)format(\'woff2\');unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;}</style><script name=""www-roboto"" >if (document.fonts && document.fonts.load) {document.fonts.load(""400 10pt Roboto"", """");document.fonts.load(""500 10pt Roboto"", """");}</script>  <link rel=""stylesheet"" href=""/yts/cssbin/www-player-webp-vfl-cDqNB.css"" name=""www-player""> <style>html {overflow: hidden;          }body {font: 12px Roboto, Arial, sans-serif;background-color: #000;color: #fff;height: 100%;width: 100%;overflow: hidden;position: absolute;margin: 0;padding: 0;}#player {width: 100%;height: 100%;}h1 {text-align: center;color: #fff;}.hid {display: none;}h3 {margin-top: 6px;margin-bottom: 3px;}.player-unavailable {position: absolute;top: 0;left: 0;right: 0;bottom: 0;padding: 25px;font-size: 13px;background: url(/img/meh7.png) 50% 65% no-repeat;}.player-unavailable .message {text-align: left;            margin: 0 -5px 15px;padding: 0 5px 14px;border-bottom: 1px solid #888;font-size: 19px;font-weight: normal;}.player-unavailable a {color: #167ac6;text-decoration: none;}.yt-embed-thumbnail {background-size: cover;background-position: center;background-repeat: no-repeat;height: 100%;}.ytp-lightweight {position: absolute;top: 0;left: 0;width: 100%;height: 100%;}.exp-invert-logo #header:before, .exp-invert-logo .ypc-join-family-header .logo, .exp-invert-logo #footer-logo .footer-logo-icon, .exp-invert-logo #yt-masthead #logo-container .logo, .exp-invert-logo #masthead #logo-container, .exp-invert-logo .admin-masthead-logo a, .exp-invert-logo #yt-sidebar-styleguide-logo #logo { background: no-repeat url(/yts/img/ringo/hitchhiker/logo_small_2x-vfl4_cFqn.png); background-size: 100px 30px; } .exp-invert-logo #yt-masthead #logo-container .logo-red { background: no-repeat url(/yts/img/ringo/hitchhiker/logo_youtube_red_2x-vflOSHA_n.png); background-size: 132px 30px; } @media only screen and (min-width: 0px) and (max-width: 498px), only screen and (min-width: 499px) and (max-width: 704px) { .exp-invert-logo.exp-responsive #yt-masthead #logo-container { background: no-repeat url(/yts/img/ringo/hitchhiker/yt_play_logo_2x-vflXx5Pg3.png); background-size: 40px 28px; } } .guide-sort-container {display: none}</style><script >var ytcsi = {gt: function(n) {n = (n || \'\') + \'data_\';return ytcsi[n] || (ytcsi[n] = {tick: {},info: {}});},now: window.performance && window.performance.timing &&window.performance.now ? function() {return window.performance.timing.navigationStart + window.performance.now();} : function() {return (new Date()).getTime();},tick: function(l, t, n) {ticks = ytcsi.gt(n).tick;var v = t || ytcsi.now();if (ticks[l]) {ticks[\'_\' + l] = (ticks[\'_\' + l] || [ticks[l]]);ticks[\'_\' + l].push(v);}ticks[l] = v;},info: function(k, v, n) {ytcsi.gt(n).info[k] = v;},setStart: function(s, t, n) {ytcsi.info(\'yt_sts\', s, n);ytcsi.tick(\'_start\', t, n);}};(function(w, d) {ytcsi.setStart(\'dhs\', w.performance ? w.performance.timing.responseStart : null);var isPrerender = (d.visibilityState || d.webkitVisibilityState) == \'prerender\';var vName = (!d.visibilityState && d.webkitVisibilityState)? \'webkitvisibilitychange\' : \'visibilitychange\';if (isPrerender) {ytcsi.info(\'prerender\', 1);var startTick = function() {ytcsi.setStart(\'dhs\');d.removeEventListener(vName, startTick);};d.addEventListener(vName, startTick, false);}if (d.addEventListener) {d.addEventListener(vName, function() {ytcsi.tick(\'vc\');}, false);}var slt = function(el, t) {setTimeout(function() {var n = ytcsi.now();el.loadTime = n;if (el.slt) {el.slt();}}, t);};w.__ytRIL = function(el) {if (!el.getAttribute(\'data-thumb\')) {if (w.requestAnimationFrame) {w.requestAnimationFrame(function() {slt(el, 0);});} else {slt(el, 16);}}};})(window, document);</script><script >var ytcfg = {d: function() {return (window.yt && yt.config_) || ytcfg.data_ || (ytcfg.data_ = {});},get: function(k, o) {return (k in ytcfg.d()) ? ytcfg.d()[k] : o;},set: function() {var a = arguments;if (a.length > 1) {ytcfg.d()[a[0]] = a[1];} else {for (var k in a[0]) {ytcfg.d()[k] = a[0][k];}}}};</script>  <script src=""/yts/jsbin/www-embed-player-vflZppemJ/www-embed-player.js"" type=""text/javascript"" name=""www-embed-player/www-embed-player"" ></script>   <script src=""/yts/jsbin/player-vfl8swg2e/en_GB/base.js""  name=""player/base"" ></script>     <title>Mally Mall, Jeremih, E-40 - Physical (Official Video) - YouTube</title>     <link rel=""canonical"" href=""https://www.youtube.com/watch?v=H9hrWLoz4RY"">   </head>      <body id="""" class=""date-20180216 en_GB ltr  exp-invert-logo exp-responsive exp-search-big-thumbs   site-center-aligned site-as-giant-card  webkit webkit-537"" dir=""ltr""> <div id=""player""></div><script >yt.setConfig({\'EVENT_ID\': ""K16LWsCyBpWtWNqfv5gJ"",\'VIDEO_ID\': ""dRnrjyJV25I"",\'WIDGET_ID\': 1,\'ENABLE_JS_API\': true,\'POST_MESSAGE_ORIGIN\': ""https:\\/\\/tpc.googlesyndication.com"",\'BG_P\': ""dKWCz0dJDGki1+aB6rEnSGwmv+9XPiK2qX6c9O49vH2H0oP6yHQnDc2jfcDRI4fOtn5z3MnYZrBxBRXkd+TdhA2OwGuXTf8HDao2K\\/0vBKBTtyJy3r+E8D2tYR1SaCS5cExqv\\/Dw+JgWW\\/kxgvV0XtIXqM5UV6rPzNXmE+mn4caFiB19sw2O+\\/gCQI59YsIOG\\/8o0cb\\/edRP6aYZxom7ksBYk5lTe\\/\\/\\/2C954\\/lulZU8pVE9ZBc0M7WVdXUZPI0NgoQyJINxqMr7p8iJKP\\/+aR8pgIlzfLh5gLu+RMoqk6i6CyYhTFTheQDfZ21k278AgLkcIRW4Yq7UooRZ8Fb86agmieUCjv6AKLQiqg11IRa84HKRv33RlvfsL6ermUsRWYpL0yVUrFht00iTtb1VtsFMZkpvD6fmty9q1BCjm53qYCfjOuSPwG2fZ+m8Sdr6Aai+IHolOInvPNg+18KzDN7hjaGV7g0hznpIoBpkVj7zKpwptiMRzugjDl6xPoghiDr4a7zjnQ7ircIeOhgG0OXPZjRH7N94LVz\\/wuef+qvx5PscMuUdwJKFi6Dm6JkybadQkCL\\/\\/U0IHAKyWnQwC68F4CgYXtq29Xh4Ujy83zNQO6F+e3G\\/g2Az\\/IO65EsKNBP4Rc5OCZOWfnKQa9oAvK\\/D06qFz9A3C9rH0EOAmsI9w5T0etHWI30Q+owKsWKYcpZB0JgPL2jLU1hTIp5ouNWHKITADwxd6YDrQcSK8iBrrx4+bf7aVNhecUz4umnYKHOtRNutgzpSkSLGhtSZG8TipNWmpFCpo7TqZpmaBWnpMmX1\\/g8oDJ0tsWM\\/7u6+9LcylSwRoKgKx+1mxUG8mLmmgNQLdE+yirZcalCqPs+LbKMaINE+S4E8tglicM11Zg7Ducvf3aKr9IqenBoHFp+nlwgD2ayalI1dgJvjWWyhlI8uvAkxVvAklwqEwGUTdW4\\/NsjXwr0CkaeJxJncijP5n9GzCqrRtVqbDJ9rKkgQVV5VNPCxZZ6uzzhGYHr4hC8Xc5ftLNATZW2r5nIGCroRDGVY9o3rDVD2tvwVUo03ygnEv0zBLvUagENw3pM69nsc2sDyWq8\\/GWOUurRzEsczAJjAb6wZXpbhvUwhf3iJbLyZYh0XF44l4qsP8Fb+ImoSDewfvAEY8eIYTjoCO849Dlm8h2Uv90SBXmh9QYDHRnxAgh5TnULFpKJMAcZIXDc2TBmtO3v4TURF4RAoNXJDkhcfnbN2mcwE+6Wa5ZhQR1VDz5FGkAVQEwlTSuTlsWtAI\\/gbLIwqA+jQlr8WRcmAJIVI+gEMbHWlp51LGKLzDfO\\/+Z+IUexPVj52oZRBUY4kIS7ow8MaLVywLk4v6cI3BWKeU25Dff1l6mu8aHMyS8xPi+YAVtmY8D2e3MZ8omEDo0rxC41cPn7vYs\\/7PYXid8J7wQKg0Y5TElOSBqnY3pkwiXpCxZPKRQyo7gQyVgvQ6A2\\/2hDvg9p6iGcSvH0xLZQc+0FiMH67ckl8bY+mdqWO24ssbgZsxCM5AXByTejsaLAPVpFqCXjfCDMB3UYtyj0YVSdSZCgygWy9d+4LOEjSdHAHoudrD43xZoj0DlOVoCnusmLr7jZqkR5j236XY\\/UjIcwU+5eXB0FHzUlRwy+odtDeLEYwckulfYGEOqY1HderHonc5mfBjrilgL4tz+P9kqXkp4NICKFTATG35nw2ySgI2GYX7oNbJF7cKeRlzV7m9vD+lC6YLPASKC+W4X6m8gGOdCWXB5m2OZmU+RXOwCP9Y9D3mbqF1OIw+iaqLPU5bhZSH\\/LWj3EDNiANdEHh\\/AiapjnWFqwt\\/sGqF+LhTKFSqaKIdjCmC21L4bUineXi9mO5UzzYedgSpMvDbefRkcS7B84zrzplctujC+n+TOXzFmXqo2RlxulytuPLkwwinaMCkqsRSj2Ivx+h6NylzuXn6ir3ql71I262HZ9FEOr2eZDBxyJFAVFJekqKcTcto3pO1P1sHjKw4iEaXaMKJjACbe9StSsN\\/MbihfBRkjGseUdja0hvLhyWKr8SZyTKmRzYPuCyu12947GgHwRKk6AV45FZ41ggD4KT8nIlo0+i3A0v5u9W\\/BH0BOpMeVDbPkf5Y1l+jnIwcswJQCEnRLXqVBMBXIT8KtdFKJr7vaSKHd7Zny5w3aL6GWPZQH3jFwSn4+8YB+PWjRrRNJeQBY2NLzW7BSPaSRzdp\\/NDx8mTxVDbB7rWdzdd7+D4VEzWEY2vtf2jAKOOdX+CCk+7ek3IMe8+ioOxkfo5EBygEYfuvOQPuBrFsZM4liU\\/Rk4uFTS91PoreCuAJThzOGMxW7Elx8GSI9U9tHUHOs2hcnBqhqd4LTz5pbR2ZCxztC0AzWts1i\\/bInebZATIXzKPdGw5OUVi9P6fJYt3vi4zhzyvpRp5M1RGzsPgedDp16yHaFXR+nGfWqRfOAqFFVnjz0e06mbZ3M5cZyIepsyiN45iHdM5\\/YfZCj9Bk1Rru134h6CJPRIBOVG1ya\\/Yhs6OQ6MZj5QyUgLxjdYpm65HYLt+Qy8nYFth9QLbMR32P2gEf7Kc88zo4Tcc3H0AqKTZ02QEUiD7wfc0ZVIPqtGhiHYGIPEEhhIkdyQlBJKsNtjMg1Zoq8y8agKmRaKY1CHp4+GaDVKUIInFNR\\/Ge5S5TeYXJVJ0hFqLO1E52U3hUxcBq90iKQq2tzfXhCZy+D9zD7zh1qEPGxpkdU4gaSACwqUbWBTocVB0bQn0VNDKQpVxggIXItmg7gTHYOThV7eMpYHO8sRxgPhsBnKsjU2xuXud57bcooCQrPc19bIDN3FiXqJJ4OkfLC9IV2OcTqOUeVMDIvX84sXPfvMPT63veg3nQcSD0aaZeIkX8p2Uepg9pwZQrkbdviR0D0RSzbem2B1IOml7t2YhantgBJ0JXyjCM6PiEoVuQ4J20gmrEy4va+CEdBWEfUWiQNxwTFPE1h9GxSX5VwaUqQ\\/AUZ4ytahxxxTY8ff6dv1PvfGPI4MuWjhhCRzP50nrHdFOPNCPRkXeVsQ4bNM17+SYwdaxCpL0u0AcaURx5TawNUG1hgaxyhZVLwrGUlDPoYtA1tPZU7O8m+uSCkaw\\/xHZn+aNjTZ4Dxct00uCS1j2qpWQ1ZR1bx5MLeh5z\\/W8ukJ1+OV157+wHIBDai6YZlWhQdfHWdd+mEoxNtPwUMdj\\/bVTnz4uBZub3tx+6tu0okS53Nni2SPGzu751R2J1wwVC44nzpyVlW386xdFwSu4bcaKt94VRZdgn3mpfAF2oTMll8WZJ9E\\/tGv58g24GCnNRbAtqmWPoPttpYKGdKaS4\\/zwsZSKoWxMi6tRcIOko7MR0KBW4dbOvX3RldaMyImkJJJPL5o0pHLH+W5S6MJnT\\/u4HK8203BFaYVunqveCrslHmpR+Oeag33htt94xJsJcek1VSyxnLEboOn9sBDQw\\/go4zs3+PZVZH4uw3UBn1CRl70Z9cL1jF4CA+oe2l03+gNkhvIiW9sCJcu8Ozl9nb4Mz3Rn+b2XIYOHgX\\/o0BEKDt9zLB9r03G2u2JKvYIjF\\/fF8Gg0\\/IKDc8J4+VTGucVfg9IWuRvDcYOyYzYVroAuWqDGKrUf6OSVlaUJzgy9+++5a5FZnEBiWKoUIBvjqYCtM24H5ks\\/nnF6LYRFbgkfWjcH0W8Tu4QkXfgHwwc2W0JVS1M199+bqwHDuxsfmqja5LvIl07rq87eAZx5a09ch2Yal1XziQunDUm+h5X+itXULQKuDjpqlD2KyUDKOHWjctHPMgRXAK+ax+G4QNEoDXrgBshfX0BoFIpX\\/guICgq\\/QGHLZXRRLNiYuKJjCYxxhSvOnCoyN6wMs7AwKOXlXIKegFxhXqMiiM9C+ulzbVCnjn6+l57bufyWQCTPWw70WOdEry4MjGIUgtKZ6L8Jv3FxkzcFpWHB4QkLl3OrIXYT\\/N17pJx68cbz1Va75PxJBw2F5KMm\\/vfcfYmvIAvtePWpliVgZzvRVYeDrV\\/JaTyRbh+o070qo6w86dBgtNJymcw2gjmcoKUBcF2vBJZihZ2KwW+tZ4omGgi58Lh+q+w2Fx6rkqQ9bK\\/Vc+kQrKn0cYmHO0BwTAyS3\\/LDCxVa79DT+43VjSsFmugX8DcYt51oNO+j\\/WTFkwXsu73125M0I0rZqxuGwM4qgO+fSeTMi6fuQI\\/mRKtZhSZhy6wrAb3tnGQZw+cGTxHCRoLwPznPcer5VnFcMMTKeETrVM4UFQJcQsQIp6EKfItWvW+5HDZ2O5BmzgPNJMbWp0aaQVztYdWoDprwRqfUGINsz1058pv9o\\/Eq7GWDBE8i\\/iYCjrQ6cPAA0KVWPaSlxECl\\/9JxQIQYTzwhE87p5wrT\\/jGVsq3IJr22cPiICTszRkQKsIngStCc9uT\\/\\/LycjGd\\/CFjcg51EBy8aR6qHFFBmky4N77R86h6+8xOAk2YrUyiQpi31o69Gn3ib3BtuypTCdZAsJjcOngAJebbQKFQ6OsPMtLFkm9cjhgR7xecsOkilAFgnwnuWDHK4Q2m8RlcOFyyUw\\/\\/qBnNQ+p+B42sQPq67Y5VpY5A1TOlpYysaoZRQtxZjtI46cnGpjQSoeagHDe8cOgDgiAVLqmFxC3MAddLfmcbIc8NgY2vFtO3rUoEozkdx6hzgejo+7i0eExw620IftK+DvckUPt3NaRKaElahNKfQX31HG83zVSKYy1IXxx+UQm8L9dFcR84Z2AbKTdiKEjjtEOJiLxMNxCeGD+61GJ6eA7FFMRniqLvFy55MyICpP987sryPV\\/intEEoJwdWTMLQ\\/s\\/8nm+psajYvGjxWeeJk5DIEd9bv+K7E9jtHXO4apeOgPNbTZULQPQG3C0k5vDbo0k6v3hafR+\\/bvXhisFyRZsK2OMAN2dwJpi4LzMSYpOZjxzJFPbgEH2kNL1Ep6AJ9dPwZ8QdSvGivUP1LN6EnP5AxOBGaMOSipLAJU7znt7pZ14HngVBnNruk5jzyYNArQiKuBxx8x13l8vvRClutKaDDhjimfQAK3zXWfONmF2+48XjLRjI0Zm0ma9JfyaHG+ZS88c+qA0f1xdJK+CGxCaZFuNwzZ2dvFzrr3fEDgmGufsHLxwOBhLvVs0OSkHl\\/JKsHKbV0uMNZuMnyeoadxgb0Q3IlBZLoyMRxVzHNC+TL2KtWmr5tRMBK9MajSWUdNe+4ittuE8CoOTo1NzEO5vGabBa2cs424y3+dquj3uob96RsvAzl6FyFlORPFgfJS0EGDpICtxN5KgwN0qlRJvFwNo24OXcmjqPniSJbvhRrJWaWZwiM+edRsJ+fyHsbKA2owE44YRUKlzguTcTw1osxoyJXIkMgFMiIz52z8oIHL4ceW5Df0Rwf\\/zcMOXVtFHrdo2AkseFLN3uemO+t6wSn3NF\\/lyCTL6q0t7+lrYVT7lpL3PYiR\\/s2HDGNu9BSAQcK8Irrvj5ivDEH21zey5JgWelb9QEZJeyNwdVWyK2JqXuCzVLGAJVO9q+m2\\/ibClLJRdrAk0fqVXB9fNcvlyrtsl3ftTrbuDBgg73AFvEO1dLor+g8XjSWka1sVYKlx6QsxwGQbAixMn3zxoCAvRp2HC9ZHNxAQ0WpbhvT\\/aFRhLS1xyt9NYKYsHl7DLh9ft2tTn0N6L02w9cmPRlVMJvt8wqyW11DsG+l5OyDJscu5163QExZp7pC1PyLtg\\/9OKhFG3LP2tEljXThZWeBkKo5hCRqSKsi016m+X3jc7J134Bm4Jb5jHwD8RtCetfol4SXRmWsg1yZLB2R8Qs99cSCHU9GhP589RTogpxHvMOMRRHwuqXceHbY+7hctY5vfYPGyWlMppNujj1FR0AIUmSF7swpLE5oeyQAGBqTEUrEaS24i5Q9Xlm5145pZN10KjwxNsMG5lGYM7yUtUarEP4Eh29VS7Pah8I1ukhVun0han96x6TduEZ5DWA6LXIrGSvexbGpG34PSN793+QL3KcItqLMnzQAQgrkjyoAcyy8hxPGC39CUZg2SSUZfxkazvKH3OoGcIlPTjiqRwoQ+cjU3tMmW8vL5TOH407DhHMOwuH8KKlWhIFmfvz6RHn260xkui0yCn7okCWkldYuaJ0bfalVQN1tEgCkAHgDISCJ4T59eOR5fImjbpJRKTrSDSMvzoWM1CBMAEuWJ\\/cRWS1GxF3YrDeZX9W21qe3XnhnvGZec\\/\\/6IsXa4qTPkj0alIWuTDHBntZRM3\\/HmVCzgqT2CDzQAyh9nDwtIzhcMRLbJd\\/aCJmvI3Y+S+VSzUPzMlr2Mgiye6ynZzaPPZH\\/XwbpbHntIOrxMCd878PdAs6S4ZYhkRP2VN54mpeBWOrEAvUKgvW9gwqQnMy4dDlBY27bDlD+qc6zoLicoxp1m00gFJsfzxM0+e4i3UzbkjjmBC5NJ+FTNzome2Xtad9R3cVUF5ruaysclUJfj+pPrdpm\\/bBzJLg3+C2UuE1ayjipn0zfnpn0ZF3fyOFCoGXvSBwtlY+PxaU31Rrl1uMHemCaeAaKGr2+\\/A07ri7vtaR2uF8eq\\/IIPhAfax8F52FgoIFVmf1e\\/634XbKJ40RcULwX3+T94aYCu07DRglf+wS1OAOIyYf3SmT1GQCZosHSZQsrnwO\\/VuLvKxcMrjtNXQP1pdPLn0jogbx4FwHv5oQ1fTYmXljAPVKArZomA8iS5fO115VXU7ca7lhgkTVaALvX1CXLNIAu0mU+aSnam+iuYLrZyJMD\\/ZWGkq8GPaFzxp00A3zVmwEENnOOCC8OLRBie0GSVQljNdy5uy\\/61FyrnGwUbScu6WxgSbWl45mu0pJ1sdQl6u7jAZvnPBFFhfcSbINTzpr1BgD69cyRJDGqTctiuzFHGi2N+ODnS+iVQW0k5xNYYoh3yo4DThyyDjv+XplyCDkoehs1nZILTlI5big5pKl\\/XW+3ngfPG7\\/Ey5Mf2aRSjolhaZqA\\/aNCxy3em7JsRpRkYa97pJlsc1\\/Vq3RmUrCouBtMo5IWnn\\/wS7thIHYP7UxsWL6J\\/4j4wS+cTQ\\/cG0CPX6fSUyJZPATaBarQPL1VRo7CnyzYHibdS0+SVrWtO3X1lbvY7a0j7i6WzSFP\\/Z1L4bVI+5i5scx7dANXGieCkD2Ds7zryVmAxMoHGgNRwgJQEpprEi0b\\/5JyHWcBPPt4QIYsAzXyTv+BQj4HPTmCwDFLok1qHvu4j2ifAGoAaTYfmdJiJmvJWoJyZEgjinJQ+c+eEjAwCEK6gRigee9giqH\\/0EpC2CF+qRFYJ0O+MlPDqpUjpcruCVhgkWWk8hZxUz02lb5m3b4iQhLRawk+uM2Q+V7st2emmPcEoZ977FQYq878CBB41tCoEj1FGTI1xux8YCKoiri2Z45\\/lpsyN1TTsnyhp8Cu5fbYg7G+vgqN3KngpddGVtg3oOfaaK6nCpSeoW33PnVQfRKvHlG035ukF+zng5b2QKjpvJiEoVuWwz"",\'BG_IU\': ""\\/\\/www.google.com\\/js\\/bg\\/IOA8y9bJh23yzX_Xx1Lzdpvil-FmhhSrkRF2am8kUAc.js"",\'XSRF_TOKEN\': \'QUFFLUhqbndabm03VVIyaE54RkZXamNJZEJpbk5VZnZMd3xBQ3Jtc0traFhNZm4tT3h5aTlMVk53MGw1Y2l1aktWYklXQlRFX0tfZUdFNXctMlQ2N19DdnM3NnFQT21EQzJpUFc1ZzBRMl9BQjB5V2w4RzJlcE11NTlZUkxEaGs2ekJ1SkJMX2VEdHdHclJfSVZzS1ZjaUlhWk1BcFR6SHk1cFAxeVRNR3J1V0dNZ1BKamtGeFk2Qnhpd2hTM0xDWFRlX2c=\',\'XSRF_FIELD_NAME\': \'session_token\',\'EURL\': ""https:\\/\\/tpc.googlesyndication.com\\/safeframe\\/1-0-14\\/html\\/container.html""});yt.setConfig({APIARY_HOST: """",INNERTUBE_API_KEY: ""AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8"",INNERTUBE_CONTEXT_CLIENT_VERSION: ""20180215"",XHR_APIARY_HOST: ""youtubei.youtube.com"",INNERTUBE_API_VERSION: ""v1"",INNERTUBE_CONTEXT_CLIENT_NAME: 56,GAPI_HINT_PARAMS: ""m;\\/_\\/scs\\/abc-static\\/_\\/js\\/k=gapi.gapi.en.HtLvrA_npCQ.O\\/m=__features__\\/am=AAE\\/rt=j\\/d=1\\/rs=AHpOoo8wHQU_A1WtgGgcOpQEfGjHuD8e-g"",APIARY_HOST_FIRSTPARTY: """",\'VISITOR_DATA\': ""Cgt1NFBiOHktb3hScw%3D%3D"",\'DELEGATED_SESSION_ID\': null,\'GAPI_HOST\': ""https:\\/\\/apis.google.com"",\'GAPI_LOCALE\': ""en_GB"",\'INNERTUBE_CONTEXT_HL\': ""en-GB"",\'INNERTUBE_CONTEXT_GL\': ""MA"",\'XHR_APIARY_HOST\': ""youtubei.youtube.com""});ytcfg.set(""ROOT_VE_TYPE"", 16623);ytcfg.set(""EVENT_ID"", ""K16LWsCyBpWtWNqfv5gJ"");yt.setConfig({\'PLAYER_CONFIG\': {""assets"":{""css"":""\\/yts\\/cssbin\\/player-vflWsxn7B\\/www-player-webp.css"",""js"":""\\/yts\\/jsbin\\/player-vfl8swg2e\\/en_GB\\/base.js""},""attrs"":{""height"":""100%"",""id"":""video-player"",""width"":""100%""},""args"":{""iurlhq720_webp"":""https:\\/\\/i.ytimg.com\\/vi_webp\\/dRnrjyJV25I\\/hq720.webp"",""avg_rating"":4.8042813456,""cr"":""MA"",""el"":""detailpage"",""user_display_image"":""https:\\/\\/lh4.googleusercontent.com\\/-PPVxqpJidSc\\/AAAAAAAAAAI\\/AAAAAAAAAW8\\/8wD5R1-5bCQ\\/photo.jpg"",""profile_picture"":""https:\\/\\/yt3.ggpht.com\\/--7rnjwnIDQw\\/AAAAAAAAAAI\\/AAAAAAAAAAA\\/3GRM5B1PXjs\\/s68-c-k-no-mo-rj-c0xffffff\\/photo.jpg"",""vq"":""tiny"",""iurl"":""https:\\/\\/i.ytimg.com\\/vi\\/dRnrjyJV25I\\/hqdefault.jpg"",""fflags"":""html5_default_ad_gain=0.5\\u0026mweb_muted_autoplay_animation=shrink\\u0026player_external_control_on_classic_desktop=true\\u0026html5_tight_max_buffer_allowed_impaired_time=0.0\\u0026html5_msi_error_fallback=true\\u0026html5_minimum_readahead_seconds=0.0\\u0026html5_stall_pctile=true\\u0026html5_use_adaptive_live_readahead=true\\u0026flex_theater_mode=true\\u0026html5_ignore_bad_bitrates=true\\u0026html5_sticky_disables_variability=true\\u0026html5_live_abr_head_miss_fraction=0.0\\u0026html5_min_readbehind_secs=0\\u0026enable_live_state_auth=true\\u0026html5_break_deadlocks=true\\u0026enable_bulleit_lidar_integration=true\\u0026html5_mweb_client_cap=true\\u0026player_destroy_old_version=true\\u0026disable_max_adsense_channel_limit=true\\u0026html5_enable_bandwidth_estimation_type=true\\u0026embed_show_watchlater_login=true\\u0026html5_parse_inline_fallback_host=true\\u0026allow_live_autoplay=true\\u0026sdk_ad_prefetch_time_seconds=-1\\u0026stop_using_ima_sdk_gpt_request_activity=true\\u0026html5_background_quality_cap=360\\u0026enable_spherical_ps4=true\\u0026html5_serverside_biscotti_id_wait_ms=1000\\u0026html5_use_has_subfragmented_fmp4=true\\u0026limit_of_rebuffering_event_on_html5=1000\\u0026html5_bandwidth_window_size=0\\u0026vss_dni_delayping=0\\u0026html5_vp9_live_blacklist_edge=true\\u0026web_player_api_logging_fraction=0.01\\u0026fixed_padding_skip_button=true\\u0026html5_hopeless_mode_request_size_secs=15\\u0026html5_player_autonav_logging=true\\u0026sdk_wrapper_levels_allowed=0\\u0026html5_live_normal_latency_bandwidth_window=0.0\\u0026html5_composite_stall=true\\u0026html5_new_peg_to_live_v2=true\\u0026show_thumbnail_behind_ypc_offer_module=true\\u0026enable_afv_div_reset_in_kevlar=true\\u0026html5_min_buffer_to_resume=6\\u0026html5_el_migration=true\\u0026html5_quality_cap_min_age_secs=0\\u0026playready_on_borg=true\\u0026html5_max_buffer_duration=0\\u0026html5_live_low_latency_bandwidth_window=0.0\\u0026html5_progressive_signature_reload=true\\u0026html5_suspended_state=true\\u0026variable_load_timeout_ms=0\\u0026html5_report_conn=true\\u0026html5_incremental_parser_buffer_duration_secs=1.5\\u0026html5_disable_urgent_upgrade_for_quality=true\\u0026html5_strip_emsg=true\\u0026html5_start_off_live=0\\u0026html5_ad_stats_bearer=true\\u0026html5_streaming_xhr_progress_includes_latest=true\\u0026html5_manifestless_no_redundant_seek_to_head=true\\u0026html5_maximum_readahead_seconds=0.0\\u0026html5_drm_generate_request_delay=0\\u0026spacecast_uniplayer_decorate_manifest=true\\u0026use_new_style=true\\u0026live_readahead_seconds_multiplier=0.8\\u0026mweb_playsinline=true\\u0026html5_enable_embedded_player_visibility_signals=true\\u0026html5_video_tbd_min_kb=0\\u0026disable_set_awesome_html5=true\\u0026html5_new_autoplay_redux=true\\u0026enable_prefetch_for_postrolls=true\\u0026dynamic_ad_break_pause_threshold_sec=0\\u0026html5_preload_size_excludes_metadata=true\\u0026html5_mobile_perf_cap_240=true\\u0026html5_subsegment_readahead_min_buffer_health_secs=0.25\\u0026ad_video_end_renderer_duration_milliseconds=7000\\u0026html5_hls_initial_bitrate=0\\u0026mpu_visible_threshold_count=2\\u0026html5_disable_preserve_reference=true\\u0026html5_live_4k_more_buffer=true\\u0026html5_suspend_manifest_on_pause=true\\u0026html5_enable_mesh_projection=true\\u0026html5_incremental_parser_coalesce_slice_buffers=true\\u0026mweb_muted_autoplay=true\\u0026send_html5_api_stats_ads_abandon=true\\u0026uniplayer_dbp=true\\u0026dash_manifest_version=5\\u0026mweb_enable_skippables_on_iphone=true\\u0026html5_platform_minimum_readahead_seconds=0.0\\u0026html5_disable_non_contiguous=true\\u0026html5_live_abr_repredict_fraction=0.0\\u0026html5_disable_move_pssh_to_moov=true\\u0026show_thumbnail_on_standard=true\\u0026html5_ultra_low_latency_streaming_responses=true\\u0026html5_adjust_effective_request_size=true\\u0026html5_restrict_streaming_xhr_on_sqless_requests=true\\u0026youtubei_for_web=true\\u0026html5_ad_no_buffer_abort_after_skippable=true\\u0026interaction_click_on_gel_web=true\\u0026html5_disable_webgl_antialias=true\\u0026autoplay_time=10000\\u0026html5_stale_dash_manifest_retry_factor=1.0\\u0026html5_widevine_robustness_strings=true\\u0026web_embedded_player_service=true\\u0026html5_max_headm_for_streaming_xhr=0\\u0026kevlar_allow_multistep_video_init=true\\u0026deprecate_get_video_metadata=true\\u0026html5_enable_ms_playready_hd=true\\u0026html5_qoe_unstarted_in_initialization=true\\u0026lightweight_watch_video_swf=true\\u0026disable_mweb_iphone_ad_click_handling_functionality=true\\u0026live_fresca_v2=true\\u0026mweb_cougar_big_controls=true\\u0026html5_serverside_call_server_on_biscotti_timeout=true\\u0026html5_request_sizing_multiplier=0.8\\u0026disable_set_awesome_mweb=true\\u0026html5_live_probe_primary_host=true\\u0026html5_connect_timeout_secs=7.0\\u0026html5_min_readbehind_cap_secs=0\\u0026player_unified_fullscreen_transitions=true\\u0026html5_qoe_intercept=\\u0026postroll_notify_time_seconds=5\\u0026mweb_cougar_ads_backend=true\\u0026html5_allowable_liveness_drift_chunks=2\\u0026html5_suspend_loader=true\\u0026html5_stop_video_in_cancel_playback=true\\u0026html5_live_only_disable_loader=true\\u0026live_chunk_readahead=3\\u0026html5_prefer_server_bwe3=true\\u0026disable_new_pause_state3=true\\u0026html5_get_video_info_timeout_ms=0\\u0026html5_new_fallback=true\\u0026legacy_autoplay_flag=true\\u0026html5_post_interrupt_readahead=20\\u0026fix_gpt_pos_params=true\\u0026persist_text_on_preview_button=true\\u0026forced_brand_precap_duration_ms=2000\\u0026html5_min_startup_smooth_target=10.0\\u0026dynamic_ad_break_seek_threshold_sec=0\\u0026html5_min_secs_over_max_bytes=true\\u0026disable_client_side_midroll_freq_capping=true\\u0026html5_subsegment_readahead_timeout_secs=2.0\\u0026html5_ignore_public_setPlaybackQuality=true\\u0026html5_vp9_live_whitelist=true\\u0026html5_subsegment_readahead_min_buffer_health_secs_on_timeout=0.1\\u0026html5_variability_discount=0.5\\u0026html5_subsegment_readahead_progress_timeout_fraction=0.8\\u0026html5_request_size_min_secs=0.0\\u0026fast_autonav_in_background=true\\u0026website_actions_throttle_percentage=1.0\\u0026html5_streaming_xhr_optimize_lengthless_mp4=true\\u0026disable_trusted_ad_domains_player_check=true\\u0026html5_live_pin_to_tail=true\\u0026mweb_autonav=true\\u0026use_fast_fade_in_0s=true\\u0026html5_jumbo_ull_subsegment_readahead_target=1.0\\u0026html5_error_reload_cooldown_ms=30000\\u0026html5_deadzone_multiplier=1.0\\u0026html5_min_secs_between_format_selections=8.0\\u0026html5_streaming_xhr_buffer_mdat=true\\u0026html5_get_video_info_promiseajax=true\\u0026html5_subsegment_readahead_always_delay_appends=true\\u0026skip_restore_on_abandon_in_bulleit=true\\u0026html5_license_constraint_delay=5000\\u0026html5_max_av_sync_drift=50\\u0026html5_manifestless_accurate_sliceinfo=true\\u0026html5_repredict_interval_secs=0.0\\u0026html5_new_e2e_latency_tracking=true\\u0026html5_subsegment_readahead_tail_margin_secs=0.2\\u0026disable_indisplay_adunit_on_embedded=true\\u0026playready_first_play_expiration=-1\\u0026html5_max_buffer_health_for_downgrade=15\\u0026html5_throttle_rate=0.0\\u0026html5_aspect_from_adaptive_format=true\\u0026html5_live_ultra_low_latency_bandwidth_window=0.0\\u0026tvhtml5_background_su=true\\u0026html5_elbow_tracking_tweaks=true\\u0026mweb_cougar=true\\u0026html5_min_upgrade_health=0\\u0026html5_adunit_from_adformat=true\\u0026html5_serverside_call_server_on_biscotti_error=true\\u0026web_player_disable_flash_playerproxy=true\\u0026disable_reporting_html5_no_vast_ads_as_error=true\\u0026html5_env_data_update_app_only=true\\u0026html5_incremental_parser_buffer_extra_bytes=16384\\u0026web_player_edge_autohide_killswitch2=true\\u0026html5_reselect_bandwidth_factor=3.0\\u0026web_player_tabindex_killswitch=true\\u0026html5_reattach_resource_after_timeout_limit=0\\u0026html5_subsegment_readahead_target_buffer_health_secs=0.5\\u0026html5_throttle_burst_secs=15.0\\u0026html5_fludd_suspend=true\\u0026html5_tight_max_buffer_allowed_bandwidth_stddevs=0.0\\u0026safari_enable_spherical=true\\u0026html5_observe_live_start_seconds=true\\u0026call_release_video_in_bulleit=true\\u0026html5_variability_full_discount_thresh=3.0\\u0026html5_pipeline_manifestless=true\\u0026use_new_skip_icon=true\\u0026html5_spherical_bicubic_mode=1\\u0026html5_aux_pctile=true\\u0026ad_duration_threshold_for_showing_endcap_seconds=15\\u0026html5_subsegment_readahead_controlled_by_buffer_health=true\\u0026html5_always_enable_timeouts=true\\u0026doubleclick_gpt_retagging=true\\u0026use_forced_linebreak_preskip_text=true\\u0026midroll_notify_time_seconds=5\\u0026max_resolution_for_white_noise=360\\u0026html5_no_shadow_env_data_redux=true\\u0026html5_default_quality_cap=0\\u0026html5_max_readahead_bandwidth_cap=0\\u0026use_html5_player_event_timeout=true\\u0026html5_sticky_ignore_capped=true\\u0026enable_mesh_ps4=true\\u0026king_crimson_player_redux=true\\u0026mweb_autonav_paddles=true\\u0026html5_deferred_source_buffer_creation=true\\u0026html5_live_disable_dg_pacing=true\\u0026desktop_cleanup_companion_on_instream_begin=true\\u0026html5_pipeline_ultra_low_latency=true\\u0026html5_disable_audio_slicing=true\\u0026html5_clearance_fix=true\\u0026show_countdown_on_bumper=true\\u0026segment_volume_reporting=true\\u0026www_for_videostats=true\\u0026html5_pause_video_fix=true\\u0026html5_sticky_reduces_discount_by=0.0\\u0026html5_request_size_max_secs=31\\u0026mweb_playsinline_webview=true\\u0026html5_background_cap_idle_secs=60\\u0026html5_nnr_downgrade_adjacency=true\\u0026html5_variability_no_discount_thresh=1.0\\u0026html5_local_max_byterate_lookahead=15\\u0026website_actions_cta_redesign=true\\u0026html5_readahead_ratelimit=3000\\u0026html5_nnr_downgrade_count=4\\u0026html5_defer_background_errors=true"",""ucid"":""UCCLZfZNgKxUQsCbPod7iVpw"",""channel_path"":""\\/channel\\/UCCLZfZNgKxUQsCbPod7iVpw"",""iurlhq_webp"":""https:\\/\\/i.ytimg.com\\/vi_webp\\/dRnrjyJV25I\\/hqdefault.webp"",""cosver"":""6.1"",""iurlmaxres"":""https:\\/\\/i.ytimg.com\\/vi\\/dRnrjyJV25I\\/maxresdefault.jpg"",""enablejsapi"":""1"",""rel"":""0"",""author"":""EMPIRE"",""eventid"":""K16LWsCyBpWtWNqfv5gJ"",""short_view_count_text"":""549K views • 15 comments"",""innertube_api_key"":""AIzaSyAO_FJ2SlqU8Q4STEHLGCilw_Y9_11qcW8"",""embed_config"":""{}"",""iurlmq_webp"":""htt",,2
145,https://github.com/jeerovan/fatalk.git,A demo chat application for Android using XMPP based Firebase Cloud Messaging as a backend service to communicate.,"android,firebase-cloud-messaging,firebase,chat,chat-application,chat-app-using-firebase",1
146,https://github.com/IBM/ios-mbaas-app.git,Mobile Backend as a Service with Push Notifications and Authentication.,,1
147,https://github.com/igor-ribeiiro/OnlinePokeSystem.git,A real-time Online Poke System made with Live Queries using Back4App as the BackEnd Service.,"online,poke,live,query,android",1
148,https://github.com/shuny/bass.git,Backend-as-a-service !!,,1
149,https://github.com/kibukamusoke/parse-baas.git,Backend as a service,,1
150,https://github.com/makersu/play-scala-baas.g8.git,giter8 template for a Scala Play project as a Mobile backend as a service (MBaaS),,1
151,https://github.com/olroma23/CrushDating.git,"Dating app with chat using firebase as a backend-as-a-service, swiftui for canvas mode",,1
152,https://github.com/AdityaVashishtha/BAaS-backend.git,BAaS(Backend and Analytics as a Service) backend server source code,,1
153,https://github.com/jonashackt/weatherbackend.git,Simple REST-Service based on SpringBoot to work as a Sample-Backend for Integration-Services,,1
154,https://github.com/ujjwaljoshi/HeyCloudFoundry.git,Demo App on how to deploy to CloudFoundry using mysql as backend as a service,,1
155,https://github.com/danielc92/react-django-crm.git,Building a CRM system using React as a front end and Django (django_restframework) as a REST API backend service.,,1
156,https://github.com/whiz25/flutter_journal_app.git,A daily journaling app built using flutter and firebase as a backend service.,,1
157,https://github.com/ericaroy/tutorWeb.git,WIP-A Flask application using Firebase as a backend service to serve tutors & user sessions.,"python3,flask-application,firebase-database",1
158,https://github.com/deelobase/deelobase.git,Deelobase is a serverless NoSQL database and backend as a service.,"database,database-as-a-service,cloud-functions,nosql,nosql-database,datastore",1
159,https://github.com/Hless/cordova-plugin-location-updates.git,Cordova plugin for sending periodical location updates to your backend server. Runs as a background service.,,1
160,https://github.com/stackhub/service-nginx-lb.git,Dynamic service using Nginx as a load balancer. Adjusts to backends coming and going.,,1
161,https://github.com/bloomcode/mobile-app-and-microservices-with-ibm-cloud.git,Building a hybrid mobile application with backend hosted as microservices on IBM Cloud Kubernetes Service,"nodejs,ionic,postgres,kubernetes,ibm-cloud,kube-on-ibmcloud",1
162,https://github.com/chosenonehacks/WellDoneItXamFresh.git,"Xamarin Forms application, that uses Azure Mobile Services as a backend.",,1
163,https://github.com/s-morgan-jeffries/angular-parse-interface.git,"{""AngularJS module for using Parse.com's backend-as-a-service.""}",,1
164,https://github.com/ro0t-k1t/Java-Android-Calculator---Shush.git,android app using Backend as a service. The app uses geofencing for university library dating,,1
165,https://github.com/AdityaVashishtha/BAaS-MainServer.git,BAaS(Backend and Analytics as a Service) Application generation server source code,,1
166,https://github.com/AdityaVashishtha/BAaS-Frontend-Dashboard.git,BAaS(Backend and Analytics as a Service) frontend server source code,,1
167,https://github.com/rajranjan5215/Basic-Banking-APP.git,Basic Banking App is a flutter along with Dart and Firebase Firestore as a backend service project.,"flutter,flutter-apps,banking-applications,banking-system,dart,firebase-database,firestore-database,firebase-firestore,appdevelopment",1
168,https://github.com/boonen/pgshard_demo.git,A demo of scaling PostgreSQL 9.4 using pg_shard on Docker/CoreOS with Consul as Service Discovery backend.,,1
169,https://github.com/MZhoume/MicroservicesApp.git,"Modern *-As-A-Service Application Development, Serverless Backend with .NET Core on AWS Lambda, Frontend using AngularJS 2.",,1
170,https://github.com/bakode/taniPintar-main.git,"Android E-Commerce with firebase as a backend , remote data (MySql with remote service build with php), local data (SQLite)",,1
171,https://github.com/MiteshSharma/ContentApi.git,Content api is backend as a service which support both static and dynamic content written in java using Play Framework.,"playframework,java,mongodb",1
172,https://github.com/GutoMaciel/GoBarberBackend.git,"The backend of an web application for service providers, such as a barber shop, to receive and track your appointments.",,1
173,https://github.com/olor-io/olor-category-service.git,"Backend API used to manage and send category icons to olor. Works mainly as a relay backend service, sending data and icons to other microservices.",,1
174,https://github.com/desofto/video-portal-vue-nodejs.git,"Micro-services implementation using Redis as Message Broker, NodeJS and Ruby for Backend and VueJS as a Frontend framework, API over HTTP and WebSockets connections",,1
175,https://github.com/kowalkowska-just/Flash-Chat.git,It is a very simple messaging application. I used the service called Firebase Firestore as a backend database to store and retrieve uor messages from the cloud. ,,1
176,https://github.com/claudioMontanari/MusicServiceLibrary.git,BackEnd for a Music Service Library developed in C++ as a project for the Object Orented Languages and Environment class of Spring 2018 ,,1
177,https://github.com/tiratatp/timestream-local.git,A local mock of Amazon Timestream that uses an embeded SQL server as a backend and is API compatible with the real service,,1
178,https://github.com/PavanAditya/Video-Streaming-NodeJs.git,A basic sample webpage built for streaming video. Video is fetched as a service call from backend and will implement the regular video streaming method,"streaming-video,backend,interval,nodejs,chunks,writestream",1
179,https://github.com/nikilok/chess-express-socketio.git,"A NodeJs Express server, with socket IO that acts as the backend service for the Chess GUI project react-hooks-chess",,1
180,https://github.com/rajranjan5215/Basic-Banking-APP.git,Basic Banking App is a flutter along with Dart and Firebase Firestore as a backend service project.,"flutter,flutter-apps,banking-applications,banking-system,dart,firebase-database,firestore-database,firebase-firestore,appdevelopment",1
181,https://github.com/boonen/pgshard_demo.git,A demo of scaling PostgreSQL 9.4 using pg_shard on Docker/CoreOS with Consul as Service Discovery backend.,,1
182,https://github.com/MZhoume/MicroservicesApp.git,"Modern *-As-A-Service Application Development, Serverless Backend with .NET Core on AWS Lambda, Frontend using AngularJS 2.",,1
183,https://github.com/bakode/taniPintar-main.git,"Android E-Commerce with firebase as a backend , remote data (MySql with remote service build with php), local data (SQLite)",,1
184,https://github.com/MiteshSharma/ContentApi.git,Content api is backend as a service which support both static and dynamic content written in java using Play Framework.,"playframework,java,mongodb",1
185,https://github.com/GutoMaciel/GoBarberBackend.git,"The backend of an web application for service providers, such as a barber shop, to receive and track your appointments.",,1
186,https://github.com/olor-io/olor-category-service.git,"Backend API used to manage and send category icons to olor. Works mainly as a relay backend service, sending data and icons to other microservices.",,1
187,https://github.com/desofto/video-portal-vue-nodejs.git,"Micro-services implementation using Redis as Message Broker, NodeJS and Ruby for Backend and VueJS as a Frontend framework, API over HTTP and WebSockets connections",,1
188,https://github.com/Stefan28BU/MajorProjects_Spring2019_PetFinder.git,"This is a P2P web-based application for pet sitting services. Implemented using React.js as frontend, Spring MVC accompanied with Elasticsearch as out backend database",,1
189,https://github.com/kowalkowska-just/Flash-Chat.git,It is a very simple messaging application. I used the service called Firebase Firestore as a backend database to store and retrieve uor messages from the cloud. ,,1
190,https://github.com/claudioMontanari/MusicServiceLibrary.git,BackEnd for a Music Service Library developed in C++ as a project for the Object Orented Languages and Environment class of Spring 2018 ,,1
191,https://github.com/tiratatp/timestream-local.git,A local mock of Amazon Timestream that uses an embeded SQL server as a backend and is API compatible with the real service,,1
192,https://github.com/PavanAditya/Video-Streaming-NodeJs.git,A basic sample webpage built for streaming video. Video is fetched as a service call from backend and will implement the regular video streaming method,"streaming-video,backend,interval,nodejs,chunks,writestream",1
193,https://github.com/nikilok/chess-express-socketio.git,"A NodeJs Express server, with socket IO that acts as the backend service for the Chess GUI project react-hooks-chess",,1
194,https://github.com/JobMurumba/react-redux-firebase-planner.git,"{""This is a an app to store one's project todos.  It takes advantage of what firebase has to offer  as the backend service ""}",,1
195,https://github.com/Rosso84/bachelor_project.git,"A monolythic-Springboot backend service with Restfull API using Swagger as frontend. Includes use of Postgres, and tests using Junit/RestAssured ","kotlin,postgres",1
196,https://github.com/AntonioRdzNav/recipes-world.git,Web App build in ReactJs and a Firebase Backend as Service to share and discover recipes of all around the world.,"reactjs,reacts-hooks,reactcontextapi,firebase-auth,firebase-hosting,firebase-functions,firebase-firestore,firebase-firestore-security-rules,style-components,recipes",1
197,https://github.com/happy-mammal/timeliner-graphql-api.git,This is a GraphQL API service for TimeLiner Application created with Node.js & Express framework using Firebase Firestore and Realtime DB as backend.,"graphql,graphql-server,graphql-server-express,nodejs,heroku,firebase-realtime-database,firestore,resolver,graphql-api,api",1
198,https://github.com/SreelalChalil/people-manager.git,People-manager is a React & Firebase based simple contact organizer application. People-manager uses React along with Bootstrap in the frontend and Firebase as the Backend Service,,1
199,https://github.com/RazvanBerbece/TomyVet.git,"Built using React for a local animal-related shop, will handle online shopping with local delivery. Uses TomyVet-API as backend service.",,1
200,https://github.com/rovandep/AaaS.git,This repository content is used to illustrate the anything-as-a-service with the migration of a stateful/legacy application on kubernetes (k8s) with persistent storage using StorageOS as cloud native storage backend.,"containerization,kubernetes,storage,stateful,statefulset,ingress,storageos",1
201,https://github.com/CG0323/jobboard.analyzer.git,"A python flask lighweight web service. It acts as a background worker which analyzes the raw recruitment description, analyze required skills as well as the level of skills.Everytime a new recruiting post is sent to the backend, the analyze service will be triggered to process the text, extract desired information from unstructured text and save the result into MySql data tables.",,1
202,https://github.com/shubhendu-mishra/movie-cruiser.git,"This is a simple Web App that is built using Angular and Spring Boot. The backend services are deployed as per micro services architecture. JWT is implemented for security, Swagger is implemented for documentation. This app is also deployable from Docker. The app(backend and frontend) was built by Shubhendu Mishra as part of the Stackroute Full Stack Web Developer Certification.",,1
203,https://github.com/shankarlohith/GameGuiedz-WebApplication.git,"This is an simple web application that uses the firebase as a backend, this application has a service of authentication and data storage the user can view the content page only the admin have the control over it","javascript,html,css,nodejs,firebase,firebasefunctions,firebase-database",1
204,https://github.com/syedadeel2/G-PHP.git,"{""G-PHP is a Backend-as-a-Service(BaaS) designed for those who don't want to pay for 3rd party servers and want to host on their cPanel or any Apache server.""}",,1
205,https://github.com/IndianCoder25/Implementation-of-REST-APIs-MVC-in-ExpressJS.git,"In this repository, I have implemented an MVC (Model, View, and Controller) architecture along with the REST APIs in the JavaScript backend framework ExpressJS that can be integrated into any web app or mobile app as a service.","expressjs,rest-api,mongodb,mvc-architecture,nodejs",1
206,https://github.com/leo-paz/PatientCheckInAlexaSkill.git,Prototype check in skill built for Phreesia that provides general functionality as to how a patient visit should go. The phreesia backend service that is called is not included in this repo.,,1
207,https://github.com/MiKr13/MQTT.git,This is a project to utilize MQTT protocol using Node.js as backend with MySQL Database support and Passport authentication service. We are using Mosquito client for MQTT here.,,1
208,https://github.com/mhamed-kassem/Spring-boot-backend.git,Backend web service  RESTful APIs using spring boot and intelliJ IDEA as a practice on spring boot with java and Spring Data JPA to store and retrieve data in a postgresql database to do    get  put  update delete    CRUD Services on a simple model have little attributes ,"java,spring-boot,jpa,restful-api,webservice,back-end",1
209,https://github.com/diayan/AroundAfrica.git,"{""Around Africa is an android app I built from ground up as part of a hackathon I attended on 26th October 2019. I used google's firebase to provide backend service. The project also include an image scanner, which immediately displays a location on a map when you scan a picture.""}",,1
210,https://github.com/Serrato1/VuemeApp.git,"""Netflix Just Had a Baby with Google Hangouts"".  An application video streaming service that let\'s users interact with one another via chat while watching a real-time shared video stream of a YouTube video together. Uses web sockets for live streaming videos and integrated chat rooms. React as our front end and express/sockets for backend. ",,1
211,https://github.com/larisamihut/ScutApp.git,"The software solution has 2 interfaces, one for users and one for doctors. The system permits the following actions: visualization and filtering of news from trustful resources, a user friendly COVID-19 meter, a simple and intuitive COVID-19 self-test, online medical advisory as a chat, localization of the infected users on the map. I used Java as programming language and Firebase as backend as a service. Moreover, I integrated and worked with Google Maps API, consumed external APIs to get updated data, used 3-rd party libraries.",,1
212,https://github.com/mmdahir/Airport-Buddy.git,"An android app that can help with all your airport needs. Check out traffic to an airport, store upcoming flights, and check out how long TSA lines currently are. App coded in Java and XML, with the database written in mySQL, and php is used to access the database as well as make requests to external APIs. This was made in a 4 person group, and I helped create the backend code, such as communicating and getting information from external APIs as well as the database, some frontend code, and making android services. ",,1
213,https://github.com/nitinwagadia/Shopit.git,"Shop It! is a cloud based mobile application for enhancing the shopping experience for users on the go. Our application can recommend best offers in nearby stores, deals in restaurants and best discounts on products based on your location. Project uses highly scalable and efficient Amazon services like SQS and SNS for ensuring high availability. For notifications, we have used Google Cloud Messaging (GCM) for real time service. We are using REST API for providing responses from backend Elasticsearch engine scanning through high amount of geocoded deals data ensuring minimum response time for users. With this application users now have a power to reach beyond just an conventional shopping application. By registering as a merchant in the app and user can start own business or boost an existing one.",,1
214,https://github.com/unbrazil/angular-extensions.git,"Assuming that web development has two intrinsic areas, at first: User Interface development (Front-end) and Services development (Backend). This project aims to standardize the user interface as a response interpreter from the business core. Allowing independence from both parts and for both developer specialties.",,1
215,https://github.com/sumancvb/deluge.git,"Deluge is a popular multi-platform bittorrent client often used to provide torrenting / seedbox functionality on Linux servers. Like rTorrent, deluge uses libtorrent as its backend. Supported by daemon-service, awesome interface, and great plugin support, Deluge surpass Transmission and rTorrent for functionality.","deluge-web,deluge-client,ubuntu-deluge,seedbox,installer-script,ubuntu",1
216,https://github.com/amitgoswami1027/capstone-microservicesproject.git,"Udacity capstone project to apply the concepts learned during the Cloud Developer Nanodegree. This project make use of different AWS services IAM, VPC, subnets, RDS- postgres, S3, EKS, ELB, EC2, IGW , dockers and Kubernetes to deploy microservices. We also make use of the reverseproxy to act as the interface to all the backend services. Project users to register and log into a web client, post photos to the feed, and process photos using an image filtering microservice",,1
217,https://github.com/kathleenwest/WCFAuthenticationDemo.git,"This project presents a Visual Studio solution including a simple demo WCF Authentication Service Application and a “Tester” Client (Windows Form Application) that allows the user to test the user registration, login, logout, and service operations. In addition to demonstrating standard authentication capabilities, the WCF service implements a custom username and password validator pattern. Passwords are stored securely using Password-Based Key Derivation Function PBKD cryptology of which the implementation is discussed. A custom error handler ensures that exceptions are properly wrapped into WCF Faults and communicated to the client caller. Certificates are discussed along with how to implement a server certificate on a client machine for development testing of “integrity” and application trust. The project includes a demo certificate and script for generating self-signed dev certificates, which must be installed into the client certificate store for the client tester application to trust and access the demo service.  The client “tester” windows form application is not intended as a UX/UI demo but used to test and verify that the backend authentication service registration, login, logout, service operations, and callbacks are working as expected and sending proper WCF fault messages. Lastly, the project is shown in the demo section with a video and screen captures.","authentication,wcf,wcf-service,wcf-client,wcf-service-client-demo,pbdk,cryptology,certificate,certificate-generation,error-handling,custom-validators,custom-validation,windows-communication-foundation,wcf-bindings,password-store,password-safety,password-hash,security,csharp,service",1
218,https://github.com/kalkaprasad/DayToDay-News-APP.git,"DayToDay news App  is a Basic News App , this is the my first project  of Android..  I have use the  Firebase  as a backend  Service  and frontend  using XMl.. basicly this App is devolped using Java Language.. This App have Category Wise News like , treanding News, Crime News,etc.. if You want to use this App then  You should be do first of fall Connect Your APP to Firebase and then Sync this Project then definitely.",,1
219,https://github.com/LitHaxor/Server-side-Development-with-NodeJS-Express.git,"This course deals with all things server-side. We base the entire course around the NodeJS platform. We start with a brief overview of the Web protocols: HTTP and HTTPS. We examine NodeJS and NodeJS modules: Express for building web servers. On the database side, we review basic CRUD operations, NoSQL databases, in particular MongoDB and Mongoose for accessing MongoDB from NodeJS. We examine the REST concepts and building a RESTful API. We touch upon authentication and security. Finally we review backend as a service (BaaS) approaches, including mobile BaaS, both open-source and commercial BaaS services.",,1
220,https://github.com/patrickmcgreevy/SportClubManager.git,"CS 322 Project. This platform will be available through a browser and an app. To make this possible we will need to build a strong backend so that we don’t have to do any redundant work for the app and site. We can use Google App Engine to manage much of the back end of our service. As for the front end, the front end can be written in JavaScript using ReactNative and Expo to make the apps, and simply JavaScript for the website. Security will be essential for this platform so we will need to use a secure login service. Logging in via Google will probably be our preferred method.",,1
221,https://github.com/Twiinlab/polyfire-summit.git,"In the talk we will show how to integrate Polymer component and FireBase, the Mobile Backend as a Service platform of Google, Realtime system and Hosting service. We will have also a little introduction to reactive programming, and how to build interactive applications taking advantage of this new approach with Polymer components in our apps to improve the user experience. To see all of this in action: We will end up developing an interactive application which will show the potential of this awesome synergy Polymer and Firebase, with a collaborative example ;)",,1
222,https://github.com/genov1824/REST-Service.git,"You are assigned to design and implement a bookmarks management Web front-end application using HTML5, JavaScript, jQuery, AJAX, REST and JSON with cloud-based backend. The app keeps users and their bookmarks. Users can register, login, view their bookmarks, add and delete bookmarks and logout. The app should be implemented as client-side Web application in JavaScript with server-side REST services called by AJAX and returning JSON objects.",,1
223,https://github.com/sK-1005/NewsFeed-MEAN-Stack-App.git,Implemented a basic News Feed App where users can search and read news and admin can post news separately. Angular5: Implemented search pipe that narrows the current list as you type and written unit test in Angular to verify. NodeJS/ExpressJS/MongoDB: Implemented backend to store the news entries and invoke the service from the frontend to fill the interface. Newsfeed page admin can post/update new data into the database.,,1
224,https://github.com/sanusanth/c-basic-programs.git,"What is C#? C# is pronounced ""C-Sharp"".  It is an object-oriented programming language created by Microsoft that runs on the .NET Framework.  C# has roots from the C family, and the language is close to other popular languages like C++ and Java.  The first version was released in year 2002. The latest version, C# 8, was released in September 2019.  C# is a modern object-oriented programming language developed in 2000 by Anders Hejlsberg, the principal designer and lead architect at Microsoft. It is pronounced as ""C-Sharp,"" inspired by the musical notation “♯” which stands for a note with a slightly higher pitch. As it’s considered an incremental compilation of the C++ language, the name C “sharp” seemed most appropriate. The sharp symbol, however, has been replaced by the keyboard friendly “#” as a suffix to “C” for purposes of programming.  Although the code is very similar to C++, C# is newer and has grown fast with extensive support from Microsoft. The fact that it’s so similar to Java syntactically helps explain why it has emerged as one of the most popular programming languages today.   C# is pronounced ""C-Sharp"".  It is an object-oriented programming language created by Microsoft that runs on the .NET Framework.  C# has roots from the C family, and the language is close to other popular languages like C++ and Java.  The first version was released in year 2002. The latest version, C# 8, was released in September 2019.  C# is used for:  Mobile applications Desktop applications Web applications Web services Web sites Games VR Database applications And much, much more!  An Introduction to C# Programming  C# is a general-purpose, object-oriented programming language that is structured and easy to learn. It runs on Microsoft’s .Net Framework and can be compiled on a variety of computer platforms. As the syntax is simple and easy to learn, developers familiar with C, C++, or Java have found a comfort zone within C#.  C# is a boon for developers who want to build a wide range of applications on the .NET Framework—Windows applications, Web applications, and Web services—in addition to building mobile apps, Windows Store apps, and enterprise software. It is thus considered a powerful programming language and features in every developer’s cache of tools.  Although first released in 2002, when it was introduced with .NET Framework 1.0, the C# language has evolved a great deal since then. The most recent version is C# 8.0, available in preview as part of Visual Studio. To get access to all of the new language features, you would need to install the latest preview version of .NET Core 3.0.   C# is used for:  Mobile applications Desktop applications Web applications Web services Web sites Games VR Database applications And much, much more!  Why Use C#?  It is one of the most popular programming language in the world It is easy to learn and simple to use It has a huge community support C# is an object oriented language which gives a clear structure to programs and allows code to be reused, lowering development costs. As C# is close to C, C++ and Java, it makes it easy for programmers to switch to C# or vice versa.   The C# Environment  You need the .NET Framework and an IDE (integrated development environment) to work with the C# language.  The .NET Framework  The .NET Framework platform of the Windows OS is required to write web and desktop-based applications using not only C# but also Visual Basic and Jscript, as the platform provides language interoperability. Besides, the .Net Framework allows C# to communicate with any of the other common languages, such as C++, Jscript, COBOL, and so on.   IDEs  Microsoft provides various IDEs for C# programming:  Visual Studio 2010 (VS) Visual Studio Express Visual Web Developer Visual Studio Code (VSC)  The C# source code files can be written using a basic text editor, like Notepad, and compiled using the command-line compiler of the .NET Framework.   Alternative open-source versions of the .Net Framework can work on other operating systems as well. For instance, the Mono has a C# compiler and runs on several operating systems, including Linux, Mac, Android, BSD, iOS, Windows, Solaris, and UNIX. This brings enhanced development tools to the developer.   As C# is part of the .Net Framework platform, it has access to its enormous library of codes and components, such as Common Language Runtime (CLR), the .Net Framework Class Library, Common Language Specification, Common Type System, Metadata and Assemblies, Windows Forms, ASP.Net and ASP.Net AJAX, Windows Workflow Foundation (WF), Windows Communication Foundation (WCF), and LINQ.   C# and Java  C# and Java are high-level programming languages that share several similarities (as well as many differences). They are both object-oriented languages much influenced by C++. But while C# is suitable for application development in the Microsoft ecosystem from the front, Java is considered best for client-side web applications. Also, while C# has many tools for programming, Java has a larger arsenal of tools to choose from in IDEs and Text Editors.   C# is used for virtual reality projects like games, mobile, and web applications. It is built specifically for Microsoft platforms and several non-Microsoft-based operating systems, like the Mono Project that works with Linux and OS X.  Java is used for creating messaging applications and developing web-based and enterprise-based applications in open-source ecosystems.  Both C# and Java support arrays. However, each language uses them differently. In C#, arrays are a specialization of the system; in Java, they are a direct specialization of the object.   The C# programming language executes on the CLR. The source code is interpreted into bytecode, which is further compiled by the CLR. Java runs on any platform with the assistance of JRE (Java Runtime Environment). The written source code is first compiled into bytecode and then converted into machine code to be executed on a JRE.   C# and C++   Although C# and C++ are both C-based languages with similar code, there are some differences. For one, C# is considered a component-oriented programming language, while C++ is a partial object-oriented language. Also, while both languages are compiled languages, C# compiles to CLR and is interpreted by.NET, but C++ compiles to machine code. The size of binaries in C# is much larger than in C++.  Other differences between the two include the following:  C# gives compiler errors and warnings, but C++ doesn’t support warnings, which may cause damage to the OS. C# runs in a virtual machine for automatic memory management. C++ requires you to manage memory manually. C# can create Windows, .NET, web, desktop, and mobile applications, but not stand-alone apps. C++ can create server-side, stand-alone, and console applications as it can work directly with the hardware. C++ can be used on any platform, while C# is targeted toward Windows OS. Generally, C++ being faster than C#, the former is preferred for applications where performance is essential.    Features of C#  The C# programming language has many features that make it more useful and unique when compared to other languages, including:   Object-oriented language Being object-oriented, C# allows the creation of modular applications and reusable codes, an advantage over C++. As an object-oriented language, C# makes development and maintenance easier when project size grows. It supports all three object-oriented features: data encapsulation, inheritance, interfaces, and polymorphism.  Simplicity C# is a simple language with a structured approach to problem-solving. Unsafe operations, like direct memory manipulation, are not allowed.  Speed The compilation and execution time in C# is very powerful and fast.   A Modern programming language C# programming is used for building scalable and interoperable applications with support for modern features like automatic garbage collection, error handling, debugging, and robust security. It has built-in support for a web service to be invoked from any app running on any platform.  Type-safe Arrays and objects are zero base indexed and bound checked. There is an automatic checking of the overflow of types. The C# type safety instances support robust programming.  Interoperability Language interoperability of C# maximizes code reuse for the efficiency of the development process. C# programs can work upon almost anything as a program can call out any native API.  Consistency Its unified type system enables developers to extend the type system simply and easily for consistent behavior.  Updateable C# is automatically updateable. Its versioning support enables complex frameworks to be developed and evolved.  Component oriented C# supports component-oriented programming through the concepts of properties, methods, events, and attributes for self-contained and self-describing components of functionality for robust and scalable applications.  Structured Programming Language The structured design and modularization in C# break a problem into parts, using functions for easy implementation to solve significant problems.  Rich Library C# has a standard library with many inbuilt functions for easy and fast development.   Prerequisites for Learning C#   Basic knowledge of C or C++ or any programming language or programming fundamentals.   Additionally, the OOP concept makes for a short learning curve of C#.   Advantages of C#   There are many advantages to the C# language that makes it a useful programming language compared to other languages like Java, C, or C++. These include:  Being an object-oriented language, C# allows you to create modular, maintainable applications and reusable codes  Familiar syntax  Easy to develop as it has a rich class of libraries for smooth implementation of functions   Enhanced integration as an application written in .NET will integrate and interpret better when compared to other NET technologies   As C# runs on CLR, it makes it easy to integrate with components written in other languages  It’s safe, with no data loss as there is no type-conversion so that you can write secure codes  The automatic garbage collection keeps the system clean and doesn’t hang it during execution  As your machine has to install the .NET Framework to run C#, it supports cross-platform  Strong memory backup prevents memory leakage   Programming support of the Microsoft ecosystem makes development easy and seamless  Low maintenance cost, as C# can develop iOS, Android, and Windows Phone native apps  The syntax is similar to C, C++, and Java, which makes it easier to learn and work with C#  Useful as it can develop iOS, Android, and Windows Phone native apps with the Xamarin Framework  C# is the most powerful programming language for the .NET Framework  Fast development as C# is open source steered by Microsoft with access to open source projects and tools on Github, and many active communities contributing to the improvement  What Can C Sharp Do for You?  C# can be used to develop a wide range of:  Windows client applications Windows libraries and components Windows services Web applications Native iOS and Android mobile apps Azure cloud applications and services Gaming consoles and gaming systems Video and virtual reality games Interoperability software like SharePoint Enterprise software Backend services and database programs AI and ML applications Distributed applications Hardware-level programming Virus and malware software GUI-based applications IoT devices Blockchain and distributed ledger technology   C# Programming for Beginners: Introduction, Features and Applications By Simplilearn Last updated on Jan 20, 2020674 C# Programming for Beginners As a programmer, you’re motivated to master the most popular languages that will give you an edge in your career. There’s a vast number of programming languages that you can learn, but how do you know which is the most useful? If you know C and C++, do you need to learn C# as well? How similar is C# to Java? Does it become more comfortable for you to learn C# if you already know Java?   Every developer and wannabe programmer asks these types of questions.   So let us explore C# programming: how it evolved as an extension of C and why you need to learn it as a part of the Master’s Program in integrated DevOps for server-side execution.  Are you a web developer or someone interested to build a website? Enroll for the Javascript Certification Training. Check out the course preview now! What is C#? C# is a modern object-oriented programming language developed in 2000 by Anders Hejlsberg, the principal designer and lead architect at Microsoft. It is pronounced as ""C-Sharp,"" inspired by the musical notation “♯” which stands for a note with a slightly higher pitch. As it’s considered an incremental compilation of the C++ language, the name C “sharp” seemed most appropriate. The sharp symbol, however, has been replaced by the keyboard friendly “#” as a suffix to “C” for purposes of programming.  Although the code is very similar to C++, C# is newer and has grown fast with extensive support from Microsoft. The fact that it’s so similar to Java syntactically helps explain why it has emerged as one of the most popular programming languages today.   An Introduction to C# Programming C# is a general-purpose, object-oriented programming language that is structured and easy to learn. It runs on Microsoft’s .Net Framework and can be compiled on a variety of computer platforms. As the syntax is simple and easy to learn, developers familiar with C, C++, or Java have found a comfort zone within C#.  C# is a boon for developers who want to build a wide range of applications on the .NET Framework—Windows applications, Web applications, and Web services—in addition to building mobile apps, Windows Store apps, and enterprise software. It is thus considered a powerful programming language and features in every developer’s cache of tools.  Although first released in 2002, when it was introduced with .NET Framework 1.0, the C# language has evolved a great deal since then. The most recent version is C# 8.0, available in preview as part of Visual Studio. To get access to all of the new language features, you would need to install the latest preview version of .NET Core 3.0.   The C# Environment  You need the .NET Framework and an IDE (integrated development environment) to work with the C# language.  The .NET Framework  The .NET Framework platform of the Windows OS is required to write web and desktop-based applications using not only C# but also Visual Basic and Jscript, as the platform provides language interoperability. Besides, the .Net Framework allows C# to communicate with any of the other common languages, such as C++, Jscript, COBOL, and so on.   IDEs  Microsoft provides various IDEs for C# programming:  Visual Studio 2010 (VS) Visual Studio Express Visual Web Developer Visual Studio Code (VSC) The C# source code files can be written using a basic text editor, like Notepad, and compiled using the command-line compiler of the .NET Framework.   Alternative open-source versions of the .Net Framework can work on other operating systems as well. For instance, the Mono has a C# compiler and runs on several operating systems, including Linux, Mac, Android, BSD, iOS, Windows, Solaris, and UNIX. This brings enhanced development tools to the developer.   As C# is part of the .Net Framework platform, it has access to its enormous library of codes and components, such as Common Language Runtime (CLR), the .Net Framework Class Library, Common Language Specification, Common Type System, Metadata and Assemblies, Windows Forms, ASP.Net and ASP.Net AJAX, Windows Workflow Foundation (WF), Windows Communication Foundation (WCF), and LINQ.  C# and Java  C# and Java are high-level programming languages that share several similarities (as well as many differences). They are both object-oriented languages much influenced by C++. But while C# is suitable for application development in the Microsoft ecosystem from the front, Java is considered best for client-side web applications. Also, while C# has many tools for programming, Java has a larger arsenal of tools to choose from in IDEs and Text Editors.   C# is used for virtual reality projects like games, mobile, and web applications. It is built specifically for Microsoft platforms and several non-Microsoft-based operating systems, like the Mono Project that works with Linux and OS X.  Java is used for creating messaging applications and developing web-based and enterprise-based applications in open-source ecosystems.  Both C# and Java support arrays. However, each language uses them differently. In C#, arrays are a specialization of the system; in Java, they are a direct specialization of the object.   The C# programming language executes on the CLR. The source code is interpreted into bytecode, which is further compiled by the CLR. Java runs on any platform with the assistance of JRE (Java Runtime Environment). The written source code is first compiled into bytecode and then converted into machine code to be executed on a JRE.  C# and C++   Although C# and C++ are both C-based languages with similar code, there are some differences. For one, C# is considered a component-oriented programming language, while C++ is a partial object-oriented language. Also, while both languages are compiled languages, C# compiles to CLR and is interpreted by.NET, but C++ compiles to machine code. The size of binaries in C# is much larger than in C++.  Other differences between the two include the following:  C# gives compiler errors and warnings, but C++ doesn’t support warnings, which may cause damage to the OS. C# runs in a virtual machine for automatic memory management. C++ requires you to manage memory manually. C# can create Windows, .NET, web, desktop, and mobile applications, but not stand-alone apps. C++ can create server-side, stand-alone, and console applications as it can work directly with the hardware. C++ can be used on any platform, while C# is targeted toward Windows OS. Generally, C++ being faster than C#, the former is preferred for applications where performance is essential.  Features of C# The C# programming language has many features that make it more useful and unique when compared to other languages, including:  Object-oriented language Being object-oriented, C# allows the creation of modular applications and reusable codes, an advantage over C++. As an object-oriented language, C# makes development and maintenance easier when project size grows. It supports all three object-oriented features: data encapsulation, inheritance, interfaces, and polymorphism.  Simplicity C# is a simple language with a structured approach to problem-solving. Unsafe operations, like direct memory manipulation, are not allowed.  Speed The compilation and execution time in C# is very powerful and fast.   A Modern programming language C# programming is used for building scalable and interoperable applications with support for modern features like automatic garbage collection, error handling, debugging, and robust security. It has built-in support for a web service to be invoked from any app running on any platform.  Type-safe Arrays and objects are zero base indexed and bound checked. There is an automatic checking of the overflow of types. The C# type safety instances support robust programming.  Interoperability Language interoperability of C# maximizes code reuse for the efficiency of the development process. C# programs can work upon almost anything as a program can call out any native API.  Consistency Its unified type system enables developers to extend the type system simply and easily for consistent behavior.  Updateable C# is automatically updateable. Its versioning support enables complex frameworks to be developed and evolved.  Component oriented C# supports component-oriented programming through the concepts of properties, methods, events, and attributes for self-contained and self-describing components of functionality for robust and scalable applications.  Structured Programming Language The structured design and modularization in C# break a problem into parts, using functions for easy implementation to solve significant problems.  Rich Library C# has a standard library with many inbuilt functions for easy and fast development.  Full Stack Java Developer Course The Gateway to Master Web DevelopmentEXPLORE COURSEFull Stack Java Developer Course Prerequisites for Learning C#  Basic knowledge of C or C++ or any programming language or programming fundamentals.  Additionally, the OOP concept makes for a short learning curve of C#. Advantages of C#  There are many advantages to the C# language that makes it a useful programming language compared to other languages like Java, C, or C++. These include:  Being an object-oriented language, C# allows you to create modular, maintainable applications and reusable codes Familiar syntax Easy to develop as it has a rich class of libraries for smooth implementation of functions  Enhanced integration as an application written in .NET will integrate and interpret better when compared to other NET technologies  As C# runs on CLR, it makes it easy to integrate with components written in other languages It’s safe, with no data loss as there is no type-conversion so that you can write secure codes The automatic garbage collection keeps the system clean and doesn’t hang it during execution As your machine has to install the .NET Framework to run C#, it supports cross-platform Strong memory backup prevents memory leakage  Programming support of the Microsoft ecosystem makes development easy and seamless Low maintenance cost, as C# can develop iOS, Android, and Windows Phone native apps The syntax is similar to C, C++, and Java, which makes it easier to learn and work with C# Useful as it can develop iOS, Android, and Windows Phone native apps with the Xamarin Framework C# is the most powerful programming language for the .NET Framework Fast development as C# is open source steered by Microsoft with access to open source projects and tools on Github, and many active communities contributing to the improvement What Can C Sharp Do for You? C# can be used to develop a wide range of:  Windows client applications Windows libraries and components Windows services Web applications Native iOS and Android mobile apps Azure cloud applications and services Gaming consoles and gaming systems Video and virtual reality games Interoperability software like SharePoint Enterprise software Backend services and database programs AI and ML applications Distributed applications Hardware-level programming Virus and malware software GUI-based applications IoT devices Blockchain and distributed ledger technology   Who Should Learn the C# Programming Language and Why?  C# is one of the most popular programming languages as it can be used for a variety of applications: mobile apps, game development, and enterprise software. What’s more, the C# 8.0 version is packed with several new features and enhancements to the C# language that can change the way developers write their C# code. The most important new features available are ‘null reference types,’ enhanced ‘pattern matching,’ and ‘async streams’ that help you to write more reliable and readable code.   As you’re exposed to the fundamental programming concepts of C# in this course, you can work on projects that open the doors for you as a Full Stack Java Developer. So, upskill and master the C# language for a faster career trajectory and salary scope.",,1
225,https://github.com/kathleenwest/WebAPIBasicAuthenticationDemo.git,"This project presents a Visual Studio solution including a simple demo ASP.Net Web API Basic Authentication Service Application and a “Tester” Client (Windows Form Application) that allows the user to test the Web API with CRUD operations (GET, POST, PUT, DELETE) that service design requires authentication (except the Get). In addition to demonstrating standard CRUD capabilities, the Web API service implements a .Net Memory Cache (MemoryCache) and custom username and password validator. Passwords are stored securely using Password-Based Key Derivation Function PBKD cryptology. The client “tester” windows form application is not intended as a UX/UI demo but used to test and verify that the backend authentication service allows the user to register with a username and password and verify the Web API CRUD functions based on basic authentication scheme. Lastly, the project is shown in the demo section with a video and screen captures. Note: Every Web API Authentication service should use secure transport. For brevity, this demo project does not implement or discuss the complicated detail nature of SSL/TLS.","csharp,webapi,web-api,authentication,authenticator,message-handler,crud,crud-application,registration,username-password,cryptology,pbdk,basic-authentication,memorycache,asp-net-web-api,csharp-code,credential-storage,credential-registry,credential-management-api,credential-manager",1
226,https://github.com/jclopena/python-down-server.git,"{""slowdeath - a simple denial of service attack for most PHP-based servers The problem with Apache's approach to dealing with multiple clients, is that there's only ever a limited amount of Client processes available. This is usually is around a few hundred on common webservers.  Because of this, it becomes necessary to handle HTTP requests as quickly as possible. As soon as a request is handled, it can go on serving the next. If a client happens to have a slow connection, this can have a direct effect on the scalability of your frontend server.  A common way to fight this, is to put a caching server in front of your webserver, such as Varnish or Squid. These webservers are better suited to deal with many clients. This will allow your Apache server to send back HTTP responses quickly to the reverse proxy, and let the proxy deal with sending back the response to the client.  However, this doesn't deal with slow requests. Generally, these proxy servers will open connections directly to the backend webserver to avoid having to buffer larger request bodies.  Because PHP installations generally use apache 'prefork mpm', the number of possible connections is considerably low. This is also often the case with Fast-CGI based webservers, such as nginx and lighttpd. So if you were to just able to open up a few hundred connections, and drip in the bytes for the request body it would be very easy to take these servers down.  To test this theory, I wrote a simple python script that does exactly this, you can grab it from github. To use it, try something like this:   python slowdeath.py --threads 200 http://localhost/  In my case my webserver was limited to 150 connections. It took about a second for it to stop serving requests.  Big warning: This tool is for research purposes only. Use at your own risk, and only on servers you own.""}",,1
227,https://github.com/yogeshthiru/LOCALIZED-CAR-MECHANIC-FINDER-USING-JAX-WS-WITH-J2EE-AND-ASP.NET.git,"In our day to day life everything is made online and makes the people to use it to ease and save their time. This project focuses on the major problem which is faced by people that is to get a car repaired. It’s a herculean task but when it is in our hand it will make it easy. Our project abbreviated as LCMF, it aims to provide a localized car mechanics from your area where your car has stopped abruptly or you can abide the services from your home In this the online localized car-mechanic finder .jax-ws is used to receive the request send by the users to the mechanics over Http. This uses XML as backend and DOM parser is used to store the data.",,1
228,https://github.com/AgaPiotrowska/MP-Action-Photo-www.git,"This is a React powered, 100% serverless professional photographer website with built-in login page and API for the owner to upload photos and blog posts. Frontend stack is: React, React-Router, Redux, SASS and some external libraries (photo gallery, image compressor, text editor). AWS architecutre: react application is stored in S3 and served behind CloudFront (SSL/TLS enabled). Route53 is used as DNS. Albums and photos information are stored in DynamoDB. and actual photos files are stored in S3. Backend server is working on API Gateway connected to Lamba functions. Authentication service for Admin Panel is AWS Cognito (JWT).","react,router,redux,rwd,sass,api,reactphotogallery,reactsnapshot,reactslick,cookie",1
229,https://github.com/drashti93/Back_To_Work.git,"Back to work is a project developed during a Hackathon organised by VMware called codehouse. It is a platform for women who wanted to come back to work after a break like maternity leaves. This platform would help them apply for jobs around their chosen category and take advantage of a pre-defined educating program with virtual trainings to help them brush up their skills before they get back to work.  The project was called ""Winkedin"" with the name inspired from linkedin. The solution was developed using reactjs for frontend, nodejs for backend, mongodb as our database, twilio for messaging service to allow recruiters/candidates to get in touch with each other. The entire application was deployed on kubernetes.",,1
230,https://github.com/Nikita-Negi/Diabetes-Prediction-Framework-using-Two-level-Classification-Process.git,"Diabetes Mellitus is popularly known as one of the top most ailment with highest kill rate. Currently, there are more than 465 million patients worldwide suffering from this disease, majority of which fall under the type 2 diabetic status. India can be labelled the diabetic capital of the world with the second largest population of diabetic patients. Diabetes has a very high mortality rate due to the fact that majority of the patients do not get their diagnosis in time. In fact, one of two diabetes patients realize the status of their disease a little too late. This delay in diagnosis can be caused by one or more of the factors such as lack of information about the disease, cumbersome and time-consuming diagnosis procedure, lack of funds for diagnosis and low reliability of some doctors. With this project, the aim is to build a web application that can provide end-to-end service for such patients. This application ensures high accuracy of prediction, is free of charge and easily accessible over the internet at all times. Diabetex application will not only predict whether a patient has diabetes, but also give them a detailed report of the diagnosis, educate them about diabetes, help them get in touch with doctors for treatment, give feedback about the application etc. The backend of the application is built on the UCI’s PIDD (Pima Indian Diabetes Database) and uses Python, SQL, PHP, Flask and HTML5 as its base technology. The classifier is a special two-level system where various classifiers at level one is assigned weightage and fed into the ensemble classifier at level two to increase accuracy and mimic real-life diagnosis environment. This system is compared to various other approaches for novelty and better results.",,1
231,https://github.com/iosninja89121/iOS-Social-Sharing-App.git,"This project has been developped during 2014, and is originally a social network for Luxembourg, my home country. It has been published in August 2014 under the name of Netzwierk (http://www.netzwierk.lu), meaning ""Network"" in luxembourgish. After a certain number of enhancements and updates, we have decided to make the source code available to other developers, so that they can create their own social network. Social Network created: 05/20/2015 latest update: 06/04/2015 by: Eric Schanet () email: eric@netzwierk.lu (mailto:eric@netzwierk.lu) Congratulations for purchasing the Social Network project. This documentation guides you through the setup and explains, step by step, the basics of the code, so that you can modify and customise it easily. Table of Contents Copyright Eric Schanet 2015 made with the Documenter v2.0 (http://rxa.li/documenter) Start PRELIMINARIES FIRST STEPS CLASSES LOCALIZATION The project uses Parse (http://www.parse.com) as backend - a service that lets you host your data and essentially spares you of the whole server-side programmation, you don\'t need to write a single line of server-side code (PHP, etc.). This is a huge advantage, because you, as a developer, can completely focus on creating a wonderful user interface and experience, without having to think much about data modelling - you send your data to parse, and they store it for you. Fortunately, Parse has a great free plan, where you can store 20GB of files, 20GB of database and even transfer 1TB of data - for free! This means you have enough space for your users and don\'t need to host expensive servers. Additionally, Parse offers a Push Notification service (which is really cool for a social network). Concerning the login, we also make use of the Facebook SDK (https://developers.facebook.com/docs/ios), because we do not only offer a classic username/password login, but also a Facebook login via Facebook button. For the Messenger in our social network, we decided to use Firebase (http://www.firebase.com) alongside with Parse. Roughly, we store the messages on Firebase but the proper chatrooms on Parse. This has some very good reasons, it reduces the latency of the messenger and allows us to integrate read and delivered receipts.",,1
232,https://github.com/fshahnewaz/Opend.git,"OpenD OpenD\xa0solution is an artificial intelligent information assistant Chat Bot for open data users. OpenD creates a behavioral profile of the open data users, learns about user data uses, then provides an intelligent and meaningful insight into the data other than just working as a data analytical tool. It uses our artificial neural network and machine learning engine to analyze, learn about the pattern of the data and provide intelligent information.  In OpenD user can view the data, analyze the data summary and most importantly get an intelligent information about the data. SmallBeez working on releasing first Beta 1.0 web and mobile application. The application service accesses open data repositories of your interest and performs predictive analysis of the data. Currently our app is using open data repositories from online Government open data repositories and CKAN open data repositories. Using machine learning experiment on data, our AI engine tries to understand the pattern of requested data and data uses, later provides intelligent insight into the data. It enables the students, professionals to open data sources for free and make it more useful.   OpenD System Architecture Technology Stack:\xa0OpenD has both simple, lightweight mobile and web app. The UI dashboard helps you to easily interact with the data and apply into your work needs. Data are represented using simple graphs, table and charts. It also has the Geographic Information System (GIS) tool embedded to get a clear understanding mapping and localization information. OpenD is powerful web and mobile application but with simple and lightweight UI. OpenD uses CKAN data repository access APIs, custom SmallBeez algorithm for intelligent solutions and provides user the right information. The powerful engine of OpenD data access and viewer, machine learning, predictive analysis are built upon the building blocks of data driven science. The data science incorporated with web and mobile application provides users a robust and handy tool to interact with the data. For backend data processing and application support, OpenD is leveraging powerful cloud computing of platform Amazon Web Services (AWS) and Azure Cloud as Platform as-a Service (PaaS).",,1
233,https://github.com/StevenSJones/expressNoteTakerNinthEdition.git,"{""# Unit 11 Express Homework: Note Taker  ## Description  Create an application that can be used to write, save, and delete notes. This application will use an express backend and save and retrieve note data from a JSON file.  * The application frontend has already been created, it's your job to build the backend and connect the two.  * The following HTML routes should be created:    * GET `/notes` - Should return the `notes.html` file.    * GET `*` - Should return the `index.html` file  * The application should have a `db.json` file on the backend that will be used to store and retrieve notes using the `fs` module.  * The following API routes should be created:    * GET `/api/notes` - Should read the `db.json` file and return all saved notes as JSON.    * POST `/api/notes` - Should receive a new note to save on the request body, add it to the `db.json` file, and then return the new note to the client.    * DELETE `/api/notes/:id` - Should receive a query parameter containing the id of a note to delete. This means you'll need to find a way to give each note a unique `id` when it's saved. In order to delete a note, you'll need to read all notes from the `db.json` file, remove the note with the given `id` property, and then rewrite the notes to the `db.json` file.  ## User Story  AS A user, I want to be able to write and save notes  I WANT to be able to delete notes I've written before  SO THAT I can organize my thoughts and keep track of tasks I need to complete  ## Business Context  For users that need to keep track of a lot of information, it's easy to forget or be unable to recall something important. Being able to take persistent notes allows users to have written information available when needed.  ## Acceptance Criteria  Application should allow users to create and save notes.  Application should allow users to view previously saved notes.  Application should allow users to delete previously saved notes.  ## Deploying the App  You will not be able to deploy your server side code on GitHub pages. This app should be deployed on Heroku. Carefully follow the [Heroku Guide](../04-Supplemental/HerokuGuide.md) for getting your app deployed on Heroku.  - - -  ## Commit Early and Often  One of the most important skills to master as a web developer is version control. Building the habit of committing via Git is important for two reasons:  * Your commit history is a signal to employers that you are actively working on projects and learning new skills.  * Your commit history allows you to revert your codebase in the event that you need to return to a previous state.  Follow these guidelines for committing:  * Make single-purpose commits for related changes to ensure a clean, manageable history. If you are fixing two issues, make two commits.  * Write descriptive, meaningful commit messages so that you and anyone else looking at your repository can easily understand its history.  * Don't commit half-done work, for the sake of your collaborators (and your future self!).  * Test your application before you commit to ensure functionality at every step in the development process.  We would like you to have well over 200 commits by graduation, so commit early and often!  ## Submission on BCS  You are required to submit the following:  * The URL of the deployed application. This should be the link to the url provided by Heroku. Be sure not to submit a link to the Heroku dashboard.  * The URL of the GitHub repository  - - - © 2019 Trilogy Education Services, a 2U, Inc. brand. All Rights Reserved.""}",,1
234,https://github.com/lmn0/pyCloud.git,"Python as a Service. Backend: K8s, Docker ",,0
235,https://github.com/paulinar/chat-client.git,A chat application for Android using Parse backend-as-a-service.,,0
236,https://github.com/neraunzaran/Google-Apps-Script-HTML-Service-Dashboard.git,Google Apps script data dashboard with Google sheet as a backend using HTML service,,0
237,https://github.com/bangomc/xy-inc.git,Backend as a Service,,0
238,https://github.com/tupskey/node-js-and-mongoose.git,backend as a service,,0
239,https://github.com/jgmize/badonkadonk.git,Backend as a service,,0
240,https://github.com/thinkInbit/BAAs.git,backend as a service,,0
241,https://github.com/fleith/xy-inc.git,Backend as a service,,0
242,https://github.com/MariSpirandelli/xy-inc.git,Backend as a Service,,0
243,https://github.com/Native-Intelligence/NIS.git,Backend As A Services,,0
244,https://github.com/mourao666/xy-inc.git,Backend as a Service,,0
245,https://github.com/humbertoc-silva/xy-inc-node.git,Backend as a Service,,0
246,https://github.com/hackberry-gh/actn.io.git,Backend as a service,,0
247,https://github.com/kibi1024/Baas.git,Backend as a service,,0
248,https://github.com/EssamTarik/BAAS.git,Backend as a service,,0
249,https://github.com/thyagoluciano/xy-inc.git,Nodejs Backend as a service,"nodejs,api,docker,baas,loadbalancer-api,mongodb,mongoose,redis",0
250,https://github.com/nathanialf/aaas_backend.git,API-as-a-Service backend,,0
251,https://github.com/lukelex/apitie-engine.git,Backend As A Service engine,,0
252,https://github.com/laxmansahni/ParseTutorial.git, Parse backend as a service,,0
253,https://github.com/balramcheryala/BridgeMBAAS.git,Mobile Backend As A Service,,0
254,https://github.com/SurendraVidiyala/loopback-server.git,Backend as a Service (BaaS),"loopback,loopback-mixin,slc-loopback,strongloop,baas,backend-as-a-service",0
255,https://github.com/Esnoan/platform-backend.git,Backend Blockchain as a Service,,0
256,https://github.com/Cloud2nd/LBaaS.git,LMS Backend as a Service,,0
257,https://github.com/12Tech/reen.git,Reen - Backend as a Service,"backend,go,golang",0
258,https://github.com/marketingAsAService/maasBackend.git,Marketing as a Service Backend,,0
259,https://github.com/vrz-champions/wordbaas.git,WordPress as Middleware & Backend As A Service,,0
260,https://github.com/michael-kehoe/naas-backend.git,Naas (Notifications as a Service) - Backend Service,,0
261,https://github.com/arthurxavier/internship_point.git,A simple backend as a service,,0
262,https://github.com/zhy819/BaasJam.git,BaasJam is a backend-as-a-service,,0
263,https://github.com/mshull/lure.git,Lure: A BaaS (Backend as a Service),,0
264,https://github.com/SaahilClaypool/BookyAPI.git,A bookmark-as-a-service backend,,0
265,https://github.com/SteveSteglitz/core2-webapi-microservices.git,A multi tier application with ASP.NET Core WebAPI as frontend server and WebAPI service layer and Entity Framework as backend server,,0
266,https://github.com/Hongqin-Li/openbaas.git,Open-source Backend as a Service,,0
267,https://github.com/gabriel-lima/bondbaas-inc.git,Backend as a Service written in Go,"go,postgres,docker",0
268,https://github.com/favourjuwe/cloud.git,Mobile Cloud  Backend As a Service,,0
269,https://github.com/mleers/DjangoRestfulService.git,Django backend serving as a RESTful service,,0
270,https://github.com/Hongqin-Li/openbaas.git,Open-source Backend as a Service,,0
271,https://github.com/singlestone/baas-prototyope.git,Backend as a Service Evaluation and Prototyping,,0
272,https://github.com/tpbadger/bedpacker.git,Backend for bedpack as a service,,0
273,https://github.com/gabriel-lima/bondbaas-inc.git,Backend as a Service written in Go,"go,postgres,docker",0
274,https://github.com/swifty-tim/TBMBaaSKit.git,Mobile Backend as a Service Kit,,0
275,https://github.com/step4/parse4.git,Backend-as-a-Service based on Parse,,0
276,https://github.com/matipacheco/maas-backend.git,Monitoring as a Service Backend API,,0
277,https://github.com/arturebrandao/estantepb.git,Projeto da Disciplina Backend as a Service,,0
278,https://github.com/utkukaynar/kolaymobil.git,Mobile App Backend As A Service. ,,0
279,https://github.com/open-baas/openbaas.git,The open source Backend as a Service,,0
280,https://github.com/leonardodelfino/xy-inc.git,xy-inc - Backend as a Service,,0
281,https://github.com/swifty-tim/MBaasKitTest.git,Mobile Backend as a Service Test Project,"swift-3,xcode,cocoapods",0
282,https://github.com/prasannakapate/parse-angularjs-todo-app.git,"ionic framework , parse as a backend service",,0
283,https://github.com/knetikcloud/knetikcloud.git,KnetikCloud - The complete backend-as-a-service. ,,0
284,https://github.com/ferflores/js-firebase-workshop.git,Workshop about javascript with firebase as Backend as a Service,,0
285,https://github.com/madforre/Google-Firebase.git,BaaS(Backend as a Service) or PaaS(Platform as a Service),,0
286,https://github.com/JockeRille/baas_implementations.git,Code base to a Backend-as-a-Service study,,0
287,https://github.com/ymekuria/sift.git, A backend-as-a-service application for frontend developers,,0
288,https://github.com/HamdiBoumaiza/Callmni.git,A chat application using Firebase as a backend service,"android,android-application,firebase,firebase-database,firebase-auth,firebase-storage,kotlin,kotlin-android,chat,chat-application",0
289,https://github.com/freesewing/saas-backend.git,Example of a backend providing FreeSewing patterns as a service,,0
290,https://github.com/AckeeFramework/AckeeFramework-PHP.git,Backend as a Service (BaaS) for mobile applications in PHP.,,0
291,https://github.com/nyolamike/honeybees.git,An open source hosted backend as a service platform,,0
292,https://github.com/Monicafgz/laravelApiService.git,Backend API service using Laravel as a framework,,0
293,https://github.com/danwdart/arsebeatfish.git,"Backend as a service, API for SPAs, etc.",,0
294,https://github.com/synteny/faas.git,factorial-as-a-service: demo backend in scala,,0
295,https://github.com/shuperry/koa2-starterkit-api.git,Backend as a service(BaaS) platform v2.0,,0
296,https://github.com/Shankar0130/LaundryShop.git,A full fledged laundry service app with Firebase as backend,,0
297,https://github.com/hugtechio/alexa-web-service-kit.git,Easy deployment Alexa Backend as a web service,,0
298,https://github.com/ahmed-mohamed-eng/souq_replica.git,Tring replicating souq backend services as a prove in concept,,0
299,https://github.com/bbernovici/carpoolbackend.git,Backend for Corporate Carpooling As A Service project.,,0
300,https://github.com/lvoinea/recipicon-backend.git,A REST service acting as backend for the Recipicon app,,0
301,https://github.com/kevin-grylls/Simple-Backend-with-Rest-API-and-PostgreSQL.git,A Simple Backend Service as one of MSA Web App,,0
302,https://github.com/jifvaas/backend.git,Jim is fan van as a service backend,hacktoberfest,0
303,https://github.com/ahmed-mohamed-eng/souq_replica.git,Tring replicating souq backend services as a prove in concept,,0
304,https://github.com/tyogautomo/golang-forfuture.git,Learning deeper about Golang as a Backend Services,,0
305,https://github.com/bbernovici/carpoolbackend.git,Backend for Corporate Carpooling As A Service project.,,0
306,https://github.com/mananchawla2005/multilang-paas.git,Backend for my project on platform as a service!,,0
307,https://github.com/rabiddroid/movie-links.git,rest service as a backend to support movie-links app,,0
308,https://github.com/alpha-i/service-prediction-api.git,Backend for our PaaS – Prediction As A Service,,0
309,https://github.com/mahmoudElhawary/egyptdailylifeshopping.git,springboot restfull web service as a backend hibernate JPA mysql,,0
310,https://github.com/kevin-grylls/Simple-Backend-with-GraphQL-and-Mongo.git,A Simple Backend Service as one of MSA Web App,,0
311,https://github.com/petemak/survey-server.git,Service for running surveys. Serves as a backend for surveyor,,0
312,https://github.com/jacobsologub/baaskit.node.git,Backend as a Service Kit for Node.js,,0
313,https://github.com/Shankar0130/FireBaseFileUploader.git,Firebase as a backend service to upload files in app,,0
314,https://github.com/brainsum/smartceps_cms.git,"Drupal CMS backend for Smartceps, as a service",,0
315,https://github.com/digitaldelirium/MacsFunctions.git,"{""Backend Functions-as-a-Service for Mac's Camping Area""}",,0
316,https://github.com/clemencegoh/paas_manager_flask.git,Flask implementation of simple platform as a service backend challenge,,0
317,https://github.com/TalissonJunior/wibase-api.git,"A backend as service application for wibase, writting in Nodejs","nodejs,typescript,baas",0
318,https://github.com/navsmb/bool-io.git,Booleans-as-a-Service Backend (devop skill challenge),,0
319,https://github.com/rashanjyot/FlashcardGame.git,Android + Serverless backend (Mongo Stitch for DB as a service),,0
320,https://github.com/gladyscodes/pandafeed-api.git,Backend of Pandafeed 🐼  Feedback as a service for your products 📣,hacktoberfest,0
321,https://github.com/tangrui/cinestrip.git,Backend as a service(BaaS) platform powered by GraphQL.,,0
322,https://github.com/mesosfer/Mesosfer-Long-Polling-Chat.git,Long Polling Chat using Mesosfer Backend as a Service,,0
323,https://github.com/szlaci83/ocr-service.git,OCR as a backend REST service leveraging Tesseract,,0
324,https://github.com/dusansimic/maker-panel-backend-mysql.git,Maker Panel backend service that uses MySQL as a database.,,0
325,https://github.com/sergtitov/baas.guide.git,Your guide to backend-as-a-service solutions.,,0
326,https://github.com/jacobsologub/baaskit.ios.git,Backend as a Service Kit iOS Client Library,,0
327,https://github.com/Tran-Phillip/DegenChat.git,A simple web chatting service using React as a frontend and Go as a backend. ,,0
328,https://github.com/Adiomojeed/react-firebase.git,A react application using Google Firebase Backend-as-a-Service (BaaS) for the backend,,0
329,https://github.com/palexis3/ChatApplication.git,A simple android chat application that utilizes Parse as a backend-as-a-service,,0
330,https://github.com/kharisma-wardhana/FoodApp.git,Learn NextJS as a frontend and Strapi + GraphQL as a backend services,,0
331,https://github.com/Gundulin/Qwitter.git,Twitter knockoff that uses Amazon Web Services as a backend and Android Studio as a frontend,,0
332,https://github.com/pastranastevenaz/microblogservice.git,A backend CRUD service built with python for use as a microblogging service,,0
333,https://github.com/arkjinli/hello_template.git,A minimal web service based on flask as backend and react as frontend.,,0
334,https://github.com/allthingsclowd/two_consul_clusters_one_vault.git,An example node with Vault installed with multiple Consul Clusters. One Consul Cluster is dedicated as a Vault Storage Backend and the other Consul Cluster is used for Service Discovery and KeyValue Storage Services.,,0
335,https://github.com/lmn0/PAWN.git,Daas: Deployment as a Service using Docker and K8s as backend,,0
336,https://github.com/eshnil2000/Jquery-Mobile-Apigee.git,"Chore management app built using Jquery mobile, Apigee as backend as a service",,0
337,https://github.com/pritamvidhate/CRUD.git,CRUD application using React as a frontend and Node.js-Express server as a backend with MySQL as database service.,,0
338,https://github.com/tejvi-m/rideshare_DBaaS.git,backend for a ride sharing app with a custom DBaaS (database as a service),,0
339,https://github.com/sureshsarda/baas.git,A backend as a service framework that gives a headstart on most of your projects,,0
340,https://github.com/roncodes/ember-laravel-backend.git,A laravel backend setup to serve as a RESTful service for ember application w/ RESTAdapter,,0
341,https://github.com/mamersfo/playtomic.git,"A RESTful service created with Play Framework, using Datomic as a storage backend",,0
342,https://github.com/ra-uk/graphql-service.git,"A real-time GraphQL backend as a service for Crash Reports, Feedback, Help Center and more.",,0
343,https://github.com/hernandezrivera/rw-figures-widget.git,Page displaying a widget with figures from RW Crises as a Service Backend,,0
344,https://github.com/fabrice126/react_apollo_test.git,Trying to create an app with React + Apollo and GraphCool (a GraphQL backend as a service),,0
345,https://github.com/runningfun/RestfulService.git,"Initial commit, this service should include a chat as a backend for an AngularJS application",,0
346,https://github.com/francis584/GoBarber.git,Backend - Software as a Service to provide a scheduling between barbers and clients.,"nodejs,jwt,nodemailer,postgresql,sequelize,mongodb,sentry,yup,bee-queue",0
347,https://github.com/srikanth209/Todo.git,A simple to-do app with React and Firebase as a Backend service.,,0
348,https://github.com/HuangStanley050/stunning-palm-tree.git,Using Strapi as a backend service for a small book mark project,,0
349,https://github.com/rwth-acis/sensor-proxy-service.git,A las2peer service that serves as a backend for the tech4comp wearables application.,,0
350,https://github.com/MarioFronza/saas-architecture-backend.git,:small_red_triangle: Backend of a software as a service using AdonisJs,"adonis,node,backend",0
351,https://github.com/Alabs02/mongodb_tutorial.git,A simple nodejs app built with mongo db as a backend service . ,,0
352,https://github.com/Trireir/guesser-result-middleware.git,Middleware for guesser-result that connects the app with a backend as a service,,0
353,https://github.com/anaerobeth/SimpleChat.git,A simple chat application in Android using Parse backend-as-a-service,,0
354,https://github.com/29nikita/minigram.git,A photo gallery web app created using ReactJS and used firebase as a service for backend.,,0
355,https://github.com/abhishek70/ChitChat.git,A simple chat application in Android using Parse backend-as-a-service. ,,0
356,https://github.com/saisiddharth96/Login-Screen-using-Redux-and-Firebase.git,"A beautiful looking Login Screen made with React-Native, Redux and Firebase as a backend service.",,0
357,https://github.com/leykun10/basic_flutter_chat_app.git,a basic messaging app written in flutter and integrated with firebase SDK as a backend service.,,0
358,https://github.com/Gaminpad/Gaminpad-backend.git,Gaminpad is a Backend as a Service platform for Game developers.,,0
359,https://github.com/staxgr/mmbaas.git,Provides a minimal backend as a service for mobile. For rapid apps prototyping.,,0
360,https://github.com/Kash15if/todo-vue.git,A simple CRUD based app using vue.js html css and firebase as a backend service,"vuejs,html,css,firebase-realtime-database,todoapp,todo-app-in-vue,crud-application",0
361,https://github.com/saisiddharth96/Login-Screen-using-Redux-and-Firebase.git,"A beautiful looking Login Screen made with React-Native, Redux and Firebase as a backend service.",,0
362,https://github.com/leykun10/basic_flutter_chat_app.git,a basic messaging app written in flutter and integrated with firebase SDK as a backend service.,,0
363,https://github.com/robertop/rp-angular-poll.git,A small polling (survey) application that leverages Angular JS and Firebase Backend As A Service,,0
364,https://github.com/lingxueli/Prediction-Restful-Web-Service-as-HTTPServlet.git,A Rest web service implemented as a HTTPServlet with 2 backend JavaBeans in support.,,0
365,https://github.com/lingxueli/Predictions-Rest-Web-Service.git,A Rest web service implemented as a JSP script with 2 backend JavaBeans in support.,,0
366,https://github.com/karthikk9828/ContactsMBAAS.git,A simple contacts application which uses Mobile Backend As A Service.,,0
367,https://github.com/abhishek70/ChitChat.git,A simple chat application in Android using Parse backend-as-a-service. ,,0
368,https://github.com/manunio/image-service.git,image-service is a microservice which is one of many such services as a part of ecommerce backend. ,,0
369,https://github.com/manunio/product-service.git,product-service is a microservice which is one of many such services as a part of ecommerce backend.,,0
370,https://github.com/snmuppa/ninjato.git,A .NET Core Micro-Services project which leverages RabbitMQ as a service bus and MongoDB for the backend.,,0
371,https://github.com/LucWag92/django_react_music_controller.git,Project with django as backend service which integrates a React frontend. Connection to Spotify to work as a music controller.,,0
372,https://github.com/raintank/graphite-web-proxy.git,Small proxy service to allow running graphite-web locally with a GrafanaCloud hostedMetrics service as a backend,,0
373,https://github.com/nyan-matt/react-amplified.git,aws-amplify backend as a service - graphql todo app -> https://docs.aws.amazon.com/amplify/latest/userguide/deploy-backend.html,,0
374,https://github.com/FihlaTV/freelance-services-marketplace-distributed-system.git,"{""This web application is a prototype of Freelancer web application. It's a distributed service oriented application using Apache Kafka. The backend database is developed on MongoDB with Passport.js as authentication middleware.""}",,0
375,https://github.com/Eemelinen/Questionaire.git,Questionaire backend done as a Haaga-Helia group project. Restfull-service for questionaire backend using Java Spring Boot.,,0
376,https://github.com/JungleCatSoftware/puppet-webproxy.git,Puppet module to configure Nginx as a proxy to backend services,,0
377,https://github.com/shunabcd/FirebaseSocialLoginSample-swift.git,"This Sample code implements SocialLogin(Email,Google+) by using FireBase(Mobile Backend as a Service).","swift-3,firebase-database,firebase-authentication,xcode,ios",0
378,https://github.com/mesosfer/Mesosfer-Cubeacon-iOS.git,Manage iBeacon scanning using Cubeacon SDK and Mesosfer Backend as a Service,,0
379,https://github.com/anazri/stash.git,"Backend-as-a-Service for user authentication, database management and file storage",,0
380,https://github.com/kishorsubedi/ParseChat.git,"{""It's a chat service powered by MongoDB and Parse as backend.""}",,0
381,https://github.com/vaibssingh/cloud-tweet-archival-system.git,Using Google App Engine as backend to run a tweet archival service,,0
382,https://github.com/lain-m21/rusty-serving.git,Rust frontend + ONNX Runtime backend to serve ML predictor as a service.,,0
383,https://github.com/ysolomon/sample-backend.git,Sample-Backend project serves as a template for an database wrapper service.,,0
384,https://github.com/traviolus/cloud-com-final-project-backend.git,Backend system for the Printer-as-a-Service (PaaS) application. Written in Python & Django.,,0
385,https://github.com/leoudimg/xy-inc-2.git,Projeto de uma API que funciona como um Backend as a Service,,0
386,https://github.com/Screech129/Lunch-and-Learn.git,Lunch Learn on creating a Xamarin Forms app with Azure Mobile Services as Backend,,0
387,https://github.com/abulasar4all/angular-jwt-implentation.git,Implementation of Angular 1 jwt authentication using Node & Express as a backend service. ,,0
388,https://github.com/alash3al/baasify.git,Backend as a service based on parse-server with multi-apps feature,"parse-server,multi-tenant,multi-apps,redis",0
389,https://github.com/nk1tz/graphql-todo-app.git,a playground todo app using graph cool backend as service with apollo-client front end.,,0
390,https://github.com/lain-m21/rusty-serving.git,Rust frontend + ONNX Runtime backend to serve ML predictor as a service.,,0
391,https://github.com/vaibssingh/cloud-tweet-archival-system.git,Using Google App Engine as backend to run a tweet archival service,,0
392,https://github.com/ysolomon/sample-backend.git,Sample-Backend project serves as a template for an database wrapper service.,,0
393,https://github.com/traviolus/cloud-com-final-project-backend.git,Backend system for the Printer-as-a-Service (PaaS) application. Written in Python & Django.,,0
394,https://github.com/sema/reliable-email.git,E-mail queue as-a-service with multiple backends and strong guarantees (coding challenge),,0
395,https://github.com/shurab/rhoconnect-ffcrm-sample.git,Sample RhoConnect (JavaScript/Ruby) and Rhodes application that uses Fat Free CRM as a backend service. ,,0
396,https://github.com/oakkub/firebase-chat-android-app.git,A chat android application that use firebase as backend service to handle real time database.,,0
397,https://github.com/DroidSoul/SimpleChat.git,playing with how to store and retrieve data from the Parse backend-as-a-service,,0
398,https://github.com/hussfelt/awesome-api-first-saas.git,😎 Curated list of awesome api first SaaS or backend as a service,,0
399,https://github.com/undefined-nmd/undefined-baas.git,undefined Backend As A Service  | New Media Development | Artevelde University of Applied Sciences,,0
400,https://github.com/AndrewMcClelland/CarRentals.git,"Web application with backend database to serve as a Car rental service for Kingston, Ontario.","php,html,css3,sql,mysql",0
401,https://github.com/vince-nyanga/taskmanager-firebase.git,A simple task management android application using firebase as the backend service.,,0
402,https://github.com/kksrini89/Angular-Apollo.git,This app demonstrates angular app connectivity with GraphQL API - GraphCool Backend as a service (Baas),,0
403,https://github.com/s3f4/languous.git,languous is a word saving app and website that uses react and golang as backend service.,"react,reactjs,golang,react-native,mysql",0
404,https://github.com/thejavator/mobaas.git,Mobile backend as a service to help deliver mobile application UI in server side.,"mobile,backend-services,ui,backend-driven-ui",0
405,https://github.com/appserver-io-apps/tutorial-angularjs.git,An simple AngularJS singlepage app which makes use of appserver-io as a backend RESTful service.,,0
406,https://github.com/Ajeet-Ganga/TinyUrlWithUx.git,"Tiny URL REST service with mongodb as backend, and a little bit of front end too",,0
407,https://github.com/PaulGobin/config-service-jdbc.git,Spring Boot config service using a JDBC backend as the data store for configs,,0
408,https://github.com/BisiDavi/ReactandFirebase.git,learning from robin wieruch ( using firebase for - Backend as a Service),,0
409,https://github.com/SirAnderss/quiz-app.git,A little practice of React with context and more using Open Trivia Database as backend service,"react,javascript,html,css,tailwindcss",0
410,https://github.com/VirgileD/hapijs-sapper-tailwindcss.git,"a template, as good aspossible and with comments to create a web service <ith hapijs as a backend and svelte/sapper as a frontend.",,0
411,https://github.com/microscope-mobile/ionic-firebase.git,ionic browserify / npm workflow template with firebase backend as a service. ,,0
412,https://github.com/rhomobile/rhoconnect-ffcrm-sample.git,Sample RhoConnect (JavaScript/Ruby) and Rhodes application that uses Fat Free CRM as a backend service,,0
413,https://github.com/salimchehab/terraform-openstack-vault-consul-cluster.git,Provision necessary OpenStack infrastructure for a HashiCorp Vault cluster with Consul as the backend service.,,0
414,https://github.com/road2paradise/GiftLand.git,Photo uploading service utilising ReactJS with AWS - Amplify and S3 as a backend cloud database.,,0
415,https://github.com/napstercake/napstertweet.git,This is an app similar to twitter using Parse as a Backend Services.,,0
416,https://github.com/Baasic/ios-todo-dynamic-resources.git,iOS TODO list built on Baasic Backend as a service Dynamic Resource module,,0
417,https://github.com/LyaskinaNat/React-Redux-Firebase.git,This is a demo React-Redux App with Firebase services as backend,,0
418,https://github.com/dumebi/fullstack-grpc.git,"A todo frontend (vue) and backend (Go) in gRPC, with envoy as service proxy ",,0
419,https://github.com/nsuarez99/SimpleChat_Lab.git,Practice of storing and retrieving data from the Parse backend-as-a-service.,,0
420,https://github.com/appserver-io-apps/tutorial-angularjs.git,An simple AngularJS singlepage app which makes use of appserver-io as a backend RESTful service.,,0
421,https://github.com/Ajeet-Ganga/TinyUrlWithUx.git,"Tiny URL REST service with mongodb as backend, and a little bit of front end too",,0
422,https://github.com/PaulGobin/config-service-jdbc.git,Spring Boot config service using a JDBC backend as the data store for configs,,0
423,https://github.com/BisiDavi/ReactandFirebase.git,learning from robin wieruch ( using firebase for - Backend as a Service),,0
424,https://github.com/SirAnderss/quiz-app.git,A little practice of React with context and more using Open Trivia Database as backend service,"react,javascript,html,css,tailwindcss",0
425,https://github.com/lousmontabes/Gamecloud.git,"Open-source, lightweight backend as a service (BaaS) for mobile games.",,0
426,https://github.com/StephenJayYoung/CatSiteWithApigee.git,Continuation of Cat Site That Uses BackEnd as a Service (Apigee),,0
427,https://github.com/nyampass/baasday-Android-Library.git,Android library for accessing the baasday Backend as a Service platform for mobile applications,,0
428,https://github.com/i0na-k/timestamp_microservice.git,creating a unix / natural timestamp service as part of FCC backend dev certification,,0
429,https://github.com/pgmgent-1920-students/atwork2-case1-baas.git,@work-2 Case 1 Backend As A Service Simulation | Graduaat Programmeren | Artevelde University of Applied Sciences,,0
430,https://github.com/mpcarolin/AnyPic-mpcarolin.git,"The code from the iOS AnyPic project, using the Parse service as a backend.",,0
431,https://github.com/ivaivalous/ivodb.git,A small run-your-JS-as-backend service written in Python.,,0
432,https://github.com/pragmatist-strategist/InternshipApp-ImagePost.git,This is the basic blog activity which uses firebase as a service in the backend.,,0
433,https://github.com/phpfacile/booking-quota-db.git,Implementation of phpfacile/booking-quota services with a database as backend (using zend-db),,0
434,https://github.com/JhonyCosmo/back-end-as-a-service_android-firebase-realtime-database.git,Projeto da disciplina de Backend as a Service da Pós de Sistemas Web,,0
435,https://github.com/ismaelpontes/smallink-backend.git,Backend de um simples Micro-SaaS (Micro Software as a Service) para encurtar URL!,,0
436,https://github.com/MarkLyck/contacts-list.git,"Contacts list using Javascript, jQuery, Backbone and Kinley as a backend service",,0
437,https://github.com/gaboratorium/stash.git,"Backend-as-a-Service for user authentication, database management and file storage","baas,java,postgresql,dropwizard,jwt",0
438,https://github.com/JoseJacin/JoseJacin-KeepCoding-IVEdicion-KeepcodingMasterBootcamp-MBaaS-Practica.git,KeepCoding - IV Edición - KEEPCODING MASTER BOOTCAMP - Mobile Backend As A Service (MBaas) - Práctica,"master,bootcamp,keepcoding,mbaas",0
439,https://github.com/asharapov/logtrace.git,Distributed logging and tracing framework that uses Elasticsearch as a backend service.,,0
440,https://github.com/mr3y-the-programmer/Read-it.git,Showcase of building Android app to read & write articles with Firebase as a backend service,"android,architecture,kotlin,wysiwyg,firestore,firebase",0
441,https://github.com/meoswift/Parsegram.git,Instagram clone on Android that uses Parse as a backend service,,0
442,https://github.com/sharopcha/project_management.git,"React Redux using Firebase as a backend service. Authentication, CRUD, and firebase cloud function altogether. ","react,redux,firebase,firebase-auth,crud-application,firebase-cloud-functions",0
443,https://github.com/JoseJacin/KeepCoding-IVEdicion-KeepcodingMasterBootcamp-MBaaS-Practicas.git,KeepCoding - IV Edición - KEEPCODING MASTER BOOTCAMP - Mobile Backend As A Service (MBaas) - Prácticas,"master,bootcamp,keepcoding,mbaas,azure,firebase,google-analytics,ios,swift-3,swift3,xcode",0
444,https://github.com/stephmajor/eventsvc.git,Test Event Service built using akka-http and mongoDB as a backend,,0
445,https://github.com/mandrush/internet-forum.git,Backend service acting as a backbone for an internet forum (think kafeteria.pl),,0
446,https://github.com/phpaul89/rest-api-php.git,Project: REST API backend in PHP as a minimal banking service,,0
447,https://github.com/Yaro96/Appliance.git,Backend service to control an appliance such as a washing machine,,0
448,https://github.com/ritsraghani/angular-firebase-project.git,Angular project basic CRUD operations using firebase as a backend service,"angular,crud-application,firebase-database,firebase-authentication",0
449,https://github.com/qiz029/go-kms-gcp.git,This is a golang key management service that used gcp kms as the masterkey backend,,0
450,https://github.com/AstleyS/web-springboot-student.git,"{""Basic Spring Boot application as a RESTful backend service that manipulates students' data""}","springboot,restful-api,restful",0
451,https://github.com/mpcarolin/AnyPic-mpcarolin.git,"The code from the iOS AnyPic project, using the Parse service as a backend.",,0
452,https://github.com/ivaivalous/ivodb.git,A small run-your-JS-as-backend service written in Python.,,0
453,https://github.com/pragmatist-strategist/InternshipApp-ImagePost.git,This is the basic blog activity which uses firebase as a service in the backend.,,0
454,https://github.com/JhonyCosmo/back-end-as-a-service_android-firebase-realtime-database.git,Projeto da disciplina de Backend as a Service da Pós de Sistemas Web,,0
455,https://github.com/phpfacile/booking-quota-db.git,Implementation of phpfacile/booking-quota services with a database as backend (using zend-db),,0
456,https://github.com/ismaelpontes/smallink-backend.git,Backend de um simples Micro-SaaS (Micro Software as a Service) para encurtar URL!,,0
457,https://github.com/GabrielRivera21/SpringRestMongoDB.git,"{""A Spring Restful Micro Service with MongoDB as it's backend""}",,0
458,https://github.com/SalamaSoft/REST-script.git,A RESTful service which use javascript as backend (use default engine in Java8),,0
459,https://github.com/jsahn93/Webapp.git,"Sample web-service app using Python as the main language, and a Flask backend",,0
460,https://github.com/francijpg/simple-ecommerce-app-server.git,Backend application of the simple e-commerce application using stripe as a payment service.,"nodejs,express,typescript,stripe,cors,dotenv,ts-node-dev",0
461,https://github.com/vishal-mourya/Flash-Chat-Flutter-Firebase.git,Flash Chat - A Lightning Fast Realtime Chatting App Made With Flutter + Firebase ( as backend service ),,0
462,https://github.com/DSniatecki/UserSecurityModule-Backend.git,RESTful web service created with Spring. It is designed as a backend service for UserSecuirtyModule frontend application.,,0
463,https://github.com/3slab/saml-proxy.git,This project provides a proxy layer to act as a service provider between a frontend and a backend.,,0
464,https://github.com/kaempke/jersey-guice-jackson-rest-seed.git,"A REST based backend with jersey as REST service, jackson as object mapper, guice as dependency injection framework, build with gradle and gretty as lightweight servlet container.",,0
465,https://github.com/pritamvidhate/CRUD-Employee_details.git,simple Employee form using React as a frontend and Node.js-Express server as a backend with MySQL as database service,,0
466,https://github.com/weSPOT/wespot_MEDoKy_FCA.git,Encompasses a backend web-service component for learner modelling and learning recommendations as well as 3 complementary elgg plugins visualizing the services. ,,0
467,https://github.com/erikxcore/laravel-demo.git,A small demo implementing a Node-based web service as a backend for content retrieval and authentication.,,0
468,https://github.com/montazze/BaaS.git,"Baas is a ""backend-as-a-service"" permissions level data store with a RESTful API for node. ",,0
469,https://github.com/kazmiali/react-firebase-boilerplate.git,"A boiler plate for react with firebase as a backend service, a nodejs server, stripe payments, email verification, phoneNumber Verification.",,0
470,https://github.com/Jugurtha/QuizALOG.git,"A simple Quiz App with a heavy client, an EJB as backend and a SOAP web service.",,0
471,https://github.com/Jkavia/GoogleFirebaseLoginAuth.git,developing a web application to use BaaS(Backend as a service)/DaaS(database a service) Firebase to authenticate a user using standard login as well as a social media login.,,0
472,https://github.com/seanRoshan/vehicles.api.service.client.pricing.git,The Pricing Service is a REST Web Service that simulates a backend that would store and retrieve the price of a vehicle given a vehicle id as input,,0
473,https://github.com/SumitBisht/ServiceApp.git,A Node.js based RESTful service and a barebones application which uses MSSQL Server as its backend.,,0
474,https://github.com/Pooja444/leetcode-profile-server.git,This is a heroku server which will act as a backend service to get leetcode profile data,,0
475,https://github.com/MichaelGTZ/SimpleChat.git,A simple chat client app focused on using Parse backend as a service to store and retrieve data. ,,0
476,https://github.com/jasonburnell98/a-reddit-clone.git,"a very rough version of a reddit clone using firebase as backend services and authentication, developed in 2019",,0
477,https://github.com/siddarthpatel/todo-api.git,"A simple todo-api that uses javascript and node as a backend service, along with SQLite database.",,0
478,https://github.com/ifandelse/everloader.git,"{""A utility lib to help with saving/uploading files to Everlive (Telerik's Backend-as-a-Service platform)""}",,0
479,https://github.com/justrmarks/quotivity.git,A simple web-app with a Rails as service backend and vanilla JS frontend for quote shennanigans,,0
480,https://github.com/Paul-Okello/readingApp.git,A GraphQL server built on nodejs. The capabilities of GrapgQL as a backend service is explored in the project.,,0
481,https://github.com/dhriti04/SimpleChat.git,An android app that stores and retrieves data from the Parse backend-as-a-service to create a chatting tool,,0
482,https://github.com/SamiranDatta/Household-Genie.git,A front end website (backend will be added later on) which will act as a forum for local service providers,,0
483,https://github.com/rbutti/AI-Voicebot.git,"This is a simple web-based voicebot built against api.ai backend. It implements a static client app, as well as a simple web service for doing math.",,0
484,https://github.com/wakingrufus/filedb.git,Filedb is a kotlin library which allows you to use a file sync service (such as syncthing) as a persistence backend for an application.,kotlin,0
485,https://github.com/skarode96/Yaatra.git,This project is submitted as a part of the coursework for CS7CS3 module. It consists of an android app which helps the user find a co-traveller to share the journey with. This app uses backend services written in Django Framework which is deployed on Heroku,"android,android-jetpack,dagger,django-framework,wifidirect,graphhopper,navigation,mapbox,room-database",0
486,https://github.com/shahaadesh5/BMI-Calculator-using-sails-MVC.git,A sails js application and service to Calculate BMI by passing height and weight as parameters to a backend web service API,,0
487,https://github.com/smewara/FriendFinder.git,Backend service to create a network of friends and find potential friends in the network as well as find connections from A->B node.,,0
488,https://github.com/balajisai16/aws-lambda.git,"This application is built using AWS lambda service as a backend, dynamodb for database and frontend using AngularJs",,0
489,https://github.com/appoll/ParseSimpleChat.git,Parse backend as a service for basic chat app. \nCurrently no login required.\nUses Picasso to load gravatars.,,0
490,https://github.com/rodrigobarros2/publish-now-react.git,"✈Application created with the intention of publishing events and concepts of learning of Backend as a Service(BaaS, Firebase).",,0
491,https://github.com/shern15/FiresideChat.git,An Objective C demo application in the vein of Whats App using Firebase as a backend service,,0
492,https://github.com/DiogoBotton/ReactJS-Filmes-Firebase.git,Projeto Filmes convertido para funcionar com serviços BaaS (Backend As a Service) do Firebase e bancos NoSql.,,0
493,https://github.com/mauduran/P3_Moviles.git,"Practica 3. Manejo de estados con Bloc, Persistencia de datos con Hive, Backend as a service con Firebase",,0
494,https://github.com/G0403H/SilverGlitters.git,"{""It's an android app for jewellery shop named Silver Glitters. It uses firebase support as a backend service""}",,0
495,https://github.com/podvio/podcast-backend-as-a-service.git,"Main repo for landing page, api, and front-end for Podcast Backend as a Service SAAS App",,0
496,https://github.com/llacroix/prometheus-docker-sd.git,POC Mock of the Marathon REST API to enable docker swarm service discovery as a marathon backend,,0
497,https://github.com/Adrian-DG/SmartInventory.git,"An inventory demo webapp made with Angular Framework, Bootstrap 5 on Frontend  and Firebase for Backend As a Service.",,0
498,https://github.com/niranjan-nagaraju/pokemon-search.git,A sample React/bootstrap/typescript based frontend for pokemon-lookup service built using the poke API as the backend.,"react,bootstrap,typescript",0
499,https://github.com/DSantanax/SimpleInstagram.git,A simple Instagram clone which uses Back4App as the backend service using Parse to built our own Android application,,0
500,https://github.com/jazzystring1/Python---Speaker-Recognition-System.git,An app that could be used as a backend service that could identify speaker by its voice.,,0
501,https://github.com/gabrielrsp/saasBackend.git,"Software as a Service Backend using adonisJS, for creating Teams, Projects and Invite users, also using SMTP email protocol",,0
502,https://github.com/JosephMalandruccolo/AWS-Contacts-Manager.git,Super awesome contacts manager using Amazon Web Services as a backend. Built on the Sinatra lightweight web framework.,,0
503,https://github.com/esabalza/parse-android-boilerplate.git,Plantilla quick-start para desarrollo de aplicaciones Android usando la metodología Backend As A Service (BaaS) (Parse),,0
504,https://github.com/xlexi/pastedirectory.git,A pastebin service with real time syntax highlighting based on Python (Flask) with MongoDB as database backend.,,0
505,https://github.com/lornasw93/amk-deezer-api.git,WIP - the intention is to work as a backend micro-service by retrieving interesting info using the Deezer API,"nodejs,firebase,deezer-api",0
506,https://github.com/sarveshprajapati/dropic.git,Dropic is an image upload web app with react in frontend and firebase as a backend service,"react,firebase,github",0
507,https://github.com/turnonline/ctoolkit-services.git,"Cloud Toolkit Services, the backend libraries for microservices. Designed as a convenient extension for Google App Engine standard environment.",,0
508,https://github.com/christiandahlberg/veronicakackse-app.git,Commercial informative website for psychotherapy as a service. Backend written in Python using Django for educational reasons.,"python,django,commercial,website",0
509,https://github.com/bgoncharov/talk-talk-chat.git,💬 Real-time chat with image/text messages. Implement with MVC architecture and Firebase as a backend service.,,0
510,https://github.com/GuiMM/Nivel-2-nodeJS.git,Desafio para fixar as patterns repository e Service aplicado a um projeto para praticar Backend usando Node.js + typescript,,0
511,https://github.com/gititGoro/uberalles.git,"a REST service for setting up any type of on-demand, reputation managed backend such as uber, airbnb or tripadvisor.",,0
512,https://github.com/hi-manshu-kumar/REST-API.git,This is a example to show how we can achieve REST api services in nodeJs using MongoDb as backend.,"mongodb-database,reactjs,expressjs,nodejs",0
513,https://github.com/Satish615/StartBucks-portal.git,"Built a Full Stack, Micro serviced star bucks portal using React, Kong API and Java Restlet as Backend.",,0
514,https://github.com/crazycoderlabs/crazybaas.git,"CrazyBaaS is a Backend-as-a-service tool. With the rise int he micro-services driven infrastructures, maintaining multiple backend is a challenge, this is where this tool comes in handy.","baas,golang,mbaas",0
515,https://github.com/dlegends/ChatWebApplication.git,"This is a chat web application built with Spring Boot as backend and React as frontend. It uses docker to containerize the three services: frontend, backend, database. Moreover, nginx is used as the webserver.",,0
516,https://github.com/eedygreen/Monolith-Microservices.git,Refactoring of Monolith Application to Microservices. The FullStack Application was split into microservices having  reverse proxy serving as a LoadBalancer between the Frontend and separate Backends services. While backend services run as independent services on EKS cluster. The backend services connects to Postgressql Database on AWS and S3 depending on the API calls from the front end via the reverse proxy server.,"microservices,travis,frontend,docker,travis-interface,monolith,eks,eks-cluster,aws,aws-s3,aws-ec2,api,restful-api,postgresql-database,sequelite",0
517,https://github.com/Marquis103/TodoApp.git,Node.js API TodoApp deployed on heroku using mongolab as a backend services and alamofire as an httpclient to Node.js api,,0
518,https://github.com/sjkonnick/reddit-newsletter-api.git,A serverless backend service that connects to DynamoDB used to create and update users as well as deliver the reddit newsletter email payload.,,0
519,https://github.com/rafaelsguerra/eStore.git,"This repository contains the code for online store project using Angular as frontend, Node JS in the backend and MongoDB as a storage service.",,0
520,https://github.com/machingclee/docker-compose-template.git,Used as a template for any kind of backend service that I want to build. It is mainly node with express installed + additional service.,,0
521,https://github.com/oy3/CleanUp-Android.git,"A cleaning service management system named ""CleanUp"". This android mobile application was developed using Kotlin language and used Firebase Cloud service as backend.",,0
522,https://github.com/nanosoftz/VehicleRentalSystem.git,"This is a Spring Boot Web Application with Angular as FrontEnd and JPA, Hibernate, Web Services, Maven and MySQL Db as BackEnd.",,0
523,https://github.com/jyoti-raj/Chatting-App.git,This app is simple chatting app which is using firestore (one of the database service of  firebase of google cloud) as database using dart language as a backend. ,,0
524,https://github.com/MatiasDevop/slackclone-react.git,slack clone created with react js and using FIREBASE as backend as a service to store the data and many features.,,0
525,https://github.com/rushilbhatt28/covid__tracker.git,"This application is made using React.JS, Material-UI, Redux and firebase as a backend service. It helps users to View daily COVID cases as per individual countries ",,0
526,https://github.com/ramtinkermani/Python-Flask-Angular2-StarterTemplate.git,Basic skeleton for creating Web applications with Angular2 for front-end and Flask as the backend server as well a the RESTful service provider.,,0
527,https://github.com/heyitsvajid/Crowdsourcing_Marketplace_MongoDB.git,Developed the prototype of Freelancer web application to demonstrate the use of RESTful web services along with distributed messaging system Kafka as a middleware and MongoDB as backend.,,0
528,https://github.com/HarrisonScarfone/Image-Repository.git,A split service backend model of an image repository with storage and retrieval. Services deployed as a package using docker-compose.  Created as part of the Shopify Fall 2021 internship applications.,,0
529,https://github.com/manchalamounika/Library-Management-System-COEN-296B-.git,A library management System is a website for managing the African Village Libraries developed using React JS and AWS as a backend service.,"react,reactjs",0
530,https://github.com/cesonha/DriftBottle.git,"First app using Parse (Backend as a Service), a simple drift bottle app that lets you send messages to the cloud and get a random one from it.",,0
531,https://github.com/Dehibernate/Juro.git,"Juro is a task management/productivity cross-platform service created as a final year project. It consists of two components: an Ionic Framework (v1) App for Windows UWP and Android, as well as a Node.js server backend.",,0
532,https://github.com/maksympc/SmartNotes.git,"This repo will contain SmartNotes project, based on Java as a backend, JS as a frontend, and MongoDB, PostgreSQL as a DB. Project is deployed to Heroku service and reacheble by link:",,0
533,https://github.com/BenedictKohler/MiniBankingApp.git,An example of an online banking app that uses a .NET Blazor App for the Frontend and a .NET Wep API as a web service for the Backend.,,0
534,https://github.com/Dominik277/Firebase.git,"Constructing an App with the help of Firebase, a Backend-as-a-Service, and it is a real-time database which is basically designed for mobile applications.",,0
535,https://github.com/gpatil1999/Feliciano-Restful-Backend-Server.git,"A backend server for a restaurant named Feliciano, a practice project to learn backend development. It is written using node.js as runtime, Express.js as application framework. Project’s structure is generated by Express Generator. Built a Restful API for frontend to access backend services. Used MongoDB as persistent data store, implemented user authentication and authorization process. ",,0
536,https://github.com/Gallucci/HousingServicePrototype.git,Sandbox for creating a housing service that provides a common set of methods with a webservice or database as the backend.,,0
537,https://github.com/shrividluck/Springboot_Project_Example.git,Example project that models a movie microservice and a theater microservice backend using Springboot Framework . It uses Eureka (SpringCloud) as discovery service .,,0
538,https://github.com/aditya-doshatti/EBaaS.git,Enterprise Backend as a Service is a code generation tool that is bringing the automation exactly where it is required in the real world.,,0
539,https://github.com/dhramijo/credit-card-processing.git,RESTful API for a credit card provider. This backend service allows to add new credit card accounts and view them as a list.,,0
540,https://github.com/sixshootercat/e-commerce-app.git,A fullstack e-commerce SPA using React and Redux in the frontend and Firebase as a backend service and cloud DB.,,0
541,https://github.com/Kimahari/nginx-dotnetcore-proxy.git,Repository to have a simple example on how the use nginx as a api gateway to hide dotnet core backend services behind gateway,,0
542,https://github.com/MatHanson/Service-Desk-Greeting.git,PHP backend which retrieves user and device details to form a greeting to users as part of a Service Desk portal.,,0
543,https://github.com/jhatting/firebase.git,Firebase is a Backend as a Service (BaaS) that provides an advantage to mobile developers who use React Native for developing mobile applications,,0
544,https://github.com/davidszabo26/demo-firebase-ios.git,A simple iOS application that demonstrates how the end-to-end encryption works. The application uses firebase as a backend service for authentication and chat messaging.,,0
545,https://github.com/Jane3/pizza-eat-app.git,A app that allows users to customize pizza and proceed to checkout with the help of Redux for State Management and Firebase for Backend-as-a-Service,,0
546,https://github.com/autokrator-uog/backend.git,"UI Backend (or BfaF/Backend-for-a-frontend) acts as a gateway between the user interface and the microservices, providing a unified API for interacting with the core services.","python,flask,gateway,websockets,http,rest,docker",0
547,https://github.com/Maxyee/react-django-news-app.git,A simple news project where I used django rest api as a backend service and react used as a frontend client handler. Trying enrich my knowledge in both technologies.,"django,react,django-rest-framework,redux",0
548,https://github.com/ahmadkhudeish/qraphql-apollo-meteor-react.git,"A boilerplate for Full Stack app based based on Meteor as the backend service, ReactJS for the frontend, QraphQl as the API layer, and Apollo as the set of tools used to manage the GraphQL layer",,0
549,https://github.com/pramayb/posts-rest-api.git,This is a project to demonstrate the workflow of REST services using Spring boot as a backend and AngularJS as a frontend. The sample endpoints interact with jsonplaceholder.typicode.com to exchange data.,,0
550,https://github.com/derrickhwang21/kanban_java-react-redux.git,"A JWT tokens secured project management application, built with Spring for backend services and React JS + Redux as frontend framework, and deployed to Azure.",,0
551,https://github.com/eperdomo09/rental-movies-project.git,"Project base on a movie rental service using node js / express as backend and some dependencies like: bcrypt, config, helmet, joi, jsonwebtoken, lodash, mongoose, winston.",,0
552,https://github.com/alinamiryuk/ApplianceController.git,The task is to design and implement frontend and backend services to manage appliances such as a wash machine or an oven.,,0
553,https://github.com/Toresa/node-passport-sqlite.git,A project that uses sqlite as backend for storing user data. Get up and running in minutes without the use of database services,,0
554,https://github.com/GevaOr/streaMe-backend.git,"The backend of StreaMe, a music streaming service I built as an exercise in React, Material-UI, Node.js, and MySQL. ",,0
555,https://github.com/rristovic/Pandur.git,"Pandur is an mobile application for reporting traffic events. It utilizes firebase as a backend service, with realtime database and firebase notifications.",,0
556,https://github.com/1337erik/blockstack-demo.git,following https://docs.blockstack.org/develop/zero_to_dapp_2.html to learn about using blockstack as a backend storage and auth service,,0
557,https://github.com/ingjuanbejarano/barbershop_demo.git,"Application made in Angular 8 and NestJS as backend, it save and show barbers, services and sales from those two elements and are stored in a mongoDB database",,0
558,https://github.com/Jensssen/Image-Classification-App.git,This repository contains my Rock Paper Scissor Classification App Project. It has been programmed using Kotlin and it uses AWS Sagemaker as a backend service to perform inference.,"aws-lambda,aws-s3,aws-sagemaker,image-classification,kotlin,python,deep-learning,machine-learning,android",0
559,https://github.com/gevuong/transitninja-webAPI.git,repo used to deploy Node/MongoDB backend as a web service to Heroku. https://transitninja-api.herokuapp.com/v1/api/actransitBusses ,,0
560,https://github.com/alexnas/vue-ad-project.git,"Ad Project is a Vue.js-based ad SPA, intended to advertise goods and catch clients.  Uses Firebase as auth service and database on the backend.",,0
561,https://github.com/adriancom1/adriancom-data.git,A custom Node.Js / Redis RESTful data service for Angular projects. Currently used as the backend for www.adrian-s.com,,0
562,https://github.com/Yushiki/FYD-MBaaS.git,"Applications web et mobile permettant la gestion des points d’intérêts d\'un utilisateur avec Node JS comme un ""Backend as a Service""",,0
563,https://github.com/HafidzN/Inschatgram-Server.git,"A backend server which is built by using MongoDB, Express Js, and Node Js. It is proposed as the service handler for Inschatgram App","instagram,backend,nodejs,nodejs-server,expressjs,mongodb",0
564,https://github.com/monmichael32/new-AWS-Basic-infra.git,"Creates free AWS services such as VPC, internet gateway, subnets, route tables, security groups, and a backend for S3 bucket which connects to AWS-Basic-infra. ",,0
565,https://github.com/arwahab/spring-boot-and-ajax.git,demo project using spring boot backend as a service layer and front-end javascript and ajax to search for added users ,,0
566,https://github.com/mjHarakka/react-django-todo.git,"Simple TODO app built with React JS on frontend and Django as backend/api, might built this into a simple mockup SAAS service",,0
567,https://github.com/misterfocusth/Firebase-Line-LIFF-Messaging-API.git,In this repository is a little bit example from me (MisterFocusTH) to show you how to use Firebase as Backend Service With Line LIFF And Line Messaging API,,0
568,https://github.com/Samuel-Anumudu/AKXpressLLC.git,"{""The AKXpress Website is a real-world project for a delivery company based in the US. The initial development of the website only focuses on the frontend with only a third party backend service incorporated in the form submission. As time goes on, we hope to add a few other backend functionalities, as well as creating an application that's cross platform.""}",,0
569,https://github.com/eunices/sp-moneyxfer-server.git,"Java web services backend/ API to be consumed by a money transfer app, as part of PDC2 Mobile Applications at Singapore Polytechnic. Made with Eclipse.",,0
570,https://github.com/psyh/Soul-SDK-Android.git,"Soulplatform – это mBaaS (mobile backend as a service) облачный сервис, позволяющий создавать и эксплуатировать приложения без необходимости написания server-side кода, поднятия собственных серверов и их поддержки.",,0
571,https://github.com/ahmadsaadat/PWA-Expense-Management-App.git,"A Progressive Web App with Firebase as backend service which allows upload of receipts to the cloud, allowing only employee and supervisor access.",,0
572,https://github.com/JohnsonNYC/task-manager-api.git,A nodeJS backend service that allows users to create various tasks for themselves and check them off as complete or incomplete. This app includes authentication with JWT. ,,0
573,https://github.com/DivyamPant2803/shopping_app.git,"A Flutter based E-Commerce application in which users can login/signup, add products, order products, and even mark as favourites. All of these are different for every users. Firebase is used as a backend service.",,0
574,https://github.com/Aspiricity/testnode.git,A node.js server app that uses Axios to handle REST requests from clients (such as the testreact React blog app) and send requests to third party and backend services such as a Headless Ghost CMS. ,,0
575,https://github.com/rallen0150/movie_fullstack.git,A Full Stack project that is a movie rater using Python/Django as the backend API service and React as the Front End. It will also incorporate React Native,,0
576,https://github.com/zlatina-moga/JS-Applications.git,"Dealing with HTTP requests, REST Services, learning what a Baas (backend as a service) is and how to work with it, what asynchronous code means (Promises, using async / await), what Templating and Routing are. ",,0
577,https://github.com/AbdullahShaheed/vidly-app-api-node.git,Mosh-React.js course: This is the backend node project for vidly app. This project comes completed as a zip file with React.js course to implement calling backend services and completing the app.,,0
578,https://github.com/Soeh0001/FrontendLaborationGUI.git,This is a lab I did for the course Advanced C# Programming. The lab includes a frontend in UWP and a web-service (WebAPI2) as a backend which is connected to a database that I created in SSMS.,,0
579,https://github.com/Soeh0001/BackendLaborationGUI.git,This is a lab I did for the course Advanced C# Programming. The lab includes a frontend in UWP and a web-service (WebAPI2) as a backend which is connected to a database that I created in SSMS.,,0
580,https://github.com/AbinashB1997/Team-Management.git,"It is all about the creation of a flask web-app with mongodb as backend service. Deploy both in separate pods in kubernetes, which will use the services inside the cluster and will also be exposed to the outside world.",,0
581,https://github.com/dborski/sweater_weather_python.git,Sweater Weather is the backend of a service-oriented application. It allows the user to plan road trips and see the current weather as well as the forecasted weather at the destination.,,0
582,https://github.com/harshPPatel/backend-with-graphql-and-typescript.git,"Basic Starter Kit which creates the node js backend with Apollo Express, TypeScript and GraphQL. It was made as a tool to create server for micro-services architecture but you can use it for your projects as well!",,0
583,https://github.com/mbbx6spp/freeregister.git,"A service registry API with different backends (e.g. Consul, Zookeeper, etc.) implemented as an example of using the ideas of free monads, mostly as an educational exercise with some practical utility.",,0
584,https://github.com/SSEKPIUS/Futurelink_technologies_api.git,This practical assessment aims at testing my skills as well as attention to detail when presented with a problem to develop backend services for web applications. These skills are critical for the desired candidate.,,0
585,https://github.com/devoctomy/BandwidthMonitorService.git,A .net core service that monitors bandwidth from a set list of file download urls.  Uses MongoDB as a backend data store and exposes an Api and web portal for viewing stats / reports.,,0
586,https://github.com/BhavyaShah99/luxury-rentals-sql.git,"For a Databases course during my junior year as an assignment, I along with an assignment partner built a database schema for the backend of a Luxury Property Rental service website.",,0
587,https://github.com/NHopewell/nfl-event-parser.git,"A simple backend service to pull, transform, and dump data from a remote API about NFL games. The purpose of this repo is to serve as a code example.",,0
588,https://github.com/FrederikBjorne/heroes-webservice-springboot.git,A spring boot backend implementation of a micro-service with REST API of 3 GET end-points and in-memory repository (H2) using a csv file as source including unit tests and setup instructions.,,0
589,https://github.com/ravi1045teja/Learning_Management_System.git,"A serverless application which is built MS)  using a multi-cloud deployment model,  and backend-as-a-service (BaaS). The LMS provides customization feature and additional services for instructors, and limited services to students. The  LMS   provides online virtual assistance,  which can quickly answer the queries of users, and in addition, it provides a chat functionality between the registered user.","aws-lambda,aws-s3,gcp-cloud-functions,gcp-pubsub,gcp-storage,aws-rds-mysql,aws-lex,aws-comprehend,aws-cognito,python,javascript",0
590,https://github.com/vesnamilic/sep-project.git,"{""PaymentHub is a system that serves as a mediator between various payment services and clients who wish to support payment. It supports PayPal, BitCoin and banks and it's designed to support adding new payment services. Backend is built as a microservice architecture and frontend is built using Angular 8.""}",,0
591,https://github.com/DivyamPant2803/great_places_app.git,"A flutter based android application where users can write about the places they have visited, upload an image and even show its location in google maps. SQLite is used as a backend service. ",,0
592,https://github.com/sohombhattacharya/RestaurantApp.git,"{""Table is a REST API that is currently still under development. It's purpose is to serve as the backend of a service that revolutionizes the group dining experience. (Node, MySQL, Express)""}","nodejs,mysql,express",0
593,https://github.com/Brown-LiuZan/CloudFileSystem.git,A project for native cloud file system based on a high avaliability and robust store backend such as cloud block service or huge-file-block and append-only distributed file system.,,0
594,https://github.com/gokhanaker/e-commerce-angular-app.git,It is a simple e-commerce website. It is built with Angular 7 for front-end with Firebase as a backend service and Bootstrap for page layout and styling,,0
595,https://github.com/HaoLiangPao/-Six-Degrees-of-Kevin-Bacon-.git,This is an Java implementation of the backend for a service that computes Six Degrees of Kevin Bacon.This problem can be restated as finding the shortest path between Kevin Bacon and a given actor (via shared movies).,"java,backend-service,nosql-database,neo4j,maven-repository,rest-api",0
596,https://github.com/Groo-The-Wanderer/Groo-Timesheets.git,"Time capture system for a professional services firm. Implements a hierarchical data model comprising; Clients, Projects, Activities with Employess assigned each of these as needed. Built with Ruby on Rails and PostgreSQL backend.",,0
597,https://github.com/barnslig/OwnShark.git,"„Self-Hosted Cloud Music Service“ … *boom* (the buzzword detector) — A Web-Frontend using MPD as database and playlist backend but with a web player. Like Spotify, rdio or so.",,0
598,https://github.com/Rodinga/LiPoTesterDatabase.git,"A database service running on Laravel Lumin as a backend for an automated LiPo cell tester. Intended to store test results, present data, and calculate the capabilities of battery racks.",,0
599,https://github.com/Jane3/burger-builder-web.git,A Burger Builder Application in React.js that allows users to customize the burger they want and proceed to checkout with the help of Redux for State Management and Firebase for Backend-as-a-Service,,0
600,https://github.com/DevJulianSalas/app-restaurant-udacity.git,"This is a final project the course rest-api with flask, this project has a backend as service on docker-compose also has db as service postgres with his api-rest to request for information of restaurant,location and so on.",,0
601,https://github.com/moosejaw/authenticator-sample.git,"This is a sample repository developed for a coding assessment. It is a Docker-based application. A Python container running Flask contains the web backend, Nginx serves as the reverse proxy, and the auth-service container links to another repository containing the backend code for the login/logout functionality.",,0
602,https://github.com/pschlafley/budget-tracker.git,"This is a node.js application using MongoDB as the backend database. With this app, you can track your budget by adding expenses/deposits to your budget. The app also uses indexedDB and service workers to allow for offline functionality, as well as a desktop version of the app that you can download!",,0
603,https://github.com/itzzmeakhi/Choco-Rabbit.git,Choco-Rabbit is an online delivery service website where you can order any chocolate relating stuff to your doorsteps. It was created as a part of my holidays. It was only front end. Backend is not done yet.,"html,html5,css,css3,javascript,jquery",0
604,https://github.com/jestrada-dev/CupoEscolarApp-BaaS.git,"Módulo de Backend as a Service del Proyecto de Datos Abiertos CupoEscolarApp. Implementado en la plataforma Firebase de Google, utilizando las Cloud Functions para ejecutar las tareas de consumo del API de Datos Abiertos.",,0
605,https://github.com/vishnu3152/Ecommerce-application.git,"This is an ecommerce app, where a person can shop for books, luggage bags, coffee mugs etc. Angular 4 is used as the front end and Spring Data Rest is used in the backend for creating services.",,0
606,https://github.com/DebarunMitra/LoopBack-4.git,"LoopBack is a highly extensible, open-source Node.js and TypeScript framework based on Express that enables you to quickly create APIs and microservices composed from backend systems such as databases and SOAP or REST services.",,0
607,https://github.com/Alibinmaqsood/Vidly-Application-MEN-.git,"This is a complete video rental application built with Node, MongoDB and Express. This covers complete services which are provided at the backend of an application. The source code also includes unit testing techniques as well.",,0
608,https://github.com/maxunibz/south-tyrol-air-quality-monitor-backend.git,This is the backend package of the South Tyrol Air Quality Monitor which was developed as a project within the course Internet and Mobile Services 2017/2018 at the University of Bozen-Bolzano.,,0
609,https://github.com/phpfacile/group-by-tags-db.git,"Implementation of the phpfacile/group-by-tags service to manage items (of any kind) that can be grouped by their tag values, using a database as backend (with zend-db).",,0
610,https://github.com/iZooGooD/SafeChat.git,"Technology used: Amazon AWS, Java, SQL Project Description: SafeChat is windows based application which uses amazon aws service as a backend and uses encryption customized method to send secure and encrypted messages,the front-end was created using JavaFX.",,0
611,https://github.com/kpsdilshan/AJ-Rent-A-Car-Service.git,"This project for rent a car service called AJ. We are  implementing the backend of the project using technologies such as spring boot, spring cloud, spring security, spring kafka, ",,0
612,https://github.com/buddhiprab/zuul-gateway-retry.git,"{""When Netflix Zuul is used as a gateway to forward the incoming requests to backend services, there is always a chance that a request may fail to back end service. When a request fails, you may want to have the request be retried automatically. To do so when using Sping Cloud Netflix, you need to include Spring Retry on your application's classpath. When Spring Retry is present, load-balanced Zuul automatically retry any failed requests (as below example configurations Zuul will retry 2 times if a backend service is down).""}",,0
613,https://github.com/akkshay/ParseDemo.git,A demo app I made for an iOS training program I taught that upload objects to the database and queries from the database. Great to use as a teaching tool for beginner iOS developers trying to learn about relational databases and backend as a service.,,0
614,https://github.com/memreas/memreas-transcoder-public.git,"{""memreas transcoder is a php web based application the uses ffmpeg as a media transcoder.  Video input files such as (.avi, .mp4, etc.) can be transcoded to mp4, vp9 (webm), and hls including 4k support for Apple, GoPro, and standard 4k videos. Images can be resized for thumbnails and stored as needed.  The transcoder is built to use Amazon Web Services (AWS) as it's backend but can be ported to other Cloud based services based on your needs.  The transcoder works as such  1 - Video or image should be already stored in your S3 Bucket <br> 2 - Web request is made with appropriate parameters <br> 3 - For videos the transcoder will work on transcoding a single video at a time but will also allow for images to be resized <br> 4 - Upon completion the transcoder will store your transcoded video or images to your S3 bucket <br> 5 - Optional: In the event auto-scaling is setup a new server will be deployed as needed based on your requirements <br> <br>  The transcoder is also equipped to handle auto-scaling and will process input video files sequentially based on a priority system in a single threaded fashion.  Images are processed even if the transcoder is processing a video so as not to create a backlog for smaller files.  Requirements ------------ - Amazon EC2 Instance  - Amzaon Web Servies S3 Bucket - Amzaon Web Servies SES to receive notification emails - Github account to store/fetch your latest updates for new worker servers - Redis installation: used to manage multiple workers  Caveats ------- - Security aspects shown here are for sample purposes.  Security and Server hardening are outside of the scope of this project. - Error logging messages are for debugging purposes only (e.g. Mlog) - Ubuntu shown as example.  Other Linux instances may be used. - This is a time intensive install dependent on your level of experience.""}",,0
615,https://github.com/aishwaryaw/Weather-App-using-Vue-and-Laravel.git,"Developed a weather app using Vue.js and tailwind CSS as a frontend and Laravel as backend along with the Dark sky weather API services for getting weather updates, Algolia Places API for implementing features including current weather, future weather and location changing.",,0
616,https://github.com/astabile/angular-firebase-gitHub.git,"Angular application, using Firebase as a backend, deploying the website in GitHub Pages and using Git as a repository.  Design From Scratch: - Configuration of the database and repositories in GitHub. - Angular components - Routes using modules - Generate production application - Firebase REST API - Angular Services",,0
617,https://github.com/realjoselara/Spring-Boot-Microservices.git,"This is a microservice application with A REST API to maintain vehicle data and to provide a complete view of vehicle details including price and address. The Pricing Service is a REST WebService that simulates a backend that would store and retrieve the price of a vehicle given a vehicle id as input. In this project, you will convert it to a microservice. This is a Mock that simulates a Maps WebService where, given a latitude longitude, will return a random address. Utilizing Eureka as service discovery for connecting all 3 Microservice. ",,0
618,https://github.com/bchang1213/express-react.git,This is a full-stack application boilerplate with Express.js as the backend service and React.js as the frontend server. It does NOT use create-react-app and was made from scratch - you will require knowledge of webpack and babel to control it fully.,,0
619,https://github.com/ckmd/angular-auth.git,"this project is the implementation of authentication in angular using guard. this application using MEAN Stack, consist of  MLab for the Database as a service, Express for the web service and Backend Framework, Angular for the FrontEnd Framework, and Node JS",,0
620,https://github.com/hamiddoosty/Zuul-Proxy-Server-and-Routing.git,"Zuul Server is a gateway application that handles all the requests and does the dynamic routing of microservice applications. The Zuul Server is also known as Edge Server. For Example, /api/user is mapped to the user service and /api/products is mapped to the product service and Zuul Server dynamically routes the requests to the respective backend application.",,0
621,https://github.com/mike1011/blog.git,"A small application using Google map to track congestion/traffic on directions using Google Direction Service.This is made on  node.js(v0.12.7),angular(1.4.5),express(2.11.3),bookshelf(2.11.3) using MySql as backend and ejs as template engine .",,0
622,https://github.com/surajrocks1997/Recipes-and-Shopping.git,"{""My first sample project in Angular.  You can create, edit, update, delete your recipes and add it's ingredients to the shopping list which is built in to it. Firebase is used as backend as a service for database and authentication.""}",,0
623,https://github.com/jamestang12/Flash-Chat.git,"Flash Chat is an internet based messaging app similar to WhatsApp, the popular messaging app that was bought by Facebook for $22 billion. This app uses services such as Firebase Firestore as a backend database to store and retrieve our messages from the cloud.","swift,ios,firebase,firestore,firebase-auth",0
624,https://github.com/KiranGosavi/inventory_management.git,"A Web service written in GO Lang with API calls GET, PUT, DELETE, UPDATE manages product inventory. In addition to that, a websocket has been created to fetch real time changes in product data. Mysql database is used as a backend. ",,0
625,https://github.com/crisarenas/W6-chat-API.git,"This project aims to create an api that serves as backend for a chat service. The API will allow to save and to ask for different variables in a data base. Besides all of this, they API can also analyze the feeling of a chat room.",,0
626,https://github.com/Salimfr/BestFind.git,"A detailled website, that allows user to compare prices and offers through plenty of Online sites, basically serving as an E-Commerce platform. It has a huge backend, along with a list of APIs from various online sites and services, which ultimatiely helps guide the user to all the products and to choose the best suitable product",,0
627,https://github.com/thegreatone9/ristorantemoderno.git,"Built a complete web-app for a restaurant from scratch, depicting its subscription based services in a post COVID-19 world, with authentication for customers. JavaScript and React on the front-end, Spring Boot on the backend and Postgres as the database. ",,0
628,https://github.com/bmrinal/cloud-auth.git,"Cloud Auth aims to provide a head start for applications that need simple authentication. Provides - signup, signin, signout, recover credentials, verify tokens, sessions out of the box. Can be used as a microservice or a REST service and can integrate seamlessly with any backend.","auth,authentification,session-management,session,signup,token-authetication,token-based-authentication,signin,session-manager,session-handler,user-management,session-middleware",0
629,https://github.com/EduOporto/nlp-chat-api.git,"Creation of a Flask API that serves as backend for a chat service that, besides allowing user signup, the communication among them or the creation of groups, also analyses the feelings of the registered chats using NLTK sentiment analysis. All the data (users, chats, groups, messages) added to this API is saved on a SQL database through Flask-SQLAlchemy.",,0
630,https://github.com/varsha9/TacoLoco.git,"Challenge  Taco Loco, a quick service fleet of taco trucks, is building a new mobile app to enable their customers to place orders for their delicious tacos. They’ve hired ********* to build the backend services to power this app.  As a backend developer, you’ve been tasked with creating a web service to calculate order totals. The service will take as input the items and quantities ordered, and respond with the order total.  Taco Loco’s menu consists of the the following items:  Veggie Taco, $2.50 ea.  Chicken or Beef Taco, $3.00 ea.  Chorizo Taco, $3.50 ea.  If a customer orders 4 or more tacos, then a 20% discount should be applied to the entire order.  Taco Loco wants you to define the data format for the request and response, and prefers using JSON.",,0
631,https://github.com/DivyamPant2803/covid-rakshak.git,"{""An android based application that tracks user's realtime location generates alerts if a user is nearby any Covid-19 suspect. Also contains a self assess form where users can assess themselves regarding the symptoms. Firebase is used as a backend service.""}",,0
632,https://github.com/rdiazlugo/EjecutivoBackend.git,"Backend in Ruby on Rails for an university project where we were working in a Condominium system, and our part of the system has to help the owner and the administrators and accounting people to make decisions based in the financial behavior of the condominium. This project is just the backend, it implements restful services as resources that are consumed from the frontend apps (a web one, using Sencha Ext.js and a mobile one using Sencha Touch).",,0
633,https://github.com/Js109/Js109-Messaging_Service_Multiplattform_Student_Project.git,In this repository you can find a messaging service from which messages can be sent to Android Automotive application via a web frontend (Angular) using AMQP with RabbitMQ Broker. Everything is controlled centrally via a Spring Boot backend. It was developed as group work in my studies together with contact persons from Elektrobit.,,0
634,https://github.com/shopdev1/-AFG.git,"As part of the AFG Automotive Transformation initiatives, FastFit business of AF Automotive wants to provide its customers a new online digital experience to avail the service offerings. A project will be chartered to transition the current https://www.fastfit.ae/ site to a modern mobile friendly digital web frontend fully integrated with the backend systems",,0
635,https://github.com/Nupur321/Taco-Loco-DL-java-Maven-Task.git,"Taco Loco Java Challenge:  Taco Loco, a quick service fleet of taco trucks, is building a new mobile app to enable their customers to place orders for their delicious tacos. They’ve hired Detroit Labs to build the backend services to power this app. As a backend developer, you’ve been tasked with creating a web service to calculate order totals. The service will take as input the items and quantities ordered, and respond with the order total. Taco Loco’s menu consists of the the following items: Veggie Taco, $2.50 ea. Chicken or Beef Taco, $3.00 ea. Chorizo Taco, $3.50 ea. If a customer orders 4 or more tacos, then a 20% discount should be applied to the entire order. Taco Loco wants you to define the data format for the request and response, and prefers using JSON. ",,0
636,https://github.com/rojcewiczj/Taco-Loco-Java-Challenge.git,"Taco Loco, a quick service fleet of taco trucks, is building a new mobile app to enable their customers to place orders for their delicious tacos. They’ve hired Detroit Labs to build the backend services to power this app. As a backend developer, you’ve been tasked with creating a web service to calculate order totals. The service will take as input the items and quantities ordered, and respond with the order total. Taco Loco’s menu consists of the the following items: Veggie Taco, $2.50 ea. Chicken or Beef Taco, $3.00 ea. Chorizo Taco, $3.50 ea. If a customer orders 4 or more tacos, then a 20% discount should be applied to the entire order.",,0
637,https://github.com/christopher73/IBM-s-Watson-API.git,"During a hackaton/Workshop we developed a Chatbot using the IBM Watson Conversation Service and Weather Underground\'s API to train the bot to tell the weather for specific location (your location) and time. We used The IBM Watson™ Developer Cloud services (Bluemix)as a tool, it aloud us to use Node.js as our backend. IBM provides a Node.js package with wrappers that simplify application development. The web application\'s link is <a href=""www.chrischatcom.mybluemix.net"">chrischatcom.mybluemix.net</a> all other source code was posted to my github account !!",,0
638,https://github.com/georgedimmitrov/NodeJS-ImagesUploadRateAndReview-App.git,"NodeJS Application I developed while trying to get acquainted with the technology stack. The app allows a user to register and login into a system, thus giving him rights to upload, rate and review images of other users. Of course some of these functionalities are accessible without logging in. Application uses pug as its view engine, mongodb with mongoose as a backend service and interaction and of course, Express.js plus some other modules just to make my life easier.",,0
639,https://github.com/chriscrond/Amadeus_Server.git,"Backend service for the Amadeus project. SMS will be sent from Android phone, to Twilio phone number. Twilio will then send these messages to a Slack channel. Upon a reply from the Slack channel, Twilio will send an SMS back to the Android phone. The Android phone will then parse the text (which will contain information regarding the original sender, as well as the message body) and create a new SMS which it will send to the original sender",,0
640,https://github.com/yasmine-ghazy/Flash-Chat.git,"Flash Chat is an internet based messaging app similar to WhatsApp, the popular messaging app that was bought by Facebook for $22 billion. We will be using a service called Firebase as a backend data server to store and retrieve our messages from the cloud. ",,0
641,https://github.com/alexanderejohnson/flashchat-ios.git,"Flash Chat is an internet based messaging app similar to WhatsApp, the popular messaging app that was bought by Facebook for $22 billion. We will be using a service called Firebase Firestore as a backend database to store and retrieve our messages from the cloud.",,0
642,https://github.com/YASSERKOT/WSolarCorp.git,WSolarCorp is an application with django in backend for web services provider and with angular 2 as a consumer in the  frontend part. This application is mainly a map preview for json information provided from the database and the geoJson dataset.,,0
643,https://github.com/furkanarmakan/Flash-Chat.git,"Flash Chat is an internet based messaging app similar to WhatsApp, the popular messaging app that was bought by Facebook for $22 billion. We will be using a service called Firebase Firestore as a backend database to store and retrieve our messages from the cloud.",,0
644,https://github.com/snihank/spring-security-pws.git,"This project is a backend application written in Java using spring boot. This is mainly a dummy online retail store, comprised of products as models, sales tax and processing fee, and invoice view model. In addition, this application is wrapped with spring security where different end points are authenticated and authorized. Besides, it is deployed using pivotal web services.",,0
645,https://github.com/rashed4949/ONLINE-BLOOD-BANK.git,"Online Blood Bank It’s a website for online blood bank service. It is fully responsive and can easily use. Here, PHP is used for backend and MySQL is used as a database. HTML, CSS, Bootstrap is used for front-end. Tools: HTML, CSS, Bootstrap, PHP, MySQL",,0
646,https://github.com/py415/flash_chat_flutter.git,"Flash Chat is an internet based messaging app similar to WhatsApp, the popular messaging app that was bought by Facebook for $22 billion. We will be using a service called Firebase as a backend data server to store and retrieve our messages from the cloud.",,0
647,https://github.com/py415/flash-chat-ios.git,"Flash Chat is an internet based messaging app similar to WhatsApp, the popular messaging app that was bought by Facebook for $22 billion. We will be using a service called Firebase as a backend data server to store and retrieve our messages from the cloud.",,0
648,https://github.com/Dolphindalt/ACM-WebApplication.git,An application developed as a proof of concept. The goal is to collect information regarding the ACM student association at Montana Tech and use it to generate the end of year reports. The frontend is built in angular while the backend is a RESTful web service built in Rust.,,0
649,https://github.com/EL-HIDAM-Loubna/conFusionServer.git,"Building an Express server to support REST API using Express generator( a scaffolding tool to quickly generate an Express application with typical support for routes). Also, develop the full-fledged REST API server with Express, Mongo, and Mongoose. User Authentication, Backend as a Service",,0
650,https://github.com/tabbycat-dev/Flash-Chat-iOS13-udemy.git,"Flash Chat is an internet based messaging app similar to WhatsApp, the popular messaging app that was bought by Facebook for $22 billion. We will be using a service called Firebase Firestore as a backend database to store and retrieve our messages from the cloud.","cocoapods,swift,package-manager,firebase-firestore,firebase-auth",0
651,https://github.com/osmanamjad/6-Degrees-of-Kevin-Bacon.git,"In pairs, implemented the backend for a service that computes six degrees of Kevin Bacon while using the Neo4j graph database. This problem can be restated as finding the shortest path between Kevin Bacon and a given actor (via shared movies).",,0
652,https://github.com/DeeKnapp/Basic-Messenger.git,"{""Basic Messenger - Implementation for a basic messaging application that utilizes Firebase as a web backend service. Extended from the messaging application from Firebase's Android tutorial. The powerpoint slides are located at https://drive.google.com/drive/folders/0Bzxu28VnzL0wVHAxTENTVksyRGc?usp=sharing""}",,0
653,https://github.com/ShahzebAli42-iOS-Development/Lets-Chat-iOS13.git,"{""Let's Chat is an internet based messaging app similar to WhatsApp, the popular messaging app that was bought by Facebook for $22 billion. We will be using a service called Firebase Firestore as a backend database to store and retrieve our messages from the cloud.""}",,0
654,https://github.com/shashankshetty1996/websprint-bus-management-system.git,Final round of websprint was basically where we had to design a website without using internet and frameworks where provided in advance. We had to design both frontend and backend as well. Front end uses Bootstrap 4 and Angularjs where as backend i used Node JS and MySQL database for auth i used jasonwebtoken. i ran with some issues in the angular auth service so both frontend and backend functions together failed to work in this application. I would loved if someone wants to fix this issue and push it back to my repository.,,0
655,https://github.com/NikitaPetrossov/RegistrationTool.git,"Implemented by Spring*, SpringBoot, SpringSecurity(BackEnd), Hibernate(ORM), Jquery Ajax, Freemarkers, CSS(FrontEnd), SLF4J(Logging), JUNIT(Testing). A service that provides the ability to register users of the city’s network of route transport of the city of Omsk,  as well as perform a CRUD operation with them when they provide information to the admin. The widget is provided by the site for free use.(https://wikiroutes.info/developers). ",,0
656,https://github.com/Suyash9/StatusUpdate.git,"A very simple ""Social Media"" application (similar in concept to Twitter). This is a serverless cloud application built using Microsoft Azure that allows users to compose ""status updates"", to follow other users, to see the statuses from the users that they follow and to search for tweets and users. It is a Web application (HTML, CSS + JavaScript) whose backend is based on Azure Functions, an event-driven Function-as-a-Service (FaaS) platform provided by Microsoft.  To build this project, you will need to use Azure Functions, in conjunction with other Azure services such as Azure Table Storage.",,0
657,https://github.com/kjy/ArchitectingWithGCP_Fundamentals_Course4_EssentialCloudInfrastructure_Scaling-Automation.git,"Virtual Private Network (VPN).  Created 2 custom networks and associated subnetwork in different regions. Created VPN gateways in each network.  Established static routes to enable the gateways to pass traffic.  Configured static routes to pass traffic to the VPN gateway.  Established firewall rules to enable ICMP and SSH traffic.   Performed most of the configuration from the command line. By configuring VPN manually, attained a better understanding of what GCP console does automatically so as to better troubleshoot a configuration.   Virtual Machine Automation and Load Balancing.  Created a pool of VMs, web servers, and directed traffic to them through an external network.  Configured an external load balancer to use the pool, distributing work among the servers. Tested for high availability by placing a load on the service and stop a VM to simulate an outage by putting a bug in the code. Launched 2 more VMs in a secondary zone.  Configured an internal load balancer. Tested the internal load balancer for work distribution and availability.   Autoscaler. Created a VM, then customized it by installing software and changing a configuration setting (making Apache start on boot). Used the custom image in an instance template, and then used the image template to make a managed instance group. After all the backend and frontend parts were connected together, stress-tested the system and triggered autoscaling using Apache Bench. Goal was to set up an HTTP(S) load balancer with autoscaling and verified that it was working.   Infrastructure Automation.  Created an IAM service account. Create a VM.  Authorized a VM to use Google Cloud API, using the service account for purpose of creating automation tools.    Installed open-source software on the VM. Configured and tested the VM by deploying a Hadoop cluster.  Created a global solution by generating a snapshot of the boot disk with the service account already “baked in”.  Recreated the Clustermaker VM in a different region and tested it by deploying another Hadoop cluster in the new region.  Learned how to use IaaS skills that can be leveraged to automate activities through the Google Cloud SDK.  This is important for Site Reliability Engineering (SRE).  ",,0
658,https://github.com/kauswade/Course-4-NodeJS.git,"This is the fourth course of Front-End Web Development with React Specialization on Coursera. The entire course is based on  NodeJS platform. It follows Web protocols: HTTP and HTTPS, Express for building web servers, CRUD operations on MongoDB, Mongoose for accessing MongoDB from NodeJS, REST concepts, authentication and security and backend as a service ( BaaS).",,0
659,https://github.com/lam-dan/IBM-Loopback-NodeJS.git,Created a simple todo-list application using IBM Loopback 4 framework which uses Node.js and based on Express that enables you to quickly create dynamic end-to-end REST APIs and connect to backend systems such as databases and SOAP or REST services.,,0
660,https://github.com/MbByt/test.git,"{""This project is calculating the number of Business days and week days between two provided dates. This projects exposes three standard RESTfull APIs: api/WeekdaysBetweenTwoDates api/BusinessDaysBetweenTwoDatespublicHolidayRules api/BusinessDaysBetweenTwoDates Which can be consumed by other API's or be used as a backend service for any UI.""}",,0
661,https://github.com/Proff3/webApp.git,"That`s my pet project. I`m using React for the frontend and NodeJS for the backend. Also, my web application using MySQL as a DBMS. The purpose of the application is to automate the information system of billing of subscribers using housing and communal services. Multiplayer updating information is the most difficult feature to create. That`s why I`m using transactions!","nodejs,react,mysql",0
662,https://github.com/YokoAlpha/NotesApp.git,Full stack development project for notes application which front end will be written during phase 3 in Swift once backend communication with a Java service is developed allowing data through REST requests. Project to have high test coverage (JUnit) as following the TDD approach.,,0
663,https://github.com/Tzahy/AngularShopApp-CRUD.git,"Animal shop (or anything else you will want it to be) CRUD application. Using AngularJS for the frontend client and Node.JS for the backend server. Use some Angular elements such as custom directives, services, routing, filters, validations, Bootstrap for UI etc. Use Node.JS to store information on the hard drive (to illustrate a database).",,0
664,https://github.com/rosechar/ITSCheckHolidayDates.git,"System for the ITS Service Center call center (Amazon Connect) to check for holidays upon a customer calling and greet them accordingly. On the backend, a DynamoDB database maintains Epoch timestamps of predefined holiday dates. These dates can be added and removed via the front end administrative website. The HTML and Javascript for displaying dates and getting input from users via the admin website interface is included, as well as the backend Python scripts that use the DynamoDB API to make changes to the database.",,0
665,https://github.com/gouthamarukonda/db-erailseva.git,"DB Project - Through this project work, we aim to create a simplified version of an android app (if possible web app also). The application will act as a portal which provides it’s users with various services like Online Food ordering, Medical services, Room Booking etc from your seat just using your PNR number. It also provides Wallet services with order tracking system if possible from very popular restaurants and hospitals. The aim is to learn how to create an application which uses a database in its backend. We also plan to make the application safe and secure so that it is not susceptible to vulnerabilities and security attacks.",,0
666,https://github.com/tingpengJ/Elastic-Distributed-Database-System.git,Developed an elastic distributed database by building a MySQL replication based on semi-sync Master-Slave architecture and utilized it to serve as backend for a multi-tier web application running TPC-W benchmark. • Created a load balancer to route browsing queries and ordering queries. • Guaranteed the high availability (HA) of database in real-time by utilizing backup slaves. • Made it a Scaled out/in dynamic database server according to service level agreement when real-time workload changes.,,0
667,https://github.com/eknooroberoi/ToDolist-PART2.git,"{""Created a todo list, we can add or delete data from todo list, used MongoDB as database. Each route is independent of each other, example data added or deleted in work route will not affect the root route. We are hosting are Database in MongoDB Atlas.To host the cluster we chose AWS cloud service provider. We get a complete website with a Node backend and a MongoDB database that's hosted live on  the Internet.""}","html-css-javascript,bootstrap4,node-js,express-js,mongodb-atlas,mongodb-database,aws,heroku-deployment",0
668,https://github.com/dragos96/vanillajsajaxapi.git,"The project represents and experimental case study, dedicated to providing a view in the form of a SPA, consuming REST web services from a Php backend and employing the use of templating and routing and JS ES6 features such as Promises in order to make the code reusable. Also, JS classes were used in order to better define the model of the application. The application provided basic user activity logging features (such as time spent on each page after the router redirected and a heatmap component in order to track cursor activity).",,0
669,https://github.com/Jackpandolfo/Mobile-App-Dev-Boston.git,"Using an open source Office compatible platform such as Apache OpenOffice or LibreOffice, develop a mobile and desktop viewer application for a secure data exchange platform that we are developing.  The viewer must support all the common file formats such as doc, xls, ppt, pdf, txt, etc.  The viewer client will read data that has been prepended to one of the common file formats and connect with a backend server that will provide a set of services to which the viewer will need to conform. ",,0
670,https://github.com/Jackpandolfo/Mobile-App-Dev.git,"Using an open source Office compatible platform such as Apache OpenOffice or LibreOffice, develop a mobile and desktop viewer application for a secure data exchange platform that we are developing.  The viewer must support all the common file formats such as doc, xls, ppt, pdf, txt, etc.  The viewer client will read data that has been prepended to one of the common file formats and connect with a backend server that will provide a set of services to which the viewer will need to conform. ",,0
671,https://github.com/msanchez77/edu.uci.ics.matthes3.service.api-gateway.git,"{""API Gateway service for movie website for CS 122b at UCI in Spring 2019. The API Gateway's job is to act as a point-of-entry to the backend. It receives all incoming requests, communicates with the IDM to determine if a user is allowed to proceed further, directs traffic to the intended destination of the back-end, and return requests to users. The API Gateway’s job requires multithreading to complete its job.""}",,0
672,https://github.com/rahul86023/fileShare.git,It is a file Sharing Website Created by me. In this website anyone can share a file to other person .I have created this Website Using Node.js and Express.js as backend languages and use Mongo db Atlas for cloud  Database .and Uses Insomnia  for creating Requests. In this Website I have also added Email Service. User can send the file link to the other person by Email also. ,,0
673,https://github.com/Merces-dev/JogameAPI.git,"1. Identificar as características de programação backend em ambiente web 2. Preparar o ambiente necessário ao desenvolvimento back-end para a plataforma web 4. Utilizar design patterns no desenvolvimento da aplicação web 10. Desenvolver sistemas web de acordo com as regras de negócio estabelecidas 5. Definir os frameworks a serem utilizados no desenvolvimento da aplicação web 6. Utilizar interações com base de dados para desenvolvimento de sistemas web 9. Desenvolver API (web services) para integração de dados entre plataformas 3. Definir os elementos de entrada, processamento e saída para a programação da aplicação web",,0
674,https://github.com/Arihant416/Arihant416-ServerSide-Development-NodeJs.git,"This course deals with all things server-side. We base the entire course around the NodeJS platform. We start with a brief overview of the Web protocols: HTTP and HTTPS. We examine NodeJS and NodeJS modules: Express for building web servers. On the database side, we review basic CRUD operations, NoSQL databases, in particular MongoDB and Mongoose for accessing MongoDB from NodeJS. We examine the REST concepts and building a RESTful API. We touch upon authentication and security. Finally we review backend as a service (BaaS) approaches, including mobile BaaS, both open-source and commercial BaaS services.",,0
675,https://github.com/emonhossainraihan/coursera-serverside.git,"This course deals with all things server-side. We base the entire course around the NodeJS platform. We start with a brief overview of the Web protocols: HTTP and HTTPS. We examine NodeJS and NodeJS modules: Express for building web servers. On the database side, we review basic CRUD operations, NoSQL databases, in particular MongoDB and Mongoose for accessing MongoDB from NodeJS. We examine the REST concepts and building a RESTful API. We touch upon authentication and security. Finally we review backend as a service (BaaS) approaches, including mobile BaaS, both open-source and commercial BaaS services.",,0
676,https://github.com/kpdebree/BrokerHub.git,"{""BrokerHub 1.0 is proprietary prototype Commercial Real Estate listing database designed to be implemented on Brokerage Firm's website as a plugin. The application comes in two parts: a desktop node application that can parse Microsoft Excel files and insert them into a backend SQL Database, and a front-end that can be inserted onto a Commercial Real Estate Website.  The plugin is designed to augment a firm's research department and listing services so that they can display live data about multiple Markets, Product Types, and Submarkets automatically, rather than rely on conventional Market Research Reports, which can take weeks to create.""}",,0
677,https://github.com/bittupaul/CommunityPlus.git,"Community Plus is a web application where users can post their problems or their need of any service or assistance.  The users will have to select a domain (ex. Medical, Automobile, Household, etc.) in which they are willing to provide help while registering themselves to Community Plus. When a user publishes a new post, the backend logic of Community Plus sends an email about this new post as a notification to all other users who has the same help domain preference with that of the domain of the subject of the post. Community Plus uses a chronological feed to display all the posts with the most recent posts being at the top.",,0
678,https://github.com/ihsanizwer/ServiceDeskPlusIncManForIBMQradar.git,In this script I have demonstrated how ServiceDeskPlus could be used as an Incident Management tool for IBM Qradar. For this purpose I have used the RESTful APIs made available by both the products. All in all this is a great option as there is a free option for Service Desk plus and therefore you can get Incident Management of the SIEM done for almost free. I have tested this script on IBM Qradar server backend myself BTW. Therefore it is written in shell. I hope to elaborate more on the functionality of this in my blog. So stay tuned to: https://tech.ihsanizwer.tk,,0
679,https://github.com/Apollonaut-dev/ReactFirebaseBoilerplate.git,"{""A create-react-app React app with ready-made Firebase integration for all of Firebase's services. Includes authorization and authentication with route protection and administrative privileges. I created this to learn both React and Firebase, especially cloud functions for backend work (and testing cloud functions). I may use this to create an app in the future as Firebase is free to use at small scale.""}",,0
680,https://github.com/maschataksoumee/ProductDetails.git,"You need to create a REST service that can fetch product Details From Database and display on Table(You can use Bootstrap or other framework for user interface).  Product Details: 1.Product name 2.Product code 3.Price 4.Purchase Date 5.Product Type  Essentials your applications should have: use Mongodb/Mysql as a backend database Create Dataset for table/collection for at least 1000 Products Details.  GET API to fetch a product details and display inside table. GET API to fetch a product details, given product type each API should support limit & offset parameters For table Scroller can easily cope with large amounts of data on client-side.",,0
681,https://github.com/Adlife84/react-firebase-authentication.git,"Welcome to the fourth week of Front End II. In this unit, we will learn:  How to use Firebase to create an app with a Backend as a Service React Authentication and Authorization patterns Routing Higher Order Components Context Front End II Section 4 Goals  Understanding More Complicated App Structures Implementing Application Registration Curriculum  Your work this week is to build the beginnings of a react app with firebase that implements signup & login.  Here is a link to the tutorial: https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial ",,0
682,https://github.com/gazialamin96/Online-Gaming-Store.git,"The business-to-consumer (B2C) aspect of electronic commerce (e-commerce) is the most visible business use of the World Wide Web in recent days. The primary goal of an e-commerce site is to sell goods and services online in a short time. This project deals with the development of an e-commerce website for Online Electronic shop. It provides the user with a category of different electronic gadgets and products available for purchase in the store. In order to facilitate online purchase a shopping cart is provided to the user and an admin panel form where admin can manage the products. The system is implemented with PHP, Bootstrap, CSS, JavaScript and backend database MySQL for backend admin panel as well as front end client. This document will discuss each of the underlying technologies to create and implement an e-commerce website. ",,0
683,https://github.com/zachkrumholz/BUBL---iOS-App-Developer.git,"We are looking for a computer programmer to develop our iOS app BUBL from inception to the app store. We are looking to pay upwards of $100 per hour or offer an equity position. Developer needs to be able to integrate with a backend service (ie Parse). BUBL is a way to coordinate with individuals, groups, or the public in a quick, simple, and fun way. Our team consists of three undergraduate Yale University students.  Requirements · Minimum of 3 years of experience as an iOS Developer · Computer Science or related Degree · Proven impressive experience with iOS development",,0
684,https://github.com/jayaprakashgov/Redirector-3.0.git,"Redirector3.0 is a Traffic shaping and load balancer tool. It has a Rule-engine that dictates how incoming traffic should be re-routed. Back end cloud service/application can have multiple version (flavors). Rules decide how incoming requests are re-routed to appropriate version/flavor of your application. When no custom flavor rules are defined, Rule-Engine uses the defined default and % distribution rules to re-route the incoming requests among the application versions based on the percentage defined in distribution. There are no limits on number of version/flavors in the backend servers. You can route the traffic to any number of versions/flavor by percentage. If NO percentage defined or to the remaining percentage of distribution, default rule is applied.  This open source also contains, admin UX tool, to create/modify flavor rules as well as default and distribution rules. And you can manage the application version/flavor stacks. Namespaced-List is a set of requesting devices or IP range or any unique entity in the request so that a given traffic  rule can be applied to that Namespaced-List. UX tool helps to manage Namespaced-List.  The architecture design uses the Zookeeper in the backend to store the rule, Namespaced-List as well as backend server & its flavor data. ",,0
685,https://github.com/nijjwal/RESTEmployeeWebService.git,"This is a simple RESTful Web Service that uses four HTTP verbs/methods : GET, POST, PUT, and DELETE to perform a CRUD operations. You can use RESTClient plugin for firefox to test the CRUD operations. My goal for this project is to have AngularJS in the front-end and Spring, Hibernate in the backend to interact with the database for this project. I will try to create a separate branch for each major release for this project instead of working on the previous branch so as to understand the clear picture. ",,0
686,https://github.com/DawitWondim/FootLockerApp.git,"FootLocker Online Shopping Application  This web application will allow customers to make online purchases of products available for sale at Footlocker.  All customers can view all of their past orders, which includes an invoice number and a list of items they purchased to go along with the total price of the order.  Owners can also use the application to view the sales performance of each of the stores and the entire company as a whole.   Project User Stories (Required) As a user, I am able to login to my account with a username and password. There will be login validation.  As a user, I can register for an account by simply providing a unique username, unique email, and a password. As a customer, I must specify my local store that will ship my products.   As a customer, I can view all of my past orders, which includes an invoice number and a list of items I purchased to go along with the total price of the order.  As an owner, I can view the total sales for the business. I can also filter the sales by each store location to see how each store is doing.  As an owner, I can view which products and brands are the most popular and least popular by viewing the number of units sold for each product and brand.  As a system, I can use a shopping cart to manage all of the items the customers would like to purchase and I can keep track of the total price.   Project Technical Requirements Functionality should reflect the user stories above. Data is stored in a relational database. React is used as a library to build out the front end of the application.  Spring Boot is used on the backend. Employ the DAO design pattern and separate your code into the appropriate layers.   Project Technical Options (Not Required) AWS RDS is used for the database. Use Docker and Jenkins for DevOps and use a Micro-services architecture. Deploy the application on an AWS EC2 Use JUnit for testing on the backend and Jest/Enzyme for the front end.",,0
687,https://github.com/sumitgurav7/Project-Management-System.git," A centralized project management solution to reduce the complexity and time involved in project and source code management for various institutions and industrial sectors. It leverages the power & trust instilled by email based two tier authentications, coupled with HTML/CSS based user experience and Spring Framework based powerful application layer, MySQL and JSP based integration and database service smoothens the transition between frontend and backend. This Platform gives a comprehensive and user-friendly ecosystem to various stakeholders such as (and not restricted to) Students / Faculty / Admin and guests.",,0
688,https://github.com/DimchoLakov/JS-Applications.git,"In the ""JS Applications"" course you will learn what HTTP requests are and how to use them. You will learn about REST Services, what a Baas (backend as a service) is and how to work with it, what asynchronous code means (Promises, using async / await), what Templating and Routing are. During the course you will create a Single Page Application, using the learned techniques from previous lectures, where you will be evaluated. You will learn what the architecture of an application is and how to properly structure your applications. Towards the end of the course you will look at different design templates and their practical direction, you will create your own web components using the Web Components standard and you will raise a Wepback environment from scratch.",,0
689,https://github.com/vrushali84/SafeChat.git,"Technology used: Amazon AWS, Java, SQL,Little bit css to style and JavaFX  About:- This application allows clients to chat wwith other users who are registed on the application, one can also see the users online while chating,and can send chat requests to other users  Server-side:- SafeChat is windows based application which uses amazon aws service as a backend(server side),The server side is created using servlets all servlets are converted to .war file using tomcat, the .war file needs to be uploaded to any hosting service such as aws  Client side :- Client side is created using core java and for gui i have used javafx with little bit of css in it, it uses encryption scheme customized algorithm just for expriement to send secure and encrypted messages.",,0
690,https://github.com/kamyaD/RESTful-Web-Services-with-Node.js-and-Express.git,"At the core of Node.js application development is a thorough knowledge of RESTful APIs. In this course, RESTful Web Services with Node.js and Express, I learnt  how to create lightweight, fast, scalable APIs quickly and simply. First, I discovered what REST APIs are and how to implement the REST verbs. Next, I explored how to build unit tests for my application. Finally, I  learnt how to expose API navigation through hypermedia. This course demonstrates that I have an understanding of  how to build real backend REST APIs with Node.js that can help me as I move forward to build web applications. Software required: Node.js; MongoDB",,0
691,https://github.com/sargarakshay/Training-and-Placement-Website.git,"Training and Placement Cell is a total management and informative system, which provides the up-to date information of all the students in a particular college. TPC   helps the colleges to overcome the difficulty in keeping records of hundreds and thousands of students and searching for a student eligible for recruitment criteria from the whole thing. It helps in effective and timely utilization of the hardware and the software resources.  The home page contain various links such as links to login, various services like Events happened, achievements and recruiter details etc.,. The administrator will create the users and the users will use the accounts created by administrator. When the user enteres into his respective page he can update his details, and the details are to be approved by the administrator.  All the users have some common services like changing password, updating details, searching for details, checking the details, mailing to administrator, and reading the material uploaded by admin if the user is a student. Administrator has the services to add events and achievements and he can reply to the mails sent by users. He can upload materials, search for student details, and he has the right to approve the students.  This package is developed in windows platform. The programming language used is JSP with three tier architecture. Oracle 8i is used as backend database for the details to be stored.",,0
692,https://github.com/princealvinyusuf/Flash-Chat.git,"Flash Chat is a native iOS App that was build using a service called Firebase Firestore as a backend database to store and retrieve messages from the cloud. What i have learnt from this project: 1. integrate third party libraries in your app using Cocoapods and Swift Package Manager. 2. store data in the cloud using Firebase Firestore. 3. query and sort the Firebase database. 4. use Firebase for user authentication, registration and login. 5. work with UITableViews and how to set their data sources and delegates. 6. create custom views using .xib files to modify native design components. 7. embed View Controllers in a Navigation Controller and understand the navigation stack. 8. create a constants file and use static properties to store Strings and other constants. 9. Learn about Swift loops and create animations using loops. 10. Learn about the App Lifecycle and how to use viewWillAppear or viewWillDisappear. 11. create direct Segues for navigation.",,0
693,https://github.com/career4dev1997/cyberbigan.git,"Cyber-BigAn is attempting to develop the a cost based relationship between patients and medical world. This relation will be collection of a cloud based Web app with support of a frontend (Website/App) and backend support of  Hadoop and bigdata... The basis of this project is to create a relation web based program using mixed technology, media in order to mimic as medical field data analytic. The technologies we will use to create this relationship include: JAVA, Android, PHP / Javascript, Online Servers, Realtime sync able relative Database (RDBMS) , Hadoop Distributed File System (HDFS) , BigData and some other online tools and thirdparty Services... there is no medium is available for normal people so they can understand such type of statics and mined data..",,0
694,https://github.com/ShaunakJoshi1407/Salon-Management-System.git,"In this project we have created a web application which is easy to access and user friendly. For this application we used MySQL as backend to store the data which is used in the application and for the user interface we had used the JSP, Bootstrap, CSS, JavaScript and HTML 5. The application can be used by Database Administrator, Customer and Authorized Salon Owner. The customer is able to book an appointment online according to his convenience from anywhere by selecting the salon and the services. The Shop owner is able to register the salon, add and remove the services from the site. The Administrator is the only person who has rights to approve the salon on the site, otherwise the salon will not be registered.",,0
695,https://github.com/baskerdearer/recruitment.git,"{""Java Coding Challenge Task Build a backend service that handles a (very simple) recruiting process. The process requires two types of objects: job offers and applications from candidates. minimum required fields for the objects are: Offer: jobTitle (unique) startDate numberOfApplications Application: related offer candidate email (unique per Offer) resume text applicationStatus (APPLIED, INVITED, REJECTED, HIRED) Not all of the fields have to be persisted. You may use ad hoc calculation, event sourcing, or whatever you see fit. These are the fields that must be returned by the API. You may add fields where necessary. Use cases ● user has to be able to create a job offer and read a single and list all offers. ● candidate has to be able to apply for an offer. ● user has to be able to read one and list all applications per offer. ● user has to be able to progress the status of an application. ● user has to be able to track the number of applications. ● status change triggers a notification (*) (*) a log output will suffice as a notification here, but you should design it as if each status change triggers a completely different business case. Technical requirements Use SpringBoot to build this service. The service must run standalone and must not require any third party software to be installed. The service must communicate Json over http (REST). Return proper status codes for the most common problems. The data does not have to be stored permanently, it may be handled in-memory during runtime. Use Hibernate to handle database operations. Things we are looking for ● a description on how to build and use the service ● clean code ● use of the spring framework and spring best practices ● structure of the project ● Unit tests ● how you test your code We do not require you to build a frontend, only endpoints are relevant. And we can't stress enough: we are looking for clean, structured code. If the task takes you too long, you can hard code a shortcut, mark it with a comment and it will be fine. But make sure everything you hand in is well laid out and tidy! Please zip your code and any instructions the reviewer might need to run your application. Send the zip file to hr@heavenhr.com . Include any instructions to build and run in a README file.""}",,0
696,https://github.com/CANGroup/PHP-BACKEND-DEVELOPER-APPLICATION.git,"The foundation for the company was laid by a group of software professionals previously working with prestigious firms in a variety of projects encompassing various services like Mobile and Web Application Development. The company has grown leaps and bounds since inception and currently consists of a highly experienced and talented workforce building solutions and delivering excellent user experience. We are working with international clients from Singapore, Korea, UK, USA, European and major multinational corporations like Recpic, Krowdpop etc … Are you a Developer and would like to have your own start-up in the future but still not so sure where and how to start? Why not choose a startup specializing in programming and web development such as CAN Group to build up your experience? CAN’s programming projects have a strong focus on daily activities and entertaining mobile applications. Especially with a starting point as a design agency, CAN Group incorporated closely between the creative team, who are highly knowledgeable in UX/UI, and Developer team to create products using the latest programming trends and international standards. Currently, CAN Group is looking for 01 BACKEND DEVELOPER to join the programming projects with our international partners.",,0
697,https://github.com/kkini/Zillow_Web_Application.git,"Web application which gets the property information for given street, city and state by making a API call to Zillow. -Server side is developed using PHP by making call to Zillow API. Zillow returns the data in XML and I parse the data and pass it to front end using JSON. Hosted the PHP backend on Amazon Elastic Beanstalk [Cloud web Services] for deploying the application, scaling and monitoring the performance of application. - Used JQuery AJAX calls to communicate between the front end and the PHP. -Bootstrap framework was used to develop a pleasing UI along with HTML5,CSS3, JQuery. -Implemented Facebook mashup using Facebook API- Facebook Platform to allow users to post information on their profile. -Responsive Web Design (RWS) to fit any device such as laptop, desktop, mobile, tablet.",,0
698,https://github.com/OCEANOFANYTHINGOFFICIAL/writewrl.git,"{""## Writeurl - an online collaborative editor    ### Writeurl is a collaborative editor  Writeurl is a client server system. The frontend code is written in pure  javascript using no frameworks. The backend is a node.js application.  The client and server communicate through a WebSocket connection. The client stores local  changes in the browser's local storage. The editor can be used in offline mode. Changes are  always uploaded to the server when a connection is available.   Writeurl documents are identified by their (write)url:  www.writeurl.com/text/id/read-password/write-password    There is a read only version with a (read)url of the form  www.writeurl.com/text/id/read-password  This url structure makes it easy to share documents. No user registration is needed.    ####  Writeurl as an online service   Writeurl is available as an online service at www.writeurl.com  The code running the online service is the same as in this git repo.    ###Local installation  Writeurl can be installed and run locally as an alternative to using the online service.     #### Installation instructions    ##### Dependencies  The only required dependeny is node.js and the modules in package.json.  It is recommended to use node.js version 8.    ##### Clone the repo  ``` git clone https://github.com/morten-krogh/writeurl.git ```     ##### Install the node js modules   ``` npm install ```    ##### Build the browser code   Go to the writeurl directory. Use the build script.  ``` bash build.sh browser ```    Now the browser code is available in the directory  `build/release/browser/`    ##### Configuring the server  The node.js server code is located in the directory `server-nodejs-express`  The server needs a configuration file in the YAML format. An example file is   ```server-nodejs-express/config.yaml```    ``` port: 9000  release:   public: /Users/mkrogh/writeurl/build/release/browser  debug:   host: debug.writeurl.localhost   public: /Users/mkrogh/writeurl/build/debug/browser  documents:   path: /Users/mkrogh/writeurl-test-dir/doc_dir  publish:   public: /Users/mkrogh/writeurl-test-dir/publish_dir  # Pino logger # Output goes to stdout. logger:   # levels: silent, fatal, error, warn, info, debug, trace   level: trace ```    `port` is the port at which the server listens.     `release` and `debug` are the directories built above containing the browser code.    `documents` is the directory where all the writeurl documents will be stored. The server uses files to   store the documents (one subdirectory per document).    `publish` is the directory where the published (html) versions of the documents will be stored.    `logger.level` is the logging level. Logging goes to standard output.    ##### Starting the server  In the directory `server-nodejs-express`  type  ```node writeurl-server.js config.yaml ```    ##### Start typing  Go to localhost:9000 in the browser and start typing.    ### Example production installation  For production, it is recommended to use a reverse proxy with TLS, and to daemonize the   Writeurl server. For daemonization, one can use a node.js process manager or a system daemon   such as systemd on Linux.     The online Writeurl service uses nginx as a reverse proxy and systemd under Linux for daemonization.    ##### Example nginx configuration    An example nginx.conf file is located at   https://github.com/morten-krogh/writeurl/blob/master/documentation/nginx.conf      ##### Example systemd unit file  ``` [Unit]  Description = writeurl server After = network.target  [Service] Type = simple User = www ExecStart = /home/www/.nvm/versions/node/v8.9.4/bin/node /home/www/writeurl/server-nodejs-express/writeurl-server.js /home/www/writeurl/server-nodejs-express/config-debian.yaml Restart = on-failure  [Install] WantedBy = multi-user.target ```    ### Backup  The server can be backed up by just backing up the files in the `documents` and `publish`  directories specified in the config.yaml file. Any type of file backup can be used, e.g. periodic   rsync. The backup script can be used while the server is running as long as the backup script does not  change any files.     The server can be restarted from a backup by just placing the backup directories in the place   pointed to by `documents` and `publish` in the config file.    ### Embedding    Writeurl can be embedded as described in   https://github.com/morten-krogh/writeurl/blob/master/html/embed/index.html  This page is available on the online service as well  https://www.writeurl.com/embed    ### Contributions and issues  Bugs and feature requests are appreciated and can be opened as Github issues.   We also welcome code contributions as pull requests.""}",,0
699,https://github.com/akshbswas98/ChatroomWebapp.git,"Communication brings people together, closer to each other bridging the gap between individuals and groups through flow of information and understanding between them. Our Website offers services to create chat rooms, where people could join these rooms through chat room link shared by the admin (person who creates chat rooms). The admin can also initiate a group video call in the chat room. Approach:  The Idea chosen is very challenging to all the group members as we have previously worked on small scale websites. Creating a multiuser and multifunctional (chat + video call) website will be a very challenging task. We will implement a bottom-up approach, solving all the basic problems and finally integrating them to achieve the desired final result.  Flow of solution:  We will have a client-server architecture for the chat room, so that no messages will be lost in transmission from one user to all other user in chat room. We will have a peer-to-peer architecture for video call in the chat room, so that the communication is smoother and faster with no time lag.  Technology stack:  React (A frontend framework) JavaScript (A scripting language) Nodejs (To create backend server) MongoDB (Database to store all the user details and chat room details) Express (A backend framework)  Analysis of differences between your solution and the currently available technology:  The main difference with our website and other chat application is that the users will not have to share their mobile numbers in order to enter a chat room. The chat room will be link specific, a user can only join chat room if he has appropriate link of chat room unless the admin has kept chatroom to public No personal data will be shared among other group members of the chat room.  Future Plans  To help like-minded people to connect with each other and bring about healthy debates and discussions. This would help people to grow and expand their knowledge through learning in unconventional ways",,0
700,https://github.com/kashish958/hospitalwebsite-html-css-java-.git,This is hospital website project by using : Frontend:HTML and CSS Backend:Java Database:MYSQL This project includes index.html as a first and main page and four ither pages which are in jsp format  contact.jsp : It is for contact page of the hospital website servi.jsp : This page show the services of the hospital us.jsp : This page shows info about us  ba.jsp : This page will ask user info for booking appointment and this page is connected to the  kol.java (Which is used to connect the database with the help of java file (md.java)) kol.java and md.java are the java files which are used for connecting the website with database,,0
701,https://github.com/saxenarahul36/RESTful-Web-Services-with-Node.js-and-Express.git,"At the core of Node.js application development is a thorough knowledge of RESTful APIs. In this course, RESTful Web Services with Node.js and Express, you will learn how to create lightweight, fast, scalable APIs quickly and simply. First, you will discover what REST APIs are and how to implement the REST verbs. Next, you will explore how to build unit tests for your application. Finally, you will learn how to expose API navigation through hypermedia. When you are finished with this course, you will understand how to build real backend REST APIs with Node.js that will help you as you move forward to build web applications. Software required: Node.js; MongoDB",,0
702,https://github.com/provabtech2/David-Mathew.git,"What is CRS Central Reservation System - GTA Travel, Hotelbeds, DOTW, Tourico – Hotel XMLs   A CRS, central reservation system (online reservation system) is a system or medium to reach global distribution system (GDS) as well as hotel distribution system (IDS).  http://www.hotelreservationssystem.com/index.html   Quality Award - http://www.hotelreservationssystem.com/onlinebookingsystems-internationalqualityaward.html  CRS with GDS  Initially CRS - central reservation system was only limited to airlines and was called as airline reservation system (ARS) which used to act as an inventory management system containing all flights, their available seats, airline schedules, fare tariffs, passenger reservations and ticket records. Thus a computer reservation system in airline is an interface with the global distribution system (GDS system) to support online travel agencies and other customers to book flight tickets and other associated services through one single system.  CRS with IDS  Later central reservation system (CRS) got associated with hotel distribution system (IDS) or hotel CRS to manage hotel profile, rooms rates, room type, room availability, other information, descriptions, amenities, pictures, videos, local attractions, rate and conditions, administration, reporting  etc. It helped the hotel managers to manage most of their sales online through CRS and distribution system.    Apart from the above information a CRS also contains   •\tregistrations, validations and profiling •\tsearch and sort. •\treservation details. •\tagents and customer profiles. •\trate and inventory control •\tbooking and payment •\treporting (agent wise report, daily reports/monthly report) •\tadministration (user management, agent control master, backend profile   The inventories in CRS are also controlled by different XML web services and Hotel GDS. This makes agents, corporate and other customers to access large inventories of hotels in real time.  Integrating XMLs from different hotel suppliers such as GTA travel, Kuoni, Hotelbeds, Tourico, DOTW, Travco, Special Tours, HotelsPro, Path Finder and Versys allows real time access to the inventories of hotels and associated amenities across the world. One can integrate one or more XMLs based upon his necessity and priority.  To know more about us, please visit www.provab.com. You can call us at +91.80.40593555 and email us at info@provab.com. With Regards, David Mathew Business Manager PROVAB TECHNOSOFT http://www.provab.com ",,0
703,https://github.com/Kiananaik/Note-Taker.git,"{""# Unit 11 Express Homework: Note Taker  ## Description  Create an application that can be used to write, save, and delete notes. This application will use an express backend and save and retrieve note data from a JSON file.  * The application frontend has already been created, it's your job to build the backend and connect the two.  * The following HTML routes should be created:    * GET `/notes` - Should return the `notes.html` file.    * GET `*` - Should return the `index.html` file  * The application should have a `db.json` file on the backend that will be used to store and retrieve notes using the `fs` module.  * The following API routes should be created:    * GET `/api/notes` - Should read the `db.json` file and return all saved notes as JSON.    * POST `/api/notes` - Should recieve a new note to save on the request body, add it to the `db.json` file, and then return the new note to the client.    * DELETE `/api/notes/:id` - Should recieve a query paramter containing the id of a note to delete. This means you'll need to find a way to give each note a unique `id` when it's saved. In order to delete a note, you'll need to read all notes from the `db.json` file, remove the note with the given `id` property, and then rewrite the notes to the `db.json` file.  ## User Story  AS A user, I want to be able to write and save notes  I WANT to be able to delete notes I've written before  SO THAT I can organize my thoughts and keep track of tasks I need to complete  ## Business Context  For users that need to keep track of a lot of information, it's easy to forget or be unable to recall something important. Being able to take persistent notes allows users to have written information available when needed.  ## Acceptance Criteria  Application should allow users to create and save notes.  Application should allow users to view previously saved notes.  Application should allow users to delete previously saved notes.  - - -  ## Commit Early and Often  One of the most important skills to master as a web developer is version control. Building the habit of committing via Git is important for two reasons:  * Your commit history is a signal to employers that you are actively working on projects and learning new skills.  * Your commit history allows you to revert your codebase in the event that you need to return to a previous state.  Follow these guidelines for committing:  * Make single-purpose commits for related changes to ensure a clean, manageable history. If you are fixing two issues, make two commits.  * Write descriptive, meaningful commit messages so that you and anyone else looking at your repository can easily understand its history.  * Don't commit half-done work, for the sake of your collaborators (and your future self!).  * Test your application before you commit to ensure functionality at every step in the development process.  We would like you to have well over 200 commits by graduation, so commit early and often!  ## Submission on BCS  You are required to submit the following:  * The URL of the deployed application  * The URL of the GitHub repository  - - - © 2019 Trilogy Education Services, a 2U, Inc. brand. All Rights Reserved.""}",,0
704,https://github.com/saurabhanimesh/Simple-FreeLancing-Website.git,"The website is called www.developersdream.in The website has been developed using HTML, CSS, JS and Data base. In this website creation no template, bootstrap or any other already coded mechanism has been used. This website has been coded from the scratch and everything in this website is completely manually coded from the scratch. The website is very simple to use and has very simple concept of using so that no one faces any difficulties while contacting to me. It is a simple static website where people can demand their request by filling a form and that data will come directly to me on my data base. Services, benefits and contact info has also been mentioned in there. This a static website where , people can scroll down and can see our services and our details and as well can interact with us by filling a form regarding what they want as their need. I bought a domain from hostinger.com for this website named as developersdream.in and the website is currently hosted on the Google’s Firebase Server. This website is all created with HTML for structuring, CSS for Designing and for additional dynamic functions Java Script has been used. The data base used in it is of Google’s Firebase. Firebase is the best platform for forming a Backend for mobile applications and web application currently across the world. So, every retrieval and fetching of data has been done through Firebase data base and all dynamic data insertion has also been done through that. The hosting of the website has been done also by the firebase server and the domain has been bought by Hostinger.com for one year. Media query has been used for making the website responsive for every platform available and every minute details has been taken care off in it. For the background a professional high quality picture has been taken from pexels.com and that particular pic is covering the whole website. In this website creation no template, bootstrap or any other already coded mechanism has been used. This website has been coded from the scratch and everything in this website is completely manually coded from the scratch.",,0
705,https://github.com/niloufar86/Intercity-travel-pattern-in-NYC.git,"ABSTRACT  Smartphone applications (“apps”) providing transit information are commonly used in urban areas. Many of these apps are available in multiple cities and automatically detect a user’s location via the location services in the smartphone. The multi-city nature of these apps provides a unique opportunity to understand how transit riders seek information as they travel between cities. The objective of this paper is to identify intercity travelers to/from the New York metropolitan region and understand their travel pattern in the visiting city, using one month of backend data from an application called “Transit”. Intercity travelers are identified based on the number of days each user has opened the app inside and outside of the New York region. Then, frequency of using the app are aggregated at county level and principal component analysis is performed to find the counties that usage within them impacts total app usage, by the intercity travelers, more significantly. In the next part, two trend analysis methods, decomposition method and wavelet method, are used to assess intercity traveler’s usage pattern over 31 days. Finally, to better capture pattern of using the app by day of week, trend function model and Poisson density distribution function are fitted to the data. Results of trend analysis showed that frequency of using “Transit” app is highly auto-correlated in one month as well as a big change point in the 10th day of the month. After removing the first 10 days, the auto-correlation in data was removed. For the remaining 20 days, trend analysis showed a 3 day period and a sin-cos function (with the period of 3 days) was found to be the best fitted model for frequency of using the app per day. This result captured the daily app usage pattern which was the same as the pattern that is usually observed in the transit usage data. The limitation of this research is that only one month of the Transit app data was used, errors in GPS data and difference between transit users’ behavior in searching for transit information and actually using the transit system.",,0
706,https://github.com/wdcd175/APP-Develop.git,"The best App Developers for contract in Gurgaon. another versatile application structure and format again and again. The more intricate the undertaking is the better is released out of our portable application engineers. We have the capacity to convey the best portable application revealing motor and versatile application backend system.To satisfy the requests of clients, the Android App Developers are likewise advancing better approaches to make new highlights. They are including new functionalities into their applications. It is expanding the degrees of these applications and the stages as well. Individuals can get more highlights applications and accomplish their work simpler than previously. Thus, in the event that you need a best portable application in  your business. The Best IOS and Android application advancement organization ought to be your first need. It will assist you with reaching the most profitable crowd in your field to go for a site and application as a matter of first importance.  There are Include your applications, works, and versatile application advancement organization data Appslure is a Brilliant portable Application Development Company in Delhi, Delhi NCR, Noida, Gurgaon India. Our application engineers group are master in iOS, Android, iPhone App Service. Appslure not just needs to be an Offshore improvement organization however your Extended It group, who you can depend on.  Top points of Mobile App Development:-             Improves Efficiency            Offers High Scalability            Makes sure about Your App Data            Coordinates With Existing Software            Simple to Maintain            Improves Customer Relationship            Encourages New Client Data Retrieval            Gives Real-time Project Access            Straightforwardness in Project Management            Record Digital Files for Accountability",,0
707,https://github.com/Taste-Technologies-Inc/Senior-Software-Engineer.git,"{""Taste | Senior Software Engineer  Taste is looking for a Senior Software Engineer to join the founding team in NYC! We're helping amazing restaurants manage this incredibly difficult crisis. We've built and are quickly scaling a marketplace for Fine Dining at Home experiences so foodies can get their favorite restaurant experiences at home. For restaurants, we're bringing large orders to help them through this tough and unique period. The initial team is a group of passionate ex-Google and Tesla engineers, and we're looking for a senior software engineer to join us. You will be working directly with the founders to scale our marketplace and save more restaurants. To apply, please send your resume to team+eng@gettaste.com. taste.recruiting.pdf  Your responsibilities: Design complex mission-critical backend systems that perform at scale Create dynamic pixel perfect web UIs Build intelligent systems that interact with the real world and have impact on real people's lives, including algorithms to optimize routing and streamline delivery operations Key qualifications: Loves amazing food and passionate about saving restaurants! Experience building, deploying, and maintaining systems at scale Deep understanding of system design, data structures, and algorithms 2+ years of experience in software engineering BS/MS/PhD in Computer Science Comfortable with Python, JavaScript Nice to have: Experience reducing NP Hard problems to other NP Hard problems Prior experience with Django, statically typed Python, HTML, CSS, JS Experience with developing and running large scale distributed storage systems, service oriented architectures, and reliable monitoring and deployment infrastructure. Familiarity with geospatial datasets and services, such as maps, local search, points of interest and business listings data, mobile device location and GPS traces.""}",,0
708,https://github.com/damritavmware/Front-end-developer-with-fullstack-expeience.git,"Technology : Significant experience building frontend applications. Thorough understanding of React.js and its core principles Provided solid markup skills in utilizing HTML5, CSS3, JavaScript, and jQuery Experienced with  technologies such as: React JS, JavaScript Frameworks , JSON, AJAX and Bootstrap Proficiency with JavaScript(ES6), CSS, HTML5, ReactJS, Redux, jQuery, Nodejs. Experience with data structure libraries (e.g., Immutable.js) Strong proficiency in JavaScript, including DOM manipulation and the JavaScript object model Protocols : Excellent understanding of common web services protocols e.g. HTTPS, HTTP, JSON, & REST Experience with RESTful APIs & API Security Knowledge of modern authorization mechanisms, such as JSON Web Token UX Design : Ensure the technical feasibility of UI/UX design Experience with designing user interfaces and enterprise dashboards. Experience converting a define UX Mockup to UI Delivery Design Pattern : Design, develop user interfaces using JavaScript design patterns, supporting MVC frameworks. Basic understanding of how back-end development works. Knowledge of designing mark up, developing the UI of websites and/or web applications Demonstrated understanding of UX and UI design with an emphasis on maximizing usability Knowledge of using REST web services and working with interface design Familiarity of  Backend Driven UI approach. Familiarity of UI Design Patterns. Deep understanding of Development intricacies of multiple platforms, devices and layouts. Very strong in object-oriented concepts & design patterns. Development Process : Familiarity with modern front-end build pipelines and tools Familiarity with code versioning tools. (i.e. Git) Demonstrable abilities to optimize code. Focus on quality & ability to perform code reviews. Ability to guide & develop other team members on technical front. Strong analytical skills for effective problem solving. Experience with test-driven development and frameworks/technologies to test frontend applications. Strong grasp of functional programming patterns and concepts.",,0
709,https://github.com/isaacizey/M-pastoralism.git," M-PASTORALIST This is a mobile application that requires minimum data to operate. It’s aimed to making the lives of pastoral communities all over the world easier as it enables them to have information on the available resources, safe routes, governance (security, permits to land, cultural activities and exhibitions) and the culture of other communities. This application enables the pastoralist communities to interact. The application implements chat tool through which they can send direct messages to one another. It also enables them to post updates in individual portals. They will be able to upload images of thing such as animal affected diseases. Most of the information required will be locally stored reducing data requirement for slow connections. In the instance of migration, the pastoralist will easily know about their destination before they begin the journey. The app will provide information on available pasture land, water availability, culture of the communities in the area, trade facilities and market places, their system of governance and also the facilities such as schools for their children, hospitals and emergency services available, government institutions such as police posts and other security systems. They will also have access to information concerning safe routes to their destination. The application utilizes GPS technology to provide information on climatic condition of the various pastoral regions in its scope. It also incorporates daily weather forecast information for each region enabling one to plan for any future changes. Through the application the government will easily communicate to the app users on possible disasters and disease outbreaks and recommend solutions through text messages.  Economically, the apps will save the users both time and money by providing them with information on the safest and cheapest routs to follow. They will also have access to the knowledge of the nearest market places in the area. This enables them to better participate in economic activities and boost their livelihoods. The app provides information on the culture of pastoral communities that are living in a particular area. This enables the migrating pastoralist to adjust to the ways of life of a place. Through this knowledge they will also follow the right procedures before entering a place.  It will therefore promote peaceful coexistence among various group.  The authorities in each region will be able to use the backend data such as sum of the pastoralists in an area, number of livestock and area occupied by each pastoralist. Thus, it will be easy for them to easily map the pasture land and allocate it to individuals. The authorities will also be able to know when the resources are fully utilized and not allow any more pastoralists into their jurisdiction.  In the cases of emergencies such as natural disasters, the emergency button which is easily visible in each window will enable them to easily post the problem and warn others about it. They will also be able to reach out to the emergency service available.  ",,0
710,https://github.com/Awesome12-arch/Detecting-the-Spam-messages-using-Keras-in-Python.git,"SMS is the abbreviation for Short Messaging Service which uses standard protocols for mobile devices to exchange information via short text messages. Today SMS’s are an easy, inexpensive and widely accepted way to communicate rather than phone calls. Spam can be described as random unsolicited messages sent at large without any authorization from the receiver. People still deal with spammer’s misusing SMS’s to advertise false claims and can gain access to private information of users. Emails, social media sites, review, and even Twitter has seen spammers trying to intrude everywhere with the advent of Internet. Spam appears in many forms like comments, emails, search results and personal messages where spammers tend to gain revenues. Various Machine Learning algorithms like Neural Networks have tried to detect spam messages and normal messages or ham from SMS’s. These techniques can learn high level features automatically using raw data unlike traditional ways where features are selected after analysis for classification. In this research paper, we propose a new method utilizing Recurrent Neural Network (RNN) and Long Short Term Memory (LSTM) using Keras models and Tensorflow backend to detect Spam and Ham from `SpamSMSCollection’ dataset available at UCI machine learning repository. Crucial preprocessing of dataset included tokenization, TF-IDF Vectorization and removal of stopwords. Overall accuracy of 98% is achieved and shows improvement from other machine learning algorithms for spam detection.",,0
711,https://github.com/TamalSaha481-oss/student-percentage-cal.git,"Description  An online marks percentage calculator to measure the percentage of marks obtained in the examination. Enter the marks you have scored and also provide the total marks to find the exam mark percentage.  This project is constructed under the Ubuntu OS (16.04).  The software’s that are used in this project are php, html, apache2 and MySQL.   PHP is a recursive acronym for ""PHP: Hypertext Preprocessor"". PHP is a server side scripting language that is embedded in HTML. It is used to manage dynamic content, databases, session tracking, even build entire e-commerce sites. The php version that is used in this project is php 7.2.24. At the first step we need create two files one is for html and one is for php. In the Html file the front end part takes place and in the php file the backend part exist. Before connecting the MySQL to the page, we need to create a database in the server and create a table in the database. So that the data that is entered in the html page gets entered into the sql.   MySQL is an Oracle-backed open source relational database management system (RDBMS) based on Structured Query Language (SQL). MySQL runs on virtually all platforms, including Linux, UNIX and Windows. MySQL is an important component of an open source enterprise stack called LAMP.   Apache Web Server is an open-source web server creation, deployment and management software. Initially developed by a group of software programmers, it is now maintained by the Apache Software Foundation. The html file is run on the localhost of the apache2.PHP is scripting language which does run directly on browser. for running them  you need to setup a server or use online server. For local server we will be using  **apache** and **php**.   Prerequisites: -  * Apache  * PHP  * MYSQL    Installing Prerequisites: -  For Apache: - sudo apt-get install apache2  For PHP: - sudo apt-get install php  For install MySQL: - sudo apt install mysql-server    Steps to run the code: -   Step 1: - After installing the Apache2,  Saving the old page of apache welcome. (In case you may need that in future.)   Step 2: -  Make a PHP file to write code in it.  sudo gedit /var/www/main.php   Step 3: -  Now open the the main.php shared file and copy the codes from it and paste it.  Or  You can skip **Step: 2** and copy the file directly into the html folder.  sudo cp main.php /var/www/   Step 4: -  Create the html page using sudo gedit /var/www/mainaapage.html  Restart Apache: sudo service apache2 restartRunning the tests: -  Open Your Browser and Enter localhost into address bar.  “localhost/htmlpage.html” then it should open the file and enter the marks as you require. ",,0
712,https://github.com/v9l9/minecraft-.git,"[21Sep2020 05:55:44.354] [main/INFO] [cpw.mods.modlauncher.Launcher/MODLAUNCHER]: ModLauncher running: args [--username, V9l9, --version, 1.16.3-forge-34.0.9, --gameDir, C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft, --assetsDir, C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\assets, --assetIndex, 1.16, --uuid, 1165d438a45a4585ac728e78d6848fbb, --accessToken, ????????, --userType, mojang, --versionType, release, --launchTarget, fmlclient, --fml.forgeVersion, 34.0.9, --fml.mcVersion, 1.16.3, --fml.forgeGroup, net.minecraftforge, --fml.mcpVersion, 20200911.084530] [21Sep2020 05:55:44.359] [main/INFO] [cpw.mods.modlauncher.Launcher/MODLAUNCHER]: ModLauncher 7.0.1+78+master.e9771d8 starting: java version 1.8.0_51 by Oracle Corporation [21Sep2020 05:55:44.378] [main/DEBUG] [cpw.mods.modlauncher.LaunchServiceHandler/MODLAUNCHER]: Found launch services [minecraft,testharness,fmlclient,fmlserver] [21Sep2020 05:55:44.394] [main/DEBUG] [cpw.mods.modlauncher.NameMappingServiceHandler/MODLAUNCHER]: Found naming services : [] [21Sep2020 05:55:44.475] [main/DEBUG] [cpw.mods.modlauncher.LaunchPluginHandler/MODLAUNCHER]: Found launch plugins: [mixin,eventbus,object_holder_definalize,runtime_enum_extender,accesstransformer,capability_inject_definalize,runtimedistcleaner] [21Sep2020 05:55:44.491] [main/DEBUG] [cpw.mods.modlauncher.TransformationServicesHandler/MODLAUNCHER]: Discovering transformation services [21Sep2020 05:55:44.515] [main/DEBUG] [cpw.mods.modlauncher.TransformationServicesHandler/MODLAUNCHER]: Found additional transformation services from discovery services: [] [21Sep2020 05:55:44.604] [main/DEBUG] [cpw.mods.modlauncher.TransformationServicesHandler/MODLAUNCHER]: Found transformer services : [mixin,fml] [21Sep2020 05:55:44.605] [main/DEBUG] [cpw.mods.modlauncher.TransformationServicesHandler/MODLAUNCHER]: Transformation services loading [21Sep2020 05:55:44.606] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Loading service mixin [21Sep2020 05:55:44.606] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Loaded service mixin [21Sep2020 05:55:44.606] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Loading service fml [21Sep2020 05:55:44.606] [main/DEBUG] [net.minecraftforge.fml.loading.FMLServiceProvider/]: Injecting tracing printstreams for STDOUT/STDERR. [21Sep2020 05:55:44.610] [main/DEBUG] [net.minecraftforge.fml.loading.LauncherVersion/CORE]: Found FMLLauncher version 34.0 [21Sep2020 05:55:44.610] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: FML 34.0 loading [21Sep2020 05:55:44.610] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: FML found ModLauncher version : 7.0.1+78+master.e9771d8 [21Sep2020 05:55:44.611] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: Initializing modjar URL handler [21Sep2020 05:55:44.611] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: FML found AccessTransformer version : 2.2.0+57+master.16c1bdb [21Sep2020 05:55:44.612] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: FML found EventBus version : 3.0.3+63+master.b6b4769 [21Sep2020 05:55:44.612] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: Found Runtime Dist Cleaner [21Sep2020 05:55:44.617] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: FML found CoreMod version : 3.0.0+9+master.3817658 [21Sep2020 05:55:44.618] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: Found ForgeSPI package implementation version 3.1.1+12+master.3ce14ad [21Sep2020 05:55:44.618] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: Found ForgeSPI package specification 3 [21Sep2020 05:55:45.372] [main/INFO] [net.minecraftforge.fml.loading.FixSSL/CORE]: Added Lets Encrypt root certificates as additional trust [21Sep2020 05:55:45.372] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Loaded service fml [21Sep2020 05:55:45.375] [main/DEBUG] [cpw.mods.modlauncher.TransformationServicesHandler/MODLAUNCHER]: Configuring option handling for services [21Sep2020 05:55:45.386] [main/DEBUG] [cpw.mods.modlauncher.TransformationServicesHandler/MODLAUNCHER]: Transformation services initializing [21Sep2020 05:55:45.386] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Initializing transformation service mixin [21Sep2020 05:55:45.389] [main/DEBUG] [mixin/]: Mixin bootstrap service org.spongepowered.asm.service.mojang.MixinServiceLaunchWrapperBootstrap is not available: LaunchWrapper is not available [21Sep2020 05:55:45.396] [main/DEBUG] [mixin/]: MixinService [ModLauncher] was successfully booted in sun.misc.Launcher$AppClassLoader@4554617c [21Sep2020 05:55:45.429] [main/INFO] [mixin/]: SpongePowered MIXIN Subsystem Version=0.8.1 Source=file:/C:/Users/Lenovo/AppData/Roaming/.minecraft/libraries/org/spongepowered/mixin/0.8.1/mixin-0.8.1.jar Service=ModLauncher Env=CLIENT [21Sep2020 05:55:45.431] [main/DEBUG] [mixin/]: Initialising Mixin Platform Manager [21Sep2020 05:55:45.432] [main/DEBUG] [mixin/]: Adding mixin platform agents for container ModLauncher Root Container(4f56a0a2) [21Sep2020 05:55:45.433] [main/DEBUG] [mixin/]: Instancing new MixinPlatformAgentMinecraftForge for ModLauncher Root Container(4f56a0a2) [21Sep2020 05:55:45.433] [main/DEBUG] [mixin/]: MixinPlatformAgentMinecraftForge rejected container ModLauncher Root Container(4f56a0a2) [21Sep2020 05:55:45.434] [main/DEBUG] [mixin/]: Instancing new MixinPlatformAgentDefault for ModLauncher Root Container(4f56a0a2) [21Sep2020 05:55:45.434] [main/DEBUG] [mixin/]: MixinPlatformAgentDefault accepted container ModLauncher Root Container(4f56a0a2) [21Sep2020 05:55:45.437] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Initialized transformation service mixin [21Sep2020 05:55:45.437] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Initializing transformation service fml [21Sep2020 05:55:45.437] [main/DEBUG] [net.minecraftforge.fml.loading.FMLServiceProvider/CORE]: Setting up basic FML game directories [21Sep2020 05:55:45.439] [main/DEBUG] [net.minecraftforge.fml.loading.FileUtils/CORE]: Found existing GAMEDIR directory : C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft [21Sep2020 05:55:45.439] [main/DEBUG] [net.minecraftforge.fml.loading.FMLPaths/CORE]: Path GAMEDIR is C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft [21Sep2020 05:55:45.440] [main/DEBUG] [net.minecraftforge.fml.loading.FileUtils/CORE]: Found existing MODSDIR directory : C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods [21Sep2020 05:55:45.440] [main/DEBUG] [net.minecraftforge.fml.loading.FMLPaths/CORE]: Path MODSDIR is C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods [21Sep2020 05:55:45.441] [main/DEBUG] [net.minecraftforge.fml.loading.FileUtils/CORE]: Found existing CONFIGDIR directory : C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\config [21Sep2020 05:55:45.441] [main/DEBUG] [net.minecraftforge.fml.loading.FMLPaths/CORE]: Path CONFIGDIR is C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\config [21Sep2020 05:55:45.441] [main/DEBUG] [net.minecraftforge.fml.loading.FMLPaths/CORE]: Path FMLCONFIG is C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\config\\fml.toml [21Sep2020 05:55:45.441] [main/DEBUG] [net.minecraftforge.fml.loading.FMLServiceProvider/CORE]: Loading configuration [21Sep2020 05:55:45.491] [main/DEBUG] [net.minecraftforge.fml.loading.FileUtils/CORE]: Found existing default config directory directory : C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\defaultconfigs [21Sep2020 05:55:45.491] [main/DEBUG] [net.minecraftforge.fml.loading.FMLServiceProvider/CORE]: Preparing ModFile [21Sep2020 05:55:45.495] [main/DEBUG] [net.minecraftforge.fml.loading.FMLServiceProvider/CORE]: Preparing launch handler [21Sep2020 05:55:45.495] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: Using fmlclient as launch service [21Sep2020 05:55:46.483] [main/DEBUG] [net.minecraftforge.fml.loading.FMLLoader/CORE]: Received command line version data  : MC Version: \'1.16.3\' MCP Version: \'20200911.084530\' Forge Version: \'34.0.9\' Forge group: \'net.minecraftforge\' [21Sep2020 05:55:46.485] [main/DEBUG] [net.minecraftforge.fml.loading.LibraryFinder/CORE]: Found JAR asm at path C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\org\\ow2\\asm\\asm\\7.2\\asm-7.2.jar [21Sep2020 05:55:46.485] [main/DEBUG] [net.minecraftforge.fml.loading.LibraryFinder/CORE]: Found probable library path C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries [21Sep2020 05:55:46.486] [main/DEBUG] [net.minecraftforge.fml.loading.LibraryFinder/CORE]: Found forge path C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar is present [21Sep2020 05:55:46.487] [main/DEBUG] [net.minecraftforge.fml.loading.LibraryFinder/CORE]: SRG MC at C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraft\\client\\1.16.3-20200911.084530\\client-1.16.3-20200911.084530-srg.jar is present [21Sep2020 05:55:46.487] [main/DEBUG] [net.minecraftforge.fml.loading.LibraryFinder/CORE]: MC Extras at C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraft\\client\\1.16.3-20200911.084530\\client-1.16.3-20200911.084530-extra.jar is present [21Sep2020 05:55:46.488] [main/DEBUG] [net.minecraftforge.fml.loading.LibraryFinder/CORE]: Forge patches at C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar is present [21Sep2020 05:55:46.494] [main/DEBUG] [net.minecraftforge.fml.loading.LanguageLoadingProvider/CORE]: Found 0 language providers [21Sep2020 05:55:46.495] [main/DEBUG] [net.minecraftforge.fml.loading.LanguageLoadingProvider/CORE]: Adding forge as a language from C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar [21Sep2020 05:55:46.498] [main/DEBUG] [net.minecraftforge.fml.loading.LanguageLoadingProvider/CORE]: Adding file:/C:/Users/Lenovo/AppData/Roaming/.minecraft/libraries/net/minecraftforge/forge/1.16.3-34.0.9/forge-1.16.3-34.0.9-universal.jar to languageloader classloader [21Sep2020 05:55:46.541] [main/DEBUG] [net.minecraftforge.fml.loading.LanguageLoadingProvider/CORE]: Found 2 language providers [21Sep2020 05:55:46.542] [main/DEBUG] [net.minecraftforge.fml.loading.LanguageLoadingProvider/CORE]: Found language provider javafml, version 34.0 [21Sep2020 05:55:46.549] [main/DEBUG] [net.minecraftforge.fml.loading.LanguageLoadingProvider/CORE]: Found language provider minecraft, version 1 [21Sep2020 05:55:46.554] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Initialized transformation service fml [21Sep2020 05:55:46.554] [main/DEBUG] [cpw.mods.modlauncher.NameMappingServiceHandler/MODLAUNCHER]: Current naming domain is \'srg\' [21Sep2020 05:55:46.555] [main/DEBUG] [cpw.mods.modlauncher.NameMappingServiceHandler/MODLAUNCHER]: Identified name mapping providers {} [21Sep2020 05:55:46.555] [main/DEBUG] [cpw.mods.modlauncher.TransformationServicesHandler/MODLAUNCHER]: Transformation services begin scanning [21Sep2020 05:55:46.556] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Beginning scan trigger - transformation service mixin [21Sep2020 05:55:46.556] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: End scan trigger - transformation service mixin [21Sep2020 05:55:46.557] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Beginning scan trigger - transformation service fml [21Sep2020 05:55:46.557] [main/DEBUG] [net.minecraftforge.fml.loading.FMLServiceProvider/CORE]: Initiating mod scan [21Sep2020 05:55:46.632] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModListHandler/CORE]: Found mod coordinates from lists: [] [21Sep2020 05:55:46.686] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModDiscoverer/CORE]: Found Mod Locators : (mods folder:null),(maven libs:null),(exploded directory:null),(minecraft:null) [21Sep2020 05:55:46.747] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Considering mod file candidate C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar [21Sep2020 05:55:46.805] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFileInfo/LOADING]: Found valid mod file ironchest-1.16.2-11.1.5.jar with {ironchest} mods - versions {1.16.2-11.1.5} [21Sep2020 05:55:46.806] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFile/LOADING]: Loading mod file C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar with language javafml [21Sep2020 05:55:46.808] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Considering mod file candidate C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\SmartMoving-1.8.9-16.3.jar [21Sep2020 05:55:46.808] [main/WARN] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Mod file Mod File: C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\SmartMoving-1.8.9-16.3.jar is missing mods.toml file [21Sep2020 05:55:46.808] [main/WARN] [net.minecraftforge.fml.loading.moddiscovery.ModDiscoverer/SCAN]: File C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\SmartMoving-1.8.9-16.3.jar has been ignored - it is invalid [21Sep2020 05:55:46.810] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Considering mod file candidate C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar [21Sep2020 05:55:46.811] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFileInfo/LOADING]: Found valid mod file forge-1.16.3-34.0.9-universal.jar with {forge} mods - versions {34.0.9} [21Sep2020 05:55:46.816] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFile/LOADING]: Loading mod file C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar with language javafml [21Sep2020 05:55:46.878] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Found coremod fieldtomethodtransformers with Javascript path META-INF/fieldtomethodtransformers.js [21Sep2020 05:55:46.879] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFile/LOADING]: Found coremod META-INF/fieldtomethodtransformers.js [21Sep2020 05:55:46.879] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFileParser/LOADING]: Considering mod file candidate C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar [21Sep2020 05:55:46.901] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFileInfo/LOADING]: Found valid mod file forge-1.16.3-34.0.9-client.jar with {minecraft} mods - versions {1.16.3} [21Sep2020 05:55:46.901] [main/DEBUG] [net.minecraftforge.fml.loading.moddiscovery.ModFile/LOADING]: Loading mod file C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar with language minecraft [21Sep2020 05:55:46.923] [main/DEBUG] [net.minecraftforge.fml.loading.ModSorter/LOADING]: Found 1 mandatory requirements [21Sep2020 05:55:46.924] [main/DEBUG] [net.minecraftforge.fml.loading.ModSorter/LOADING]: Found 0 mandatory mod requirements missing [21Sep2020 05:55:47.558] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: End scan trigger - transformation service fml [21Sep2020 05:55:47.558] [main/DEBUG] [cpw.mods.modlauncher.TransformationServicesHandler/MODLAUNCHER]: Transformation services loading transformers [21Sep2020 05:55:47.559] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Initializing transformers for transformation service mixin [21Sep2020 05:55:47.560] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Initialized transformers for transformation service mixin [21Sep2020 05:55:47.560] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Initializing transformers for transformation service fml [21Sep2020 05:55:47.560] [main/DEBUG] [net.minecraftforge.fml.loading.FMLServiceProvider/CORE]: Loading coremod transformers [21Sep2020 05:55:47.561] [main/DEBUG] [net.minecraftforge.coremod.CoreModEngine/COREMOD]: Loading CoreMod from META-INF/fieldtomethodtransformers.js [21Sep2020 05:55:47.779] [main/DEBUG] [net.minecraftforge.coremod.CoreModEngine/COREMOD]: CoreMod loaded successfully [21Sep2020 05:55:47.787] [main/DEBUG] [cpw.mods.modlauncher.TransformStore/MODLAUNCHER]: Adding transformer net.minecraftforge.coremod.transformer.CoreModClassTransformer@7bd69e82 to Target : CLASS {Lnet/minecraft/potion/EffectInstance;} {} {V} [21Sep2020 05:55:47.788] [main/DEBUG] [cpw.mods.modlauncher.TransformStore/MODLAUNCHER]: Adding transformer net.minecraftforge.coremod.transformer.CoreModClassTransformer@3aaf4f07 to Target : CLASS {Lnet/minecraft/block/FlowingFluidBlock;} {} {V} [21Sep2020 05:55:47.788] [main/DEBUG] [cpw.mods.modlauncher.TransformStore/MODLAUNCHER]: Adding transformer net.minecraftforge.coremod.transformer.CoreModClassTransformer@5cbf9e9f to Target : CLASS {Lnet/minecraft/item/BucketItem;} {} {V} [21Sep2020 05:55:47.788] [main/DEBUG] [cpw.mods.modlauncher.TransformStore/MODLAUNCHER]: Adding transformer net.minecraftforge.coremod.transformer.CoreModClassTransformer@18e8473e to Target : CLASS {Lnet/minecraft/block/StairsBlock;} {} {V} [21Sep2020 05:55:47.789] [main/DEBUG] [cpw.mods.modlauncher.TransformStore/MODLAUNCHER]: Adding transformer net.minecraftforge.coremod.transformer.CoreModClassTransformer@5a2f016d to Target : CLASS {Lnet/minecraft/block/FlowerPotBlock;} {} {V} [21Sep2020 05:55:47.789] [main/DEBUG] [cpw.mods.modlauncher.TransformStore/MODLAUNCHER]: Adding transformer net.minecraftforge.coremod.transformer.CoreModClassTransformer@1a38ba58 to Target : CLASS {Lnet/minecraft/item/FishBucketItem;} {} {V} [21Sep2020 05:55:47.789] [main/DEBUG] [cpw.mods.modlauncher.TransformationServiceDecorator/MODLAUNCHER]: Initialized transformers for transformation service fml [21Sep2020 05:55:47.825] [main/DEBUG] [mixin/]: Processing prepare() for PlatformAgent[MixinPlatformAgentDefault:ModLauncher Root Container(4f56a0a2)] [21Sep2020 05:55:47.825] [main/DEBUG] [mixin/]: Processing launch tasks for PlatformAgent[MixinPlatformAgentDefault:ModLauncher Root Container(4f56a0a2)] [21Sep2020 05:55:47.825] [main/DEBUG] [mixin/]: Adding mixin platform agents for container ContainerHandleModLauncher.Resource(ironchest-1.16.2-11.1.5.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar) [21Sep2020 05:55:47.825] [main/DEBUG] [mixin/]: Instancing new MixinPlatformAgentMinecraftForge for ContainerHandleModLauncher.Resource(ironchest-1.16.2-11.1.5.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar) [21Sep2020 05:55:47.825] [main/DEBUG] [mixin/]: MixinPlatformAgentMinecraftForge rejected container ContainerHandleModLauncher.Resource(ironchest-1.16.2-11.1.5.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar) [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: Instancing new MixinPlatformAgentDefault for ContainerHandleModLauncher.Resource(ironchest-1.16.2-11.1.5.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar) [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: MixinPlatformAgentDefault accepted container ContainerHandleModLauncher.Resource(ironchest-1.16.2-11.1.5.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar) [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: Processing prepare() for PlatformAgent[MixinPlatformAgentDefault:ContainerHandleModLauncher.Resource(ironchest-1.16.2-11.1.5.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar)] [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: Adding mixin platform agents for container ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-universal.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar) [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: Instancing new MixinPlatformAgentMinecraftForge for ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-universal.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar) [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: MixinPlatformAgentMinecraftForge rejected container ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-universal.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar) [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: Instancing new MixinPlatformAgentDefault for ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-universal.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar) [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: MixinPlatformAgentDefault accepted container ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-universal.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar) [21Sep2020 05:55:47.826] [main/DEBUG] [mixin/]: Processing prepare() for PlatformAgent[MixinPlatformAgentDefault:ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-universal.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar)] [21Sep2020 05:55:47.827] [main/DEBUG] [mixin/]: Adding mixin platform agents for container ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-client.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar) [21Sep2020 05:55:47.827] [main/DEBUG] [mixin/]: Instancing new MixinPlatformAgentMinecraftForge for ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-client.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar) [21Sep2020 05:55:47.827] [main/DEBUG] [mixin/]: MixinPlatformAgentMinecraftForge rejected container ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-client.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar) [21Sep2020 05:55:47.827] [main/DEBUG] [mixin/]: Instancing new MixinPlatformAgentDefault for ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-client.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar) [21Sep2020 05:55:47.827] [main/DEBUG] [mixin/]: MixinPlatformAgentDefault accepted container ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-client.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar) [21Sep2020 05:55:47.827] [main/DEBUG] [mixin/]: Processing prepare() for PlatformAgent[MixinPlatformAgentDefault:ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-client.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar)] [21Sep2020 05:55:47.827] [main/DEBUG] [mixin/]: inject() running with 4 agents [21Sep2020 05:55:47.828] [main/DEBUG] [mixin/]: Processing inject() for PlatformAgent[MixinPlatformAgentDefault:ModLauncher Root Container(4f56a0a2)] [21Sep2020 05:55:47.828] [main/DEBUG] [mixin/]: Processing inject() for PlatformAgent[MixinPlatformAgentDefault:ContainerHandleModLauncher.Resource(ironchest-1.16.2-11.1.5.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar)] [21Sep2020 05:55:47.828] [main/DEBUG] [mixin/]: Processing inject() for PlatformAgent[MixinPlatformAgentDefault:ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-universal.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar)] [21Sep2020 05:55:47.828] [main/DEBUG] [mixin/]: Processing inject() for PlatformAgent[MixinPlatformAgentDefault:ContainerHandleModLauncher.Resource(forge-1.16.3-34.0.9-client.jar:C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-client.jar)] [21Sep2020 05:55:47.828] [main/INFO] [cpw.mods.modlauncher.LaunchServiceHandler/MODLAUNCHER]: Launching target \'fmlclient\' with arguments [--version, 1.16.3-forge-34.0.9, --gameDir, C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft, --assetsDir, C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\assets, --uuid, 1165d438a45a4585ac728e78d6848fbb, --username, V9l9, --assetIndex, 1.16, --accessToken, ????????, --userType, mojang, --versionType, release] [21Sep2020 05:55:47.936] [main/DEBUG] [mixin/]: Error cleaning class output directory: .mixin.out\\class: failed to delete one or more files; see suppressed exceptions for details [21Sep2020 05:55:47.953] [main/DEBUG] [mixin/]: Preparing mixins for MixinEnvironment[DEFAULT] [21Sep2020 05:55:48.965] [pool-3-thread-1/DEBUG] [net.minecraftforge.coremod.transformer.CoreModBaseTransformer/COREMOD]: Transforming net/minecraft/block/FlowingFluidBlock [21Sep2020 05:55:49.119] [pool-3-thread-1/DEBUG] [net.minecraftforge.coremod.transformer.CoreModBaseTransformer/COREMOD]: Transforming net/minecraft/block/StairsBlock [21Sep2020 05:55:49.283] [pool-3-thread-1/DEBUG] [net.minecraftforge.coremod.transformer.CoreModBaseTransformer/COREMOD]: Transforming net/minecraft/block/FlowerPotBlock [21Sep2020 05:55:55.454] [pool-3-thread-1/DEBUG] [net.minecraftforge.coremod.transformer.CoreModBaseTransformer/COREMOD]: Transforming net/minecraft/item/BucketItem [21Sep2020 05:55:55.465] [pool-3-thread-1/DEBUG] [net.minecraftforge.coremod.transformer.CoreModBaseTransformer/COREMOD]: Transforming net/minecraft/item/FishBucketItem [21Sep2020 05:55:55.730] [pool-3-thread-1/DEBUG] [net.minecraftforge.coremod.transformer.CoreModBaseTransformer/COREMOD]: Transforming net/minecraft/potion/EffectInstance [21Sep2020 05:55:57.884] [Render thread/INFO] [com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService/]: Environment: authHost=\'https://authserver.mojang.com\', accountsHost=\'https://api.mojang.com\', sessionHost=\'https://sessionserver.mojang.com\', name=\'PROD\' [21Sep2020 05:55:57.892] [Render thread/INFO] [net.minecraft.client.Minecraft/]: Setting user: V9l9 [21Sep2020 05:55:58.128] [Render thread/INFO] [net.minecraft.client.Minecraft/]: Backend library: LWJGL version 3.2.2 build 10 [21Sep2020 05:55:59.294] [Render thread/DEBUG] [net.minecraftforge.fml.ForgeI18n/CORE]: Loading I18N data entries: 4931 [21Sep2020 05:55:59.518] [Render thread/DEBUG] [net.minecraftforge.fml.ModLoader/CORE]: Loading Network data for FML net version: FML2 [21Sep2020 05:55:59.524] [Render thread/DEBUG] [net.minecraftforge.fml.ModWorkManager/LOADING]: Using 4 threads for parallel mod-loading [21Sep2020 05:55:59.603] [Render thread/DEBUG] [net.minecraftforge.fml.ModLoader/LOADING]: ModContainer is cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.608] [Render thread/DEBUG] [net.minecraftforge.fml.ModLoader/LOADING]: ModContainer is cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.609] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLJavaModLanguageProvider/LOADING]: Loading FMLModContainer from classloader cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 - got cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.610] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Creating FMLModContainer instance for net.minecraftforge.common.ForgeMod with classLoader cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 & cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.643] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Loaded modclass net.minecraftforge.common.ForgeMod with cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.643] [Render thread/DEBUG] [net.minecraftforge.fml.ModLoader/LOADING]: ModContainer is cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.643] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLJavaModLanguageProvider/LOADING]: Loading FMLModContainer from classloader cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 - got cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.643] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Creating FMLModContainer instance for com.progwml6.ironchest.IronChests with classLoader cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 & cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.646] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Loaded modclass com.progwml6.ironchest.IronChests with cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.783] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Loading mod instance forge of type net.minecraftforge.common.ForgeMod [21Sep2020 05:55:59.783] [modloading-worker-2/DEBUG] [net.minecraftforge.versions.forge.ForgeVersion/CORE]: Forge Version package package net.minecraftforge.versions.forge, Forge, version 34.0 from cpw.mods.modlauncher.TransformingClassLoader@7e8e8651 [21Sep2020 05:55:59.783] [modloading-worker-2/DEBUG] [net.minecraftforge.versions.forge.ForgeVersion/CORE]: Found Forge version 34.0.9 [21Sep2020 05:55:59.783] [modloading-worker-2/DEBUG] [net.minecraftforge.versions.forge.ForgeVersion/CORE]: Found Forge spec 34.0 [21Sep2020 05:55:59.783] [modloading-worker-2/DEBUG] [net.minecraftforge.versions.forge.ForgeVersion/CORE]: Found Forge group net.minecraftforge [21Sep2020 05:55:59.785] [modloading-worker-2/DEBUG] [net.minecraftforge.versions.mcp.MCPVersion/CORE]: Found MC version information 1.16.3 [21Sep2020 05:55:59.785] [modloading-worker-2/DEBUG] [net.minecraftforge.versions.mcp.MCPVersion/CORE]: Found MCP version information 20200911.084530 [21Sep2020 05:55:59.785] [modloading-worker-2/INFO] [net.minecraftforge.common.ForgeMod/FORGEMOD]: Forge mod loading, version 34.0.9, for MC 1.16.3 with MCP 20200911.084530 [21Sep2020 05:55:59.786] [modloading-worker-2/INFO] [net.minecraftforge.common.MinecraftForge/FORGE]: MinecraftForge v34.0.9 Initialized [21Sep2020 05:55:59.792] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Loading mod instance ironchest of type com.progwml6.ironchest.IronChests [21Sep2020 05:55:59.981] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Loaded mod instance ironchest of type com.progwml6.ironchest.IronChests [21Sep2020 05:55:59.981] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Injecting Automatic event subscribers for ironchest [21Sep2020 05:55:59.985] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.AutomaticEventSubscriber/LOADING]: Attempting to inject @EventBusSubscriber classes into the eventbus for ironchest [21Sep2020 05:55:59.989] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.AutomaticEventSubscriber/LOADING]: Auto-subscribing com.progwml6.ironchest.client.tileentity.IronChestsModels to MOD [21Sep2020 05:56:00.030] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.config.ConfigTracker/CONFIG]: Config file forge-client.toml for forge tracking [21Sep2020 05:56:00.030] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.config.ConfigTracker/CONFIG]: Config file forge-server.toml for forge tracking [21Sep2020 05:56:00.076] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Completed Automatic event subscribers for ironchest [21Sep2020 05:56:00.076] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : FMLConstructModEvent [21Sep2020 05:56:00.077] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : FMLConstructModEvent [21Sep2020 05:56:00.126] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Loaded mod instance forge of type net.minecraftforge.common.ForgeMod [21Sep2020 05:56:00.126] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Injecting Automatic event subscribers for forge [21Sep2020 05:56:00.126] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.AutomaticEventSubscriber/LOADING]: Attempting to inject @EventBusSubscriber classes into the eventbus for forge [21Sep2020 05:56:00.127] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.AutomaticEventSubscriber/LOADING]: Auto-subscribing net.minecraftforge.client.model.ModelDataManager to FORGE [21Sep2020 05:56:00.129] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Completed Automatic event subscribers for forge [21Sep2020 05:56:00.129] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : FMLConstructModEvent [21Sep2020 05:56:00.129] [modloading-worker-2/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : FMLConstructModEvent [21Sep2020 05:56:00.150] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.NewRegistry [21Sep2020 05:56:00.151] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.NewRegistry [21Sep2020 05:56:00.151] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.NewRegistry [21Sep2020 05:56:00.151] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.NewRegistry [21Sep2020 05:56:00.231] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:block> [21Sep2020 05:56:00.231] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:block> [21Sep2020 05:56:00.232] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:block> [21Sep2020 05:56:00.265] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:block> [21Sep2020 05:56:00.267] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:item> [21Sep2020 05:56:00.282] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:item> [21Sep2020 05:56:00.298] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:item> [21Sep2020 05:56:00.350] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:item> [21Sep2020 05:56:00.615] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<forge:loot_modifier_serializers> [21Sep2020 05:56:00.615] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<forge:loot_modifier_serializers> [21Sep2020 05:56:00.616] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<forge:loot_modifier_serializers> [21Sep2020 05:56:00.616] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<forge:loot_modifier_serializers> [21Sep2020 05:56:00.617] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:activity> [21Sep2020 05:56:00.617] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:activity> [21Sep2020 05:56:00.618] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:activity> [21Sep2020 05:56:00.618] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:activity> [21Sep2020 05:56:00.619] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:attribute> [21Sep2020 05:56:00.619] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:attribute> [21Sep2020 05:56:00.619] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:attribute> [21Sep2020 05:56:00.619] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:attribute> [21Sep2020 05:56:00.620] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:block_entity_type> [21Sep2020 05:56:00.620] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:block_entity_type> [21Sep2020 05:56:00.621] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:block_entity_type> [21Sep2020 05:56:00.623] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:block_entity_type> [21Sep2020 05:56:00.624] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:chunk_status> [21Sep2020 05:56:00.624] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:chunk_status> [21Sep2020 05:56:00.624] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:chunk_status> [21Sep2020 05:56:00.625] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:chunk_status> [21Sep2020 05:56:00.625] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:data_serializers> [21Sep2020 05:56:00.625] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:data_serializers> [21Sep2020 05:56:00.626] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:data_serializers> [21Sep2020 05:56:00.626] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:data_serializers> [21Sep2020 05:56:00.627] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:enchantment> [21Sep2020 05:56:00.627] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:enchantment> [21Sep2020 05:56:00.627] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:enchantment> [21Sep2020 05:56:00.627] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:enchantment> [21Sep2020 05:56:00.628] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:entity_type> [21Sep2020 05:56:00.628] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:entity_type> [21Sep2020 05:56:00.628] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:entity_type> [21Sep2020 05:56:00.628] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:entity_type> [21Sep2020 05:56:00.629] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:fluid> [21Sep2020 05:56:00.629] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:fluid> [21Sep2020 05:56:00.629] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:fluid> [21Sep2020 05:56:00.629] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:fluid> [21Sep2020 05:56:00.630] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:memory_module_type> [21Sep2020 05:56:00.630] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:memory_module_type> [21Sep2020 05:56:00.631] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:memory_module_type> [21Sep2020 05:56:00.632] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:memory_module_type> [21Sep2020 05:56:00.632] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:menu> [21Sep2020 05:56:00.632] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:menu> [21Sep2020 05:56:00.633] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:menu> [21Sep2020 05:56:00.635] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:menu> [21Sep2020 05:56:00.636] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:mob_effect> [21Sep2020 05:56:00.636] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:mob_effect> [21Sep2020 05:56:00.636] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:mob_effect> [21Sep2020 05:56:00.637] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:mob_effect> [21Sep2020 05:56:00.637] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:motive> [21Sep2020 05:56:00.637] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:motive> [21Sep2020 05:56:00.637] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:motive> [21Sep2020 05:56:00.637] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:motive> [21Sep2020 05:56:00.638] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:particle_type> [21Sep2020 05:56:00.638] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:particle_type> [21Sep2020 05:56:00.638] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:particle_type> [21Sep2020 05:56:00.638] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:particle_type> [21Sep2020 05:56:00.639] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:point_of_interest_type> [21Sep2020 05:56:00.639] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:point_of_interest_type> [21Sep2020 05:56:00.639] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:point_of_interest_type> [21Sep2020 05:56:00.639] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:point_of_interest_type> [21Sep2020 05:56:00.639] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:potion> [21Sep2020 05:56:00.639] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:potion> [21Sep2020 05:56:00.640] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:potion> [21Sep2020 05:56:00.640] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:potion> [21Sep2020 05:56:00.640] [Render thread/DEBUG] [net.minecraftforge.registries.ObjectHolderRef/]: Unable to lookup forge:conditional for public static net.minecraft.item.crafting.IRecipeSerializer net.minecraftforge.common.crafting.ConditionalRecipe.SERIALZIER. This means the object wasn\'t registered. It\'s likely just mod options. [21Sep2020 05:56:00.641] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:recipe_serializer> [21Sep2020 05:56:00.672] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:recipe_serializer> [21Sep2020 05:56:00.731] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:recipe_serializer> [21Sep2020 05:56:00.731] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:recipe_serializer> [21Sep2020 05:56:00.731] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:schedule> [21Sep2020 05:56:00.731] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:schedule> [21Sep2020 05:56:00.732] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:schedule> [21Sep2020 05:56:00.732] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:schedule> [21Sep2020 05:56:00.732] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:sensor_type> [21Sep2020 05:56:00.732] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:sensor_type> [21Sep2020 05:56:00.732] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:sensor_type> [21Sep2020 05:56:00.732] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:sensor_type> [21Sep2020 05:56:00.733] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:sound_event> [21Sep2020 05:56:00.733] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:sound_event> [21Sep2020 05:56:00.734] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:sound_event> [21Sep2020 05:56:00.734] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:sound_event> [21Sep2020 05:56:00.735] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:stat_type> [21Sep2020 05:56:00.735] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:stat_type> [21Sep2020 05:56:00.735] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:stat_type> [21Sep2020 05:56:00.735] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:stat_type> [21Sep2020 05:56:00.735] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:villager_profession> [21Sep2020 05:56:00.735] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:villager_profession> [21Sep2020 05:56:00.736] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:villager_profession> [21Sep2020 05:56:00.736] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:villager_profession> [21Sep2020 05:56:00.736] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/biome> [21Sep2020 05:56:00.736] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/biome> [21Sep2020 05:56:00.736] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/biome> [21Sep2020 05:56:00.736] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/biome> [21Sep2020 05:56:00.736] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/block_placer_type> [21Sep2020 05:56:00.736] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/block_placer_type> [21Sep2020 05:56:00.737] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/block_placer_type> [21Sep2020 05:56:00.737] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/block_placer_type> [21Sep2020 05:56:00.737] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/block_state_provider_type> [21Sep2020 05:56:00.737] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/block_state_provider_type> [21Sep2020 05:56:00.737] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/block_state_provider_type> [21Sep2020 05:56:00.737] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/block_state_provider_type> [21Sep2020 05:56:00.738] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/carver> [21Sep2020 05:56:00.738] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/carver> [21Sep2020 05:56:00.738] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/carver> [21Sep2020 05:56:00.738] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/carver> [21Sep2020 05:56:00.738] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/decorator> [21Sep2020 05:56:00.738] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/decorator> [21Sep2020 05:56:00.738] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/decorator> [21Sep2020 05:56:00.739] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/decorator> [21Sep2020 05:56:00.739] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/feature> [21Sep2020 05:56:00.739] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/feature> [21Sep2020 05:56:00.739] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/feature> [21Sep2020 05:56:00.739] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/feature> [21Sep2020 05:56:00.739] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/foliage_placer_type> [21Sep2020 05:56:00.739] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/foliage_placer_type> [21Sep2020 05:56:00.740] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/foliage_placer_type> [21Sep2020 05:56:00.740] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/foliage_placer_type> [21Sep2020 05:56:00.740] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/structure_feature> [21Sep2020 05:56:00.740] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/structure_feature> [21Sep2020 05:56:00.740] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/structure_feature> [21Sep2020 05:56:00.740] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/structure_feature> [21Sep2020 05:56:00.740] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/surface_builder> [21Sep2020 05:56:00.740] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/surface_builder> [21Sep2020 05:56:00.741] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/surface_builder> [21Sep2020 05:56:00.741] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/surface_builder> [21Sep2020 05:56:00.741] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : RegistryEvent.Register<minecraft:worldgen/tree_decorator_type> [21Sep2020 05:56:00.741] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : RegistryEvent.Register<minecraft:worldgen/tree_decorator_type> [21Sep2020 05:56:00.741] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/tree_decorator_type> [21Sep2020 05:56:00.741] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : RegistryEvent.Register<minecraft:worldgen/tree_decorator_type> [21Sep2020 05:56:01.017] [Render thread/DEBUG] [net.minecraftforge.fml.client.ClientModLoader/CORE]: Generating PackInfo named mod:forge for mod file C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\libraries\\net\\minecraftforge\\forge\\1.16.3-34.0.9\\forge-1.16.3-34.0.9-universal.jar [21Sep2020 05:56:01.017] [Render thread/DEBUG] [net.minecraftforge.fml.client.ClientModLoader/CORE]: Generating PackInfo named mod:ironchest for mod file C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\mods\\ironchest-1.16.2-11.1.5.jar [21Sep2020 05:56:01.098] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.sound.SoundLoadEvent@1e86a5a7 [21Sep2020 05:56:01.099] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.sound.SoundLoadEvent@1e86a5a7 [21Sep2020 05:56:01.099] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.sound.SoundLoadEvent@1e86a5a7 [21Sep2020 05:56:01.099] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.sound.SoundLoadEvent@1e86a5a7 [21Sep2020 05:56:01.277] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.ColorHandlerEvent$Block@65a48602 [21Sep2020 05:56:01.277] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.ColorHandlerEvent$Block@65a48602 [21Sep2020 05:56:01.278] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.ColorHandlerEvent$Block@65a48602 [21Sep2020 05:56:01.278] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.ColorHandlerEvent$Block@65a48602 [21Sep2020 05:56:01.282] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.ColorHandlerEvent$Item@1a865273 [21Sep2020 05:56:01.282] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.ColorHandlerEvent$Item@1a865273 [21Sep2020 05:56:01.282] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.ColorHandlerEvent$Item@1a865273 [21Sep2020 05:56:01.282] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.ColorHandlerEvent$Item@1a865273 [21Sep2020 05:56:02.442] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.ParticleFactoryRegisterEvent@de7e193 [21Sep2020 05:56:02.443] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.ParticleFactoryRegisterEvent@de7e193 [21Sep2020 05:56:02.443] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.ParticleFactoryRegisterEvent@de7e193 [21Sep2020 05:56:02.443] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.ParticleFactoryRegisterEvent@de7e193 [21Sep2020 05:56:02.497] [Render thread/INFO] [com.mojang.text2speech.NarratorWindows/]: Narrator library for x64 successfully loaded [21Sep2020 05:56:02.731] [Render thread/INFO] [net.minecraft.resources.SimpleReloadableResourceManager/]: Reloading ResourceManager: Mod Resources, Default [21Sep2020 05:56:02.743] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.config.ConfigTracker/CONFIG]: Loading configs type CLIENT [21Sep2020 05:56:02.746] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.config.ConfigFileTypeHandler/CONFIG]: Built TOML config for C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\config\\forge-client.toml [21Sep2020 05:56:02.747] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.config.ConfigFileTypeHandler/CONFIG]: Loaded TOML config file C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\config\\forge-client.toml [21Sep2020 05:56:02.761] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.config.ConfigFileTypeHandler/CONFIG]: Watching TOML config file C:\\Users\\Lenovo\\AppData\\Roaming\\.minecraft\\config\\forge-client.toml for changes [21Sep2020 05:56:02.763] [modloading-worker-1/DEBUG] [net.minecraftforge.common.ForgeConfig/FORGEMOD]: Loaded forge config file forge-client.toml [21Sep2020 05:56:02.765] [modloading-worker-1/DEBUG] [net.minecraftforge.fml.config.ConfigTracker/CONFIG]: Loading configs type COMMON [21Sep2020 05:56:02.777] [Worker-Main-6/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : FMLCommonSetupEvent [21Sep2020 05:56:02.782] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : FMLCommonSetupEvent [21Sep2020 05:56:02.782] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : FMLCommonSetupEvent [21Sep2020 05:56:02.796] [Worker-Main-6/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : FMLCommonSetupEvent [21Sep2020 05:56:02.824] [Forge Version Check/INFO] [net.minecraftforge.fml.VersionChecker/]: [forge] Starting version check at https://files.minecraftforge.net/maven/net/minecraftforge/forge/promotions_slim.json [21Sep2020 05:56:03.077] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.ModelRegistryEvent@2848b7fe [21Sep2020 05:56:03.094] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.ModelRegistryEvent@2848b7fe [21Sep2020 05:56:03.094] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.ModelRegistryEvent@2848b7fe [21Sep2020 05:56:03.094] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.ModelRegistryEvent@2848b7fe [21Sep2020 05:56:03.714] [Forge Version Check/DEBUG] [net.minecraftforge.fml.VersionChecker/]: [forge] Received version check data: {   ""homepage"": ""http://files.minecraftforge.net/maven/net/minecraftforge/forge/"",   ""promos"": {     ""1.1-latest"": ""1.3.2.6"",     ""1.10-latest"": ""12.18.0.2000"",     ""1.10.2-latest"": ""12.18.3.2511"",     ""1.10.2-recommended"": ""12.18.3.2185"",     ""1.11-latest"": ""13.19.1.2199"",     ""1.11-recommended"": ""13.19.1.2189"",     ""1.11.2-latest"": ""13.20.1.2588"",     ""1.11.2-recommended"": ""13.20.1.2386"",     ""1.12-latest"": ""14.21.1.2443"",     ""1.12-recommended"": ""14.21.1.2387"",     ""1.12.1-latest"": ""14.22.1.2485"",     ""1.12.1-recommended"": ""14.22.1.2478"",     ""1.12.2-latest"": ""14.23.5.2854"",     ""1.12.2-recommended"": ""14.23.5.2854"",     ""1.13.2-latest"": ""25.0.219"",     ""1.14.2-latest"": ""26.0.63"",     ""1.14.3-latest"": ""27.0.60"",     ""1.14.4-latest"": ""28.2.23"",     ""1.14.4-recommended"": ""28.2.0"",     ""1.15-latest"": ""29.0.4"",     ""1.15.1-latest"": ""30.0.51"",     ""1.15.2-latest"": ""31.2.41"",     ""1.15.2-recommended"": ""31.2.0"",     ""1.16.1-latest"": ""32.0.108"",     ""1.16.2-latest"": ""33.0.61"",     ""1.16.3-latest"": ""34.0.9"",     ""1.5.2-latest"": ""7.8.1.738"",     ""1.5.2-recommended"": ""7.8.1.737"",     ""1.6.1-latest"": ""8.9.0.775"",     ""1.6.2-latest"": ""9.10.1.871"",     ""1.6.2-recommended"": ""9.10.1.871"",     ""1.6.3-latest"": ""9.11.0.878"",     ""1.6.4-latest"": ""9.11.1.1345"",     ""1.6.4-recommended"": ""9.11.1.1345"",     ""1.7.10-latest"": ""10.13.4.1614"",     ""1.7.10-latest-1.7.10"": ""10.13.2.1343"",     ""1.7.10-recommended"": ""10.13.4.1558"",     ""1.7.2-latest"": ""10.12.2.1147"",     ""1.7.2-recommended"": ""10.12.2.1121"",     ""1.8-latest"": ""11.14.4.1577"",     ""1.8-recommended"": ""11.14.4.1563"",     ""1.8.8-latest"": ""11.15.0.1655"",     ""1.8.9-latest"": ""11.15.1.2318"",     ""1.8.9-recommended"": ""11.15.1.1722"",     ""1.9-latest"": ""12.16.0.1942"",     ""1.9-recommended"": ""12.16.1.1887"",     ""1.9.4-latest"": ""12.17.0.2051"",     ""1.9.4-recommended"": ""12.17.0.1976"",     ""latest-1.7.10"": ""10.13.2.1343""   } } [21Sep2020 05:56:03.715] [Forge Version Check/INFO] [net.minecraftforge.fml.VersionChecker/]: [forge] Found status: BETA Current: 34.0.9 Target: 34.0.9 [21Sep2020 05:56:05.710] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@fb4e1ed [21Sep2020 05:56:05.710] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@fb4e1ed [21Sep2020 05:56:05.710] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@fb4e1ed [21Sep2020 05:56:05.710] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@fb4e1ed [21Sep2020 05:56:06.720] [Worker-Main-6/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@59aa86bd [21Sep2020 05:56:06.720] [Worker-Main-6/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@59aa86bd [21Sep2020 05:56:06.720] [Worker-Main-6/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@59aa86bd [21Sep2020 05:56:06.720] [Worker-Main-6/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@59aa86bd [21Sep2020 05:56:08.749] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@7b1034a3 [21Sep2020 05:56:08.752] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@7b1034a3 [21Sep2020 05:56:08.752] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@7b1034a3 [21Sep2020 05:56:08.752] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@7b1034a3 [21Sep2020 05:56:08.803] [Worker-Main-7/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@5a04a131 [21Sep2020 05:56:08.807] [Worker-Main-7/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@5a04a131 [21Sep2020 05:56:08.807] [Worker-Main-7/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@5a04a131 [21Sep2020 05:56:08.807] [Worker-Main-7/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@5a04a131 [21Sep2020 05:56:08.887] [Render thread/DEBUG] [net.minecraftforge.fml.client.ClientModLoader/LOADING]: Running pre client event work [21Sep2020 05:56:09.152] [Worker-Main-8/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : FMLClientSetupEvent [21Sep2020 05:56:09.152] [Worker-Main-8/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : FMLClientSetupEvent [21Sep2020 05:56:09.153] [Worker-Main-8/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : FMLClientSetupEvent [21Sep2020 05:56:09.308] [Worker-Main-8/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : FMLClientSetupEvent [21Sep2020 05:56:09.445] [Render thread/DEBUG] [net.minecraftforge.fml.client.ClientModLoader/LOADING]: Running post client event work [21Sep2020 05:56:10.439] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@67db02b8 [21Sep2020 05:56:10.439] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@67db02b8 [21Sep2020 05:56:10.439] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@67db02b8 [21Sep2020 05:56:10.439] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@67db02b8 [21Sep2020 05:56:10.444] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@4f2e2a08 [21Sep2020 05:56:10.444] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@4f2e2a08 [21Sep2020 05:56:10.444] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@4f2e2a08 [21Sep2020 05:56:10.444] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@4f2e2a08 [21Sep2020 05:56:10.474] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@33e1746d [21Sep2020 05:56:10.474] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@33e1746d [21Sep2020 05:56:10.474] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@33e1746d [21Sep2020 05:56:10.474] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@33e1746d [21Sep2020 05:56:10.496] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@6fd0c52 [21Sep2020 05:56:10.496] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@6fd0c52 [21Sep2020 05:56:10.496] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@6fd0c52 [21Sep2020 05:56:10.496] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@6fd0c52 [21Sep2020 05:56:10.506] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@7223dbc9 [21Sep2020 05:56:10.506] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@7223dbc9 [21Sep2020 05:56:10.506] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@7223dbc9 [21Sep2020 05:56:10.506] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@7223dbc9 [21Sep2020 05:56:10.518] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@3c7581a2 [21Sep2020 05:56:10.518] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Pre@3c7581a2 [21Sep2020 05:56:10.518] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@3c7581a2 [21Sep2020 05:56:10.518] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Pre@3c7581a2 [21Sep2020 05:56:10.569] [Worker-Main-7/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : InterModEnqueueEvent [21Sep2020 05:56:10.569] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : InterModEnqueueEvent [21Sep2020 05:56:10.569] [Worker-Main-7/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : InterModEnqueueEvent [21Sep2020 05:56:10.569] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : InterModEnqueueEvent [21Sep2020 05:56:10.601] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : InterModProcessEvent [21Sep2020 05:56:10.601] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : InterModProcessEvent [21Sep2020 05:56:10.601] [Worker-Main-4/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : InterModProcessEvent [21Sep2020 05:56:10.601] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : InterModProcessEvent [21Sep2020 05:56:10.635] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : FMLLoadCompleteEvent [21Sep2020 05:56:10.635] [Worker-Main-7/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : FMLLoadCompleteEvent [21Sep2020 05:56:10.635] [Worker-Main-5/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : FMLLoadCompleteEvent [21Sep2020 05:56:10.635] [Worker-Main-7/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : FMLLoadCompleteEvent [21Sep2020 05:56:12.120] [Render thread/DEBUG] [net.minecraftforge.fml.ForgeI18n/CORE]: Loading I18N data entries: 5198 [21Sep2020 05:56:12.659] [Render thread/INFO] [net.minecraft.client.audio.SoundSystem/]: OpenAL initialized. [21Sep2020 05:56:12.661] [Render thread/INFO] [net.minecraft.client.audio.SoundEngine/SOUNDS]: Sound engine started [21Sep2020 05:56:13.056] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 1024x512x4 minecraft:textures/atlas/blocks.png-atlas [21Sep2020 05:56:13.318] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@6bbab114 [21Sep2020 05:56:13.318] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@6bbab114 [21Sep2020 05:56:13.318] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@6bbab114 [21Sep2020 05:56:13.318] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@6bbab114 [21Sep2020 05:56:13.319] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 256x128x4 minecraft:textures/atlas/signs.png-atlas [21Sep2020 05:56:13.334] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@5d1b1c2a [21Sep2020 05:56:13.334] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@5d1b1c2a [21Sep2020 05:56:13.334] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@5d1b1c2a [21Sep2020 05:56:13.334] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@5d1b1c2a [21Sep2020 05:56:13.334] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 512x512x4 minecraft:textures/atlas/banner_patterns.png-atlas [21Sep2020 05:56:13.335] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@25f61c2c [21Sep2020 05:56:13.335] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@25f61c2c [21Sep2020 05:56:13.335] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@25f61c2c [21Sep2020 05:56:13.335] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@25f61c2c [21Sep2020 05:56:13.335] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 512x512x4 minecraft:textures/atlas/shield_patterns.png-atlas [21Sep2020 05:56:13.338] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@77429040 [21Sep2020 05:56:13.339] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@77429040 [21Sep2020 05:56:13.339] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@77429040 [21Sep2020 05:56:13.339] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@77429040 [21Sep2020 05:56:13.339] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 512x256x4 minecraft:textures/atlas/chest.png-atlas [21Sep2020 05:56:13.340] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@38291795 [21Sep2020 05:56:13.340] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@38291795 [21Sep2020 05:56:13.340] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@38291795 [21Sep2020 05:56:13.340] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@38291795 [21Sep2020 05:56:13.340] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 512x256x4 minecraft:textures/atlas/beds.png-atlas [21Sep2020 05:56:13.341] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@40ef0af8 [21Sep2020 05:56:13.341] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@40ef0af8 [21Sep2020 05:56:13.341] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@40ef0af8 [21Sep2020 05:56:13.341] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@40ef0af8 [21Sep2020 05:56:13.341] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 512x256x4 minecraft:textures/atlas/shulker_boxes.png-atlas [21Sep2020 05:56:13.342] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@461c3709 [21Sep2020 05:56:13.342] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@461c3709 [21Sep2020 05:56:13.342] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@461c3709 [21Sep2020 05:56:13.342] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@461c3709 [21Sep2020 05:56:13.944] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.ModelBakeEvent@377874b4 [21Sep2020 05:56:13.944] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.ModelBakeEvent@377874b4 [21Sep2020 05:56:13.944] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.ModelBakeEvent@377874b4 [21Sep2020 05:56:13.945] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.ModelBakeEvent@377874b4 [21Sep2020 05:56:14.619] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 256x256x0 minecraft:textures/atlas/particles.png-atlas [21Sep2020 05:56:14.620] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@721d8ab5 [21Sep2020 05:56:14.620] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@721d8ab5 [21Sep2020 05:56:14.620] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@721d8ab5 [21Sep2020 05:56:14.620] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@721d8ab5 [21Sep2020 05:56:14.621] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 256x256x0 minecraft:textures/atlas/paintings.png-atlas [21Sep2020 05:56:14.636] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@6ac4c3f7 [21Sep2020 05:56:14.636] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@6ac4c3f7 [21Sep2020 05:56:14.636] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@6ac4c3f7 [21Sep2020 05:56:14.636] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@6ac4c3f7 [21Sep2020 05:56:14.636] [Render thread/INFO] [net.minecraft.client.renderer.texture.AtlasTexture/]: Created: 128x128x0 minecraft:textures/atlas/mob_effects.png-atlas [21Sep2020 05:56:14.667] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@7412a438 [21Sep2020 05:56:14.667] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid forge : net.minecraftforge.client.event.TextureStitchEvent$Post@7412a438 [21Sep2020 05:56:14.667] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Firing event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@7412a438 [21Sep2020 05:56:14.667] [Render thread/DEBUG] [net.minecraftforge.fml.javafmlmod.FMLModContainer/LOADING]: Fired event for modid ironchest : net.minecraftforge.client.event.TextureStitchEvent$Post@7412a438 [21Sep2020 05:56:34.352] [Render thread/INFO] [net.minecraft.client.gui.screen.ConnectingScreen/]: Connecting to 10.0.0.216, 25565 [21Sep2020 05:56:35.432] [Netty Client IO #1/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Starting new vanilla network connection. [21Sep2020 05:56:35.432] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Starting new vanilla network connection. [21Sep2020 05:56:35.740] [Netty Client IO #1/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'minecraft:unregister\' : Version test of \'(FML2,true)\' during listping : ACCEPTED [21Sep2020 05:56:35.741] [Netty Client IO #1/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'minecraft:register\' : Version test of \'(FML2,true)\' during listping : ACCEPTED [21Sep2020 05:56:35.741] [Netty Client IO #1/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Accepting channel list during listping [21Sep2020 05:56:35.743] [Netty Client IO #1/DEBUG] [net.minecraftforge.fml.client.ClientHooks/CLIENTHOOKS]: Received FML ping data from server at 10.0.0.216: FMLNETVER=2, mod list is compatible : true, channel list is compatible: true, extra server mods: {} [21Sep2020 05:56:35.926] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 0 [21Sep2020 05:56:35.929] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Logging into server with mod list [minecraft, forge, ironchest] [21Sep2020 05:56:35.931] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'fml:loginwrapper\' : Version test of \'FML2\' from server : ACCEPTED [21Sep2020 05:56:35.931] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'fml:handshake\' : Version test of \'FML2\' from server : ACCEPTED [21Sep2020 05:56:35.931] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'minecraft:unregister\' : Version test of \'FML2\' from server : ACCEPTED [21Sep2020 05:56:35.931] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'fml:play\' : Version test of \'FML2\' from server : ACCEPTED [21Sep2020 05:56:35.931] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'minecraft:register\' : Version test of \'FML2\' from server : ACCEPTED [21Sep2020 05:56:35.931] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Accepting channel list from server [21Sep2020 05:56:35.934] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 0 [21Sep2020 05:56:35.935] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Accepted server connection [21Sep2020 05:56:35.960] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 1 [21Sep2020 05:56:35.962] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:recipe_serializer [21Sep2020 05:56:35.962] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 1 [21Sep2020 05:56:36.021] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 2 [21Sep2020 05:56:36.028] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:sound_event [21Sep2020 05:56:36.028] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 2 [21Sep2020 05:56:36.061] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 3 [21Sep2020 05:56:36.061] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:particle_type [21Sep2020 05:56:36.061] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 3 [21Sep2020 05:56:36.111] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 4 [21Sep2020 05:56:36.112] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:villager_profession [21Sep2020 05:56:36.112] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 4 [21Sep2020 05:56:36.166] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 5 [21Sep2020 05:56:36.167] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:item [21Sep2020 05:56:36.167] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 5 [21Sep2020 05:56:36.210] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 6 [21Sep2020 05:56:36.210] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:potion [21Sep2020 05:56:36.210] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 6 [21Sep2020 05:56:36.259] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 7 [21Sep2020 05:56:36.259] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:block_entity_type [21Sep2020 05:56:36.259] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 7 [21Sep2020 05:56:36.310] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 8 [21Sep2020 05:56:36.310] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:worldgen/feature [21Sep2020 05:56:36.310] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 8 [21Sep2020 05:56:36.361] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 9 [21Sep2020 05:56:36.361] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:block [21Sep2020 05:56:36.362] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 9 [21Sep2020 05:56:36.409] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 10 [21Sep2020 05:56:36.409] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:data_serializers [21Sep2020 05:56:36.409] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 10 [21Sep2020 05:56:36.460] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 11 [21Sep2020 05:56:36.460] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:mob_effect [21Sep2020 05:56:36.460] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 11 [21Sep2020 05:56:36.510] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 12 [21Sep2020 05:56:36.510] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:stat_type [21Sep2020 05:56:36.510] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 12 [21Sep2020 05:56:36.561] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 13 [21Sep2020 05:56:36.561] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:menu [21Sep2020 05:56:36.561] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 13 [21Sep2020 05:56:36.610] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 14 [21Sep2020 05:56:36.610] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:enchantment [21Sep2020 05:56:36.610] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 14 [21Sep2020 05:56:36.659] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 15 [21Sep2020 05:56:36.659] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:motive [21Sep2020 05:56:36.659] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 15 [21Sep2020 05:56:36.711] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 16 [21Sep2020 05:56:36.711] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:worldgen/biome [21Sep2020 05:56:36.711] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 16 [21Sep2020 05:56:36.759] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 17 [21Sep2020 05:56:36.759] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:fluid [21Sep2020 05:56:36.759] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 17 [21Sep2020 05:56:36.811] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 18 [21Sep2020 05:56:36.811] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received registry packet for minecraft:entity_type [21Sep2020 05:56:36.812] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Waiting for registries to load. [21Sep2020 05:56:36.812] [Render thread/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Injecting registry snapshot from server. [21Sep2020 05:56:37.283] [Render thread/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Snapshot injected. [21Sep2020 05:56:37.283] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Registry load complete, continuing handshake. [21Sep2020 05:56:37.283] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 18 [21Sep2020 05:56:37.284] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Recieved login wrapper packet event for channel fml:handshake with index 19 [21Sep2020 05:56:37.284] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Received config sync from server [21Sep2020 05:56:37.285] [Netty Client IO #0/DEBUG] [net.minecraftforge.common.ForgeConfig/FORGEMOD]: Forge config just got changed on the file system! [21Sep2020 05:56:37.285] [Netty Client IO #0/DEBUG] [net.minecraftforge.fml.network.FMLLoginWrapper/FMLHANDSHAKE]: Dispatching wrapped packet reply for channel fml:handshake with index 19 [21Sep2020 05:56:37.366] [Netty Client IO #0/INFO] [net.minecraftforge.fml.network.NetworkHooks/]: Connected to a modded server. [21Sep2020 05:56:37.531] [Netty Client IO #0/DEBUG] [net.minecraftforge.common.ForgeTagHandler/]: Populated the TagCollectionManager with 1 extra types [21Sep2020 05:56:37.959] [Netty Client IO #0/ERROR] [net.minecraft.command.arguments.ArgumentTypes/]: Could not deserialize minecraft: [21Sep2020 05:56:37.960] [Netty Client IO #0/ERROR] [net.minecraft.command.arguments.ArgumentTypes/]: Could not deserialize minecraft: [21Sep2020 05:56:41.362] [Render thread/INFO] [com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService/]: Environment: authHost=\'https://authserver.mojang.com\', accountsHost=\'https://api.mojang.com\', sessionHost=\'https://sessionserver.mojang.com\', name=\'PROD\' [21Sep2020 05:56:42.282] [Render thread/WARN] [net.minecraft.client.network.play.ClientPlayNetHandler/]: Received passengers for unknown entity [21Sep2020 05:56:42.375] [Render thread/INFO] [net.minecraft.advancements.AdvancementList/]: Loaded 0 advancements [21Sep2020 05:58:02.256] [Render thread/INFO] [net.minecraft.client.gui.NewChatGui/]: [CHAT] Saved screenshot as 2020-09-21_05.58.01.png [21Sep2020 05:58:03.756] [Render thread/INFO] [net.minecraft.client.gui.NewChatGui/]: [CHAT] Saved screenshot as 2020-09-21_05.58.03.png [21Sep2020 05:59:09.947] [Netty Client IO #2/DEBUG] [net.minecraftforge.fml.network.FMLHandshakeHandler/FMLHANDSHAKE]: Starting new vanilla network connection. [21Sep2020 05:59:09.950] [Netty Client IO #2/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'minecraft:unregister\' : Version test of \'(FML2,true)\' during listping : ACCEPTED [21Sep2020 05:59:09.950] [Netty Client IO #2/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Channel \'minecraft:register\' : Version test of \'(FML2,true)\' during listping : ACCEPTED [21Sep2020 05:59:09.950] [Netty Client IO #2/DEBUG] [net.minecraftforge.fml.network.NetworkRegistry/NETREGISTRY]: Accepting channel list during listping [21Sep2020 05:59:09.950] [Netty Client IO #2/DEBUG] [net.minecraftforge.fml.client.ClientHooks/CLIENTHOOKS]: Received FML ping data from server at 10.0.0.216: FMLNETVER=2, mod list is compatible : true, channel list is compatible: true, extra server mods: {} [21Sep2020 05:59:27.148] [Render thread/INFO] [net.minecraft.client.Minecraft/]: Stopping!",,0
