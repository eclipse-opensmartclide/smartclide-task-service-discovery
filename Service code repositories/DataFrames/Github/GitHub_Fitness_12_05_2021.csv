,Url,Description,Topics,Stars
0,https://github.com/cpfair/tapiriik.git,tapiriik keeps your fitness in sync,"tapiriik,fitness,sync,health",1570
1,https://github.com/wger-project/wger.git,"Self hosted FLOSS fitness/workout, nutrition and weight tracker written with Django","python,django,fitness,gym,self-hosted,workout",1446
2,https://github.com/thomaschampagne/elevate.git,"Browser extension for strava. ""Elevate"" tracks your fitness and progressions over time. Analyse deeper your activities & segments. And more... https://thomaschampagne.github.io/elevate/ (formerly named stravistix)","chrome,strava,cycling,running,swim,webextension,typescript,angular,git-flow,opera",854
3,https://github.com/mazurio/bodyweight-fitness-android.git,Bodyweight Fitness (Android),"java,android,fitness,mobile,app,kotlin,bodyweight",298
4,https://github.com/patloew/RxFit.git,üèÉReactive Fitness API Library for Android and RxJava,"android,google-play-services,rxjava,rxjava2,fit,google-fit,googleapiclient",218
5,https://github.com/dwyl/home.git,"üè° üë©\u200düíª üí° home is where you can [learn to] build the future surrounded by like-minded creative, friendly and [intrinsically] motivated people focussed on health, fitness and making things people and the world need!","affordable,housing,creative,technology,organic,health,healthy,house",210
6,https://github.com/curtpw/nRF5x-device-reverse-engineering.git,nRF52/nRF51 Fitness Trackers & Smartwatches Reverse Engineered for use as a Wearable Device Development Platform,,205
7,https://github.com/LiamConnell/deep-algotrading.git,A resource for learning about deep learning techniques from regression to LSTM and Reinforcement Learning using financial data and the fitness functions of algorithmic trading,"neural-network,deep-learning,policy-gradient,lstm,tensorflow,reinforcement-learning",176
8,https://github.com/Yalantis/FitTrack.git,Concept of a fitness app.,"ios,swift,cocoapods,animation,yalantis,concept",165
9,https://github.com/brodeurlv/fastnfitness.git,"FastNFitness Android app: Body, Cardio and Fitness tracking.","fitness-app,fitness,fitness-tracker,fitness-goals,weightlifting,weight-tracking,bodybuilding",118
10,https://github.com/mazurio/bodyweight-fitness-ios.git,Bodyweight Fitness (iOS),"ios,app,bodyweight,fitness,swift,mobile",116
11,https://github.com/TechieBlossom/FitnessApp.git,Fitness App mock from Dribbble,,108
12,https://github.com/mahtab-ali/fitness_app_ui.git,"Flutter tutorial explaining to create a fitness application UI incorporating use of custom fonts, vertical lists & custom widgets",,107
13,https://github.com/timfraedrich/OutRun.git,"OutRun is an open-source, privacy oriented, outdoor fitness tracker.","ios,swift,fitness",102
14,https://github.com/rahulmaddineni/Stayfit.git,":iphone: :runner: :apple: Fitness application that‚Äôs used to keep track of your physical fitness data, daily calorie count, invite friends to work out together and ultimately get healthy.","fitness-app,fitness,food,restaurant,restaurant-menu,food-classification,food-products,voice-recognition,voice-to-text,search,animation,wasabeef,calories,calories-tracker,calorie-calculator,calorie-counter,sensors,maps,sms,android",97
15,https://github.com/jonniechow/RogueStockBot.git,Tracks and updates user whenever Rogue Fitness equipment inventory changes,,89
16,https://github.com/krokyze/FitKit.git,Flutter plugin for reading health and fitness data. Wraps HealthKit on iOS and GoogleFit on Android.,,88
17,https://github.com/karthironald/BodyProgress.git,Simple workout and progress tracking app for fitness freaks with Widget support.,"exercise,workouts,swiftui,swift,widgetkit,coredata",86
18,https://github.com/jrobchin/phormatics.git,Using A.I. and computer vision to build a virtual personal fitness trainer. (Most Startup-Viable Hack - HackNYU2018),"computer-vision,fitness,python,opencv,tensorflow,pose,estimation,human,model,webrtc,camera,keras,recognition,classification,artificial-intelligence,neural-network,data-science,flask",82
19,https://github.com/tantalor/fitsync.git,Synchronizes user data between several fitness services.,,71
20,https://github.com/vmwarecloudadvocacy/acme_fitness_demo.git,Deploys ACME Fitness application  across different environments,"kubernetes,docker,docker-compose",69
21,https://github.com/chaosbastler/opentraining.git,Android App for planing your fitness training.,,67
22,https://github.com/sgup/fitloop.co.git,Fitloop - Open Fitness Platform (Old Version),,64
23,https://github.com/feMoraes0/fitness-ui.git,A fitness app interface built with Flutter,"fitness-app,dart,flutter,app,clone-ui,fitness",62
24,https://github.com/lewapek/sds-dust-sensors-arduino-library.git,"Library for Nova Fitness SDS dust sensors family (SDS011, SDS021)","sds,sds011,dust-sensor,arduino,nodemcu,nodemcu-arduino,pm10,pm25,sensor,esp8266,sds021",51
25,https://github.com/samsinai/FLEXS.git,Fitness landscape exploration sandbox for biological sequence design.,"machine-learning,benchmarking,protein-design,deep-learning,deep-reinforcement-learning,computational-biology,bayesian-optimization",51
26,https://github.com/rbaron/fitless.git,A collection of toy firmwares for the ID115 fitness tracker,,49
27,https://github.com/substack/BALLS.git,BALLS FITNESS APPLICATion TRACKING FORHEALT,,48
28,https://github.com/everkinetic/data.git,Empowering Fitness,"open-data,opendata,fitness",47
29,https://github.com/ericblue/Perl-FitBit-API.git,"Provides an OO API for fetching fitness data from fitbit.com.    Currently there is no official API, however data is retrieved using XML feeds  that populate the flash-based charts. ",,45
30,https://github.com/roznet/connectstats.git,iOS Apps and utilities to analyse your fitness data from Garmin or Strava,"statistics,healthkit,fitness,garmin-connect,strava,iphone-app,ipad-app",40
31,https://github.com/tsubery/quantifier.git,A quantified-self app that tracks various fitness & productivity metrics.,"quantified-self,productivity,googlefit,trello,pocket,pocketapp,quizlet,typeracer,bcycle,stackoverflow,beeminder,habit-tracking,time-management",34
32,https://github.com/danilop/evolutionary-serverless-architectures-with-safe-deployments.git,"A sample implementation of an evolutionary architecture for a serverless application using safe deployments, automatically computing the fitness function at deployment time, with the possibility to rollback back if fitness is not improving.","serverless,evolutionary-architecture,aws,serverless-application-model,aws-lambda,aws-apigateway,cloudformation,canary-deployment,linear",33
33,https://github.com/2DArray/dungeon-generator-examples.git,"Some examples of dungeon generators in Unity, including an example of a ""Fitness Function""",,33
34,https://github.com/IBM-Cloud/health-blockchain.git,A blockchain for fitness data demo,"blockchain,blockchain-demos,watson,bluemix,node-js,fitness,health",32
35,https://github.com/Swizec/Le-Thesis.git,For my undergrad thesis I am building an automatic poet. The idea is to implement an evolutionary algorithm that can construct a poem using fitness functions trained on a text-based corpora.,,32
36,https://github.com/blackcj/GoogleFitExample.git,Native Android app that uses the Google Fit API to track fitness data.,,30
37,https://github.com/scrapper/postrunner.git,Application to manage FIT files such as those produced by Garmin fitness devices,,28
38,https://github.com/WilixLead/iWownController.git,"Alternative for Zeroner application, for use with fitness-bracelet iWown i5, i5+, i6",,27
39,https://github.com/Mylittleswift/ios-health-fitness-apps.git,"iOS health & fitness apps, medical researches and tutorials",,27
40,https://github.com/KrisKodira/fitPlant.git,üå± A fitness app where you are able to grow plants and track your exercise,"fitness,health,plants,design,android,ios,webapp",27
41,https://github.com/umdsquare/data-at-hand-mobile.git,Mobile application for exploring fitness data using both speech and touch interaction.,"speech,multimodal-interactions,mobile-app,fitness-tracker,visualization,visual-data,smartphones,fitbit,navigation",27
42,https://github.com/aouyar/healthgraph-api.git,"Python Client Library for Health Graph API (http://developer.runkeeper.com/healthgraph). The API is used for accessing RunKeeper.com (http://runkeeper.com) for retrieving, updating, deleting and uploading Fitness Activity and Health Measurements Information.",,27
43,https://github.com/bizz84/fitness_tracker_flutter.git,Fitness Tracker - Flutter UI Demo,,24
44,https://github.com/freezed-or-frozen/pymb1a.git,Python class to communicate with Xiaomi Mi band 1A fitness tracker,"mi-band,bluetooth-low-energy,iot,python3",24
45,https://github.com/hypirion/roulette-tree.git,Data structure for efficient fitness-proportionate selection.,,24
46,https://github.com/G3Kappa/Adjustable-Markov-Chains.git,"Adjustable Markov Chains is a Python implementation of a text generator based on the concept of Markov Chains, that can be adjusted further via fitness functions.",,24
47,https://github.com/haraldh/iconsole-android.git,OpeniConsole connects to an iConsole+ fitness bike head unit over bluetooth.,"iconsole,bluetooth,android,ant,antplus,ant-network,fitness-app,bike-computer",21
48,https://github.com/michaelcarrano/seven_minute_workout_android.git,"An Android application that walks you through the ""7 minute workout"" that was mentioned in the May/June 2013 issue of ACSM\'s Health & Fitness Journal.",android,21
49,https://github.com/daylen/elevate.git,"Online health & fitness dashboard for Fitbit, Jawbone, and Strava",,21
50,https://github.com/sean-perkins/fitness-dashboard-prototype.git,Fitness dashboard prototype build with StencilJS.,,21
51,https://github.com/deerawan/react-native-fitness-app.git,React Native Fitness App,,19
52,https://github.com/devdreamsolution/flutter-fitness-app.git,Fitness app using Flutter,"dart,flutter,firebase,firebase-auth,firebase-storage,firebase-database,fitness-app",19
53,https://github.com/SimformSolutionsPvtLtd/Fitness-App-ARKit.git,Fitness App build with ARKit.,,19
54,https://github.com/hemantkamalakar/google_fit_hass.git,A Home assistant custom component to get your fitness information using Google Fitness API.,"home-automation,home-assistant,homeassistant,google-fit,google-fit-api,fitness-tracker,google-api,mi-band,mi-fit",19
55,https://github.com/drewvigne/arduino_nano_33_ant.git,Software that integrates Nano 33 into nRF5 SDK for fitness tracker prototyping. Specially made for ANT+ bike power meters.,,18
56,https://github.com/francescojm/ADAM.git,Adaptive Daisy Model to discriminate core-fitness/context-specific essential genes in large scale CRISPR-Cas9 screens,,18
57,https://github.com/mraible/play-more.git,HTML5 Fitness Tracking with Play!,,17
58,https://github.com/cuappdev/uplift-ios.git,An open-source iOS app for Cornell Fitness Centers.,,17
59,https://github.com/learnetto/reactfit.git,A fitness dashboard app built using Rails 5.1 and React.js,"rails,react,reactjs,rails5,rails5-1,fitbit",17
60,https://github.com/GeekJosh/BoxVR-Playlist-Manager.git,A Windows based playlist manager for the VR fitness game BoxVR,"gaming,fitness,vr,tools",17
61,https://github.com/xintrea/movenoid.git,MoveNoid Game - OpenCV arkanoid clone for finger and body fitness,"opencv,game,finger,fitness,arkanoid",16
62,https://github.com/zameyer1/Evolutionary-Trading-Strategies.git,"This code illustrates the use of genetic programming to evolve financial trading strategies for a single equity stock. Individuals (strategies) are considered as functions of historical price data, outputting a position allocation. Strategy fitness evaluation is computed by simulating the strategy over historical financial data. Because financial investment requires a fundamental tradeoff between risk and return, strategies are evaluated on multi-objective fitness functions depending on profit and maximum drawdown of the strategy and ranging from very risk-prone to very risk-averse. The population of individual strategies is evolved using tournament selection, single-point crossover, and random mutation as evolutionary operators. Strategies with the best fitness at any stage in the evolutionary process are recorded in a ‚Äòhall-of-fame‚Äô. At the end of the evolutionary process, strategies in the ‚Äòhall-of-fame‚Äô are evaluated over a set of test data and selected based on a train-test criterion which penalizes strategies that do not generalize well. ",,16
63,https://github.com/chrishunt/healthyhacker.git,"Welcome to the Healthy Hacker where we talk about programming, puzzles, memory, fitness, diet, and everything else that you, a healthy hacker, find interesting.",,16
64,https://github.com/wimpywarlord/Vikram_My_Fitness_Chatbot.git,"Hello , this is vikram your fitness buddy , he will be there at every step as you make your way towards a healthier life.",,16
65,https://github.com/exagil/Bolt.git,Bolt - Fitness Tracker,,15
66,https://github.com/eudoxos/cfitness.git,Kenneth Folk: Contemplative Fitness Book (draft),,15
67,https://github.com/bexxmodd/MacrosCalculator.git,Compute various Body indexes and calculate your macros for a daily diet to achieve fitness goals,,15
68,https://github.com/xqding/PEVAE_Paper.git,Deciphering protein evolution and fitness landscapes with latent space models,,15
69,https://github.com/fdyuandong/2D-3D-Point-Set-Registration-Based-on-Global-Rotation-Search.git,"# 2D-3D Point Set Registration Based on Global Rotation Search # Copyright (C) 2018 Yinlong Liu@outlook.com # # This program is free software; you can redistribute it and/or modify # it under the terms of the GNU General Public License as published by # the Free Software Foundation; either version 2 of the License, or # (at your option) any later version. # # This program is distributed in the hope that it will be useful, # but WITHOUT ANY WARRANTY; without even the implied warranty of # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the # GNU General Public License for more details. # # Any publications resulting from the use of this code should cite the # following paper: # Yinlong Liu, Yuan Dong, Zhijian Song and Manning Wang, ""2D 3D Point Set Registration Based on Global Rotation_Search"", IEEE Transactions on Image Processing (TIP)  # # #==================Note================= # #1. First step->open demo_rot.m. It is a demo of Rotation Search in SO(3) for 2D-3D point set registration. # #2. The input data is set to a real circumstance that 3D point set is far away for projection plane, and in front of camera.  Our method also can be applied to unusual condition that camera is surrounded by 3D point set, only if you make some fix.  # #3. RotaionSearch.m is the kernel of algorithm. You can easily extend it to SE(3) searching by grid-search, while tuning parameters depends on your tasks. # #4. Fast and Global 2D-3D point set registration without correspondence is still an open problem and need further explorations. I am very happy that if you could benefit from our code. # # # Author: Yinlong Liu # Date: 20181218 # Revision: 1.0",,15
70,https://github.com/vctrchu/Rival.git,"A fitness iOS application that allows users to track, view and compete against friends. Built with Swift and Firebase. On the app store \xa0üí™üèº",,14
71,https://github.com/abhijitbangera/fitnesstracker.git,:apple: Website designed to track your fitness goals,"python,django,fitness",13
72,https://github.com/saileshbro/fitness_app_clone.git,This is the fitness app clone.,"flutter,fitness,fitness-app,ui,clone",13
73,https://github.com/strudelauxpommes/FitnessHabits.git,"This Android software tracks fitness activities and health habits such as physical activities, fluids intake, supplements, food intake, sleep durations, and alcool intake.",,13
74,https://github.com/romarioraffington/react-native-fitness.git,"A Fitness app used to track activities as well as speed, direction and altitude","react-native,redux,expo,jest",13
75,https://github.com/dev-juyoung/Fitness.git,Flutter plugin for reading health and fitness data. Wraps HealthKit on iOS and GoogleFit on Android.,,13
76,https://github.com/amitavroy/fitness-center.git,A fitness centre management web application,,12
77,https://github.com/suissa/fitness.git,Coisas fitness,,12
78,https://github.com/ctz/id115-firmware-dump.git,Dumping firmware from an ID115 fitness band,,12
79,https://github.com/FitTracker/Fitness-Goal-Tracker.git,Fittr.us is a Fitness tracker web app that provides visualization for Fitbit data. Fittr.us also includes social features and a badging system along with a timer & stopwatch for workouts.,"react,node,express,sql,scss,material-ui,html,css,victory",12
80,https://github.com/mrk-9/Android-Fitness-app_CarePack-Pro.git,"Android, Fitness",,11
81,https://github.com/ugurcanlacin/tuprime.git,Fitness management is based on Spring Framework,,11
82,https://github.com/fhalab/MLDE.git,A machine-learning package for navigating combinatorial protein fitness landscapes.,,11
83,https://github.com/mpcarter/etlfit.git,FitNesses fixture to automate ETL testing.,,11
84,https://github.com/Innovation-Skyline-2020/GameInShape.git,An Innovative Gaming Platform that Integrates Digital Games with Physical Fitness.,"django,python,online-games,deep-learning,opencv,aws,js,innovation",11
85,https://github.com/JohannesMilke/fitness_app_example.git,"{""Let's build a nice-looking fitness app where you can watch workout videos of your personal trainer.""}","flutter,dart",11
86,https://github.com/shockbytes/Corey.git,"My personal fitness app where I track my nutrition, arrange my workout schedule, set goals and show other personal stats. This project has become my new playground where I can just mess around ;)","fitness-app,wearable,android,android-wear,google-fit,firebase-auth,firebase-realtime-database,firebase-remote-config",11
87,https://github.com/jamesmontemagno/mycadence-arduino.git,With this DIY project and a simple $18 ESP32 Arduino board you will have a budget Cadence display for your indoor cycling bike for Peloton or Apple Fitness+,"indoor-cycling,spin-bike,arduino,cadence",11
88,https://github.com/mrk-9/Android-Fitness-app_CarePack-Rite.git,"Android, Fitness",,10
89,https://github.com/wger-project/flutter.git,Flutter fitness/workout app for wger,"workout,fitness,flutter,dart,wger,gym",10
90,https://github.com/mrk-9/iOS-app_Wodeo-2.git,"Swift 3, Fitness, custom camera",,10
91,https://github.com/Tortu-Ch/Flutter-Fitness-APP-UI.git,Flutter fitness app ,"knowledges,flutter,dart,fitness-app,xd",10
92,https://github.com/kswiorek/ble-ftms.git,Arduino BLE Indoor Bike Fitness Machine,,10
93,https://github.com/Manthan109/fitMe.git,FitMe is an AI-based fitness application,"tensorflow,posenet,reactjs,firebase,pose-estimation",10
94,https://github.com/DevLifts/fit-cli.git,Open source CLI-based fitness tracker.,,10
95,https://github.com/godaddy-wordpress/primer-child-activation.git,"Activation is a Primer child theme with a colorful, fitness-focused design.","wordpress,wordpress-child-theme,primer-child-themes,godaddy,wordpress-theme",10
96,https://github.com/churchlab/AAV_fitness_landscape.git,"Analysis for ""Comprehensive fitness landscape of AAV capsid reveals a viral gene and enables machine-guided design""",,10
97,https://github.com/b0n0n/MS-fitnessband-jailbreak.git,simple scripts to parse and patch Microsoft fitness band firmware update file ,,10
98,https://github.com/hoffoo/moov-csv.git,Export Moov fitness tracker data from Android,,10
99,https://github.com/project-d3/Gym-Me.git,A fitness tracker web app built with Python and Flask,,10
100,https://github.com/shiningcoders/Covid19-App.git,"Covid19 - Tracker, Feeds, Map, Info, Fitness and more. Spread knowledge about Corona Virus because precaution is all we have in hands.","apk,meditation,covid,corona,coronavirus-tracking,covid-19,data,news,tracker,meditation-app,flutter,dart,shiningcoders",10
101,https://github.com/amitness/focusback.git,"{""Vibrate your fitness band when you're distracted on social media.""}","rescuetime,pushover-api,ifttt-maker",10
102,https://github.com/Sainathhiwale/ActivityRecognition.git,"Detecting user activity in android can be done very easily using ActivityRecognitionClient. You can detect user activities like Still, Running, Walking, Cycling, Tilting, Driving etc., We can see this API widely used in lot of fitness apps (like GoogleFit) to provide user activity info like number steps he is taken, the distance he is travelled.",,10
103,https://github.com/hoaiphun96/Teacup-Cactus.git,Teacup Cactus is an iOS fitness app that encourages daily walking. The player sets personal walking goals and is rewarded with collectable items for consistently reaching those goals,"unity,swift,xcode,crossbreed-flowers,pedometer,fitness-app",10
104,https://github.com/joshhedstrom/healthTracker.git,A Fitness and Nutrition Tracking App,"health,fitness,nutrition,reactjs,mern-stack,expressjs,mongodb,nodejs,passportjs,bcrypt-nodejs",9
105,https://github.com/vyvital/Fitz.git,Android lifestyle and fitness app,,9
106,https://github.com/Ishaan28malik/cr7-fitness-app.git,This is a Fitness APP design with Dark and Light Theme,"reactjs,frontend-web,fitness-app,fitness-tracker,trending,trending-repositories,light-theme,react,minify,hacktoberfest",9
107,https://github.com/nattwasm/CalPal.git,üèÉ CalPal is a web application that manages calories for health conscious and fitness people. Technologies: Web development for the front-end and Python Flask for the back-end. ,"web-application,html,css,python,flask,health,blueprint,flask-application,form,form-validation,sass,scss,javascript,pandas,gulp,spartan-calpal,managing-calories",9
108,https://github.com/vjo/BasisDataAnalysis.git,Looking at the data export from a Basis fitness tracker ,,9
109,https://github.com/parkedwards/ninety-days.git,An app to get your fitness on track,,9
110,https://github.com/freezed-or-frozen/MiBand1A.git,A node.js lib to the Xiaomi Mi Band 1A fitness tracker,,9
111,https://github.com/jmfloreszazo/BikeTrainer2BikePowerSensor.git,"This example gets the ANT+ signal of a ""Fitness Equiptment- Controls ( FE- C )"" and outputs the standard signal a ""Power Meter""",,9
112,https://github.com/zaman13/Particle-Swarm-Optimization-Fortran-95.git,A Fortran 95 code for Particle Swarm Optimization. The code is general. The fitness function is defined in a separate file and can be replaced by any user defined fitness function.,"particle-swarm-optimization,pso,benchmark-functions,evolutionary-algorithms,optimization-algorithms,evolutionary-optimization,swarm-intelligence",9
113,https://github.com/fish-kong/PSO-DBN.git,"By using 3-layer DBN to extract features embed in original image data, then fed the features into a extreme learning machine(ELM) for classification. Due to the difficulty in hiiden-nodes selectionÔºå then PSO was applied to select it automatically ,and PSO aimed to minimize the fitness function that is the accuracy of DBN-ELM crossvalidation classifcition",,9
114,https://github.com/atc1441/D6Emulator.git,D6 Fitness Tracker Custom Firmware for Arduino,,8
115,https://github.com/lakhghazali/Fitness_lakh.git,Fitness Mobile App using Flutter,,8
116,https://github.com/JBooker10/react-fitness-app.git,"Built a fitness app using React, Firebase, and D3",,8
117,https://github.com/chaosbastler/opentraining-exercises.git,"(Fitness) Exercises (.xml files and images), especially for the Android app Open Training.",,8
118,https://github.com/ColeMurray/WearableFitnessApiSample.git,A sample showing how to connect the Android Wear to Fitness API,,8
119,https://github.com/PoisonousJohn/AngryCoach.git,"Open source alternative for various fitness tracker apps like LifeSum, FatSecret, etc.","fitness,android,calorie-calculator,calories-tracker",8
120,https://github.com/RyanDsilva/eatfit.git,Fitness application that tracks Eating & Exercise habits :bento:,"flutter,dart,fitness,deep-learning,food,exercise,eating,exercise-habits,firebase,google-maps-api",8
121,https://github.com/youtube-jocoding/Teachable-Machine-AI-Fitness-Trainer.git,AI Fitness Trainer web service using Teachable Machine Pose Project and Text to Speech,,8
122,https://github.com/micahtyong/enhance.git,"{""A fitness iOS app that uses CMU's OpenPose library and Apple's CoreMotion framework to facilitate physical exercises.""}",,8
123,https://github.com/binggg/7minutes.git,A light application of fitness ‰∏Ä‰∏™ÂÅ•Ë∫´ÁöÑËΩªÂ∫îÁî®,,8
124,https://github.com/UCF-SDTeam13/echelon-tour.git,UCF CS Senior Design 2019 - Multiplayer Fitness Game for the Echelon Connect Smart Exercise Bike,,8
125,https://github.com/Neutrino-1/Fitness_Watch.git,An ESP12E based fitness watch with motion detection and email support!,"esp12e,fitness-watch,fitness,arduino",8
126,https://github.com/nrjparajuli/FitnesssMonitor.git,"Fitness Monitor is an Android application that users can use to track their daily activities like walking, jogging, sitting, standing, walking upstairs and walking downstairs. The application uses a Convolutional Neural Network (CNN) to predict user activity automatically and stores the information in a database stored on the phone. The users can then choose to visualize the statistics.","convolutional-neural-networks,android-application,fitness-app,human-activity-recognition,visualization",8
127,https://github.com/1edv/evolution.git,"{""This repository contains the code for our manuscript - 'A comprehensive fitness landscape model reveals the evolutionary history and future evolvability of eukaryotic cis-regulatory DNA sequences'""}",,8
128,https://github.com/thomas-hori/mirror-cwi-stdwin.git,"{""CWI's HPND-licensed STDWIN lib from the '90s, optional GUI lib in several 1.x Python versions, now hard to find (searched an FTP indexer years ago).\u2000Some minor adjustments to allow compiling on a current system.\u2000No guarantees of safety, fitness &c.\u2000I have been able to build usable binaries only on a 32-bit machine, unsure why.""}",,8
129,https://github.com/turbomaze/CGP-Evolutionary-Art.git,"Random mathematical equations are used to generate appealing images, which are improved with a genetic algorithm through the use of a human fitness function. I used Cartesian genetic programming (CGP) to create the equations, and in this case, the CGP has access to around 20 functions, like addition, rounding, and exponentiation. A few project specific heuristics are used to obtain interesting pixel colors for each (x,y) location of the images. The images are mutated as per CGP, with the fitness function simply being the boolean value of whether or not an image was selected by the user.",,8
130,https://github.com/Amitelazari/Legal-bug-bounty.git,"This is the #legalbugbounty standardization project. As I explain in my Enigma talk and my papers - the legal landscape of bug bounties is currently lacking. Safe harbor is the exception, not the standard and thousands of thousands of hunters are put in ""legal\'s"" harm way. I\'ve suggested that bug bounty legal terms, starting with safe harbor, could and should be standardized. Once standardization of bug bounty legal language is achieved, the bug bounty economy will become an alternate private legal regime in which white-hat hacking is celebrated through regulatory incentives. Standardization will start a race-to-the-top over the quality of bug bounty terms.  This project, supported by CLTC, aims to achieve standardization of bug bounty legal terms across platforms, industries and sponsors, in line with the DOJ framework, and akin to the licenses employed by Creative Commons and the open source industry. This will reduce the informational burden and increase hackers‚Äô awareness of terms (salience). It could also signal whether a particular platform or company conforms with the standard terms that are considered best practice. Finally, it could reduce the drafting costs of the platform or sponsoring program, as well as the transactional costs. While some organizations (such as governmental or financial organizations) might require adjustments, generally the legal concerns of bug bounties‚Äô sponsors and platforms are similar and could be addressed in standardized language.        Moreover, standardization should be used to ensure that hackers have authorized access to any third-parties data or components implemented in the bug bounty administrator product/network, and to facilitate coordinated disclosure of third-party vulnerabilities found (and ethically disclosed). Companies and platforms should coordinate to ensure that such clauses are included in all terms, facilitating a best practice mentality in the industry.              The benefits of standardization in bug bounties/CVDs of legal language across industries and platforms in light of DOJ framework       +One language of safe harbor akin to Creative Commons/Open Source       +Create an industry standard that will serve as a benchmark and signal to hackers if companies don‚Äôt adopt it         +Reduce the informational burden and increase hackers‚Äô awareness towards terms       +Reduce transaction and drafting costs        +Create a reputation system for legal terms       You must consult with a lawyer       Disclaimer: this report does not constitute legal advice and the author is not admitted to practice law in the U.S. The information contained herein is for general guidance on matters of interest only. The application and impact of laws can vary widely based on the specific facts involved. Given the changing nature of laws, terms, rules and regulations, there may be delays, omissions or inaccuracies in information contained herein. Accordingly, the information is provided with the understanding that the author is not herein engaged in rendering legal or other professional advice and services. As such, it should not be used as a substitute for consultation with professional legal or other competent advisers. Before making any decision or taking any action, you should consult a professional. All information is provided ‚Äúas is‚Äù, with no guarantee of completeness, accuracy, timeliness or of the results obtained from the use of this information, and without warranty of any kind, express or implied, including, but not limited to warranties of performance, merchantability and fitness for a particular purpose. In no event will the author be liable to you or anyone else for any decision made or action taken in reliance on the information herein or for any consequential, special or similar damages.",,8
131,https://github.com/FitnessKit/FitnessUnits.git,Units of Measurement for Fitness,"units-of-measurement,measurement,swift-package-manager,measurements",7
132,https://github.com/werkkrew/ciq-orange-theory.git,Orange Theory Fitness - Garmin Connect IQ App,"garmin,garmin-connect,monkey-c,fitness,wearables",7
133,https://github.com/Suesanz/Fitness-Website.git,A Fitness Website having some great features to keep a tab on your fitness.,"bootstrap,html,css,heroku,passportjs,nodejs,expressjs,sequilize,javascript",7
134,https://github.com/rneher/FitnessInference.git,Prediction fitness of leaves on a genealogical tree,,7
135,https://github.com/pranavkundra/GameFit.git,Fitness app with gamification using iOS HealthKit data.,,7
136,https://github.com/robbrinkman/architectural-fitness-functions.git,"Architectural Fitness Functions using Gradle, JUnit and code-assert ",,7
137,https://github.com/tyiannak/recognizeFitExercise.git,Classification of fitness exercises based on accelerometer and camera information,,7
138,https://github.com/developerRsam/Fitness-Trainer-App-UI.git,Fitness Trainer App built in Flutter,,7
139,https://github.com/Dirk-Sandberg/100DaysOfFitness.git,Public version of the 100 Days of Fitness Kivy (KivyMD) app,,7
140,https://github.com/gamma/FTMS-Bluetooth.git,A Swift package to provide basic BLE functions for a Fitnesses Machine ,,7
141,https://github.com/henrymike/TrainerKeeper.git,"A custom CRM for fitness professionals to keep track of classes, clients, and individual progress",,7
142,https://github.com/pdugan20/codepath-fitness.git,A fitness application that creates tailored workout playlists.,,7
143,https://github.com/QuinntyneBrown/no-days-off-app.git,"Fitness Management App using ASP.NET Web Api 2, Angular 4, MediatR, Redis, Azure Service Bus, Electron, SignalR, Azure Search and TypeScript 2.x","angular,typescript,signalr,webpack,mediatr,redis,azure-service-bus,electron,custom-elements-v1,cqrs,azure-search",7
144,https://github.com/gau-veldt/LSTM_OOPS.git,Long Short Term Memory nodes with Optimal Ordering Problem Solver training allows reinforcement learning models for LSTM networks using fitness or reward metrics.,,7
145,https://github.com/mihir-m-gandhi/Fitness_App.git,"A Progressive Web App to track the fitness and diet of the user. It can be used to track the steps, distance, calories burnt by the user, and also record activities.",,7
146,https://github.com/mhjhamza/100DaysChallenge-ImageGenerator.git,"{""A handy utility for all the doers who've pledged for any kind of 100 Days Challenge - Be it Health, Fitness, Code or even reading books. This utility allows the users to choose (or upload) from a variety of image backgrounds, and choose a border still and then let's then post the image (along with the description of their milestones for a particular day) on linked social media accounts with a single click.""}",,7
147,https://github.com/Sage-Bionetworks/CardiorespiratoryFitness-iOS.git,Stand-alone task modules for measuring cardiorespiratory fitness,,6
148,https://github.com/JanethL/project-airtable-twilio-workout.git,Fitness planner + tracker with Airtable and Twilio ,,6
149,https://github.com/JohannesMilke/fitness_app_ii_example.git,"{""Let's implement the video functionality for our good-looking fitness app in Flutter.""}","flutter,dart",6
150,https://github.com/hoelsch/fitness-app-backend.git,Backend for a fitness app using Node.js and Express üèãÔ∏è,"nodejs,express,mocha,chai,joi,sequelize,rest-api",6
151,https://github.com/linkeddata/solid-fitness.git,Archive your fitness activities in a solid store where they belong,,6
152,https://github.com/AkshayMathur92/SyncHealth.git,SyncHealth is an Android app to move fitness data from Samsung Health to Google Fit. ,"googlefit,samsung-health,fitness-app,fitness,fitness-score",6
153,https://github.com/KrauseFx/felix.fitness.git,Public fitness dashboard,,6
154,https://github.com/RyanCCollins/rn-fitness-app.git,React Native Fitness Tracking App,,6
155,https://github.com/TaylanOzcan/simply-fit.git,Fitness & Activity Tracking App | Android,,6
156,https://github.com/SFI-Lero/TREES-InnerSource_Project_Fitness.git,"A tool for measuring InnerSource project fitness. Shows Fitness score, Strengths & Weaknesses on 6 dimensions according to the Technology-Process-People model. Includes options for downloading the scores and the plots.","innersource,shiny-r,scores",6
157,https://github.com/castvoid/FudBar.git,A fitness tracker and motivation tool,,6
158,https://github.com/devanymoe/fitpic-backend.git,FitPic is a React Native app for iOS and Android that helps users to track their fitness progress through consistent photos.,,6
159,https://github.com/xmlking/node-iot-healthcare.git,node.js lib for fitness and health tracking devices.,,6
160,https://github.com/abarisyerlikaya/FitnessDB-Website.git,A website which guides about fitness and health. ,,6
161,https://github.com/Decadz/Genetic-Programming-with-Rademacher-Complexity.git,Genetic Programming for Symbolic Regression which uses the Rademacher Complexity in the fitness function to regulate the complexity of the hypotheses generated in the evolutionary process.,"evolutionary-computation,genetic-programming,symbolic-regression,model-complexity,rademacher-complexity",6
162,https://github.com/VCCRI/CardiacProfileR.git,CardiacProfileR: An R package for extraction and visualisation of heart rate profiles from wearable fitness trackers,,6
163,https://github.com/yichenzhu1337/justplay.git,:basketball: :football: :soccer: :tennis: :baseball: Matchmaking for local (UTSC) sport/fitness enthusiasts or recreational players.,"sports,php,laravel,angularjs,javascript,social-network",6
164,https://github.com/YitengZhou/Fitness-Jungle.git,A health and fitness IoT product to track steps with lovely virtual pet,"software-engineering,health-device,vitual-pet",6
165,https://github.com/sina-cb/Tn-seqExplorer.git,Tn-seq Explorer allows users to explore and analyze Tn-seq data for prokaryotic (bacterial or archaeal) genomes. It implements two alternative methods for identification of essential genes and provides additional tools to investigate the Tn-seq data. The primary goal of the data analysis is to study fitness by identifying genes that are essential or beneficial under specific growth conditions.,,6
166,https://github.com/omar-mahfouz/AI-FlappyBird.git,"FlappyBird Using Genetic Algorithm and Neural Networks:  In this project, we have implemented an AI for the Flappy Bird which makes the computer play the game much more efficient as compared to what a normal human being can do. We have achieved these goals using Genetic Algorithms with an underlying Neural Network Architecture.  You can see this project in youtube: https://youtu.be/IWwaMLeiYp4 .  Implmentation: 1) Neural Network: we have neural network with five nodes, one for Bird Position and one for Velocity and one for Distance between next pipe and one for Upper pipe height and finally for Lower pipe height. There is one output means perform flap and else do nothing and without any hidden layer. Each node uses the sigmoid function as its activation function. 2) Genetic Algorithm: We sort the individuals of the current generation in decreasing order of their fitness values, then we get top 25% directly to the next generation. Then we do cross-over and add them to next generation.  References:  https://www.cse.iitb.ac.in/~aviral/reportFlappy.pdf  https://medium.com/towards-data-science/neural-network-plays-flappy-bird-e585b1e49d97",,6
167,https://github.com/soravgarg123/gym-trainer-cakephp.git,cakephp-fitness,,5
168,https://github.com/AaronVon/Fitness.git,Fitness working with Android Wear & Google Fit,,5
169,https://github.com/nimatrazmjo/fitness.git,Fitness web based database using NodJS+MongoDB+Angularjs,,5
170,https://github.com/SamKTech/Sanum.git,A lifestyle social app for health and fitness,,5
171,https://github.com/shamadevi/Fitness-Website.git,https://shamadevi.github.io/Fitness-Website/,,5
172,https://github.com/NHD-group/Healthy-Life.git,Health and fitness social network app,,5
173,https://github.com/beiatrix/fitby.git,minimalist fitness dashboard that generates data visualizations of user-input health and fitness measurements (built with NERD stack + recharts),,5
174,https://github.com/elimirks/myofit.git,Myo Fitness ,,5
175,https://github.com/ThisIsNull/TicFitApp.git,TicFit - run fitness tracking app for the Ticwatch2,,5
176,https://github.com/EricTheAI/smart-diet-app.git,A fitness app that tracks your diet easily and give you meal recommendations to get fit & healthy.,"health,fitness-app,food,eating-plan,machine-learning,deep-learning,diet-safety",5
177,https://github.com/kl3jvi/ionic5-coaching-app.git,A simple fitness/ ecommerce/ social app template all packaged into one. ,"ionic,angular,ionic4",5
178,https://github.com/tegster/NutriFit.git,NutriFit is an Android application that helps you keep track of your nutrition and fitness goals.,,5
179,https://github.com/Kbart2401/Catch-me-if-you-can.git,Fitness tracking web app,,5
180,https://github.com/Asduveneck/GetYoked.git,Single-Page Fitness App,,5
181,https://github.com/jgw96/WalkTracker.git,A fitness tracking PWA,,5
182,https://github.com/dtSarah/hamster-wheel.git,implementing a hamster fitness tracker,,5
183,https://github.com/mdelaossa/fitbot.git,IRC bot with fitness-related modules based on the Cinch ruby framework,,5
184,https://github.com/Here21/FitNote.git,A Note of Fitness that to help you record data of body,"react,react-router-v4,axios",5
185,https://github.com/dakshshah96/getfit.git,"A simple app to track activities, fitness levels and find others like you.","nodejs,javascript,express,mongodb,mongoose,pug,fitness",5
186,https://github.com/adsamcik/Tracker-Android.git,"Offline location, Wi-Fi, cell and fitness tracking application with game elements","android-app,android-application,wi-fi,tracker,customizable,fitness,cellular-network,gps-tracker,tracker-android,game-elements,gpx,kml,dynamic-style",5
187,https://github.com/mykeln/pump.git,A simple HTML5 fitness management app,,5
188,https://github.com/yaatra/PointBreak.git,A fitness focused social travel application,,5
189,https://github.com/MakisChristou/verifit.git,Minimalist fitness tracker inspired by FitNotes.,"fitness,tracker,java,android-application,android-app,gym,workout,fitness-tracker,fitness-app,weightlifting,bodybuilding",5
190,https://github.com/jersteve/Step.git,A fitness tracker app to compete against your friends,"ios,swift",5
191,https://github.com/pauls3/gymspace.git,Social Fitness App for Android made with Flutter Dart,,5
192,https://github.com/RobertWSaunders/stayhealthy-ios.git,"Easy to use fitness aid available on the App Store, access hundreds of exercises and workouts! :running: :bicyclist:",,5
193,https://github.com/samflab/Fitility-OpenSource.git,"A fitness application made with Flutter and Firebase. Contains user authentication, admin-role management, CRUD functionalities and connection with Firestore and Storage.","opensource,flutter,firebase,dart,fitness,firebase-auth,firebase-storage,firestore",5
194,https://github.com/jasonwaters/fitcompetition.git,A django based app used to track fitness challenges and display a leader board based on workout activities entered in popular fitness tracking apps.,"fitness,python,angularjs,runkeeper,strava,django",5
195,https://github.com/iissh/moveit.git,"A fitness and wellness social networking platform designed to unite like minded people for discussion on topics revolving around fitness, mental health and wellness. ","mental-health,fitness,wellness,django,blog",5
196,https://github.com/derwas/Fitness-Android-App.git,"This project is an Android mobile application for tracking fitness activities: driving, running, walking, etc. IT uses gps sensor of the phone to measure that speed, distance, etc. during an activity.",,5
197,https://github.com/ppassmannpriv/ShopwareCountries.git,"{""People actually pay 5-10‚Ç¨ for this. If we should ever meet - buy me a pint of Guinness and let's talk cars, fitness, music or tv shows or something :D""}",,5
198,https://github.com/MakoGS/MM-Trainer.git,"A responsive web app and directory to Ô¨Ånd personal trainers, Ô¨Åtness experts and wellness coaches in your area.",,5
199,https://github.com/george-swift/fitness-bot.git,A bot that pulls from the Telegram API. Uses prompts to share fitness guides. Built with Ruby,,5
200,https://github.com/judithbergada/bacolonyzer.git,"BaColonyzer is a software to quantify the fitness of bacterial cultures growing on solid agar, based on time-course pictures",,5
201,https://github.com/PratthamArora/Fit-Tastic.git,"A Fitness Tracker app that tracks the runs of the user using google maps and displays various info such as total calories, total distance, and more in a Bar chart.","room-database,kotlin-android,kotlin-coroutines,mvvm-architecture,material-design,viewmodel-livedata,navigation-architecture-component,glide,googlemaps-api,dagger2-android,timber-library,mpandroidchart,easypermissions,hilt-android",5
202,https://github.com/nabelekt/HealthKit_data_convert.git,Convert a HealthKit XML file ‚Äì\xa0containing health and fitness data from iOS (iPhone) and watchOS (Apple Watch) devices ‚Äì\xa0to a CSV file.,,5
203,https://github.com/FredPMoon/USCFit.git,"USCFit is an Android fitness app designed for users to record daily activities, customize workout plans, and track progress at ease. (Android, Java, Firebase)",,5
204,https://github.com/nurzhannogerbek/BonusDesk.git,"Referral bonus system for ""EnjoyJumping"" fitness organization.",,4
205,https://github.com/dickyrey/fitness_app.git,Fitness App,,4
206,https://github.com/kwilliams2018/fitness_trainer.git,Flutter app to help people with fitness and workouts,,4
207,https://github.com/burnnat/ha-polar.git,Polar fitness tracking integration for Home Assistant.,,4
208,https://github.com/chiragjn/ProFit-Android.git,[HACK-A-THON PROJECT] A Professional Fitness Companion,,4
209,https://github.com/zendotools/zendo.git,zend≈ç: a mental fitness tool.,,4
210,https://github.com/shreyanshsatvik/personal_trainer-using-mediapipe.git,A fitness app that helps you maintain your fitness during covid times . ,"mediapipe,flask,opencv,fitness,pose,pose-estimation",4
211,https://github.com/bluesproutllc/instaTrainer.git,A two-sided platform that facilitates communication between physical trainers and fitness enthusiasts.,,4
212,https://github.com/acconrad/peergym.git,A health and fitness club directory written in Elixir/Phoenix,"phoenix,elixir,health",4
213,https://github.com/mpsonic/Evolve-Workout-Logger.git,An android fitness app that makes training easier,,4
214,https://github.com/quqingfei/webAppForIpad.git,fitness webapp,,4
215,https://github.com/heysupratim/SWNotifier.git,Android smart watch like notification alert system for fitness bands using Bluetooth LE,,4
216,https://github.com/GymRatTrax/GymRatTrax-FitnessScheduler.git,GymRatTrax - Personal Fitness Scheduler,,4
217,https://github.com/Gymgo/gymgo.git,Track your fitness routines,,4
218,https://github.com/oliikit/fitrep.git,A fitness report log,,4
219,https://github.com/uniteTheNaitei/corpus.gymnew.git,"{""fitness blog's new corpus""}",,4
220,https://github.com/cjbarber/FitnessProgressPosts.git,Reddit Fitness Progress Post Templates,,4
221,https://github.com/atulpandey98/Fitness-Mentors.git,Fitness Mentors helps you achieve your fitness goals in the most efficient way possible.,,4
222,https://github.com/kwanmolee/Blood-Pressure-Prediction-and-Peronalized-Health-Behavior-Recommendation.git,Use health and fitness data collected from Samsung Galaxy Watch and blood pressure data from Omron to realize blood pressure prediction. ,"blood-pressure,fitness,wearable-devices,healthcare",4
223,https://github.com/bmzhao/Vigenere.git,"Tools for cracking vigenere cipher using Index of Coincidence, Chi Squared, and fitness using quadgram statistics",,4
224,https://github.com/compbel/SCIFIL.git,Single Cell Inference of FItness Landscape,,4
225,https://github.com/devanymoe/fitpic-frontend.git,FitPic is a React Native app for iOS and Android that helps users to track their fitness progress through consistent photos.,,4
226,https://github.com/hjungj21o/Zoe.git,A MERN-based web application designed to give users personalized weekly meal plans based on their desired fitness/health goals.,,4
227,https://github.com/ipazc/deepevolution.git,Deepevolution is a PIP package for evolving tensorflow keras models with a genetic algorithm towards fitting a fitness function.,"evolution,genetic,algorithm,neural,network,keras,tensorflow,loss,training,pip,package,evolve",4
228,https://github.com/mogenson/fitbit-heart-rate-service.git,Fitbit OS watch app + Android app to create a mock Bluetooth heart rate monitor for fitness equipment,,4
229,https://github.com/tabfugnic/workout.git,Keep track of fitness and muscle groups while working out.,,4
230,https://github.com/bunburya/shyft.git,Self-hosted fitness activity tracker written in Python (early WIP),,4
231,https://github.com/Sahara-Team/shape-fitness-web-demo.git,A webdemo that working for correcting fitness posture.,,4
232,https://github.com/evcarone/ampmyfitness.git,mashup your fitness workouts with your favorite YouTube videos,,4
233,https://github.com/ryoung7986/fit-yeah.git,Fit-yeah! A fitness-centric social-media application,,4
234,https://github.com/aaman123/FastFit21.git,"Fitness application using Ionic, Android, Capacitor, Cordova and Apache.",,4
235,https://github.com/pwstegman/myofit.git,:muscle: Myo fitness tracking AI and personal trainer,,4
236,https://github.com/austinbailey1114/FitnessTracker-Nuxt-Laravel.git,Online fitness tracker updated to use Nuxt + Laravel,,4
237,https://github.com/robertmotr/goodlife-booking-alerter.git,A bot that checks for free sessions at Goodlife Fitness.,,4
238,https://github.com/SekulKamberov/Personal-Fitness-Care.git,ASP.NET WEB API + Angular JS - Fitness app builds personal programs,,4
239,https://github.com/ErlendEllingsen/satselixia-sms-bot.git,SMS two-way communication bot that sends information about SATS/Elixia centers (Norwegian fitness centers).,"sms,nodejs,smsbot,node,twilio,conversational-bots",4
240,https://github.com/mikeoles/SwiftSet.git,Android fitness app that allows users a quickly find the perfrect exercise for any situation,,4
241,https://github.com/thomaslgrega/MapMyJog.git,A fitness app inspired by MapMyRun that allows users to create running routes.,,4
242,https://github.com/jessedc/sds011-pm-sensor-python.git,A parser for the Innova Fitness sds011 pm sensor serial interface,,4
243,https://github.com/ozcanzaferayan/fitness-admin-panel-css-grid.git,Based on Agilie Team design: https://dribbble.com/shots/10173522-Fitness-admin-panel,"css-grid,dribbble",4
244,https://github.com/Variablefrog/GPXHarvester.git,A Set of Python scripts to gather and visualise gepgraphically specific GPX files from fitness tracker websites Strava and MApMyRide,,4
245,https://github.com/tnbKristi/Workout-Calendar-Builder.git,"{""Because I'm a nerd for both ruby and fitness. :( Make a calendar based on the P90X or T25 agenda!""}",,4
246,https://github.com/chang-steven/strong-heart-api.git,"Server-side Repository for HEARTSTRONG, a full stack JavaScript app for tracking personal cardiovascular fitness sessions providing visual analysis of all activity.","nodejs,express,mongodb,mongoose,javascript",4
247,https://github.com/Miguelus373/Fit-Tracker.git,This is a fitness app to track all your exercises and group them by categories. Other users can join your groups and add new exercises too.,,4
248,https://github.com/samuelklam/luis.ai.git,"Natural language ""bot"" interfaces for a Health Fitness Tracking Application (SuperTracker 3000) and a Sleep Tracking & Alarm Clock Application (SleepTracker) using Luis.ai","nlp,luis,ai,artificial-intelligence,health",4
249,https://github.com/easwaranramamurthy/Genetic-Algorithm-for-Fantasy-Soccer-Drafts.git,"This is an implementation of a classic Genetic algorithm which uses a combination of roulette wheel and elitist selection, mutation and crossover to generate a draft fantasy soccer team. The fitness function is based on player value and previous gameweek scores",,4
250,https://github.com/davepetrov/Gym-Booking-Discord-Bot.git,Book Me Bot‚Ñ¢ | www.bookmebot.com | A Discord Chatbot that guarantees you a workout booking time at your local Fit4Less or LA Fitness gym! More gyms and platforms coming soon...,"discord-bot,gym,webscraping,nodejs,discord-server,fit4less,workout,slot,schedule,lafitness,autobook,range",4
251,https://github.com/UtsabSen/Fitness_Calculator.git,"This python program takes user name, age, gender and requirement inputs like height, weight, bp, etc to calculate the fitness and show the result as low, normal or high.",,4
252,https://github.com/amarjitdhillon/Find-Shortest-Path-using-Generic-Algorithm-in-MATLAB.git,"Objective of this project was to select minimum cost path for sending packets from router A to router B such that all routers are traversed, hence this problem is different to Travelling Salesmen Problem (TSP), where Intermediate nodes can be left off. Initial location for all routers was randomly generated in 3-D space. Hinged upon initially generated locations, distance amidst them is computed using Euclidian formula which serves as Fitness function. Initial Population was selected using Roulette wheel selection using aforementioned Fitness function. Then Crossover was computed if, Probability of crossover. Pc > (Randomly generated probability) using two-point crossover. After this initial population was updated and mutation was done if Pm > (Randomly generated probability). Best chromosome was computed using max fitness function and Inversion / Swapping / Sliding was done on 2nd,3rd,4th chromosome, while 1st chromosome was passed as such using Elite Selection method to preserve best chromosome (Solution in this case). User have laxity to enter number of initial routers, size of initial population and number of iterations for Genetic algorithm to simulate. This method was named as MGA (Modified Genetic Algorithm) and it‚Äôs performance was juxtaposed with SGA (Simple Genetic Algorithm) where Initial Selection / Fitness function / Crossover / Mutation method deployed were computed differently using same set of routers co-ordinates used for SGA. Results were shown using six simulation Graphs, three for each case.",,4
253,https://github.com/ParidhiGola/CardioGoodFitness---Descriptive-Statistics.git,Cardio Good Fitness Case Study - Descriptive Statistics,,3
254,https://github.com/webui012/fitness-trainer.git,fitness-trainer,,3
255,https://github.com/aitp2/dlife.git,dlife for pinfan fitness kitchen,,3
256,https://github.com/Cotters/FitAR.git,Augmented reality fitness app.,"ar,arkit,fitness,fitness-app,augmented-reality",3
257,https://github.com/SebastianBoyd/Fitness.git,Android fitness app,,3
258,https://github.com/jbn/RouletteWheels.jl.git,A package of fitness proportionate selection algorithms.,,3
259,https://github.com/evansharp/strava-icon.git,svg icon for fitness webapp Strava,,3
260,https://github.com/tycrek-archive/fitness-app.git,A fitness/workout app written in Flutter.,,3
261,https://github.com/khanhlt/fitness_web.git,A Fitness Website base on Laravel framework,,3
262,https://github.com/RajKadir/CaloriesTracker.git,Calories Tracker - Fitness calories/diet tracker client,"calories,diet,fitness,progress,strength,power,hypertrophy,food,protein,workout,carbohydrates,physique,aesthetics",3
263,https://github.com/abenzaggagh/Fitness-iOS-App.git,iOS Fitness App,"health,fitness,ios,swift",3
264,https://github.com/jungpil/nkagilewaterfall.git,NK fitness landscape model comparing ISD methodologies (agile vs. waterfall),,3
265,https://github.com/nooodle/noodlefit.git,Fitness Tracking App,,3
266,https://github.com/bunburya/fitness_tracker_data_parsing.git,Example scripts for parsing data exported by popular fitness tracking devices and apps. Created for this article: https://towardsdatascience.com/parsing-fitness-tracker-data-with-python-a59e7dc17418,"python,gpx,tcx,fitness-tracker,parsing",3
267,https://github.com/Fireboltz/NAV-FT.git,NAV-FT is Not Another Vehicle-Fitness Test,"flutter,automation,vehicle-fitness,machine-learning,computer-vision,python,dart",3
268,https://github.com/martins309/fitness-app.git,we are creating a fitness app using backend server ,,3
269,https://github.com/evliang/fitness_planner.git,Generates exercise plan and tracks fitness progress,"fitness,fitness-tracker,fitness-goals,weightlifting",3
270,https://github.com/bespoke-digital/spendwell.git,A fitness tracker for your money,,3
271,https://github.com/ciren/fla.git,A collection of traversal algorithms and function metrics used in Fitness Landscape Analysis,,3
272,https://github.com/bryanbloomquist/TryAthlete.git,A fully-functional full stack fitness tracking application designed for endurance athletes,,3
273,https://github.com/Better-U/Better-U.git,A fitness browser application that incorporates game design techniques to engage and motivate users to achieve their goals.,,3
274,https://github.com/amurto/mental-fitness-assistant.git,Mental Fitness Assistant for conducting tests using Machine Learning,"flask,reactjs,emotion-detection,nlp,webcam,healthcare",3
275,https://github.com/josephfusco/APFT.git,:us: Army Physical Fitness Test calculator built with React,"calculator,army,united-states",3
276,https://github.com/FCingel/lift-off-fitness.git,Full Stack Competitive Fitness Website for CUNY Tech Prep,,3
277,https://github.com/ovirovkin/web-bluetooth-fitness-tracker.git,Mi band fitness tracker Progressive Web Application (PWA) using Web Bluetooth API,,3
278,https://github.com/jaggisingh/angular-firebase-ngrx-rxjs.git,Fitness App,,3
279,https://github.com/cagansevencan/Brave.git,Fitness App,,3
280,https://github.com/eliotsykes/rails-activerecord-aerobics.git,[UNMAINTAINED] Boost your Rails ActiveRecord Query core fitness with this workout plan. A+ abs or your money back.,,3
281,https://github.com/pketh/fit-report.git,Personal fitness visualization,,3
282,https://github.com/IbnB/FitPro.git,Fitness Trail Assistant,,3
283,https://github.com/KNIAZEV1/fitness.git,Website for fitness club,,3
284,https://github.com/jakehaas/SAM-Fitness.git,SAM Fitness -- WPI MQP,,3
285,https://github.com/AlexSheiko/DreamTeen-Fitness.git,Fitness app for teens,,3
286,https://github.com/farooq98/Fitness-Theme.git,Theme for Fitness websites.,,3
287,https://github.com/samjhill/ppl.git,Awesome fitness-tracking webapp.,,3
288,https://github.com/majedsamyal/gymrat.git,Fitness Club Management System,,3
289,https://github.com/kiwikern/Superfit-Schedule.git,PWA for fitness schedule ,"schedule,fitness,gym,classes",3
290,https://github.com/KaterinaLupacheva/tabata-app.git,Tabata - Fitness App,"react,redux,fitness-app,tabata",3
291,https://github.com/sparkfun/Simblee-LilyPad-Fitness-Bracer.git,All the resources needed to make your own Simblee Lilypad Fitness Bracer from the Fellowship of the Things episode 6!,"3d-printing,wearable,lilypad,lilypad-arduino,sparkfun,sparkfun-projects",3
292,https://github.com/MartinDawson/Reggest.git,A fitness plan recommendation tool.,"fitness,gym,fitness-app,fitness-tracker,plans",3
293,https://github.com/ayo-dami/Fitness-Discussion-Community.git,Online Fitness board and community,,3
294,https://github.com/Zefty/FitTrac.git,FitTrac | Fitness tracking for everyone!,,3
295,https://github.com/esmith818/f3isotope.git,"{""Drupal 7 site for Lake Norman region's F3 group (men's fitness)""}",,3
296,https://github.com/rodericj/GradedExercises.git,A series of exercises and fitness tests for use with an Ant+ key,,3
297,https://github.com/Gebes/FitnessChallenge-IconBlockchain.git,üèàChallenge your friend for a Fitness Challenge,,3
298,https://github.com/iamraufu/rabeya-food-fitness.git,"{""Rabeya's Healthy Food and Fitness Center""}","fitness-center,rabeya-food,food,fitness,socket-io,video-chat,reactjs,mongodb,nodejs,react-router-dom",3
299,https://github.com/BitnessFitness/Bitness.git,"{""It's like fitness... but with bits.""}",,3
300,https://github.com/iamraufu/rabeya-food-fitness.git,"{""Rabeya's Healthy Food and Fitness Center""}","fitness-center,rabeya-food,food,fitness,socket-io,video-chat,reactjs,mongodb,nodejs,react-router-dom",3
301,https://github.com/patrickdmiller/roulette-wheel-selection.git,Roulette wheel selection AKA Fitness proportionate selection,,3
302,https://github.com/sulanmehmetsirin/Fitness.git,Saƒülƒ±klƒ± bir v√ºcud i√ßin fitness uygulamasƒ±,,3
303,https://github.com/kylemeier/fitness.git,fitness app built in angular/firebase,,3
304,https://github.com/NeerajaDjea/fitness-App.git,App to set and record fitness goal,,3
305,https://github.com/Albantakis/animats.git,C++ code for evolving animats by fitness,,3
306,https://github.com/aborren/Positifity.git,"iOS health, fitness and motivation app!",,3
307,https://github.com/abhisheksawant807/Fitness-Guide-Android-App.git,"{""This is an Android App which serves as the 'Ultimate Fitness Guide' for anyone into health and fitness.""}",,3
308,https://github.com/SamsonPN/A-Better-U.git,"A Health and Fitness App created by a passionate gym bro. Technologies used: MongoDB, Express, React, NodeJS","react,react-router-v4,health,nodejs,photo,cloud-services,mongodb,express,node,reactcontextapi,chartjs,cloudinary,cookiesession,passportjs,netlify,heroku,nutrition,usda-national-nutrient-database,fitness,mongodbatlas",3
309,https://github.com/teojincheng/WalkingApp.git,Android application with Google Maps API. It operates like a fitness app for running/walking. Video: https://youtu.be/Yc_fdTKwBks,"android,firebase",3
310,https://github.com/Chulong-Li/Smart_Fitness_Assistant.git,"With our Smart Fitness Assistant, you can achieve the same exercise goal more efficiently and less costly than hiring a personal trainer!",,3
311,https://github.com/Kevin-Ray-Johnson/GA-airplane-designer.git,"A program to produce rough aircraft designs optimized to a given fitness function from a selection of engines, airfoils, and design unique geometry by utilizing a genetic algorithm.",,3
312,https://github.com/robinbansal/Fitness-repo.git,"Fitness website made using html,css,js,bootstrap.",,3
313,https://github.com/sessions-io/challenge-spec.git,Defines what a fitness challenge is in JSON format,,3
314,https://github.com/ilies-space/FitnesTrackerUI.git,Fitness app react native based on neumorphism & glasses effect UI,,3
315,https://github.com/Alan01252/bodyweightfitness.git,"Rough and ready bodyweight fitness app, heavily work in progress",,3
316,https://github.com/iamraufu/rabeya-food-fitness-server.git,"{""Server Side of Rabeya's Food and Fitness""}",,3
317,https://github.com/selaias/meteor-fit-api.git,"Fitness API support for Runkeeper, Strava, MapMyFitness, UnderArmour, Fitbit.",,3
318,https://github.com/malone5/hawk_fitness.git,Fitness class management app built with CodeIgniter(PHP),,3
319,https://github.com/youellsp/ketogains.git,"Ketogains macro-nutrient calculator, fitness tracker, and more!",,3
320,https://github.com/rayz2007/HealthApp.git,Health and Fitness web app utilizing React/Bootstrap,,3
321,https://github.com/bartkowiaktomasz/fitness-activity-classification-with-lstms.git,Web Application for Human Activity (Fitness) Recognition using LSTMs,,3
322,https://github.com/ramblex/bluey.git,Source code for Bluey health and fitness website,,3
323,https://github.com/charliecooper45/cycling-app.git,Node.js app to monitor and report on cycling fitness,"nodejs,pug,cycling,roadcycling,strava,semantic-ui,trainerroad",3
324,https://github.com/RahulMahesh62/BMI-Calculator.git,A Fitness Analyzing BMI Calculator Application built using Flutter,,3
325,https://github.com/malhotrabhavyajot/Fitness-App-FitGrind.git,Fitness App : FitGrind ; using Java and XML on Android Studio.,,3
326,https://github.com/otioritsejafor/Quicksteps.git,GPS Fitness app to keep track of your runs,,3
327,https://github.com/Weichwarenprojekt/gether-fit.git,A fitness application that is focusing on getting fit together.,,3
328,https://github.com/marcjwilliams1/dnds-clonesize.git,"Snakemake pipeline to produce figures for ""Measuring the distribution of fitness effects in somatic evolution by combining clonal dynamics with dN/dS ratios""",,3
329,https://github.com/maayami/Fitly.git,"{""We are making a cross-platform and open-source application Fitly. Fitly is a community app for fitness lovers. It has awesome native features like notifying a user for fitness checkup. It has an animated graph showing the user's progress. explore tab is there to give a user more socialised experience. User can also share his progress over other platforms.""}","react-native,react-native-app,react-native-navigation,react-native-vector-icons",3
330,https://github.com/gidili/EvolvingCASynchronization.git,Fitness (and utility) functions for Evolution of Cellular Automata rules for majority classification and global synchronization,,3
331,https://github.com/aekanman/sleep-history.git,:sleeping:Android app to read/write sleep data on Google Fitness API,"android-wear,google-fit-api",3
332,https://github.com/Ritwik880/H-Fitness.git,"This is a H-Fitness website, this website is for gym purpose","html5,css3,javascript,jquery,angularjs",3
333,https://github.com/RyanGC93/fitnessOverflow.git,A fitness themed  Q/A Board that is a clone of Stack Overflow ,,3
334,https://github.com/JeffIrwin/maph.git,"{""This isn't normal, but on maph it is:  a heat mapping tool for fitness data""}","heatmap,gpx,strava,data-visualization",3
335,https://github.com/hoonick91/-unithon-foutine.git,"[Ionic] fitness+routine Ïò§Îäò Ìï¥ÏïºÌï† ÏûêÏã†Ïùò Ïö¥ÎèôÏùÑ Í≥ÑÌöçÌïòÍ≥†, rasberry pieÏôÄ Ïó∞ÎèôÌïòÏó¨ Ïö¥ÎèôÌöüÏàòÎ•º Ï∏°Ï†ï Ìï¥Ï£ºÎäî APP",,3
336,https://github.com/PlamenMichev/SoftGym.git,SoftGym is a online fitness platform for gyms that ease their work.,,3
337,https://github.com/rreinold/FitnessDashboard_D3js.git,Creating a personal fitness dashboard with data visualization using D3.js,,3
338,https://github.com/m-jahn/ShinyLib.git,R Shiny based interface for browsing fitness data from transposon or CRISPRi libraries,"r,shiny-apps,molecular-biology,computational-biology,visualization",3
339,https://github.com/parthsatra/WalkPotato.git,This is a fitness android app for encouraging users to exercise,,3
340,https://github.com/kousathanas/MultiDFE.git,Inference of the Distribution of Fitness effects of new mutations with Maximum Likelihood,"maximum-likelihood,population-genetics,adaptive-evolution",3
341,https://github.com/pdugan20/usmc-pro-fitness.git,An android application that calculates United States Marine Corps fitness test scores.,,3
342,https://github.com/simonnim/Msg-me-fit.git,Fitness planner that text you daily meal plans and also daily workout routines,,3
343,https://github.com/rprinz08/fitbit_dumper.git,A tool for exporting FitBit fitness data to sqlite or CSV,,3
344,https://github.com/michael-maton/Anywhere-Fitness-App.git,A place where instructors and clients can hold and attend fitness classes wherever and whenever,"lambda,react",3
345,https://github.com/Blasco9/Cali-shop.git,"Static website mimicking an E-commerce that sells fitness equipment. Built with HTML, CSS, and Javascript",,3
346,https://github.com/CliffWilson98/U-Fit.git,"Android fitness app which allows users to create custom workouts, perform them, and track their progress over time.",,3
347,https://github.com/Wahuh/trackeroo-api.git,"A serverless back end deployed on AWS for Trackeroo, a real-time fitness tracker application with social rewards.","python,dynamodb,dynamodb-streams,aws-lambda,chalice",3
348,https://github.com/kelvin8773/your-fitness.git,Daily fitness data tracking app with React frontend and Ruby on Rails as a BackEnd API provider.,"react-redux,reactjs-es6,restful-api,ruby-on-rails,json-api",3
349,https://github.com/LeonardoIalongo/graph-ensembles.git,The graph ensemble package contains a set of methods to build fitness based graph ensembles from marginal information. ,,3
350,https://github.com/huyle333/zumbanodedefender.git,"{""JavaScript strategy and write-up for Zumba Fitness's Node Defender at the Ultimate Developer Event 2013.""}",,3
351,https://github.com/mrdanparker/twitness.git,Client side web app to provide statistics about twitter posts relating to #hundredpushups and other associated fitness schemes,,3
352,https://github.com/umarqattan/Gress.git,Gress is an iOS application that enables you to track your fitness and nutrition pro[Gress]. Get it?,,3
353,https://github.com/aegora/Nutrition.git,An Enyo 2.0 application intended for WebOS deployment whose purpose is to track both nutrition and fitness together,,3
354,https://github.com/Cvarier/FitnessBuddy2Go.git,Physical fitness Android application featuring personalized workout generator and exercise library (currently available on Google Play Store).,"workout-generation,exercises,exercise-library,android-application,android",3
355,https://github.com/Anish-Jain-AJ/MyCare.git,"Android app using firebase as database, a social-health-fitness app for health care, features include login, register, user feed, image compress and store in database, calculate bmi and other health care services available.","android,java,xml,firebase,firebase-auth,firebase-storage,firebase-database,firebase-firestore,healthcare,fitness,bmi-calculator,login,registration,pagination,fragments,compress-images,image-cropper",3
356,https://github.com/latteslurp/FitnessFormFixer.git,"Fitness Form Fixer is a web application that assesses user form on a resistance/weight training based exercises, through a neural-network classification pre-trained model!","workout,curl,exercise",3
357,https://github.com/Cyrus-Kiprop/rails-react-health-app.git,"Health app curated using Rails apis and React-redux front-end. With the api endpoints, users can keep track of their fitness leves.","rails-api,rails6,rspec,shoulda-matchers,requests,react,redux,jwt-authentication,token,postgresql,models,mvc",3
358,https://github.com/BenHocking/ShortCircuitGA.git,"Genetic algorithms with focus on ability to combine multiple, expensive fitness functions with short circuiting capabilities. Keywords: Genetic algorithm, Optimization, Neural Network",,3
359,https://github.com/MiraEs/Lapze.git,An social-app where you can join pick-up games around your neighborhood!  Introduces an interactive map to find fitness challenges near you!,,3
360,https://github.com/MiraEs/Lapze.git,An social-app where you can join pick-up games around your neighborhood!  Introduces an interactive map to find fitness challenges near you!,,3
361,https://github.com/Sullivan677/Sways.git,"This is Sways: a membership app to participate in live fitness classes and watch videos. Build with Firebase, RevenueCat and Swift 5.2","swift,revenuecat,firebase,firestore,firebase-auth,signinwithapple",3
362,https://github.com/vctrchu/flux.git,An iOS app determining how busy the University of Calgary fitness centre is. Built with Swift and Firebase. On the App Store üö¶,,3
363,https://github.com/SalmanOS/Calorie-Fixes.git,A calorie tracking app for iOS made in Swift. This will help you to track your total calorie intake and maintain your fitness goal,,3
364,https://github.com/collettiquette/Genotowers.git,A tower defense genetic algorithm that attempts to maximize monster damage as a fitness score for mutating the placement of towers and walls.,,3
365,https://github.com/chang-steven/strong-heart-client.git,"Client-side Repository for HEARTSTRONG, a full stack JavaScript app for tracking personal cardiovascular fitness sessions providing visual analysis of all activity.","reactjs,redux,nodejs,express,mongoose,mongodb,chartjs,javascript",3
366,https://github.com/Pressd-codeup/pressd.git,"During the Covid 19 pandemic, gyms closed and people were confined to their homes contributing to the decrease in sense of community and reduction in physical activity. As states and gyms open back up, people are finding the need to be more social and active to improve their mental and physical health. Local fitness centers were also greatly impacted financially by the coronavirus. Pressd seeks to be a user-driven platform to connect to other individuals who are passionate about their physical fitness while improving each other‚Äôs social life. This platform is meant to bring the community together in a fitness center by helping individuals build partnerships through working out.",,3
367,https://github.com/DrProgrammerGabs/My-Fitness-Pal.git,"A fitness calculator that will help you determine whether your weight is healthy or not. It solves for your body mass index, ideal body weight, and how much weight you need to lose. It also calculates the number of calories that you will consume per day. Sample menus will also be available",,3
368,https://github.com/rOluochKe/fitnessapp.git,"I built a fitness tracker site called Move and Groove that allows users to sign up and log activities of different kinds. The technologies I have been using to do so include HTML, CSS, Bootstrap, Ruby on Rails, and Devise.",,3
369,https://github.com/GauravSudan/YouTube-Popularity-prediction-using-Sentiment-Analysis-and-YouTube-API.git,"Classifying the category of any online content and predicting its popularity is an important task for a wide range of systems, from advertising to recommendation systems or making profit and earn money from online content. We here present a system for categorising a video into three broad categories namely ‚ÄòHealth and Fitness‚Äô, ‚ÄòTravel and Education‚Äô and ‚ÄòPersonality Development‚Äô, and then we predict the future popularity of video using regression method based on views from the past. We prove the results of our system against a dataset containing views of 1500 videos on YouTube with a mean error of 0.8.",,3
370,https://github.com/sunilcyriac/FitnessEvents4All-Asp.Net-MVC.git,"This repository contains the code for a web application developed for a fitness events management system for public. Asp.net MVC framwork is used for this and built with Microsoft visual studio 2015. Additionally javascripts, usual HTML CSS and google API features are also used.",,3
371,https://github.com/Jaza-Abdullah/FDO-Java.git,"this is a MATLAB implementation of a novel swarm intelligent algorithm, known as the fitness dependent optimizer (FDO). The bee swarming reproductive process and their collective decision-making have inspired this algorithm; it has no algorithmic connection with the honey bee algorithm or the artificial bee colony algorithm. It is worth mentioning that FDO is considered a particle swarm optimization (PSO)-based algorithm that updates the search agent position by adding velocity (pace). However, FDO calculates velocity differently; it uses the problem fitness function value to produce weights, and these weights guide the search agents during both the exploration and exploitation phases. FDO is tested on a group of 19 classical benchmark test functions, and the results are compared with three well-known algorithms: PSO, the genetic algorithm (GA), and the dragonfly algorithm (DA), additionally, FDO is tested on IEEE Congress of Evolutionary Computation Benchmark Test Functions (CEC-C06, 2019 Competition) The results are compared with three modern algorithms: (DA), the whale optimization algorithm (WOA), and the salp swarm algorithm (SSA). The FDO results show better performance in most cases and comparative results in other cases. implementation of the mentioned Benchmark function is exist in the code.",,3
372,https://github.com/Hashininirasha/Maintain-your-fitness-due-to-COVID-19-and-stay-at-home.git,"{""Today all are facing COVID-19 virus. Not only Sri Lankans but also all counties are facing that problem. Some countries were putting curfews to control this virus. In this curfew period citizens must pay attention to their nutrition because they can't go outside and people can't go to gymnasium to maintain their fitness. Some people do exercises as a habit in their day to day life. People do not get exercise, the result of that is that they become fat and they face many problems. Some people become diabetes patients. Some are becoming heart disease patients. Some are increasing their diseases. People are trapped at home. People can't buy Vegetables fruits and nutritional food in the market. They can't get a nutritional Diet. Especially children and older people. The result of that is that they will face many Complications. People can't go out to meet his or her Doctor to get nutritional advice. Sometimes they can't contact a doctor. Then they haven't got any advice or idea how to maintain their fitness. The result of that is some are become Overweight and some are become Underweight. Both are very harmful for the body. In covid-19 period people should protect their mental Integrity as well as their fitness of body.""}","html-css-javascript,php,chartjs,bootstrap",3
373,https://github.com/MuradAhmad/DiabetesFitness.git,"This android application is a wellbeing fitness application developed for people who are diabetic. This application allow user to view statistics on his activities  to track the physical activities. We tried to cover social spectrum by adding friends feature such as, if a user is going for exercise or any other activities he can invite his friends. The app is developed with basic features and it needs future work.",,3
374,https://github.com/ashinde8/Data-Preprocessing-and-Machine-Learning.git,"- The dataset consists of 1042 rows and 20 columns. This is a regression problem where we can the target variable is \'price\' which I have predicted using Machine Learning Modeling. - Dropped the columns \'id\', \'time_created\',\'time_updated\',\'external_id\',\'url\',\'latitude\' and \'longitude\' from the dataset, as these variables do not provide information significant in modeling. - Here I have observed that the variable \'status\' has only one value throughout the dataset i.e. \'active\', hence I have can drop this variable as it is not providing us significant information. - I observed that the variables \'bedrooms\' ,\'bathrooms\', \'garages\' ,\'parkings\' ,\'offering\' ,\'erf_size\' ,\' floor_size\' have missing values and the target variable \'price\' also has missing values. Hence I took care of this by filling the missing values of the independent features and the target variable. - After making the above observation I filled the two rows which have value \'[None]\' in the property_type column with \'house\' as the value for the\'agency\' variable for these rows is \'rawson\' and the mode for the variable \'property_type\' for the agency \'rawson\' is \'house\' and also mode for the \'property_type\' variable for the area \'Constantia\' is also \'house\' - Predicted the missing Values Using Imputers From sklearn.preprocessing - Here I used the KNNImputer to fill the missing values in the variables \'price\', ""garages"",""parkings"",""erf_size"",""floor_size"" by predicting the values using the KNNImputer library. - We go through a range of values from 1 to 20, for the parameter \'n_neighbors\' in the KNNImputer, as we want to find which value of \'n_neighbors\' gives the maximum value of correlation between the target variable \'price\' and the feature \'floor_size\'. The reason I have selected the variable \'floor_size\' to calculate the correlation with the target variable \'price\' is that, before imputing the missing values the target variable \'price\' had the highest corrleation with the independent variable \'floor_size\' which was 0.5319914806523912. Now I am finding the maximum correaltion value between the target variable \'price\' and the variable \'floor_size\' after the missing values are imputed using the KNNImputer, for different values of the parameter \'n_neighbors\' and then compare it with 0.5319914806523912, whcih is the correlation for the original dataset whcih consists of missing values. - Here we observe that the maximum correlation between the target variable \'price\' and the independent variable \'floor_size\' is 0.4233518730063556, when the value for \'n_neighbors\' is 6. This value is less than the value of correlation for the orignal dataset, hence  we move on to another Imputer to fill the missing values as after the missing values were filled using the KNNImputer the correlation decreased whcih is not desirable. - Here we observe that the correlation between the target variable \'price\' and the independent variable \'floor_size\' is 0.6703992976511615 after the imputation of missing values using IterativeImpueter. This value is more than the correlation value for the original dataset. Hence we allow the imputation of the missing values using IterativeImputer into the orignal dataset. - Now while filling the variable \'bathrooms\' and \'bedrooms\'; there are 4 and 14 NaN values respectively. Hence I have decided to fill the values on a case by case basis. I have decided to fill the \'NaN\' values based on their \'property_type\'. So for filling the \'bathrooms\' variable which has \'property_type\' as \'house\', I have filled these values with the mode for the \'bathrooms\' and \'bedrooms\' variable. Similarly I have done the same for the other \'property_type\' \'apartment\'. - Performed Data Visualizations for the features to draw more insights. - Here, you can see outliers in the target variable \'price\' from the above figure. While price outliers would not be a concern because it is the target feature,the presence of outliers in predictors, in this case there aren\'t any, would affect the model‚Äôs performance. Detecting outliers and choosing the appropriate scaling method to minimize their effect would ultimately improve performance. - From the correlation matrix, we can see that there is varying extent to which the independent variables are correlated with the target. Lower correlation means weak linear relationship but there may be a strong non-linear relationship so, we can‚Äôt pass any judgement at this level, let the algorithm work for us. - Build the regression models Linear Regression, XGBoost, AdaBoost, Decision Tree, Random Forest, KNN and SVM. - Performed Hyperparameter tuning for all the above algorithms. - Predicted the prices using the above models and used the metrics RMSE, R -square and Adjusted R-square. - As expected, the Adjusted R¬≤ score is slightly lower than the R¬≤ score for each model and if we evaluate based on this metric, the best fit model would be XGBoost with the highest Adjusted R¬≤ score and the worst would be SVM Regressor with the least R¬≤ score. - However, this metric is only a relative measure of fitness so, we must look at the RMSE values. - In this case, XGBoost and SVM have the lowest and highest RMSE values respectively and the rest models are in the exact same order as their Adjusted R¬≤ scores. ",,3
375,https://github.com/mdxedia/Awsome-Cash.git,"Updated January 2016  Note on translation: These Website Terms of Service may have been translated into various languages for the convenience of Cash Loophole Users. While the translation is correct to the best of Cash Loophole knowledge, Cash Loophole is not responsible or liable in the event of an inaccuracy. English is the controlling language of these Terms of Service, and any translation has been prepared for you as a courtesy only. In the event of a conflict between the English-language version of these Terms of Service and a version that has been translated into another language, the English-language version shall control.  The Cash Loophole Website, is an online information service with downloadable software, provided by Cash Loophole, and is subject to the terms and conditions set forth below.  IMPORTANT: These terms and conditions constitute a legal agreement between you, the User (hereafter ‚ÄúYou‚Äù, ‚ÄúYour‚Äù, or the ‚ÄúUser‚Äù), and us, Cash Loophole, its affiliates, and all of their respective authorized representatives, officers, directors, employees, agents, shareholders, licensors, attorneys, successors, and assigns (hereafter ‚ÄúUs‚Äù or ‚ÄúCash Loophole‚Äù), and together with the Website Privacy Policy and the Software License Agreement, wholly and exclusively govern such relationship.  BEFORE ACCESSING OR USING THE SERVICES OFFERED ON FIVEMINUTEEXPERIMENT.CO, PLEASE READ CAREFULLY THE FOLLOWING TERMS AND CONDITIONS CONTAINED IN THIS WEBSITE TERMS OF SERVICE AGREEMENT. THESE TERMS GOVERN YOUR ACCESS TO AND USE OF THE SITE AND ANY PROGRAMS, SERVICES, TOOLS, SOFTWARE, MATERIALS, OR OTHER INFORMATION AVAILABLE THROUGH THE SITE OR USED IN CONNECTION THEREWITH (collectively, ‚Äúthe Site‚Äù). Cash Loophole IS WILLING TO LICENSE AND ALLOW THE USE OF THIS SITE ONLY ON THE CONDITION THAT YOU ACCEPT AND AGREE TO ALL OF THE TERMS AND CONDITIONS CONTAINED THEREIN. BY USING THE SITE, YOU THEREFORE AGREE TO BE BOUND BY THE TERMS AND CONDITIONS SET FORTH BELOW. IF YOU DO NOT WISH TO BE BOUND BY THESE TERMS AND CONDITIONS, YOU ARE NOT GRANTED PERMISSION TO ACCESS OR OTHERWISE USE THE SITE AND ARE INSTRUCTED TO EXIT THE SITE IMMEDIATELY.  Cash Loophole RESERVES THE RIGHT TO MODIFY THIS AGREEMENT AT ANY TIME, WITHOUT NOTICE TO THE USER, AND SUCH MODIFICATIONS SHALL BE EFFECTIVE IMMEDIATELY UPON POSTING OF THE MODIFIED TERMS AND CONDITIONS ON THE SITE. YOU AGREE TO REVIEW THE AGREEMENT PERIODICALLY TO BE AWARE OF SUCH MODIFICATIONS AND YOUR CONTINUED ACCESS OR USE OF THE SITE SHALL BE DEEMED YOUR CONCLUSIVE ACCEPTANCE OF THE MODIFIED AGREEMENT. Revised versions of the Terms and Conditions shall be indicated by the date posted at the top of the Website Terms of Service page (i.e., ‚ÄúUpdated [Date]‚Äù).  PROPRIETARY RIGHTS. All intellectual property of or relating to the Site, including but not limited to content, information, patents, trademarks, copyrights, modules, techniques, know-how, computer code (including html code), algorithms, methods of doing business, user interfaces, graphic design, look and feel, and software; and all developments, derivatives, and improvements thereto, whether registered or not (collectively, ‚ÄúIntellectual Property‚Äù), unless otherwise indicated, are owned, controlled and licensed in their entirety by Cash Loophole, its affiliates, its successors and assigns, and/or by third parties who have granted Cash Loophole license to use such Intellectual Property. Publications, products, content or services referenced herein or on the Site are the exclusive trademarks or service-marks of Cash Loophole or their respective owners and are protected by law. Except as expressly provided herein, Cash Loophole does not grant any express or implied right to You or any other person under any intellectual or proprietary rights. Any downloadable or printable software, programs, information or materials available through the Site and all copyrights, trade secrets, and know-how related thereto, unless otherwise indicated, are owned by Cash Loophole or third party licensors. The website name, Cash Loophole, its logo, and all other names, logos and icons identifying the Cash Loophole website and its services are proprietary trademarks of Cash Loophole, and any use of such marks, such as domain names, without the express written permission of Cash Loophole is strictly prohibited. LIMITED LICENSE GRANT. The Site is provided by Cash Loophole, and conditional with the acceptance of this Website Terms of Service Agreement, provides You with a personal, revocable, limited, non-exclusive, royalty-free, non-transferable license to use the Site and download any programs, services, tools, materials, or information made available through or from the Site. Please note that access to download and terms of use of Cash Loophole downloadable software is contingent on acceptance of the separate Software License Agreement. The Website Terms of Service permit you to use and access for personal use only the Cash Loophole Website (a) on a single laptop, workstation, or computer and (b) on a mobile device from the Internet or through an on-line network. You may also download information from the Site into your laptop, workstation or computer‚Äôs temporary memory (RAM) and print and download materials and information from the Site solely for your personal non-commercial use, provided that all hard copies contain all copyright and other applicable notices. LICENSE RESTRICTIONS. The foregoing license is limited. YOU MAY NOT MODIFY, COPY, STORE, REPRODUCE, REPUBLISH, UPLOAD, POST, TRANSMIT, LICENSE, SUBLICENSE, DISPLAY, RENT, LEASE, SELL, COMMERCIALLY EXPLOIT, OR DISTRIBUTE, IN ANY MANNER, ANY DATA, INTELLECTUAL PROPERTY OR MATERIAL PROVIDED BY Cash Loophole THROUGH THE SITE, IN ANY MANNER NOT EXPRESSLY PERMITTED BY THESE TERMS OF SERVICE. THE ABOVE RESTRICTION INCLUDES, BUT IS NOT LIMITED TO TEXT, GRAPHICS, CODE AND/OR SOFTWARE. In addition, you may not modify, translate, decompile, create any derivative work(s) of, disassemble, broadcast, publish, remove or alter any proprietary notices or labels, grant a security interest in, or otherwise use the Site in any manner not expressly permitted herein. Moreover, you may not (i) use any ‚Äúdeep link,‚Äù ‚Äúpage scrape,‚Äù ‚Äúrobot,‚Äù ‚Äúspider‚Äù or other automatic device, program, script, algorithm, or methodology, or any similar or equivalent manual process, to access, acquire, copy, or monitor any portion of the Site or in any way reproduce or circumvent the navigational structure or presentation of the Site to obtain or attempt to obtain any materials, documents, or information through any means not purposely made available through the Site, OR (ii) attempt to gain unauthorized access to any portion or feature of the Site, including, without limitation, the account of any other Authorized User(s), any other systems or networks connected to the Site or its servers, to any of the services offered on or through the Site, by hacking, password ‚Äúmining‚Äù, or any other illegitimate or prohibited means, OR (iii) probe, scan or test the vulnerability of the Site or any network connected to the Site, nor breach the security or authentication measures on the Site or any network connected to the Site, OR (iv) reverse look-up, trace, or seek to trace any information on any other Authorized User of or visitor to the Cash Loophole Site, OR (v) take any action that imposes an unreasonable or disproportionately large load on the infrastructure of the Site, the system, networks, or any systems or networks connected thereto, OR (vi) use any device, software, or routine to interfere with the proper working of the Site or transaction conducted on the Site, or with any other person‚Äôs use of the Site, OR (vii) forge headers, impersonate a person, or otherwise manipulate identifiers in order to disguise your identity or the origin of any message or transmittal you send to Cash Loophole on or through the Site, OR (viii) use the Site to collect e-mail addresses or other contact or personal information, OR (ix) market, co-brand, private label, appropriate, use the Cash Loophole name, or a name similar thereto on a different domain, separately distribute, resell, or otherwise permit third parties to access and use the Site, in whole or in part, without the express, separate and prior written permission of Cash Loophole, OR (x) use the Site in any other unlawful manner or in a manner that could be perceived to damage, disparage, or otherwise negatively impact Cash Loophole. 4.Moreover, this license is only valid where Cash Loophole is permitted to operate. Access to and use of this site in contravention of any laws or regulations, or where prohibited by law, is unauthorized and not permitted by Cash Loophole. THIRD PARTY INFORMATION/ PRODUCTS/ SERVICES/ LINKS TO OTHER SITES. The Site may contain information, data, links, promotional offers, or other content in any form, including financial information related to third parties. Such information is provided only for Your convenience and as a bonus service, and will not be considered financial advisement. In no case whatsoever shall Cash Loophole be liable for such content or any damages or losses that result from reliance thereon. You understand that, except for information, products or services clearly identified as being supplied by Cash Loophole, Cash Loophole is not affiliated with, is not responsible for, and does not operate, control or endorse any information, products or services offered by third parties that are provided on the Site in any way. Cash Loophole makes no representations whatsoever, nor does it guarantee or endorse, the quality, non-infringement, accuracy, completeness or reliability of such third-party materials, programs, products displayed on this Site or which You may access through a link on this Site. Your correspondence or any other dealings with such third parties found on this Site are solely between you and such third party. Accordingly, Cash Loophole EXPRESSLY DISCLAIMS RESPONSIBILITY FOR THE CONTENT, MATERIALS, ACCURACY, AND/OR QUALITY OF THE INFORMATION, PRODUCTS AND/OR SERVICES AVAILABLE THROUGH OR ADVERTISED ON THESE THIRD-PARTY WEBSITES. DISCLAIMER ‚Äì NO WARRANTIES. You understand and accept that Cash Loophole cannot and does not guarantee or warrant that files available for downloading through the Site will be free of infection or viruses, worms, Trojan horses or other code that manifest contaminating or destructive properties. You are responsible for implementing sufficient procedures and checkpoints on your personal computer to satisfy your particular requirements for accuracy of data input and output, and for maintaining a means external to the Site for the reconstruction of any lost data.YOU UNDERSTAND AND AGREE TO ASSUME TOTAL RESPONSIBILITY AND RISK FOR YOUR USE OF THE SITE. Cash Loophole PROVIDES THE SITE AND RELATED INFORMATION ‚ÄúAS IS‚Äù AND DOES NOT MAKE ANY EXPRESS OR IMPLIED WARRANTIES, REPRESENTATIONS OR ENDORSEMENTS WHATSOEVER. Cash Loophole SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. WITH REGARD TO THE SITE, THE PERSONAL ACCOUNT REPRESENTATIVE SERVICE, OR ANY INFORMATION OR THIRD-PARTY INFORMATION OR LINKS PROVIDED THEREON, Cash Loophole SHALL NOT BE LIABLE FOR ANY COST OR DAMAGE ARISING EITHER DIRECTLY OR INDIRECTLY FROM ANY SUCH TRANSACTION. IT IS SOLELY YOUR RESPONSIBILITY TO EVALUATE THE ACCURACY, COMPLETENESS AND USEFULNESS OF ALL OPINIONS, ADVICE, SERVICES, MERCHANDISE AND OTHER INFORMATION PROVIDED THROUGH THE SERVICE. Cash Loophole DOES NOT WARRANT THAT THE SERVICE WILL BE UNINTERRUPTED OR ERROR-FREE OR THAT DEFECTS IN THE SERVICE WILL BE CORRECTED. YOU UNDERSTAND FURTHER THAT THE PURE NATURE OF THE INTERNET CONTAINS UNEDITED MATERIALS SOME OF WHICH ARE SEXUALLY EXPLICIT OR MAY BE OFFENSIVE TO YOU. YOUR ACCESS TO SUCH MATERIALS IS AT YOUR OWN RISK. Cash Loophole HAS NO CONTROL OVER AND ACCEPTS NO RESPONSIBILITY WHATSOEVER FOR SUCH MATERIALS. LIMITATION OF LIABILITY. YOU EXPRESSLY ABSOLVE AND RELEASE Cash Loophole FROM ANY CLAIM OF HARM RESULTING FOR A CAUSE BEYOND Cash Loophole CONTROL, INCLUDING BUT NOT LIMITED TO FAILURE OF ELECTRONIC OR MECHANICAL EQUIPMENT OR COMMUNICATION LINES FOR ANY REASON, SUCH AS MAINTENANCE, DENIAL OF SERVICE ATTACKS, TELEPHONE OR OTHER COMMUNICATION PROBLEMS, COMPUTER VIRUSES, UNAUTHORIZED ACCESS, THEFT, OPERATOR ERRORS, FORCE MAJEURE EVENT SUCH AS SEVERE WEATHER, EARTHQUAKES, NATURAL DISASTERS, STRIKES, LABOR PROBLEMS, WARS, OR GOVERNMENTAL RESTRICTION OR ACTION. MOREOVER, IN NO EVENT WILL Cash Loophole BE LIABLE FOR ANY INCIDENTAL, CONSEQUENTIAL, INDIRECT, PUNITIVE, OR SPECIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, DAMAGES FOR LOSS OF PROFITS, BUSINESS INTERRUPTION, LOSS OF PROGRAMS OR INFORMATION, AND THE LIKE) ARISING OUT OF OR IN ANY WAY CONNECTED WITH THE USE OF OR INABILITY TO USE THE SITE‚ÄôS SERVICE, OR ANY INFORMATION, OR TRANSACTIONS PROVIDED OR DOWNLOADED FROM THE SITE, OR ANY DELAY OF SUCH INFORMATION OR SERVICE, EVEN IF Cash Loophole HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES, OR ANY CLAIM ATTRIBUTABLE TO ERRORS, OMISSIONS, OR OTHER INACCURACIES IN THE SITE AND/OR MATERIALS OR INFORMATION DOWNLOADED THROUGH THE SITE. BECAUSE SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO YOU. NOTWITHSTANDING THE FOREGOING, TOTAL LIABILITY OF Cash Loophole FOR ANY REASON RELATED TO USE OF THE SITE SHALL NOT EXCEED THE TOTAL AMOUNT PAID BY YOU TO Cash Loophole IN CONNECTION WITH THE SUBJECT MATTER OF THE PARTICULAR DISPUTE DURING THE PRIOR THREE MONTHS. INDEMNIFICATION.You agree to indemnify, defend and hold harmless Cash Loophole, its affiliates, and all of their respective officers, directors, employees, agents, licensors, attorneys, successors, and assigns from and against all claims, proceedings, injuries, liabilities, losses, damages, costs, and expenses, including reasonable attorneys‚Äô fees and litigation expenses, relating to or arising from any breach or violation of this Agreement by You (including negligent or reckless conduct). Each of the above referenced individuals or entities reserves the right to assert and enforce these provisions directly against you, on their own behalf. USER OBLIGATIONS. If you provide any false, inaccurate, untrue, or incomplete information, Cash Loophole reserves the right to terminate immediately Your access to and use of the Site and any downloadable software. You agree to abide by all applicable local, state, national, and international laws and regulations with respect to Your use of the Site and its related services. In addition, You acknowledge and agree that use of the Internet and access to or transmissions or communications with the Site is solely at your own risk. While Cash Loophole has endeavored to create a secure and reliable Site, you should understand that the confidentiality of any such communications cannot be guaranteed. Accordingly, Cash Loophole is not responsible for the security, or any breach thereof, of any information transmitted to or from the Site. You agree to assume all responsibility concerning activities related to Your use of the Site, including but not limited to obtaining and paying for all licenses and costs for third-party software and hardware necessary for implementation of the Site and its downloadable software, and maintaining or backing up any data. 10. USER NAME AND PASSWORD POLICY. Registration as an authorized user for access to certain areas of the Site may require both a user name and password. Only one authorized user can use one user name and password and account. Multiple accounts registered by the same individual or entity is not permitted and may result in one, some or all accounts being closed by Cash Loophole. By using the Site, you agree to keep your user name and password as confidential information. You also agree not to use another authorized user‚Äôs account. Should you become aware of any loss or theft of your password or any unauthorized use of your name and password, you will immediately notify Cash Loophole. Cash Loophole cannot and will not be liable for any loss or damage arising from your failure to comply with these obligations. Cash Loophole also reserves the right to delete or change (with notice) a user name or password at any time and for any reason. FEEDBACK AND SUBMISSIONS. You grant to Cash Loophole team the right to use your name in connection with any materials freely submitted by You and any other information as well as in connection with all advertising, marketing and promotional material related thereto. You agree that you shall have no recourse against Cash Loophole for any alleged or actual infringement or misappropriation of any proprietary right in your communications with the Site. Registered Site Users will have the opportunity to submit feedback and information regarding their trading activity through the software and through the website, which will be subsequently displayed on the website on an anonymous basis. Such information is submitted on a voluntary basis. Cash Loophole maintains no control over the accuracy or correctness of such self-reporting and accordingly disclaims all liability from User reliance on this data. PRIVACY POLICY. You understand, acknowledge and agree that the operation of certain programs, services, tools, materials, or information of the Site requires the submission, use and dissemination of various personal identifying information. Accordingly, if you wish to access and use those programs, services, tools, materials, or information on the Site, you acknowledge and agree that your use of the Site will constitute acceptance of Cash Loophole personal identifying information collection and use practices to protect your personal information. Please read our Privacy Policy before providing any personal data on this Site. VOID WHERE PROHIBITED. Any offer for any product or service made on this Site is void where prohibited. Moreover, Cash Loophole makes no representations regarding the legality of access to or use of the Site or its content in any country. Although the Site may be accessible worldwide, not all features, products or services provided or offered through or on the Site are appropriate or available for use in all countries. Cash Loophole reserves the right to limit, in its discretion, the provision and quantity of any feature, product or service to any person or geographic area. If You access the Site from a jurisdiction where prohibited, You do so at your own risk and You are solely responsible for complying with all applicable local regulations. People under 18 years of age are not permitted to use the Cash Loophole website. 15. NO ADVICE. You acknowledge that neither the Site or the Personal Account Representative service, is not authorized to offer any legal, tax, accounting advice, or recommendation regarding suitability, profitability, investment strategy or other matter. 17. ENFORCING SITE SECURITY. Actual or attempted unauthorized use of this Site may result in criminal and/or civil prosecution. Cash Loophole reserves the right to view, monitor, and record activity on the Site without notice or permission from the User, including, without limitation, by archiving notices or communications sent by you through the Site. In addition, Cash Loophole reserves the right, at any time and without notice, to modify, suspend, terminate or interrupt operation of or access to the Site, or any portion thereof, in order to protect the Site or Cash Loophole business. NOTICE OF SECURITY BREACH. In addition to the indemnification obligation stated in these Terms of Service, if you become aware of a breach or potential breach of security with respect to any personally identifiable information provided to or made available by Cash Loophole, or any unauthorized hacking of the Site, you shall (i) immediately notify Cash Loophole of such breach or potential breach, (ii) assist Cash Loophole as reasonably necessary to prevent or rectify any such breach, and (iii) enable Cash Loophole to comply with any applicable laws requiring the provision of notice of a security breach with respect to any impacted personally identifiable information. TERM AND TERMINATION. These Terms of Service govern Your right to use the Site will take effect at the moment you access or use the Site and is effective until terminated, as set forth below. This Agreement may be terminated by Cash Loophole without notice, at any time, and for any reason. In addition, Cash Loophole reserves the right at any time and on reasonable grounds, such as any reasonable belief of fraudulent or unlawful activity or actions or omissions that violate any term or condition of these Terms, to deny your access to the Site, in whole or in part, in order to protect its name and goodwill, its business and/or other authorized users, or if you fail to comply with these Terms, subject to the survival rights of certain provisions identified below. Termination is effective without notice. You may also terminate this Agreement at any time by ceasing to use the Site, subject to the survival rights below. Upon termination, You must destroy all copies of any aspect of the Site that you have made and remove downloaded software from Your possession. The following provisions shall survive termination of the Website Terms of Service Agreement for any reason: Proprietary Rights (¬ß1), Limited License Grant (¬ß2), License Restrictions (¬ß3), Third Party Information (¬ß4), Disclaimer (¬ß5), Limitation of Liability (¬ß6), Indemnification (¬ß7), Governing Law (¬ß17), and Miscellaneous (¬ß18). GOVERNING LAW AND DISPUTE RESOLUTION. These Terms of Service and all disputes or claims arising out of or related thereto shall be governed by the laws of Cyprus, without applying conflict of law rules. Any cause of action or claim arising out of use of the Site must be commenced within one (1) year after the claim or cause of action arises, or such claim or cause of action is barred. Claimant and Cash Loophole waive their rights to a jury trial and participation in class action litigation. All disputes arising out of or relating to these Terms of Service shall be resolved by binding arbitration, except that Cash Loophole is not required to arbitrate any dispute regarding confidentiality, infringement, misappropriation, or misuse of any intellectual property right, or any other claim where interim relief from a court is sought to prevent serious and irreparable injury to Cash Loophole or any other person or entity. You acknowledge that any breach, threatened or actual, could cause irreparable injury to Cash Loophole that is not quantifiable in monetary damages. You agree that Cash Loophole shall be entitled to seek and be awarded an injunction or other appropriate equitable relief to restrain any breach of Your obligations under these Terms. Accordingly, you waive any requirement that Cash Loophole post any bond or other security in the event that any injunctive or equitable relief is sought by or awarded to Cash Loophole to enforce any provision of these Terms. MISCELLANEOUS. You agree that these Terms are for the benefit of the User, Cash Loophole, and Cash Loophole licensors. Therefore, these Terms are personal to You and not assignable. No joint venture, partnership, employment, or agency relationship exists between You and Cash Loophole as a result of these Terms of Service or arising out of your use of the Site. Cash Loophole failure to insist upon or enforce strict performance of any provision of this Agreement shall not be construed as a waiver of any provision or right under these Terms or at law. Neither the course of conduct between the parties nor trade practice shall act to modify any provision of this Agreement. Cash Loophole may assign its rights and duties under this Agreement to any party and at any time, without notice to the User. Headings herein are for convenience only. These Terms of Service, along with Cash Loophole Website Privacy Policy and the Software License Agreement, represent the entire agreement between You and Cash Loophole with respect to use of the Site, and supersedes all prior or contemporaneous communications and proposals, whether electronic, oral, or written between You and Cash Loophole. SEVERABILITY. If any provision of these Terms of Service is ruled invalid or otherwise unenforceable by a court of competent jurisdiction or on account of a conflict with an applicable government regulation, such determination shall not affect the remaining provisions (or parts thereof) contained herein. Any invalid or unenforceable portion should be deemed amended in order to achieve as closely as possible the same effect as the Terms of Service as original drafted. Cash Loophole ¬© 2016 All rights reserved.",,3
376,https://github.com/DickDumBR1/Aim.git,"Skip to content Sign up Sign in This repository   Search Explore Features Enterprise Pricing  Watch 137  Star 490  Fork 1,535 Apostolique/Agar.io-bot Branch: master  Agar.io-bot/launcher.user.js @ApostoliqueApostolique 10 days ago Easier to see the borders 7 contributors @Apostolique @DarkN3ss61 @Linkaan @Timtech @henopied @Gjum @lilezek RawBlameHistory     2456 lines (2277 sloc)  93.893 kB /*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposLauncher // @namespace   AposLauncher // @include     http://agar.io/* // @version     4.123 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposLauncherVersion = 4.123;  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data.data);             console.log(""hmm: "" + data.data.object.sha);             sha = data.data.object.sha;              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              window.jQuery.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/launcher.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm, """");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"") + 11, latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposLauncherVersion + 0.0000);                  if (latestVersion > myVersion) {                     update(""aposLauncher"", ""launcher.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/launcher.user.js/"");                 }                 console.log(\'Current launcher.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Bot Launcher!""); (function(d, e) {      //UPDATE     function keyAction(e) {         if (84 == e.keyCode) {             console.log(""Toggle"");             toggle = !toggle;         }         if (82 == e.keyCode) {             console.log(""ToggleDraw"");             toggleDraw = !toggleDraw;         }         if (68 == e.keyCode) {             window.setDarkTheme(!getDarkBool());         }         if (70 == e.keyCode) {             window.setShowMass(!getMassBool());         }         if (69 == e.keyCode) {             if (message.length > 0) {                 window.setMessage([]);                 window.onmouseup = function() {};                 window.ignoreStream = true;             } else {                 window.ignoreStream = false;                 window.refreshTwitch();             }         }         window.botList[botIndex].keyAction(e);     }      function humanPlayer() {         //Don\'t need to do anything.         return [getPointX(), getPointY()];     }        function pb() {          //UPDATE          window.botList = window.botList || [];          window.jQuery(\'#nick\').val(originalName);          function HumanPlayerObject() {             this.name = ""Human"";             this.keyAction = function(key) {};             this.displayText = function() {return [];};             this.mainLoop = humanPlayer;         }          var hpo = new HumanPlayerObject();          window.botList.push(hpo);          window.updateBotList();          ya = !0;         Pa();         setInterval(Pa, 18E4);          var father = window.jQuery(""#canvas"").parent();         window.jQuery(""#canvas"").remove();         father.prepend(""<canvas id=\'canvas\'>"");          G = za = document.getElementById(""canvas"");         f = G.getContext(""2d"");         G.onmousedown = function(a) {             if (Qa) {                 var b = a.clientX - (5 + m / 5 / 2),                     c = a.clientY - (5 + m / 5 / 2);                 if (Math.sqrt(b * b + c * c) <= m / 5 / 2) {                     V();                     H(17);                     return                 }             }             fa = a.clientX;             ga = a.clientY;             Aa();             V();         };         G.onmousemove = function(a) {             fa = a.clientX;             ga = a.clientY;             Aa();         };         G.onmouseup = function() {};         /firefox/i.test(navigator.userAgent) ? document.addEventListener(""DOMMouseScroll"", Ra, !1) : document.body.onmousewheel = Ra;         var a = !1,             b = !1,             c = !1;         d.onkeydown = function(l) {             //UPDATE             if (!window.jQuery(\'#nick\').is("":focus"")) {                 32 != l.keyCode || a || (V(), H(17), a = !0);                 81 != l.keyCode || b || (H(18), b = !0);                 87 != l.keyCode || c || (V(), H(21), c = !0);                 27 == l.keyCode && Sa(!0);                  //UPDATE                 keyAction(l);             }         };         d.onkeyup = function(l) {             32 == l.keyCode && (a = !1);             87 == l.keyCode && (c = !1);             81 == l.keyCode && b && (H(19), b = !1);         };         d.onblur = function() {             H(19);             c = b = a = !1         };         d.onresize = Ta;         d.requestAnimationFrame(Ua);         setInterval(V, 40);         y && e(""#region"").val(y);         Va();         ha(e(""#region"").val());         0 == Ba && y && I();         W = !0;         e(""#overlays"").show();         Ta();         d.location.hash && 6 <= d.location.hash.length && Wa(d.location.hash)     }      function Ra(a) {         J *= Math.pow(.9, a.wheelDelta / -120 || a.detail || 0);         //UPDATE         0.07 > J && (J = 0.07);         J > 4 / h && (J = 4 / h)     }      function qb() {         if (.4 > h) X = null;         else {             for (var a = Number.POSITIVE_INFINITY, b = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, l = Number.NEGATIVE_INFINITY, d = 0, p = 0; p < v.length; p++) {                 var g = v[p];                 !g.N() || g.R || 20 >= g.size * h || (d = Math.max(g.size, d), a = Math.min(g.x, a), b = Math.min(g.y, b), c = Math.max(g.x, c), l = Math.max(g.y, l))             }             X = rb.ka({                 ca: a - 10,                 da: b - 10,                 oa: c + 10,                 pa: l + 10,                 ma: 2,                 na: 4             });             for (p = 0; p < v.length; p++)                 if (g = v[p],                     g.N() && !(20 >= g.size * h))                     for (a = 0; a < g.a.length; ++a) b = g.a[a].x, c = g.a[a].y, b < s - m / 2 / h || c < t - r / 2 / h || b > s + m / 2 / h || c > t + r / 2 / h || X.m(g.a[a])         }     }      function Aa() {         //UPDATE         if (toggle || window.botList[botIndex].name == ""Human"") {             setPoint(((fa - m / 2) / h + s), ((ga - r / 2) / h + t));         }     }      function Pa() {         null == ka && (ka = {}, e(""#region"").children().each(function() {             var a = e(this),                 b = a.val();             b && (ka[b] = a.text())         }));         e.get(""https://m.agar.io/info"", function(a) {                 var b = {},                     c;                 for (c in a.regions) {                     var l = c.split("":"")[0];                     b[l] = b[l] || 0;                     b[l] += a.regions[c].numPlayers                 }                 for (c in b) e(\'#region option[value=""\' + c + \'""]\').text(ka[c] + "" ("" + b[c] + "" players)"")             },             ""json"")     }      function Xa() {         e(""#adsBottom"").hide();         e(""#overlays"").hide();         W = !1;         Va();         d.googletag && d.googletag.pubads && d.googletag.pubads().clear(d.aa)     }      function ha(a) {         a && a != y && (e(""#region"").val() != a && e(""#region"").val(a), y = d.localStorage.location = a, e("".region-message"").hide(), e("".region-message."" + a).show(), e("".btn-needs-server"").prop(""disabled"", !1), ya && I())     }      function Sa(a) {         W || (K = null, sb(), a && (x = 1), W = !0, e(""#overlays"").fadeIn(a ? 200 : 3E3))     }      function Y(a) {         e(""#helloContainer"").attr(""data-gamemode"", a);         P = a;         e(""#gamemode"").val(a)     }      function Va() {         e(""#region"").val() ? d.localStorage.location = e(""#region"").val() : d.localStorage.location && e(""#region"").val(d.localStorage.location);         e(""#region"").val() ? e(""#locationKnown"").append(e(""#region"")) : e(""#locationUnknown"").append(e(""#region""))     }      function sb() {         la && (la = !1, setTimeout(function() {             la = !0         //UPDATE         }, 6E4 * Ya))     }      function Z(a) {         return d.i18n[a] || d.i18n_dict.en[a] || a     }      function Za() {         var a = ++Ba;         console.log(""Find "" + y + P);         e.ajax(""https://m.agar.io/findServer"", {             error: function() {                 setTimeout(Za, 1E3)             },             success: function(b) {                 a == Ba && (b.alert && alert(b.alert), Ca(""ws://"" + b.ip, b.token))             },             dataType: ""json"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: (y + P || ""?"") + ""\\n154669603""         })     }      function I() {         ya && y && (e(""#connecting"").show(), Za())     }      function Ca(a, b) {         if (q) {             q.onopen = null;             q.onmessage = null;             q.onclose = null;             try {                 q.close()             } catch (c) {}             q = null         }         Da.la && (a = ""ws://"" + Da.la);         if (null != L) {             var l = L;             L = function() {                 l(b)             }         }         if (tb) {             var d = a.split("":"");             a = d[0] + ""s://ip-"" + d[1].replace(/\\./g, ""-"").replace(/\\//g, """") + "".tech.agar.io:"" + (+d[2] + 2E3)         }         M = [];         k = [];         E = {};         v = [];         Q = [];         F = [];         z = A = null;         R = 0;         $ = !1;         console.log(""Connecting to "" + a);         //UPDATE         serverIP = a;         q = new WebSocket(a);         q.binaryType = ""arraybuffer"";         q.onopen = function() {             var a;             console.log(""socket open"");             a = N(5);             a.setUint8(0, 254);             a.setUint32(1, 5, !0);             O(a);             a = N(5);             a.setUint8(0, 255);             a.setUint32(1, 154669603, !0);             O(a);             a = N(1 + b.length);             a.setUint8(0, 80);             for (var c = 0; c < b.length; ++c) a.setUint8(c + 1, b.charCodeAt(c));             O(a);             $a()         };         q.onmessage = ub;         q.onclose = vb;         q.onerror = function() {             console.log(""socket error"")         }     }      function N(a) {         return new DataView(new ArrayBuffer(a))     }      function O(a) {         q.send(a.buffer)     }      function vb() {         $ && (ma = 500);         console.log(""socket close"");         setTimeout(I, ma);         ma *= 2     }      function ub(a) {         wb(new DataView(a.data))     }      function wb(a) {         function b() {             for (var b = """";;) {                 var d = a.getUint16(c, !0);                 c += 2;                 if (0 == d) break;                 b += String.fromCharCode(d)             }             return b         }         var c = 0;         240 == a.getUint8(c) && (c += 5);         switch (a.getUint8(c++)) {             case 16:                 xb(a, c);                 break;             case 17:                 aa = a.getFloat32(c, !0);                 c += 4;                 ba = a.getFloat32(c, !0);                 c += 4;                 ca = a.getFloat32(c, !0);                 c += 4;                 break;             case 20:                 k = [];                 M = [];                 break;             case 21:                 Ea = a.getInt16(c, !0);                 c += 2;                 Fa = a.getInt16(c, !0);                 c += 2;                 Ga || (Ga = !0, na = Ea, oa = Fa);                 break;             case 32:                 M.push(a.getUint32(c, !0));                 c += 4;                 break;             case 49:                 if (null != A) break;                 var l = a.getUint32(c, !0),                     c = c + 4;                 F = [];                 for (var d = 0; d < l; ++d) {                     var p = a.getUint32(c, !0),                         c = c + 4;                     F.push({                         id: p,                         name: b()                     })                 }                 ab();                 break;             case 50:                 A = [];                 l = a.getUint32(c, !0);                 c += 4;                 for (d = 0; d < l; ++d) A.push(a.getFloat32(c, !0)), c += 4;                 ab();                 break;             case 64:                 pa = a.getFloat64(c, !0);                 c += 8;                 qa = a.getFloat64(c, !0);                 c += 8;                 ra = a.getFloat64(c, !0);                 c += 8;                 sa = a.getFloat64(c, !0);                 c += 8;                 aa = (ra + pa) / 2;                 ba = (sa + qa) / 2;                 ca = 1;                 0 == k.length && (s = aa, t = ba, h = ca);                 break;             case 81:                 var g = a.getUint32(c, !0),                     c = c + 4,                     e = a.getUint32(c, !0),                     c = c + 4,                     f = a.getUint32(c, !0),                     c = c + 4;                 setTimeout(function() {                     S({                         e: g,                         f: e,                         d: f                     })                 }, 1200)         }     }      function xb(a, b) {         bb = C = Date.now();         $ || ($ = !0, e(""#connecting"").hide(), cb(), L && (L(), L = null));         var c = Math.random();         Ha = !1;         var d = a.getUint16(b, !0);         b += 2;         for (var u = 0; u < d; ++u) {             var p = E[a.getUint32(b, !0)],                 g = E[a.getUint32(b + 4, !0)];             b += 8;             p && g && (g.X(), g.s = g.x, g.t = g.y, g.r = g.size, g.J = p.x, g.K = p.y, g.q = g.size, g.Q =                 C)         }         for (u = 0;;) {             d = a.getUint32(b, !0);             b += 4;             if (0 == d) break;             ++u;             var f, p = a.getInt16(b, !0);             b += 4;             g = a.getInt16(b, !0);             b += 4;             f = a.getInt16(b, !0);             b += 2;             for (var h = a.getUint8(b++), w = a.getUint8(b++), m = a.getUint8(b++), h = (h << 16 | w << 8 | m).toString(16); 6 > h.length;) h = ""0"" + h;             var h = ""#"" + h,                 w = a.getUint8(b++),                 m = !!(w & 1),                 r = !!(w & 16);             w & 2 && (b += 4);             w & 4 && (b += 8);             w & 8 && (b += 16);             for (var q, n = """";;) {                 q = a.getUint16(b, !0);                 b += 2;                 if (0 == q) break;                 n += String.fromCharCode(q)             }             q = n;             n = null;             E.hasOwnProperty(d) ? (n = E[d], n.P(), n.s = n.x, n.t = n.y, n.r = n.size, n.color = h) :                 (n = new da(d, p, g, f, h, q), v.push(n), E[d] = n, n.ua = p, n.va = g);             n.h = m;             n.n = r;             n.J = p;             n.K = g;             n.q = f;             n.sa = c;             n.Q = C;             n.ba = w;             q && n.B(q); - 1 != M.indexOf(d) && -1 == k.indexOf(n) && (document.getElementById(""overlays"").style.display = ""none"", k.push(n), n.birth = getLastUpdate(), n.birthMass = (n.size * n.size / 100), 1 == k.length && (s = n.x, t = n.y, db()))              //UPDATE             interNodes[d] = window.getCells()[d];         }          //UPDATE         Object.keys(interNodes).forEach(function(element, index) {             //console.log(""start: "" + interNodes[element].updateTime + "" current: "" + D + "" life: "" + (D - interNodes[element].updateTime));             var isRemoved = !window.getCells().hasOwnProperty(element);              //console.log(""Time not updated: "" + (window.getLastUpdate() - interNodes[element].getUptimeTime()));             if (isRemoved && (window.getLastUpdate() - interNodes[element].getUptimeTime()) > 3000) {                 delete interNodes[element];             } else {                 for (var i = 0; i < getPlayer().length; i++) {                     if (isRemoved && computeDistance(getPlayer()[i].x, getPlayer()[i].y, interNodes[element].x, interNodes[element].y) < getPlayer()[i].size + 710) {                          delete interNodes[element];                         break;                     }                 }             }         });          c = a.getUint32(b, !0);         b += 4;         for (u = 0; u < c; u++) d = a.getUint32(b, !0), b += 4, n = E[d], null != n && n.X();         //UPDATE         //Ha && 0 == k.length && Sa(!1)     }      //UPDATE     function computeDistance(x1, y1, x2, y2) {         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis);          return distance;     }      /**      * Some horse shit of some sort.      * @return Horse Shit      */     function screenDistance() {         return Math.min(computeDistance(getOffsetX(), getOffsetY(), screenToGameX(getWidth()), getOffsetY()), computeDistance(getOffsetX(), getOffsetY(), getOffsetX(), screenToGameY(getHeight())));     }      window.verticalDistance = function() {         return computeDistance(screenToGameX(0), screenToGameY(0), screenToGameX(getWidth()), screenToGameY(getHeight()));     }      /**      * A conversion from the screen\'s horizontal coordinate system      * to the game\'s horizontal coordinate system.      * @param x in the screen\'s coordinate system      * @return x in the game\'s coordinate system      */     window.screenToGameX = function(x) {         return (x - getWidth() / 2) / getRatio() + getX();     }      /**      * A conversion from the screen\'s vertical coordinate system      * to the game\'s vertical coordinate system.      * @param y in the screen\'s coordinate system      * @return y in the game\'s coordinate system      */     window.screenToGameY = function(y) {         return (y - getHeight() / 2) / getRatio() + getY();     }      window.drawPoint = function(x_1, y_1, drawColor, text) {         if (!toggleDraw) {             dPoints.push([x_1, y_1, drawColor]);             dText.push(text);         }     }      window.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {         if (!toggleDraw) {             var radius = computeDistance(x_1, y_1, x_3, y_3);             dArc.push([x_1, y_1, x_2, y_2, x_3, y_3, radius, drawColor]);         }     }      window.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {         if (!toggleDraw) {             lines.push([x_1, y_1, x_2, y_2, drawColor]);         }     }      window.drawCircle = function(x_1, y_1, radius, drawColor) {         if (!toggleDraw) {             circles.push([x_1, y_1, radius, drawColor]);         }     }      function V() {          //UPDATE         if (getPlayer().length == 0 && !reviving && ~~(getCurrentScore() / 100) > 0) {             console.log(""Dead: "" + ~~(getCurrentScore() / 100));             apos(\'send\', \'pageview\');         }          if (getPlayer().length == 0) {             console.log(""Revive"");             setNick(originalName);             reviving = true;         } else if (getPlayer().length > 0 && reviving) {             reviving = false;             console.log(""Done Reviving!"");         }                  if (T()) {             var a = fa - m / 2;             var b = ga - r / 2;             64 > a * a + b * b || .01 > Math.abs(eb - ia) &&                 .01 > Math.abs(fb - ja) || (eb = ia, fb = ja, a = N(13), a.setUint8(0, 16), a.setInt32(1, ia, !0), a.setInt32(5, ja, !0), a.setUint32(9, 0, !0), O(a))         }     }      function cb() {         if (T() && $ && null != K) {             var a = N(1 + 2 * K.length);             a.setUint8(0, 0);             for (var b = 0; b < K.length; ++b) a.setUint16(1 + 2 * b, K.charCodeAt(b), !0);             O(a)         }     }      function T() {         return null != q && q.readyState == q.OPEN     }      window.opCode = function(a) {         console.log(""Sending op code."");         H(parseInt(a));     }      function H(a) {         if (T()) {             var b = N(1);             b.setUint8(0, a);             O(b)         }     }      function $a() {         if (T() && null != B) {             var a = N(1 + B.length);             a.setUint8(0, 81);             for (var b = 0; b < B.length; ++b) a.setUint8(b + 1, B.charCodeAt(b));             O(a)         }     }      function Ta() {         m = d.innerWidth;         r = d.innerHeight;         za.width = G.width = m;         za.height = G.height = r;         var a = e(""#helloContainer"");         a.css(""transform"", ""none"");         var b = a.height(),             c = d.innerHeight;         b > c / 1.1 ? a.css(""transform"", ""translate(-50%, -50%) scale("" + c / b / 1.1 + "")"") : a.css(""transform"", ""translate(-50%, -50%)"");         gb()     }      function hb() {         var a;         a = Math.max(r / 1080, m / 1920);         return a *= J     }      function yb() {         if (0 != k.length) {             for (var a = 0, b = 0; b < k.length; b++) a += k[b].size;             a = Math.pow(Math.min(64 / a, 1), .4) * hb();             h = (9 * h + a) / 10         }     }      function gb() {         //UPDATE         dPoints = [];         circles = [];         dArc = [];         dText = [];         lines = [];           var a, b = Date.now();         ++zb;         C = b;         if (0 < k.length) {             yb();             for (var c = a = 0, d = 0; d < k.length; d++) k[d].P(), a += k[d].x / k.length, c += k[d].y / k.length;             aa = a;             ba = c;             ca = h;             s = (s + a) / 2;             t = (t + c) / 2;         } else s = (29 * s + aa) / 30, t = (29 * t + ba) / 30, h = (9 * h + ca * hb()) / 10;         qb();         Aa();         Ia || f.clearRect(0, 0, m, r);         Ia ? (f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"", f.globalAlpha = .05, f.fillRect(0, 0, m, r), f.globalAlpha = 1) : Ab();         v.sort(function(a, b) {             return a.size == b.size ? a.id - b.id : a.size - b.size         });         f.save();         f.translate(m / 2, r / 2);         f.scale(h, h);         f.translate(-s, -t);         //UPDATE         f.save();         f.beginPath();         f.lineWidth = 5;         f.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapStartX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapEndX(), getMapStartY());         f.stroke();         f.moveTo(getMapEndX(), getMapStartY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapEndY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.restore();                  for (d = 0; d < v.length; d++) v[d].w(f);         for (d = 0; d < Q.length; d++) Q[d].w(f);         //UPDATE         if (getPlayer().length > 0) {             var moveLoc = window.botList[botIndex].mainLoop();             if (!toggle) {                 setPoint(moveLoc[0], moveLoc[1]);             }         }         customRender(f);         if (Ga) {             na = (3 * na + Ea) / 4;             oa = (3 * oa + Fa) / 4;             f.save();             f.strokeStyle = ""#FFAAAA"";             f.lineWidth = 10;             f.lineCap = ""round"";             f.lineJoin = ""round"";             f.globalAlpha = .5;             f.beginPath();             for (d = 0; d < k.length; d++) f.moveTo(k[d].x, k[d].y), f.lineTo(na, oa);             f.stroke();             f.restore();         }         f.restore();         z && z.width && f.drawImage(z, m - z.width - 10, 10);         R = Math.max(R, Bb());          //UPDATE          var currentDate = new Date();          var nbSeconds = 0;         if (getPlayer().length > 0) {             //nbSeconds = currentDate.getSeconds() + currentDate.getMinutes() * 60 + currentDate.getHours() * 3600 - lifeTimer.getSeconds() - lifeTimer.getMinutes() * 60 - lifeTimer.getHours() * 3600;             nbSeconds = (currentDate.getTime() - lifeTimer.getTime())/1000;         }          bestTime = Math.max(nbSeconds, bestTime);          var displayText = \'Score: \' + ~~(R / 100) + "" Current Time: "" + nbSeconds + "" seconds."";          0 != R && (null == ua && (ua = new va(24, ""#FFFFFF"")), ua.C(displayText), c = ua.L(), a = c.width, f.globalAlpha = .2, f.fillStyle = ""#000000"", f.fillRect(10, r - 10 - 24 - 10, a + 10, 34), f.globalAlpha = 1, f.drawImage(c, 15, r -             10 - 24 - 5));         Cb();         b = Date.now() - b;         b > 1E3 / 60 ? D -= .01 : b < 1E3 / 65 && (D += .01);.4 > D && (D = .4);         1 < D && (D = 1);         b = C - ib;         !T() || W ? (x += b / 2E3, 1 < x && (x = 1)) : (x -= b / 300, 0 > x && (x = 0));         0 < x && (f.fillStyle = ""#000000"", f.globalAlpha = .5 * x, f.fillRect(0, 0, m, r), f.globalAlpha = 1);         ib = C          drawStats(f);     }      //UPDATE     function customRender(d) {         d.save();         for (var i = 0; i < lines.length; i++) {             d.beginPath();              d.lineWidth = 5;              if (lines[i][4] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (lines[i][4] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (lines[i][4] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (lines[i][4] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (lines[i][4] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (lines[i][4] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (lines[i][4] == 6) {                 d.strokeStyle = ""#008080"";             } else if (lines[i][4] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.moveTo(lines[i][0], lines[i][1]);             d.lineTo(lines[i][2], lines[i][3]);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < circles.length; i++) {             if (circles[i][3] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (circles[i][3] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (circles[i][3] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (circles[i][3] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (circles[i][3] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (circles[i][3] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (circles[i][3] == 6) {                 d.strokeStyle = ""#008080"";             } else if (circles[i][3] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }             d.beginPath();              d.lineWidth = 10;             //d.setLineDash([5]);             d.globalAlpha = 0.3;              d.arc(circles[i][0], circles[i][1], circles[i][2], 0, 2 * Math.PI, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dArc.length; i++) {             if (dArc[i][7] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (dArc[i][7] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (dArc[i][7] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (dArc[i][7] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (dArc[i][7] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (dArc[i][7] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (dArc[i][7] == 6) {                 d.strokeStyle = ""#008080"";             } else if (dArc[i][7] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.beginPath();              d.lineWidth = 5;              var ang1 = Math.atan2(dArc[i][1] - dArc[i][5], dArc[i][0] - dArc[i][4]);             var ang2 = Math.atan2(dArc[i][3] - dArc[i][5], dArc[i][2] - dArc[i][4]);              d.arc(dArc[i][4], dArc[i][5], dArc[i][6], ang1, ang2, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dPoints.length; i++) {             if (dText[i] == """") {                 var radius = 10;                  d.beginPath();                 d.arc(dPoints[i][0], dPoints[i][1], radius, 0, 2 * Math.PI, false);                  if (dPoints[i][2] == 0) {                     d.fillStyle = ""black"";                 } else if (dPoints[i][2] == 1) {                     d.fillStyle = ""yellow"";                 } else if (dPoints[i][2] == 2) {                     d.fillStyle = ""blue"";                 } else if (dPoints[i][2] == 3) {                     d.fillStyle = ""red"";                 } else if (dPoints[i][2] == 4) {                     d.fillStyle = ""#008080"";                 } else if (dPoints[i][2] == 5) {                     d.fillStyle = ""#FF69B4"";                 } else {                     d.fillStyle = ""#000000"";                 }                  d.fill();                 d.lineWidth = 2;                 d.strokeStyle = \'#003300\';                 d.stroke();             } else {                 var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'), true, (getDarkBool() ? \'#111111\' : \'#F2FBFF\'));                  text.C(dText[i]);                 var textRender = text.L();                 d.drawImage(textRender, dPoints[i][0] - (textRender.width / 2), dPoints[i][1] - (textRender.height / 2));             }          }         d.restore();     }      function drawStats(d) {         d.save()          sessionScore = Math.max(getCurrentScore(), sessionScore);          var botString = window.botList[botIndex].displayText();          var debugStrings = [];         debugStrings.push(""Bot: "" + window.botList[botIndex].name);         debugStrings.push(""Launcher: AposLauncher "" + aposLauncherVersion);         debugStrings.push(""T - Bot: "" + (!toggle ? ""On"" : ""Off""));         debugStrings.push(""R - Lines: "" + (!toggleDraw ? ""On"" : ""Off""));          for (var i = 0; i < botString.length; i++) {             debugStrings.push(botString[i]);         }          debugStrings.push("""");         debugStrings.push(""Best Score: "" + ~~(sessionScore / 100));         debugStrings.push(""Best Time: "" + bestTime + "" seconds"");         debugStrings.push("""");         debugStrings.push(serverIP);          if (getPlayer().length > 0) {             var offsetX = -getMapStartX();             var offsetY = -getMapStartY();             debugStrings.push(""Location: "" + Math.floor(getPlayer()[0].x + offsetX) + "", "" + Math.floor(getPlayer()[0].y + offsetY));         }          var offsetValue = 20;         var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'));          for (var i = 0; i < debugStrings.length; i++) {             text.C(debugStrings[i]);             var textRender = text.L();             d.drawImage(textRender, 20, offsetValue);             offsetValue += textRender.height;         }          if (message.length > 0) {             var mRender = [];             var mWidth = 0;             var mHeight = 0;              for (var i = 0; i < message.length; i++) {                 var mText = new va(28, \'#FF0000\', true, \'#000000\');                 mText.C(message[i]);                 mRender.push(mText.L());                  if (mRender[i].width > mWidth) {                     mWidth = mRender[i].width;                 }                 mHeight += mRender[i].height;             }              var mX = getWidth() / 2 - mWidth / 2;             var mY = 20;              d.globalAlpha = 0.4;             d.fillStyle = \'#000000\';             d.fillRect(mX - 10, mY - 10, mWidth + 20, mHeight + 20);             d.globalAlpha = 1;              var mOffset = mY;             for (var i = 0; i < mRender.length; i++) {                 d.drawImage(mRender[i], getWidth() / 2 - mRender[i].width / 2, mOffset);                 mOffset += mRender[i].height;             }         }          d.restore();     }      function Ab() {         f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"";         f.fillRect(0, 0, m, r);         f.save();         f.strokeStyle = ta ? ""#AAAAAA"" : ""#000000"";         f.globalAlpha = .2 * h;         for (var a = m / h, b = r / h, c = (a / 2 - s) % 50; c < a; c += 50) f.beginPath(), f.moveTo(c * h - .5, 0), f.lineTo(c * h - .5, b * h), f.stroke();         for (c = (b / 2 - t) % 50; c < b; c += 50) f.beginPath(), f.moveTo(0, c * h - .5), f.lineTo(a * h, c * h - .5), f.stroke();         f.restore()     }      function Cb() {         if (Qa && Ja.width) {             var a = m / 5;             f.drawImage(Ja, 5, 5, a, a)         }     }      function Bb() {         for (var a = 0, b = 0; b < k.length; b++) a += k[b].q * k[b].q;         return a     }      function ab() {         z = null;         if (null != A || 0 != F.length)             if (null != A || wa) {                 z = document.createElement(""canvas"");                 var a = z.getContext(""2d""),                     b = 60,                     b = null == A ? b + 24 * F.length : b + 180,                     c = Math.min(200, .3 * m) / 200;                 z.width = 200 * c;                 z.height = b * c;                 a.scale(c, c);                 a.globalAlpha = .4;                 a.fillStyle = ""#000000"";                 a.fillRect(0, 0, 200, b);                 a.globalAlpha =                     1;                 a.fillStyle = ""#FFFFFF"";                 c = null;                 c = Z(""leaderboard"");                 a.font = ""30px Ubuntu"";                 a.fillText(c, 100 - a.measureText(c).width / 2, 40);                 if (null == A)                     for (a.font = ""20px Ubuntu"", b = 0; b < F.length; ++b) c = F[b].name || Z(""unnamed_cell""), wa || (c = Z(""unnamed_cell"")), -1 != M.indexOf(F[b].id) ? (k[0].name && (c = k[0].name), a.fillStyle = ""#FFAAAA"") : a.fillStyle = ""#FFFFFF"", c = b + 1 + "". "" + c, a.fillText(c, 100 - a.measureText(c).width / 2, 70 + 24 * b);                 else                     for (b = c = 0; b < A.length; ++b) {                         var d = c + A[b] * Math.PI * 2;                         a.fillStyle = Db[b + 1];                         a.beginPath();                         a.moveTo(100, 140);                         a.arc(100,                             140, 80, c, d, !1);                         a.fill();                         c = d                     }             }     }      function Ka(a, b, c, d, e) {         this.V = a;         this.x = b;         this.y = c;         this.i = d;         this.b = e     }      function da(a, b, c, d, e, p) {         this.id = a;         this.s = this.x = b;         this.t = this.y = c;         this.r = this.size = d;         this.color = e;         this.a = [];         this.W();         this.B(p)     }      function va(a, b, c, d) {         a && (this.u = a);         b && (this.S = b);         this.U = !!c;         d && (this.v = d)     }      function S(a, b) {         var c = ""1"" == e(""#helloContainer"").attr(""data-has-account-data"");         e(""#helloContainer"").attr(""data-has-account-data"", ""1"");         if (null == b && d.localStorage.loginCache) {             var l = JSON.parse(d.localStorage.loginCache);             l.f = a.f;             l.d = a.d;             l.e = a.e;             d.localStorage.loginCache = JSON.stringify(l)         }         if (c) {             var u = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[0],                 c = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[1].split("" "")[0],                 l = e("".agario-profile-panel .progress-bar-star"").first().text();             if (l != a.e) S({                 f: c,                 d: c,                 e: l             }, function() {                 e("".agario-profile-panel .progress-bar-star"").text(a.e);                 e("".agario-exp-bar .progress-bar"").css(""width"", ""100%"");                 e("".progress-bar-star"").addClass(""animated tada"").one(""webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend"",                     function() {                         e("".progress-bar-star"").removeClass(""animated tada"")                     });                 setTimeout(function() {                     e("".agario-exp-bar .progress-bar-text"").text(a.d + ""/"" + a.d + "" XP"");                     S({                         f: 0,                         d: a.d,                         e: a.e                     }, function() {                         S(a, b)                     })                 }, 1E3)             });             else {                 var p = Date.now(),                     g = function() {                         var c;                         c = (Date.now() - p) / 1E3;                         c = 0 > c ? 0 : 1 < c ? 1 : c;                         c = c * c * (3 - 2 * c);                         e("".agario-exp-bar .progress-bar-text"").text(~~(u + (a.f - u) * c) + ""/"" + a.d + "" XP"");                         e("".agario-exp-bar .progress-bar"").css(""width"", (88 * (u + (a.f - u) * c) / a.d).toFixed(2) + ""%"");                         1 > c ? d.requestAnimationFrame(g) : b && b()                     };                 d.requestAnimationFrame(g)              }         } else e("".agario-profile-panel .progress-bar-star"").text(a.e),             e("".agario-exp-bar .progress-bar-text"").text(a.f + ""/"" + a.d + "" XP""), e("".agario-exp-bar .progress-bar"").css(""width"", (88 * a.f / a.d).toFixed(2) + ""%""), b && b()      }      function jb(a) {         ""string"" == typeof a && (a = JSON.parse(a));         Date.now() + 18E5 > a.ja ? e(""#helloContainer"").attr(""data-logged-in"", ""0"") : (d.localStorage.loginCache = JSON.stringify(a), B = a.fa, e("".agario-profile-name"").text(a.name), $a(), S({             f: a.f,             d: a.d,             e: a.e         }), e(""#helloContainer"").attr(""data-logged-in"", ""1""))     }      function Eb(a) {         a = a.split(""\\n"");         jb({             name: a[0],             ta: a[1],             fa: a[2],             ja: 1E3 *                 +a[3],             e: +a[4],             f: +a[5],             d: +a[6]         });         console.log(""Hello Facebook?"");     }      function La(a) {         if (""connected"" == a.status) {             var b = a.authResponse.accessToken;             d.FB.api(""/me/picture?width=180&height=180"", function(a) {                 d.localStorage.fbPictureCache = a.data.url;                 e("".agario-profile-picture"").attr(""src"", a.data.url)             });             e(""#helloContainer"").attr(""data-logged-in"", ""1"");             null != B ? e.ajax(""https://m.agar.io/checkToken"", {                 error: function() {                     console.log(""Facebook Fail!"");                     B = null;                     La(a)                 },                 success: function(a) {                     a = a.split(""\\n"");                     S({                         e: +a[0],                         f: +a[1],                         d: +a[2]                     });                     console.log(""Facebook connected!"");                 },                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: B             }) : e.ajax(""https://m.agar.io/facebookLogin"", {                 error: function() {                     console.log(""You have a Facebook problem!"");                     B = null;                     e(""#helloContainer"").attr(""data-logged-in"", ""0"")                 },                 success: Eb,                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: b             })         }     }      function Wa(a) {         Y("":party"");         e(""#helloContainer"").attr(""data-party-state"", ""4"");         a = decodeURIComponent(a).replace(/.*#/gim, """");         Ma(""#"" + d.encodeURIComponent(a));         e.ajax(Na + ""//m.agar.io/getToken"", {             error: function() {                 e(""#helloContainer"").attr(""data-party-state"", ""6"")             },             success: function(b) {                 b = b.split(""\\n"");                 e("".partyToken"").val(""agar.io/#"" +                     d.encodeURIComponent(a));                 e(""#helloContainer"").attr(""data-party-state"", ""5"");                 Y("":party"");                 Ca(""ws://"" + b[0], a)             },             dataType: ""text"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: a         })     }      function Ma(a) {         d.history && d.history.replaceState && d.history.replaceState({}, d.document.title, a)     }     if (!d.agarioNoInit) {         var Na = d.location.protocol,             tb = ""https:"" == Na,             xa = d.navigator.userAgent;         if (-1 != xa.indexOf(""Android"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""PlayStore""), setTimeout(function() {                 d.location.href = ""market://details?id=com.miniclip.agar.io""             },             1E3);         else if (-1 != xa.indexOf(""iPhone"") || -1 != xa.indexOf(""iPad"") || -1 != xa.indexOf(""iPod"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""AppStore""), setTimeout(function() {             d.location.href = ""https://itunes.apple.com/app/agar.io/id995999703""         }, 1E3);         else {             var za, f, G, m, r, X = null,                  //UPDATE                 toggle = false,                 toggleDraw = false,                 tempPoint = [0, 0, 1],                 dPoints = [],                 circles = [],                 dArc = [],                 dText = [],                 lines = [],                 names = [""Vilhena""],                 originalName = names[Math.floor(Math.random() * names.length)],                 sessionScore = 0,                 serverIP = """",                 interNodes = [],                 lifeTimer = new Date(),                 bestTime = 0,                 botIndex = 0,                 reviving = false,                 message = [],                  q = null,                 s = 0,                 t = 0,                 M = [],                 k = [],                 E = {},                 v = [],                 Q = [],                 F = [],                 fa = 0,                 ga = 0,                  //UPDATE                 ia = -1,                 ja = -1,                  zb = 0,                 C = 0,                 ib = 0,                 K = null,                 pa = 0,                 qa = 0,                 ra = 1E4,                 sa = 1E4,                 h = 1,                 y = null,                 kb = !0,                 wa = !0,                 Oa = !1,                 Ha = !1,                 R = 0,                 ta = !1,                 lb = !1,                 aa = s = ~~((pa + ra) / 2),                 ba = t = ~~((qa + sa) / 2),                 ca = 1,                 P = """",                 A = null,                 ya = !1,                 Ga = !1,                 Ea = 0,                 Fa =                 0,                 na = 0,                 oa = 0,                 mb = 0,                 Db = [""#333333"", ""#FF3333"", ""#33FF33"", ""#3333FF""],                 Ia = !1,                 $ = !1,                 bb = 0,                 B = null,                 J = 1,                 x = 1,                 W = !0,                 Ba = 0,                 Da = {};             (function() {                 var a = d.location.search;                 ""?"" == a.charAt(0) && (a = a.slice(1));                 for (var a = a.split(""&""), b = 0; b < a.length; b++) {                     var c = a[b].split(""="");                     Da[c[0]] = c[1]                 }             })();             var Qa = ""ontouchstart"" in d && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(d.navigator.userAgent),                 Ja = new Image;             Ja.src = ""img/split.png"";             var nb = document.createElement(""canvas"");             if (""undefined"" == typeof console || ""undefined"" ==                 typeof DataView || ""undefined"" == typeof WebSocket || null == nb || null == nb.getContext || null == d.localStorage) alert(""You browser does not support this game, we recommend you to use Firefox to play this"");             else {                 var ka = null;                 d.setNick = function(a) {                     //UPDATE                     originalName = a;                     if (getPlayer().length == 0) {                         lifeTimer = new Date();                     }                      Xa();                     K = a;                     cb();                     R = 0                 };                 d.setRegion = ha;                 d.setSkins = function(a) {                     kb = a                 };                 d.setNames = function(a) {                     wa = a                 };                 d.setDarkTheme = function(a) {                     ta = a                 };                 d.setColors = function(a) {                     Oa = a                 };                 d.setShowMass = function(a) {                     lb = a                 };                 d.spectate = function() {                     K = null;                     H(1);                     Xa()                 };                 d.setGameMode = function(a) {                     a != P && ("":party"" ==                         P && e(""#helloContainer"").attr(""data-party-state"", ""0""), Y(a), "":party"" != a && I())                 };                 d.setAcid = function(a) {                     Ia = a                 };                 null != d.localStorage && (null == d.localStorage.AB9 && (d.localStorage.AB9 = 0 + ~~(100 * Math.random())), mb = +d.localStorage.AB9, d.ABGroup = mb);                 e.get(Na + ""//gc.agar.io"", function(a) {                     var b = a.split("" "");                     a = b[0];                     b = b[1] || """"; - 1 == [""UA""].indexOf(a) && ob.push(""ussr"");                     ea.hasOwnProperty(a) && (""string"" == typeof ea[a] ? y || ha(ea[a]) : ea[a].hasOwnProperty(b) && (y || ha(ea[a][b])))                 }, ""text"");                 d.ga && d.ga(""send"", ""event"", ""User-Agent"", d.navigator.userAgent, {                     nonInteraction: 1                 });                 var la = !1,                     Ya = 0;                 setTimeout(function() {                     la = !0                 }, Math.max(6E4 * Ya, 1E4));                 var ea = {                         AF: ""JP-Tokyo"",                         AX: ""EU-London"",                         AL: ""EU-London"",                         DZ: ""EU-London"",                         AS: ""SG-Singapore"",                         AD: ""EU-London"",                         AO: ""EU-London"",                         AI: ""US-Atlanta"",                         AG: ""US-Atlanta"",                         AR: ""BR-Brazil"",                         AM: ""JP-Tokyo"",                         AW: ""US-Atlanta"",                         AU: ""SG-Singapore"",                         AT: ""EU-London"",                         AZ: ""JP-Tokyo"",                         BS: ""US-Atlanta"",                         BH: ""JP-Tokyo"",                         BD: ""JP-Tokyo"",                         BB: ""US-Atlanta"",                         BY: ""EU-London"",                         BE: ""EU-London"",                         BZ: ""US-Atlanta"",                         BJ: ""EU-London"",                         BM: ""US-Atlanta"",                         BT: ""JP-Tokyo"",                         BO: ""BR-Brazil"",                         BQ: ""US-Atlanta"",                         BA: ""EU-London"",                         BW: ""EU-London"",                         BR: ""BR-Brazil"",                         IO: ""JP-Tokyo"",                         VG: ""US-Atlanta"",                         BN: ""JP-Tokyo"",                         BG: ""EU-London"",                         BF: ""EU-London"",                         BI: ""EU-London"",                         KH: ""JP-Tokyo"",                         CM: ""EU-London"",                         CA: ""US-Atlanta"",                         CV: ""EU-London"",                         KY: ""US-Atlanta"",                         CF: ""EU-London"",                         TD: ""EU-London"",                         CL: ""BR-Brazil"",                         CN: ""CN-China"",                         CX: ""JP-Tokyo"",                         CC: ""JP-Tokyo"",                         CO: ""BR-Brazil"",                         KM: ""EU-London"",                         CD: ""EU-London"",                         CG: ""EU-London"",                         CK: ""SG-Singapore"",                         CR: ""US-Atlanta"",                         CI: ""EU-London"",                         HR: ""EU-London"",                         CU: ""US-Atlanta"",                         CW: ""US-Atlanta"",                         CY: ""JP-Tokyo"",                         CZ: ""EU-London"",                         DK: ""EU-London"",                         DJ: ""EU-London"",                         DM: ""US-Atlanta"",                         DO: ""US-Atlanta"",                         EC: ""BR-Brazil"",                         EG: ""EU-London"",                         SV: ""US-Atlanta"",                         GQ: ""EU-London"",                         ER: ""EU-London"",                         EE: ""EU-London"",                         ET: ""EU-London"",                         FO: ""EU-London"",                         FK: ""BR-Brazil"",                         FJ: ""SG-Singapore"",                         FI: ""EU-London"",                         FR: ""EU-London"",                         GF: ""BR-Brazil"",                         PF: ""SG-Singapore"",                         GA: ""EU-London"",                         GM: ""EU-London"",                         GE: ""JP-Tokyo"",                         DE: ""EU-London"",                         GH: ""EU-London"",                         GI: ""EU-London"",                         GR: ""EU-London"",                         GL: ""US-Atlanta"",                         GD: ""US-Atlanta"",                         GP: ""US-Atlanta"",                         GU: ""SG-Singapore"",                         GT: ""US-Atlanta"",                         GG: ""EU-London"",                         GN: ""EU-London"",                         GW: ""EU-London"",                         GY: ""BR-Brazil"",                         HT: ""US-Atlanta"",                         VA: ""EU-London"",                         HN: ""US-Atlanta"",                         HK: ""JP-Tokyo"",                         HU: ""EU-London"",                         IS: ""EU-London"",                         IN: ""JP-Tokyo"",                         ID: ""JP-Tokyo"",                         IR: ""JP-Tokyo"",                         IQ: ""JP-Tokyo"",                         IE: ""EU-London"",                         IM: ""EU-London"",                         IL: ""JP-Tokyo"",                         IT: ""EU-London"",                         JM: ""US-Atlanta"",                         JP: ""JP-Tokyo"",                         JE: ""EU-London"",                         JO: ""JP-Tokyo"",                         KZ: ""JP-Tokyo"",                         KE: ""EU-London"",                         KI: ""SG-Singapore"",                         KP: ""JP-Tokyo"",                         KR: ""JP-Tokyo"",                         KW: ""JP-Tokyo"",                         KG: ""JP-Tokyo"",                         LA: ""JP-Tokyo"",                         LV: ""EU-London"",                         LB: ""JP-Tokyo"",                         LS: ""EU-London"",                         LR: ""EU-London"",                         LY: ""EU-London"",                         LI: ""EU-London"",                         LT: ""EU-London"",                         LU: ""EU-London"",                         MO: ""JP-Tokyo"",                         MK: ""EU-London"",                         MG: ""EU-London"",                         MW: ""EU-London"",                         MY: ""JP-Tokyo"",                         MV: ""JP-Tokyo"",                         ML: ""EU-London"",                         MT: ""EU-London"",                         MH: ""SG-Singapore"",                         MQ: ""US-Atlanta"",                         MR: ""EU-London"",                         MU: ""EU-London"",                         YT: ""EU-London"",                         MX: ""US-Atlanta"",                         FM: ""SG-Singapore"",                         MD: ""EU-London"",                         MC: ""EU-London"",                         MN: ""JP-Tokyo"",                         ME: ""EU-London"",                         MS: ""US-Atlanta"",                         MA: ""EU-London"",                         MZ: ""EU-London"",                         MM: ""JP-Tokyo"",                         NA: ""EU-London"",                         NR: ""SG-Singapore"",                         NP: ""JP-Tokyo"",                         NL: ""EU-London"",                         NC: ""SG-Singapore"",                         NZ: ""SG-Singapore"",                         NI: ""US-Atlanta"",                         NE: ""EU-London"",                         NG: ""EU-London"",                         NU: ""SG-Singapore"",                         NF: ""SG-Singapore"",                         MP: ""SG-Singapore"",                         NO: ""EU-London"",                         OM: ""JP-Tokyo"",                         PK: ""JP-Tokyo"",                         PW: ""SG-Singapore"",                         PS: ""JP-Tokyo"",                         PA: ""US-Atlanta"",                         PG: ""SG-Singapore"",                         PY: ""BR-Brazil"",                         PE: ""BR-Brazil"",                         PH: ""JP-Tokyo"",                         PN: ""SG-Singapore"",                         PL: ""EU-London"",                         PT: ""EU-London"",                         PR: ""US-Atlanta"",                         QA: ""JP-Tokyo"",                         RE: ""EU-London"",                         RO: ""EU-London"",                         RU: ""RU-Russia"",                         RW: ""EU-London"",                         BL: ""US-Atlanta"",                         SH: ""EU-London"",                         KN: ""US-Atlanta"",                         LC: ""US-Atlanta"",                         MF: ""US-Atlanta"",                         PM: ""US-Atlanta"",                         VC: ""US-Atlanta"",                         WS: ""SG-Singapore"",                         SM: ""EU-London"",                         ST: ""EU-London"",                         SA: ""EU-London"",                         SN: ""EU-London"",                         RS: ""EU-London"",                         SC: ""EU-London"",                         SL: ""EU-London"",                         SG: ""JP-Tokyo"",                         SX: ""US-Atlanta"",                         SK: ""EU-London"",                         SI: ""EU-London"",                         SB: ""SG-Singapore"",                         SO: ""EU-London"",                         ZA: ""EU-London"",                         SS: ""EU-London"",                         ES: ""EU-London"",                         LK: ""JP-Tokyo"",                         SD: ""EU-London"",                         SR: ""BR-Brazil"",                         SJ: ""EU-London"",                         SZ: ""EU-London"",                         SE: ""EU-London"",                         CH: ""EU-London"",                         SY: ""EU-London"",                         TW: ""JP-Tokyo"",                         TJ: ""JP-Tokyo"",                         TZ: ""EU-London"",                         TH: ""JP-Tokyo"",                         TL: ""JP-Tokyo"",                         TG: ""EU-London"",                         TK: ""SG-Singapore"",                         TO: ""SG-Singapore"",                         TT: ""US-Atlanta"",                         TN: ""EU-London"",                         TR: ""TK-Turkey"",                         TM: ""JP-Tokyo"",                         TC: ""US-Atlanta"",                         TV: ""SG-Singapore"",                         UG: ""EU-London"",                         UA: ""EU-London"",                         AE: ""EU-London"",                         GB: ""EU-London"",                         US: ""US-Atlanta"",                         UM: ""SG-Singapore"",                         VI: ""US-Atlanta"",                         UY: ""BR-Brazil"",                         UZ: ""JP-Tokyo"",                         VU: ""SG-Singapore"",                         VE: ""BR-Brazil"",                         VN: ""JP-Tokyo"",                         WF: ""SG-Singapore"",                         EH: ""EU-London"",                         YE: ""JP-Tokyo"",                         ZM: ""EU-London"",                         ZW: ""EU-London""                     },                     L = null;                 d.connect = Ca;                  //UPDATE                 /**                  * Tells you if the game is in Dark mode.                  * @return Boolean for dark mode.                  */                 window.getDarkBool = function() {                     return ta;                 }                  /**                  * Tells you if the mass is shown.                  * @return Boolean for player\'s mass.                  */                 window.getMassBool = function() {                     return lb;                 }                  /**                  * This is a copy of everything that is shown on screen.                  * Normally stuff will time out when off the screen, this                  * memorizes everything that leaves the screen for a little                  * while longer.                  * @return The memory object.                  */                 window.getMemoryCells = function() {                     return interNodes;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCellsArray = function() {                     return v;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCells = function() {                     return E;                 }                  /**                  * Returns an array with all the player\'s cells.                  * @return Player\'s cells                  */                 window.getPlayer = function() {                     return k;                 }                  /**                  * The canvas\' width.                  * @return Integer Width                  */                 window.getWidth = function() {                     return m;                 }                  /**                  * The canvas\' height                  * @return Integer Height                  */                 window.getHeight = function() {                     return r;                 }                  /**                  * Scaling ratio of the canvas. The bigger this ration,                  * the further that you see.                  * @return Screen scaling ratio.                  */                 window.getRatio = function() {                     return h;                 }                  /**                  * [getOffsetX description]                  * @return {[type]} [description]                  */                 window.getOffsetX = function() {                     return aa;                 }                  window.getOffsetY = function() {                     return ba;                 }                  window.getX = function() {                     return s;                 }                  window.getY = function() {                     return t;                 }                  window.getPointX = function() {                     return ia;                 }                  window.getPointY = function() {                     return ja;                 }                  /**                  * The X location of the mouse.                  * @return Integer X                  */                 window.getMouseX = function() {                     return fa;                 }                  /**                  * The Y location of the mouse.                  * @return Integer Y                  */                 window.getMouseY = function() {                     return ga;                 }                  window.getMapStartX = function() {                     return pa;                 }                  window.getMapStartY = function() {                     return qa;                 }                  window.getMapEndX = function() {                     return ra;                 }                  window.getMapEndY = function() {                     return sa;                 }                  window.getScreenDistance = function() {                     var temp = screenDistance();                     return temp;                 }                  /**                  * A timestamp since the last time the server sent any data.                  * @return Last update timestamp                  */                 window.getLastUpdate = function() {                     return C;                 }                  window.getCurrentScore = function() {                     return R;                 }                  /**                  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")                  * @return {[type]} [description]                  */                 window.getMode = function() {                     return P;                 }                  window.setPoint = function(x, y) {                     ia = x;                     ja = y;                 }                  window.setScore = function(a) {                     sessionScore = a * 100;                 }                  window.setBestTime = function(a) {                     bestTime = a;                 }                  window.best = function(a, b) {                     setScore(a);                     setBestTime(b);                 }                  window.setBotIndex = function(a) {                     console.log(""Changing bot"");                     botIndex = a;                 }                  window.setMessage = function(a) {                     message = a;                 }                 window.updateBotList = function() {                     window.bot",,3
377,https://github.com/Lifestylerr/DAWD.git,"/*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/ // ==UserScript== // @name        AposLauncher // @namespace   AposLauncher // @include     http://agar.io/* // @version     4.124 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript== var aposLauncherVersion = 4.124;  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b"";  function getLatestCommit() {     window.jQuery.ajax({         url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",         cache: false,         dataType: ""jsonp""     }).done(function(data) {         console.dir(data.data);         console.log(""hmm: "" + data.data.object.sha);         sha = data.data.object.sha;          function update(prefix, name, url) {             window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");             window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");             window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");             window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");             window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                 window.jQuery(""#"" + prefix + ""Dialog"").hide();                 window.jQuery(""#"" + prefix + ""Dialog"").remove();             });             window.jQuery(""#"" + prefix + ""Dialog"").show();         }          window.jQuery.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/launcher.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {             var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm, """");             latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"") + 11, latestVersion.indexOf(""// @grant""));              latestVersion = parseFloat(latestVersion + 0.0000);             var myVersion = parseFloat(aposLauncherVersion + 0.0000);              if (latestVersion > myVersion) {                 update(""aposLauncher"", ""launcher.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/launcher.user.js/"");             }             console.log(\'Current launcher.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);         });      }).fail(function() {}); } getLatestCommit();  console.log(""Running Bot Launcher!""); (function(d, e) {      //UPDATE     function keyAction(e) {         if (84 == e.keyCode) {             console.log(""Toggle"");             toggle = !toggle;         }         if (82 == e.keyCode) {             console.log(""ToggleDraw"");             toggleDraw = !toggleDraw;         }         if (68 == e.keyCode) {             window.setDarkTheme(!getDarkBool());         }         if (70 == e.keyCode) {             window.setShowMass(!getMassBool());         }         if (69 == e.keyCode) {             if (message.length > 0) {                 window.setMessage([]);                 window.onmouseup = function() {};                 window.ignoreStream = true;             } else {                 window.ignoreStream = false;                 window.refreshTwitch();             }         }         window.botList[botIndex].keyAction(e);     }      function humanPlayer() {         //Don\'t need to do anything.         return [getPointX(), getPointY()];     }        function pb() {          //UPDATE          window.botList = window.botList || [];          window.jQuery(\'#nick\').val(originalName);          function HumanPlayerObject() {             this.name = ""Human"";             this.keyAction = function(key) {};             this.displayText = function() {                 return [];             };             this.mainLoop = humanPlayer;         }          var hpo = new HumanPlayerObject();          window.botList.push(hpo);          window.updateBotList();          ya = !0;         Pa();         setInterval(Pa, 18E4);          var father = window.jQuery(""#canvas"").parent();         window.jQuery(""#canvas"").remove();         father.prepend(""<canvas id=\'canvas\'>"");          G = za = document.getElementById(""canvas"");         f = G.getContext(""2d"");         G.onmousedown = function(a) {             if (Qa) {                 var b = a.clientX - (5 + m / 5 / 2),                     c = a.clientY - (5 + m / 5 / 2);                 if (Math.sqrt(b * b + c * c) <= m / 5 / 2) {                     V();                     H(17);                     return                 }             }             fa = a.clientX;             ga = a.clientY;             Aa();             V();         };         G.onmousemove = function(a) {             fa = a.clientX;             ga = a.clientY;             Aa();         };         G.onmouseup = function() {};         /firefox/i.test(navigator.userAgent) ? document.addEventListener(""DOMMouseScroll"", Ra, !1) : document.body.onmousewheel = Ra;         var a = !1,             b = !1,             c = !1;         d.onkeydown = function(l) {             //UPDATE             if (!window.jQuery(\'#nick\').is("":focus"")) {                 32 != l.keyCode || a || (V(), H(17), a = !0);                 81 != l.keyCode || b || (H(18), b = !0);                 87 != l.keyCode || c || (V(), H(21), c = !0);                 27 == l.keyCode && Sa(!0);                  //UPDATE                 keyAction(l);             }         };         d.onkeyup = function(l) {             32 == l.keyCode && (a = !1);             87 == l.keyCode && (c = !1);             81 == l.keyCode && b && (H(19), b = !1);         };         d.onblur = function() {             H(19);             c = b = a = !1         };         d.onresize = Ta;         d.requestAnimationFrame(Ua);         setInterval(V, 40);         y && e(""#region"").val(y);         Va();         ha(e(""#region"").val());         0 == Ba && y && I();         W = !0;         e(""#overlays"").show();         Ta();         d.location.hash && 6 <= d.location.hash.length && Wa(d.location.hash)     }      function Ra(a) {         J *= Math.pow(.9, a.wheelDelta / -120 || a.detail || 0);         //UPDATE         0.07 > J && (J = 0.07);         J > 4 / h && (J = 4 / h)     }      function qb() {         if (.4 > h) X = null;         else {             for (var a = Number.POSITIVE_INFINITY, b = Number.POSITIVE_INFINITY, c = Number.NEGATIVE_INFINITY, l = Number.NEGATIVE_INFINITY, d = 0, p = 0; p < v.length; p++) {                 var g = v[p];                 !g.N() || g.R || 20 >= g.size * h || (d = Math.max(g.size, d), a = Math.min(g.x, a), b = Math.min(g.y, b), c = Math.max(g.x, c), l = Math.max(g.y, l))             }             X = rb.ka({                 ca: a - 10,                 da: b - 10,                 oa: c + 10,                 pa: l + 10,                 ma: 2,                 na: 4             });             for (p = 0; p < v.length; p++)                 if (g = v[p],                     g.N() && !(20 >= g.size * h))                     for (a = 0; a < g.a.length; ++a) b = g.a[a].x, c = g.a[a].y, b < s - m / 2 / h || c < t - r / 2 / h || b > s + m / 2 / h || c > t + r / 2 / h || X.m(g.a[a])         }     }      function Aa() {         //UPDATE         if (toggle || window.botList[botIndex].name == ""Human"") {             setPoint(((fa - m / 2) / h + s), ((ga - r / 2) / h + t));         }     }      function Pa() {         null == ka && (ka = {}, e(""#region"").children().each(function() {             var a = e(this),                 b = a.val();             b && (ka[b] = a.text())         }));         e.get(""https://m.agar.io/info"", function(a) {                 var b = {},                     c;                 for (c in a.regions) {                     var l = c.split("":"")[0];                     b[l] = b[l] || 0;                     b[l] += a.regions[c].numPlayers                 }                 for (c in b) e(\'#region option[value=""\' + c + \'""]\').text(ka[c] + "" ("" + b[c] + "" players)"")             },             ""json"")     }      function Xa() {         e(""#adsBottom"").hide();         e(""#overlays"").hide();         W = !1;         Va();         d.googletag && d.googletag.pubads && d.googletag.pubads().clear(d.aa)     }      function ha(a) {         a && a != y && (e(""#region"").val() != a && e(""#region"").val(a), y = d.localStorage.location = a, e("".region-message"").hide(), e("".region-message."" + a).show(), e("".btn-needs-server"").prop(""disabled"", !1), ya && I())     }      function Sa(a) {         W || (K = null, sb(), a && (x = 1), W = !0, e(""#overlays"").fadeIn(a ? 200 : 3E3))     }      function Y(a) {         e(""#helloContainer"").attr(""data-gamemode"", a);         P = a;         e(""#gamemode"").val(a)     }      function Va() {         e(""#region"").val() ? d.localStorage.location = e(""#region"").val() : d.localStorage.location && e(""#region"").val(d.localStorage.location);         e(""#region"").val() ? e(""#locationKnown"").append(e(""#region"")) : e(""#locationUnknown"").append(e(""#region""))     }      function sb() {         la && (la = !1, setTimeout(function() {             la = !0                 //UPDATE         }, 6E4 * Ya))     }      function Z(a) {         return d.i18n[a] || d.i18n_dict.en[a] || a     }      function Za() {         var a = ++Ba;         console.log(""Find "" + y + P);         e.ajax(""https://m.agar.io/findServer"", {             error: function() {                 setTimeout(Za, 1E3)             },             success: function(b) {                 a == Ba && (b.alert && alert(b.alert), Ca(""ws://"" + b.ip, b.token))             },             dataType: ""json"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: (y + P || ""?"") + ""\\n154669603""         })     }      function I() {         ya && y && (e(""#connecting"").show(), Za())     }      function Ca(a, b) {         if (q) {             q.onopen = null;             q.onmessage = null;             q.onclose = null;             try {                 q.close()             } catch (c) {}             q = null         }         Da.la && (a = ""ws://"" + Da.la);         if (null != L) {             var l = L;             L = function() {                 l(b)             }         }         if (tb) {             var d = a.split("":"");             a = d[0] + ""s://ip-"" + d[1].replace(/\\./g, ""-"").replace(/\\//g, """") + "".tech.agar.io:"" + (+d[2] + 2E3)         }         M = [];         k = [];         E = {};         v = [];         Q = [];         F = [];         z = A = null;         R = 0;         $ = !1;         console.log(""Connecting to "" + a);         //UPDATE         serverIP = a;         q = new WebSocket(a);         q.binaryType = ""arraybuffer"";         q.onopen = function() {             var a;             console.log(""socket open"");             a = N(5);             a.setUint8(0, 254);             a.setUint32(1, 5, !0);             O(a);             a = N(5);             a.setUint8(0, 255);             a.setUint32(1, 154669603, !0);             O(a);             a = N(1 + b.length);             a.setUint8(0, 80);             for (var c = 0; c < b.length; ++c) a.setUint8(c + 1, b.charCodeAt(c));             O(a);             $a()         };         q.onmessage = ub;         q.onclose = vb;         q.onerror = function() {             console.log(""socket error"")         }     }      function N(a) {         return new DataView(new ArrayBuffer(a))     }      function O(a) {         q.send(a.buffer)     }      function vb() {         $ && (ma = 500);         console.log(""socket close"");         setTimeout(I, ma);         ma *= 2     }      function ub(a) {         wb(new DataView(a.data))     }      function wb(a) {         function b() {             for (var b = """";;) {                 var d = a.getUint16(c, !0);                 c += 2;                 if (0 == d) break;                 b += String.fromCharCode(d)             }             return b         }         var c = 0;         240 == a.getUint8(c) && (c += 5);         switch (a.getUint8(c++)) {             case 16:                 xb(a, c);                 break;             case 17:                 aa = a.getFloat32(c, !0);                 c += 4;                 ba = a.getFloat32(c, !0);                 c += 4;                 ca = a.getFloat32(c, !0);                 c += 4;                 break;             case 20:                 k = [];                 M = [];                 break;             case 21:                 Ea = a.getInt16(c, !0);                 c += 2;                 Fa = a.getInt16(c, !0);                 c += 2;                 Ga || (Ga = !0, na = Ea, oa = Fa);                 break;             case 32:                 M.push(a.getUint32(c, !0));                 c += 4;                 break;             case 49:                 if (null != A) break;                 var l = a.getUint32(c, !0),                     c = c + 4;                 F = [];                 for (var d = 0; d < l; ++d) {                     var p = a.getUint32(c, !0),                         c = c + 4;                     F.push({                         id: p,                         name: b()                     })                 }                 ab();                 break;             case 50:                 A = [];                 l = a.getUint32(c, !0);                 c += 4;                 for (d = 0; d < l; ++d) A.push(a.getFloat32(c, !0)), c += 4;                 ab();                 break;             case 64:                 pa = a.getFloat64(c, !0);                 c += 8;                 qa = a.getFloat64(c, !0);                 c += 8;                 ra = a.getFloat64(c, !0);                 c += 8;                 sa = a.getFloat64(c, !0);                 c += 8;                 aa = (ra + pa) / 2;                 ba = (sa + qa) / 2;                 ca = 1;                 0 == k.length && (s = aa, t = ba, h = ca);                 break;             case 81:                 var g = a.getUint32(c, !0),                     c = c + 4,                     e = a.getUint32(c, !0),                     c = c + 4,                     f = a.getUint32(c, !0),                     c = c + 4;                 setTimeout(function() {                     S({                         e: g,                         f: e,                         d: f                     })                 }, 1200)         }     }      function xb(a, b) {         bb = C = Date.now();         $ || ($ = !0, e(""#connecting"").hide(), cb(), L && (L(), L = null));         var c = Math.random();         Ha = !1;         var d = a.getUint16(b, !0);         b += 2;         for (var u = 0; u < d; ++u) {             var p = E[a.getUint32(b, !0)],                 g = E[a.getUint32(b + 4, !0)];             b += 8;             p && g && (g.X(), g.s = g.x, g.t = g.y, g.r = g.size, g.J = p.x, g.K = p.y, g.q = g.size, g.Q =                 C)         }         for (u = 0;;) {             d = a.getUint32(b, !0);             b += 4;             if (0 == d) break;             ++u;             var f, p = a.getInt16(b, !0);             b += 4;             g = a.getInt16(b, !0);             b += 4;             f = a.getInt16(b, !0);             b += 2;             for (var h = a.getUint8(b++), w = a.getUint8(b++), m = a.getUint8(b++), h = (h << 16 | w << 8 | m).toString(16); 6 > h.length;) h = ""0"" + h;             var h = ""#"" + h,                 w = a.getUint8(b++),                 m = !!(w & 1),                 r = !!(w & 16);             w & 2 && (b += 4);             w & 4 && (b += 8);             w & 8 && (b += 16);             for (var q, n = """";;) {                 q = a.getUint16(b, !0);                 b += 2;                 if (0 == q) break;                 n += String.fromCharCode(q)             }             q = n;             n = null;             E.hasOwnProperty(d) ? (n = E[d], n.P(), n.s = n.x, n.t = n.y, n.r = n.size, n.color = h) :                 (n = new da(d, p, g, f, h, q), v.push(n), E[d] = n, n.ua = p, n.va = g);             n.h = m;             n.n = r;             n.J = p;             n.K = g;             n.q = f;             n.sa = c;             n.Q = C;             n.ba = w;             q && n.B(q); - 1 != M.indexOf(d) && -1 == k.indexOf(n) && (document.getElementById(""overlays"").style.display = ""none"", k.push(n), n.birth = getLastUpdate(), n.birthMass = (n.size * n.size / 100), 1 == k.length && (s = n.x, t = n.y, db()))              //UPDATE             interNodes[d] = window.getCells()[d];         }          //UPDATE         Object.keys(interNodes).forEach(function(element, index) {             //console.log(""start: "" + interNodes[element].updateTime + "" current: "" + D + "" life: "" + (D - interNodes[element].updateTime));             var isRemoved = !window.getCells().hasOwnProperty(element);              //console.log(""Time not updated: "" + (window.getLastUpdate() - interNodes[element].getUptimeTime()));             if (isRemoved && (window.getLastUpdate() - interNodes[element].getUptimeTime()) > 3000) {                 delete interNodes[element];             } else {                 for (var i = 0; i < getPlayer().length; i++) {                     if (isRemoved && computeDistance(getPlayer()[i].x, getPlayer()[i].y, interNodes[element].x, interNodes[element].y) < getPlayer()[i].size + 710) {                          delete interNodes[element];                         break;                     }                 }             }         });          c = a.getUint32(b, !0);         b += 4;         for (u = 0; u < c; u++) d = a.getUint32(b, !0), b += 4, n = E[d], null != n && n.X();         //UPDATE         //Ha && 0 == k.length && Sa(!1)     }      //UPDATE     function computeDistance(x1, y1, x2, y2) {         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis);          return distance;     }      /**      * Some horse shit of some sort.      * @return Horse Shit      */     function screenDistance() {         return Math.min(computeDistance(getOffsetX(), getOffsetY(), screenToGameX(getWidth()), getOffsetY()), computeDistance(getOffsetX(), getOffsetY(), getOffsetX(), screenToGameY(getHeight())));     }      window.verticalDistance = function() {         return computeDistance(screenToGameX(0), screenToGameY(0), screenToGameX(getWidth()), screenToGameY(getHeight()));     }      /**      * A conversion from the screen\'s horizontal coordinate system      * to the game\'s horizontal coordinate system.      * @param x in the screen\'s coordinate system      * @return x in the game\'s coordinate system      */     window.screenToGameX = function(x) {         return (x - getWidth() / 2) / getRatio() + getX();     }      /**      * A conversion from the screen\'s vertical coordinate system      * to the game\'s vertical coordinate system.      * @param y in the screen\'s coordinate system      * @return y in the game\'s coordinate system      */     window.screenToGameY = function(y) {         return (y - getHeight() / 2) / getRatio() + getY();     }      window.drawPoint = function(x_1, y_1, drawColor, text) {         if (!toggleDraw) {             dPoints.push([x_1, y_1, drawColor]);             dText.push(text);         }     }      window.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {         if (!toggleDraw) {             var radius = computeDistance(x_1, y_1, x_3, y_3);             dArc.push([x_1, y_1, x_2, y_2, x_3, y_3, radius, drawColor]);         }     }      window.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {         if (!toggleDraw) {             lines.push([x_1, y_1, x_2, y_2, drawColor]);         }     }      window.drawCircle = function(x_1, y_1, radius, drawColor) {         if (!toggleDraw) {             circles.push([x_1, y_1, radius, drawColor]);         }     }      function V() {          //UPDATE         if (getPlayer().length == 0 && !reviving && ~~(getCurrentScore() / 100) > 0) {             console.log(""Dead: "" + ~~(getCurrentScore() / 100));             apos(\'send\', \'pageview\');         }          if (getPlayer().length == 0) {             console.log(""Revive"");             setNick(originalName);             reviving = true;         } else if (getPlayer().length > 0 && reviving) {             reviving = false;             console.log(""Done Reviving!"");         }          if (T()) {             var a = fa - m / 2;             var b = ga - r / 2;             64 > a * a + b * b || .01 > Math.abs(eb - ia) &&                 .01 > Math.abs(fb - ja) || (eb = ia, fb = ja, a = N(13), a.setUint8(0, 16), a.setInt32(1, ia, !0), a.setInt32(5, ja, !0), a.setUint32(9, 0, !0), O(a))         }     }      function cb() {         if (T() && $ && null != K) {             var a = N(1 + 2 * K.length);             a.setUint8(0, 0);             for (var b = 0; b < K.length; ++b) a.setUint16(1 + 2 * b, K.charCodeAt(b), !0);             O(a)         }     }      function T() {         return null != q && q.readyState == q.OPEN     }      window.opCode = function(a) {         console.log(""Sending op code."");         H(parseInt(a));     }      function H(a) {         if (T()) {             var b = N(1);             b.setUint8(0, a);             O(b)         }     }      function $a() {         if (T() && null != B) {             var a = N(1 + B.length);             a.setUint8(0, 81);             for (var b = 0; b < B.length; ++b) a.setUint8(b + 1, B.charCodeAt(b));             O(a)         }     }      function Ta() {         m = d.innerWidth;         r = d.innerHeight;         za.width = G.width = m;         za.height = G.height = r;         var a = e(""#helloContainer"");         a.css(""transform"", ""none"");         var b = a.height(),             c = d.innerHeight;         b > c / 1.1 ? a.css(""transform"", ""translate(-50%, -50%) scale("" + c / b / 1.1 + "")"") : a.css(""transform"", ""translate(-50%, -50%)"");         gb()     }      function hb() {         var a;         a = Math.max(r / 1080, m / 1920);         return a *= J     }      function yb() {         if (0 != k.length) {             for (var a = 0, b = 0; b < k.length; b++) a += k[b].size;             a = Math.pow(Math.min(64 / a, 1), .4) * hb();             h = (9 * h + a) / 10         }     }      function gb() {         //UPDATE         dPoints = [];         circles = [];         dArc = [];         dText = [];         lines = [];           var a, b = Date.now();         ++zb;         C = b;         if (0 < k.length) {             yb();             for (var c = a = 0, d = 0; d < k.length; d++) k[d].P(), a += k[d].x / k.length, c += k[d].y / k.length;             aa = a;             ba = c;             ca = h;             s = (s + a) / 2;             t = (t + c) / 2;         } else s = (29 * s + aa) / 30, t = (29 * t + ba) / 30, h = (9 * h + ca * hb()) / 10;         qb();         Aa();         Ia || f.clearRect(0, 0, m, r);         Ia ? (f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"", f.globalAlpha = .05, f.fillRect(0, 0, m, r), f.globalAlpha = 1) : Ab();         v.sort(function(a, b) {             return a.size == b.size ? a.id - b.id : a.size - b.size         });         f.save();         f.translate(m / 2, r / 2);         f.scale(h, h);         f.translate(-s, -t);         //UPDATE         f.save();         f.beginPath();         f.lineWidth = 5;         f.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapStartX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapStartY());         f.lineTo(getMapEndX(), getMapStartY());         f.stroke();         f.moveTo(getMapEndX(), getMapStartY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.moveTo(getMapStartX(), getMapEndY());         f.lineTo(getMapEndX(), getMapEndY());         f.stroke();         f.restore();          for (d = 0; d < v.length; d++) v[d].w(f);         for (d = 0; d < Q.length; d++) Q[d].w(f);         //UPDATE         if (getPlayer().length > 0) {             var moveLoc = window.botList[botIndex].mainLoop();             if (!toggle) {                 setPoint(moveLoc[0], moveLoc[1]);             }         }         customRender(f);         if (Ga) {             na = (3 * na + Ea) / 4;             oa = (3 * oa + Fa) / 4;             f.save();             f.strokeStyle = ""#FFAAAA"";             f.lineWidth = 10;             f.lineCap = ""round"";             f.lineJoin = ""round"";             f.globalAlpha = .5;             f.beginPath();             for (d = 0; d < k.length; d++) f.moveTo(k[d].x, k[d].y), f.lineTo(na, oa);             f.stroke();             f.restore();         }         f.restore();         z && z.width && f.drawImage(z, m - z.width - 10, 10);         R = Math.max(R, Bb());          //UPDATE          var currentDate = new Date();          var nbSeconds = 0;         if (getPlayer().length > 0) {             //nbSeconds = currentDate.getSeconds() + currentDate.getMinutes() * 60 + currentDate.getHours() * 3600 - lifeTimer.getSeconds() - lifeTimer.getMinutes() * 60 - lifeTimer.getHours() * 3600;             nbSeconds = (currentDate.getTime() - lifeTimer.getTime()) / 1000;         }          bestTime = Math.max(nbSeconds, bestTime);          var displayText = \'Score: \' + ~~(R / 100) + "" Current Time: "" + nbSeconds + "" seconds."";          0 != R && (null == ua && (ua = new va(24, ""#FFFFFF"")), ua.C(displayText), c = ua.L(), a = c.width, f.globalAlpha = .2, f.fillStyle = ""#000000"", f.fillRect(10, r - 10 - 24 - 10, a + 10, 34), f.globalAlpha = 1, f.drawImage(c, 15, r -             10 - 24 - 5));         Cb();         b = Date.now() - b;         b > 1E3 / 60 ? D -= .01 : b < 1E3 / 65 && (D += .01);.4 > D && (D = .4);         1 < D && (D = 1);         b = C - ib;         !T() || W ? (x += b / 2E3, 1 < x && (x = 1)) : (x -= b / 300, 0 > x && (x = 0));         0 < x && (f.fillStyle = ""#000000"", f.globalAlpha = .5 * x, f.fillRect(0, 0, m, r), f.globalAlpha = 1);         ib = C          drawStats(f);     }      //UPDATE     function customRender(d) {         d.save();         for (var i = 0; i < lines.length; i++) {             d.beginPath();              d.lineWidth = 5;              if (lines[i][4] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (lines[i][4] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (lines[i][4] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (lines[i][4] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (lines[i][4] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (lines[i][4] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (lines[i][4] == 6) {                 d.strokeStyle = ""#008080"";             } else if (lines[i][4] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.moveTo(lines[i][0], lines[i][1]);             d.lineTo(lines[i][2], lines[i][3]);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < circles.length; i++) {             if (circles[i][3] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (circles[i][3] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (circles[i][3] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (circles[i][3] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (circles[i][3] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (circles[i][3] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (circles[i][3] == 6) {                 d.strokeStyle = ""#008080"";             } else if (circles[i][3] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }             d.beginPath();              d.lineWidth = 10;             //d.setLineDash([5]);             d.globalAlpha = 0.3;              d.arc(circles[i][0], circles[i][1], circles[i][2], 0, 2 * Math.PI, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dArc.length; i++) {             if (dArc[i][7] == 0) {                 d.strokeStyle = ""#FF0000"";             } else if (dArc[i][7] == 1) {                 d.strokeStyle = ""#00FF00"";             } else if (dArc[i][7] == 2) {                 d.strokeStyle = ""#0000FF"";             } else if (dArc[i][7] == 3) {                 d.strokeStyle = ""#FF8000"";             } else if (dArc[i][7] == 4) {                 d.strokeStyle = ""#8A2BE2"";             } else if (dArc[i][7] == 5) {                 d.strokeStyle = ""#FF69B4"";             } else if (dArc[i][7] == 6) {                 d.strokeStyle = ""#008080"";             } else if (dArc[i][7] == 7) {                 d.strokeStyle = (getDarkBool() ? \'#F2FBFF\' : \'#111111\');             } else {                 d.strokeStyle = ""#000000"";             }              d.beginPath();              d.lineWidth = 5;              var ang1 = Math.atan2(dArc[i][1] - dArc[i][5], dArc[i][0] - dArc[i][4]);             var ang2 = Math.atan2(dArc[i][3] - dArc[i][5], dArc[i][2] - dArc[i][4]);              d.arc(dArc[i][4], dArc[i][5], dArc[i][6], ang1, ang2, false);              d.stroke();         }         d.restore();         d.save();         for (var i = 0; i < dPoints.length; i++) {             if (dText[i] == """") {                 var radius = 10;                  d.beginPath();                 d.arc(dPoints[i][0], dPoints[i][1], radius, 0, 2 * Math.PI, false);                  if (dPoints[i][2] == 0) {                     d.fillStyle = ""black"";                 } else if (dPoints[i][2] == 1) {                     d.fillStyle = ""yellow"";                 } else if (dPoints[i][2] == 2) {                     d.fillStyle = ""blue"";                 } else if (dPoints[i][2] == 3) {                     d.fillStyle = ""red"";                 } else if (dPoints[i][2] == 4) {                     d.fillStyle = ""#008080"";                 } else if (dPoints[i][2] == 5) {                     d.fillStyle = ""#FF69B4"";                 } else {                     d.fillStyle = ""#000000"";                 }                  d.fill();                 d.lineWidth = 2;                 d.strokeStyle = \'#003300\';                 d.stroke();             } else {                 var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'), true, (getDarkBool() ? \'#111111\' : \'#F2FBFF\'));                  text.C(dText[i]);                 var textRender = text.L();                 d.drawImage(textRender, dPoints[i][0] - (textRender.width / 2), dPoints[i][1] - (textRender.height / 2));             }          }         d.restore();     }      function drawStats(d) {         d.save()          sessionScore = Math.max(getCurrentScore(), sessionScore);          var botString = window.botList[botIndex].displayText();          var debugStrings = [];         debugStrings.push(""Bot: "" + window.botList[botIndex].name);         debugStrings.push(""Launcher: AposLauncher "" + aposLauncherVersion);         debugStrings.push(""T - Bot: "" + (!toggle ? ""On"" : ""Off""));         debugStrings.push(""R - Lines: "" + (!toggleDraw ? ""On"" : ""Off""));          for (var i = 0; i < botString.length; i++) {             debugStrings.push(botString[i]);         }          debugStrings.push("""");         debugStrings.push(""Best Score: "" + ~~(sessionScore / 100));         debugStrings.push(""Best Time: "" + bestTime + "" seconds"");         debugStrings.push("""");         debugStrings.push(serverIP);          if (getPlayer().length > 0) {             var offsetX = -getMapStartX();             var offsetY = -getMapStartY();             debugStrings.push(""Location: "" + Math.floor(getPlayer()[0].x + offsetX) + "", "" + Math.floor(getPlayer()[0].y + offsetY));         }          var offsetValue = 20;         var text = new va(18, (getDarkBool() ? \'#F2FBFF\' : \'#111111\'));          for (var i = 0; i < debugStrings.length; i++) {             text.C(debugStrings[i]);             var textRender = text.L();             d.drawImage(textRender, 20, offsetValue);             offsetValue += textRender.height;         }          if (message.length > 0) {             var mRender = [];             var mWidth = 0;             var mHeight = 0;              for (var i = 0; i < message.length; i++) {                 var mText = new va(28, \'#FF0000\', true, \'#000000\');                 mText.C(message[i]);                 mRender.push(mText.L());                  if (mRender[i].width > mWidth) {                     mWidth = mRender[i].width;                 }                 mHeight += mRender[i].height;             }              var mX = getWidth() / 2 - mWidth / 2;             var mY = 20;              d.globalAlpha = 0.4;             d.fillStyle = \'#000000\';             d.fillRect(mX - 10, mY - 10, mWidth + 20, mHeight + 20);             d.globalAlpha = 1;              var mOffset = mY;             for (var i = 0; i < mRender.length; i++) {                 d.drawImage(mRender[i], getWidth() / 2 - mRender[i].width / 2, mOffset);                 mOffset += mRender[i].height;             }         }          d.restore();     }      function Ab() {         f.fillStyle = ta ? ""#111111"" : ""#F2FBFF"";         f.fillRect(0, 0, m, r);         f.save();         f.strokeStyle = ta ? ""#AAAAAA"" : ""#000000"";         f.globalAlpha = .2 * h;         for (var a = m / h, b = r / h, c = (a / 2 - s) % 50; c < a; c += 50) f.beginPath(), f.moveTo(c * h - .5, 0), f.lineTo(c * h - .5, b * h), f.stroke();         for (c = (b / 2 - t) % 50; c < b; c += 50) f.beginPath(), f.moveTo(0, c * h - .5), f.lineTo(a * h, c * h - .5), f.stroke();         f.restore()     }      function Cb() {         if (Qa && Ja.width) {             var a = m / 5;             f.drawImage(Ja, 5, 5, a, a)         }     }      function Bb() {         for (var a = 0, b = 0; b < k.length; b++) a += k[b].q * k[b].q;         return a     }      function ab() {         z = null;         if (null != A || 0 != F.length)             if (null != A || wa) {                 z = document.createElement(""canvas"");                 var a = z.getContext(""2d""),                     b = 60,                     b = null == A ? b + 24 * F.length : b + 180,                     c = Math.min(200, .3 * m) / 200;                 z.width = 200 * c;                 z.height = b * c;                 a.scale(c, c);                 a.globalAlpha = .4;                 a.fillStyle = ""#000000"";                 a.fillRect(0, 0, 200, b);                 a.globalAlpha =                     1;                 a.fillStyle = ""#FFFFFF"";                 c = null;                 c = Z(""leaderboard"");                 a.font = ""30px Ubuntu"";                 a.fillText(c, 100 - a.measureText(c).width / 2, 40);                 if (null == A)                     for (a.font = ""20px Ubuntu"", b = 0; b < F.length; ++b) c = F[b].name || Z(""unnamed_cell""), wa || (c = Z(""unnamed_cell"")), -1 != M.indexOf(F[b].id) ? (k[0].name && (c = k[0].name), a.fillStyle = ""#FFAAAA"") : a.fillStyle = ""#FFFFFF"", c = b + 1 + "". "" + c, a.fillText(c, 100 - a.measureText(c).width / 2, 70 + 24 * b);                 else                     for (b = c = 0; b < A.length; ++b) {                         var d = c + A[b] * Math.PI * 2;                         a.fillStyle = Db[b + 1];                         a.beginPath();                         a.moveTo(100, 140);                         a.arc(100,                             140, 80, c, d, !1);                         a.fill();                         c = d                     }             }     }      function Ka(a, b, c, d, e) {         this.V = a;         this.x = b;         this.y = c;         this.i = d;         this.b = e     }      function da(a, b, c, d, e, p) {         this.id = a;         this.s = this.x = b;         this.t = this.y = c;         this.r = this.size = d;         this.color = e;         this.a = [];         this.W();         this.B(p)     }      function va(a, b, c, d) {         a && (this.u = a);         b && (this.S = b);         this.U = !!c;         d && (this.v = d)     }      function S(a, b) {         var c = ""1"" == e(""#helloContainer"").attr(""data-has-account-data"");         e(""#helloContainer"").attr(""data-has-account-data"", ""1"");         if (null == b && d.localStorage.loginCache) {             var l = JSON.parse(d.localStorage.loginCache);             l.f = a.f;             l.d = a.d;             l.e = a.e;             d.localStorage.loginCache = JSON.stringify(l)         }         if (c) {             var u = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[0],                 c = +e("".agario-exp-bar .progress-bar-text"").first().text().split(""/"")[1].split("" "")[0],                 l = e("".agario-profile-panel .progress-bar-star"").first().text();             if (l != a.e) S({                 f: c,                 d: c,                 e: l             }, function() {                 e("".agario-profile-panel .progress-bar-star"").text(a.e);                 e("".agario-exp-bar .progress-bar"").css(""width"", ""100%"");                 e("".progress-bar-star"").addClass(""animated tada"").one(""webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend"",                     function() {                         e("".progress-bar-star"").removeClass(""animated tada"")                     });                 setTimeout(function() {                     e("".agario-exp-bar .progress-bar-text"").text(a.d + ""/"" + a.d + "" XP"");                     S({                         f: 0,                         d: a.d,                         e: a.e                     }, function() {                         S(a, b)                     })                 }, 1E3)             });             else {                 var p = Date.now(),                     g = function() {                         var c;                         c = (Date.now() - p) / 1E3;                         c = 0 > c ? 0 : 1 < c ? 1 : c;                         c = c * c * (3 - 2 * c);                         e("".agario-exp-bar .progress-bar-text"").text(~~(u + (a.f - u) * c) + ""/"" + a.d + "" XP"");                         e("".agario-exp-bar .progress-bar"").css(""width"", (88 * (u + (a.f - u) * c) / a.d).toFixed(2) + ""%"");                         1 > c ? d.requestAnimationFrame(g) : b && b()                     };                 d.requestAnimationFrame(g)              }         } else e("".agario-profile-panel .progress-bar-star"").text(a.e),             e("".agario-exp-bar .progress-bar-text"").text(a.f + ""/"" + a.d + "" XP""), e("".agario-exp-bar .progress-bar"").css(""width"", (88 * a.f / a.d).toFixed(2) + ""%""), b && b()      }      function jb(a) {         ""string"" == typeof a && (a = JSON.parse(a));         Date.now() + 18E5 > a.ja ? e(""#helloContainer"").attr(""data-logged-in"", ""0"") : (d.localStorage.loginCache = JSON.stringify(a), B = a.fa, e("".agario-profile-name"").text(a.name), $a(), S({             f: a.f,             d: a.d,             e: a.e         }), e(""#helloContainer"").attr(""data-logged-in"", ""1""))     }      function Eb(a) {         a = a.split(""\\n"");         jb({             name: a[0],             ta: a[1],             fa: a[2],             ja: 1E3 *                 +a[3],             e: +a[4],             f: +a[5],             d: +a[6]         });         console.log(""Hello Facebook?"");     }      function La(a) {         if (""connected"" == a.status) {             var b = a.authResponse.accessToken;             d.FB.api(""/me/picture?width=180&height=180"", function(a) {                 d.localStorage.fbPictureCache = a.data.url;                 e("".agario-profile-picture"").attr(""src"", a.data.url)             });             e(""#helloContainer"").attr(""data-logged-in"", ""1"");             null != B ? e.ajax(""https://m.agar.io/checkToken"", {                 error: function() {                     console.log(""Facebook Fail!"");                     B = null;                     La(a)                 },                 success: function(a) {                     a = a.split(""\\n"");                     S({                         e: +a[0],                         f: +a[1],                         d: +a[2]                     });                     console.log(""Facebook connected!"");                 },                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: B             }) : e.ajax(""https://m.agar.io/facebookLogin"", {                 error: function() {                     console.log(""You have a Facebook problem!"");                     B = null;                     e(""#helloContainer"").attr(""data-logged-in"", ""0"")                 },                 success: Eb,                 dataType: ""text"",                 method: ""POST"",                 cache: !1,                 crossDomain: !0,                 data: b             })         }     }      function Wa(a) {         Y("":party"");         e(""#helloContainer"").attr(""data-party-state"", ""4"");         a = decodeURIComponent(a).replace(/.*#/gim, """");         Ma(""#"" + d.encodeURIComponent(a));         e.ajax(Na + ""//m.agar.io/getToken"", {             error: function() {                 e(""#helloContainer"").attr(""data-party-state"", ""6"")             },             success: function(b) {                 b = b.split(""\\n"");                 e("".partyToken"").val(""agar.io/#"" +                     d.encodeURIComponent(a));                 e(""#helloContainer"").attr(""data-party-state"", ""5"");                 Y("":party"");                 Ca(""ws://"" + b[0], a)             },             dataType: ""text"",             method: ""POST"",             cache: !1,             crossDomain: !0,             data: a         })     }      function Ma(a) {         d.history && d.history.replaceState && d.history.replaceState({}, d.document.title, a)     }     if (!d.agarioNoInit) {         var Na = d.location.protocol,             tb = ""https:"" == Na,             xa = d.navigator.userAgent;         if (-1 != xa.indexOf(""Android"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""PlayStore""), setTimeout(function() {                 d.location.href = ""market://details?id=com.miniclip.agar.io""             },             1E3);         else if (-1 != xa.indexOf(""iPhone"") || -1 != xa.indexOf(""iPad"") || -1 != xa.indexOf(""iPod"")) d.ga && d.ga(""send"", ""event"", ""MobileRedirect"", ""AppStore""), setTimeout(function() {             d.location.href = ""https://itunes.apple.com/app/agar.io/id995999703""         }, 1E3);         else {             var za, f, G, m, r, X = null,                  //UPDATE                 toggle = false,                 toggleDraw = false,                 tempPoint = [0, 0, 1],                 dPoints = [],                 circles = [],                 dArc = [],                 dText = [],                 lines = [],                 names = [""NotReallyABot""],                 originalName = names[Math.floor(Math.random() * names.length)],                 sessionScore = 0,                 serverIP = """",                 interNodes = [],                 lifeTimer = new Date(),                 bestTime = 0,                 botIndex = 0,                 reviving = false,                 message = [],                  q = null,                 s = 0,                 t = 0,                 M = [],                 k = [],                 E = {},                 v = [],                 Q = [],                 F = [],                 fa = 0,                 ga = 0,                  //UPDATE                 ia = -1,                 ja = -1,                  zb = 0,                 C = 0,                 ib = 0,                 K = null,                 pa = 0,                 qa = 0,                 ra = 1E4,                 sa = 1E4,                 h = 1,                 y = null,                 kb = !0,                 wa = !0,                 Oa = !1,                 Ha = !1,                 R = 0,                 ta = !1,                 lb = !1,                 aa = s = ~~((pa + ra) / 2),                 ba = t = ~~((qa + sa) / 2),                 ca = 1,                 P = """",                 A = null,                 ya = !1,                 Ga = !1,                 Ea = 0,                 Fa =                 0,                 na = 0,                 oa = 0,                 mb = 0,                 Db = [""#333333"", ""#FF3333"", ""#33FF33"", ""#3333FF""],                 Ia = !1,                 $ = !1,                 bb = 0,                 B = null,                 J = 1,                 x = 1,                 W = !0,                 Ba = 0,                 Da = {};             (function() {                 var a = d.location.search;                 ""?"" == a.charAt(0) && (a = a.slice(1));                 for (var a = a.split(""&""), b = 0; b < a.length; b++) {                     var c = a[b].split(""="");                     Da[c[0]] = c[1]                 }             })();             var Qa = ""ontouchstart"" in d && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(d.navigator.userAgent),                 Ja = new Image;             Ja.src = ""img/split.png"";             var nb = document.createElement(""canvas"");             if (""undefined"" == typeof console || ""undefined"" ==                 typeof DataView || ""undefined"" == typeof WebSocket || null == nb || null == nb.getContext || null == d.localStorage) alert(""You browser does not support this game, we recommend you to use Firefox to play this"");             else {                 var ka = null;                 d.setNick = function(a) {                     //UPDATE                     originalName = a;                     if (getPlayer().length == 0) {                         lifeTimer = new Date();                     }                      Xa();                     K = a;                     cb();                     R = 0                 };                 d.setRegion = ha;                 d.setSkins = function(a) {                     kb = a                 };                 d.setNames = function(a) {                     wa = a                 };                 d.setDarkTheme = function(a) {                     ta = a                 };                 d.setColors = function(a) {                     Oa = a                 };                 d.setShowMass = function(a) {                     lb = a                 };                 d.spectate = function() {                     K = null;                     H(1);                     Xa()                 };                 d.setGameMode = function(a) {                     a != P && ("":party"" ==                         P && e(""#helloContainer"").attr(""data-party-state"", ""0""), Y(a), "":party"" != a && I())                 };                 d.setAcid = function(a) {                     Ia = a                 };                 null != d.localStorage && (null == d.localStorage.AB9 && (d.localStorage.AB9 = 0 + ~~(100 * Math.random())), mb = +d.localStorage.AB9, d.ABGroup = mb);                 e.get(Na + ""//gc.agar.io"", function(a) {                     var b = a.split("" "");                     a = b[0];                     b = b[1] || """"; - 1 == [""UA""].indexOf(a) && ob.push(""ussr"");                     ea.hasOwnProperty(a) && (""string"" == typeof ea[a] ? y || ha(ea[a]) : ea[a].hasOwnProperty(b) && (y || ha(ea[a][b])))                 }, ""text"");                 d.ga && d.ga(""send"", ""event"", ""User-Agent"", d.navigator.userAgent, {                     nonInteraction: 1                 });                 var la = !1,                     Ya = 0;                 setTimeout(function() {                     la = !0                 }, Math.max(6E4 * Ya, 1E4));                 var ea = {                         AF: ""JP-Tokyo"",                         AX: ""EU-London"",                         AL: ""EU-London"",                         DZ: ""EU-London"",                         AS: ""SG-Singapore"",                         AD: ""EU-London"",                         AO: ""EU-London"",                         AI: ""US-Atlanta"",                         AG: ""US-Atlanta"",                         AR: ""BR-Brazil"",                         AM: ""JP-Tokyo"",                         AW: ""US-Atlanta"",                         AU: ""SG-Singapore"",                         AT: ""EU-London"",                         AZ: ""JP-Tokyo"",                         BS: ""US-Atlanta"",                         BH: ""JP-Tokyo"",                         BD: ""JP-Tokyo"",                         BB: ""US-Atlanta"",                         BY: ""EU-London"",                         BE: ""EU-London"",                         BZ: ""US-Atlanta"",                         BJ: ""EU-London"",                         BM: ""US-Atlanta"",                         BT: ""JP-Tokyo"",                         BO: ""BR-Brazil"",                         BQ: ""US-Atlanta"",                         BA: ""EU-London"",                         BW: ""EU-London"",                         BR: ""BR-Brazil"",                         IO: ""JP-Tokyo"",                         VG: ""US-Atlanta"",                         BN: ""JP-Tokyo"",                         BG: ""EU-London"",                         BF: ""EU-London"",                         BI: ""EU-London"",                         KH: ""JP-Tokyo"",                         CM: ""EU-London"",                         CA: ""US-Atlanta"",                         CV: ""EU-London"",                         KY: ""US-Atlanta"",                         CF: ""EU-London"",                         TD: ""EU-London"",                         CL: ""BR-Brazil"",                         CN: ""CN-China"",                         CX: ""JP-Tokyo"",                         CC: ""JP-Tokyo"",                         CO: ""BR-Brazil"",                         KM: ""EU-London"",                         CD: ""EU-London"",                         CG: ""EU-London"",                         CK: ""SG-Singapore"",                         CR: ""US-Atlanta"",                         CI: ""EU-London"",                         HR: ""EU-London"",                         CU: ""US-Atlanta"",                         CW: ""US-Atlanta"",                         CY: ""JP-Tokyo"",                         CZ: ""EU-London"",                         DK: ""EU-London"",                         DJ: ""EU-London"",                         DM: ""US-Atlanta"",                         DO: ""US-Atlanta"",                         EC: ""BR-Brazil"",                         EG: ""EU-London"",                         SV: ""US-Atlanta"",                         GQ: ""EU-London"",                         ER: ""EU-London"",                         EE: ""EU-London"",                         ET: ""EU-London"",                         FO: ""EU-London"",                         FK: ""BR-Brazil"",                         FJ: ""SG-Singapore"",                         FI: ""EU-London"",                         FR: ""EU-London"",                         GF: ""BR-Brazil"",                         PF: ""SG-Singapore"",                         GA: ""EU-London"",                         GM: ""EU-London"",                         GE: ""JP-Tokyo"",                         DE: ""EU-London"",                         GH: ""EU-London"",                         GI: ""EU-London"",                         GR: ""EU-London"",                         GL: ""US-Atlanta"",                         GD: ""US-Atlanta"",                         GP: ""US-Atlanta"",                         GU: ""SG-Singapore"",                         GT: ""US-Atlanta"",                         GG: ""EU-London"",                         GN: ""EU-London"",                         GW: ""EU-London"",                         GY: ""BR-Brazil"",                         HT: ""US-Atlanta"",                         VA: ""EU-London"",                         HN: ""US-Atlanta"",                         HK: ""JP-Tokyo"",                         HU: ""EU-London"",                         IS: ""EU-London"",                         IN: ""JP-Tokyo"",                         ID: ""JP-Tokyo"",                         IR: ""JP-Tokyo"",                         IQ: ""JP-Tokyo"",                         IE: ""EU-London"",                         IM: ""EU-London"",                         IL: ""JP-Tokyo"",                         IT: ""EU-London"",                         JM: ""US-Atlanta"",                         JP: ""JP-Tokyo"",                         JE: ""EU-London"",                         JO: ""JP-Tokyo"",                         KZ: ""JP-Tokyo"",                         KE: ""EU-London"",                         KI: ""SG-Singapore"",                         KP: ""JP-Tokyo"",                         KR: ""JP-Tokyo"",                         KW: ""JP-Tokyo"",                         KG: ""JP-Tokyo"",                         LA: ""JP-Tokyo"",                         LV: ""EU-London"",                         LB: ""JP-Tokyo"",                         LS: ""EU-London"",                         LR: ""EU-London"",                         LY: ""EU-London"",                         LI: ""EU-London"",                         LT: ""EU-London"",                         LU: ""EU-London"",                         MO: ""JP-Tokyo"",                         MK: ""EU-London"",                         MG: ""EU-London"",                         MW: ""EU-London"",                         MY: ""JP-Tokyo"",                         MV: ""JP-Tokyo"",                         ML: ""EU-London"",                         MT: ""EU-London"",                         MH: ""SG-Singapore"",                         MQ: ""US-Atlanta"",                         MR: ""EU-London"",                         MU: ""EU-London"",                         YT: ""EU-London"",                         MX: ""US-Atlanta"",                         FM: ""SG-Singapore"",                         MD: ""EU-London"",                         MC: ""EU-London"",                         MN: ""JP-Tokyo"",                         ME: ""EU-London"",                         MS: ""US-Atlanta"",                         MA: ""EU-London"",                         MZ: ""EU-London"",                         MM: ""JP-Tokyo"",                         NA: ""EU-London"",                         NR: ""SG-Singapore"",                         NP: ""JP-Tokyo"",                         NL: ""EU-London"",                         NC: ""SG-Singapore"",                         NZ: ""SG-Singapore"",                         NI: ""US-Atlanta"",                         NE: ""EU-London"",                         NG: ""EU-London"",                         NU: ""SG-Singapore"",                         NF: ""SG-Singapore"",                         MP: ""SG-Singapore"",                         NO: ""EU-London"",                         OM: ""JP-Tokyo"",                         PK: ""JP-Tokyo"",                         PW: ""SG-Singapore"",                         PS: ""JP-Tokyo"",                         PA: ""US-Atlanta"",                         PG: ""SG-Singapore"",                         PY: ""BR-Brazil"",                         PE: ""BR-Brazil"",                         PH: ""JP-Tokyo"",                         PN: ""SG-Singapore"",                         PL: ""EU-London"",                         PT: ""EU-London"",                         PR: ""US-Atlanta"",                         QA: ""JP-Tokyo"",                         RE: ""EU-London"",                         RO: ""EU-London"",                         RU: ""RU-Russia"",                         RW: ""EU-London"",                         BL: ""US-Atlanta"",                         SH: ""EU-London"",                         KN: ""US-Atlanta"",                         LC: ""US-Atlanta"",                         MF: ""US-Atlanta"",                         PM: ""US-Atlanta"",                         VC: ""US-Atlanta"",                         WS: ""SG-Singapore"",                         SM: ""EU-London"",                         ST: ""EU-London"",                         SA: ""EU-London"",                         SN: ""EU-London"",                         RS: ""EU-London"",                         SC: ""EU-London"",                         SL: ""EU-London"",                         SG: ""JP-Tokyo"",                         SX: ""US-Atlanta"",                         SK: ""EU-London"",                         SI: ""EU-London"",                         SB: ""SG-Singapore"",                         SO: ""EU-London"",                         ZA: ""EU-London"",                         SS: ""EU-London"",                         ES: ""EU-London"",                         LK: ""JP-Tokyo"",                         SD: ""EU-London"",                         SR: ""BR-Brazil"",                         SJ: ""EU-London"",                         SZ: ""EU-London"",                         SE: ""EU-London"",                         CH: ""EU-London"",                         SY: ""EU-London"",                         TW: ""JP-Tokyo"",                         TJ: ""JP-Tokyo"",                         TZ: ""EU-London"",                         TH: ""JP-Tokyo"",                         TL: ""JP-Tokyo"",                         TG: ""EU-London"",                         TK: ""SG-Singapore"",                         TO: ""SG-Singapore"",                         TT: ""US-Atlanta"",                         TN: ""EU-London"",                         TR: ""TK-Turkey"",                         TM: ""JP-Tokyo"",                         TC: ""US-Atlanta"",                         TV: ""SG-Singapore"",                         UG: ""EU-London"",                         UA: ""EU-London"",                         AE: ""EU-London"",                         GB: ""EU-London"",                         US: ""US-Atlanta"",                         UM: ""SG-Singapore"",                         VI: ""US-Atlanta"",                         UY: ""BR-Brazil"",                         UZ: ""JP-Tokyo"",                         VU: ""SG-Singapore"",                         VE: ""BR-Brazil"",                         VN: ""JP-Tokyo"",                         WF: ""SG-Singapore"",                         EH: ""EU-London"",                         YE: ""JP-Tokyo"",                         ZM: ""EU-London"",                         ZW: ""EU-London""                     },                     L = null;                 d.connect = Ca;                  //UPDATE                 /**                  * Tells you if the game is in Dark mode.                  * @return Boolean for dark mode.                  */                 window.getDarkBool = function() {                     return ta;                 }                  /**                  * Tells you if the mass is shown.                  * @return Boolean for player\'s mass.                  */                 window.getMassBool = function() {                     return lb;                 }                  /**                  * This is a copy of everything that is shown on screen.                  * Normally stuff will time out when off the screen, this                  * memorizes everything that leaves the screen for a little                  * while longer.                  * @return The memory object.                  */                 window.getMemoryCells = function() {                     return interNodes;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCellsArray = function() {                     return v;                 }                  /**                  * [getCellsArray description]                  * @return {[type]} [description]                  */                 window.getCells = function() {                     return E;                 }                  /**                  * Returns an array with all the player\'s cells.                  * @return Player\'s cells                  */                 window.getPlayer = function() {                     return k;                 }                  /**                  * The canvas\' width.                  * @return Integer Width                  */                 window.getWidth = function() {                     return m;                 }                  /**                  * The canvas\' height                  * @return Integer Height                  */                 window.getHeight = function() {                     return r;                 }                  /**                  * Scaling ratio of the canvas. The bigger this ration,                  * the further that you see.                  * @return Screen scaling ratio.                  */                 window.getRatio = function() {                     return h;                 }                  /**                  * [getOffsetX description]                  * @return {[type]} [description]                  */                 window.getOffsetX = function() {                     return aa;                 }                  window.getOffsetY = function() {                     return ba;                 }                  window.getX = function() {                     return s;                 }                  window.getY = function() {                     return t;                 }                  window.getPointX = function() {                     return ia;                 }                  window.getPointY = function() {                     return ja;                 }                  /**                  * The X location of the mouse.                  * @return Integer X                  */                 window.getMouseX = function() {                     return fa;                 }                  /**                  * The Y location of the mouse.                  * @return Integer Y                  */                 window.getMouseY = function() {                     return ga;                 }                  window.getMapStartX = function() {                     return pa;                 }                  window.getMapStartY = function() {                     return qa;                 }                  window.getMapEndX = function() {                     return ra;                 }                  window.getMapEndY = function() {                     return sa;                 }                  window.getScreenDistance = function() {                     var temp = screenDistance();                     return temp;                 }                  /**                  * A timestamp since the last time the server sent any data.                  * @return Last update timestamp                  */                 window.getLastUpdate = function() {                     return C;                 }                  window.getCurrentScore = function() {                     return R;                 }                  /**                  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")                  * @return {[type]} [description]                  */                 window.getMode = function() {                     return P;                 }                  window.getServer = function() {                     return serverIP;                 }                  window.setPoint = function(x, y) {                     ia = x;                     ja = y;                 }                  window.setScore = function(a) {                     sessionScore = a * 100;                 }                  window.setBestTime = function(a) {                     bestTime = a;                 }                  window.best = function(a, b) {                     setScore(a);                     setBestTime(b);                 }                  window.setBotIndex = function(a) {                     console.log(""Changing bot"");                     botIndex = a;                 }                  window.setMessage = function(a) {                     message = a;                 }                 window.updateBotList = function() {                     window.botList = window.botList || [];                      window.jQuery(\'#locationUnknown\').text("""");                      window.jQuery(\'#locationUnknown\').append(window.jQuery(\'<select id=""bList"" class=""form-control"" onchange=""setBotIndex($(this).val());"" />\'));                     window.jQuery(\'#locationUnknown\').addClass(\'form-group\');                      for (var i = 0; i < w",,3
378,https://github.com/BronzeFlamingos/Pathlete.git,Your fitness journey one step at a time,,2
379,https://github.com/bcgov/rsbc-dmf.git,Driver Medical Fitness (DMF),"ag,pssg",2
380,https://github.com/Randumb/FitnessApp.git,Repository for Fitness App,,2
381,https://github.com/Fit-Genie/fit-genie-site.git,Fitness app,,2
382,https://github.com/AlbMej/AI-Gym-Tracker.git,Fitness Tracking for Sport Enthusiasts ,,2
383,https://github.com/aalexander3/fantasy-fitness-native.git,Fantasy Fitness Native App,,2
384,https://github.com/EpistasisLab/SAFE.git,The SAFE Algorithm: Solution and Fitness Evolution,"evolutionary-algorithms,coevoluton,automation,python",2
385,https://github.com/yjwong/KingOfTheRoad.git,Fitness App for Razer Nabu Challenge.,,2
386,https://github.com/patrickherold/WorkoutBuddies.git,A simple JS app to help keep the fitness fun. ,,2
387,https://github.com/cibiee/Fitness4Me.git,Fitness 4Me  ,,2
388,https://github.com/iosonofabio/HIV_fitness_landscape.git,Analysis of fitness landscape of HIV-1 from longitudinal data,,2
389,https://github.com/harmslab/latticegpm.git,Python package for building fitness landscapes from protein lattice models,,2
390,https://github.com/bcabuddies/fitSteps.git,One step toward fitness,,2
391,https://github.com/kevin-winter/GetFit.git,Workout & Fitness Android App,,2
392,https://github.com/iDeveloper777/Fitness-App-SWIFT.git,Fitness-App-SWIFT,,2
393,https://github.com/marceand/HPIFitness.git,A fitness app that helps you get into better shape by monitoring the distance walked.,,2
394,https://github.com/James-Sarkar/Android-Yoga-App.git,A yoga fitness app for android devices with several different yoga positions.,,2
395,https://github.com/singhtaran1005/fitness-app.git,This is a flutter fitness app.,,2
396,https://github.com/flare9x/FitnessForService.jl.git,API 579 Fitness For Service Methodolgies,,2
397,https://github.com/skysek/FitTime.git,"Fitness IOS App which permits to users to schedule their workout, have a feedback on it, get informations around fitness and much more.","ios,swift,fitness,fitness-app,xcode",2
398,https://github.com/ankit1414/Fitvit.git,Fitvit is an android application focused on the health and fitness of the users.,,2
399,https://github.com/mobilechampion/HealthTrac.git,fitness,,2
400,https://github.com/xipeojeda/FitHub.git,CECS343 Fitness Logger App Semester Long Team Project,,2
401,https://github.com/adriandahlin/fitness.git,an app for logging and viewing my fitness data,,2
402,https://github.com/andela/wg-gnext.git,Self hosted FLOSS fitness/workout and weight tracker written with Django,,2
403,https://github.com/glesica/NKLandscapes.jl.git,A Julia library for working with the NK family of fitness landscapes.,,2
404,https://github.com/spiritedtechie/fitr-app-android.git,"Mobile application for exploring Google Fitness APIs - Android, RxJava, Dagger, MPAndroidChart",,2
405,https://github.com/helto4real/custom_component_myfitnesspal.git,Custom component in Home Assistant for getting fitness datat from MyFitnessPal,,2
406,https://github.com/darthbatman/VirtuaLife.git,:running_shirt_with_sash: Augmented Reality (AR) Heads-Up-Display (HUD) for health and fitness. Developed at PennApps XII (2015) ,,2
407,https://github.com/Snazzythat/ECSE_428_project.git,Fitness Tracker,,2
408,https://github.com/FitSan/ProjetoFitSan.git,Plataforma Fitness,,2
409,https://github.com/lynscott/trufit.app.git,Autonomous Fitness ,,2
410,https://github.com/drexel-ue/track_my_trek.git,Fitness Tracker,,2
411,https://github.com/Georgi051/Gladiators.git,Fitness Application,,2
412,https://github.com/rubayed-dev/Fitness.git,Fitness Website,,2
413,https://github.com/charlesnnanna/TrackFit.git,A fitness web application with a fitness tracker ,,2
414,https://github.com/dianad96/UCL-Active.git,Health/Fitness Mobile Application ,"swift,ios,healthkit,digital,health",2
415,https://github.com/dhruvpatelgeek/NuTri.git,Azure based Fitness app,,2
416,https://github.com/Kayra/thunder.git,Fitness routine timer,,2
417,https://github.com/haslinger/tracker.git,static fitness tracking site,,2
418,https://github.com/punjabideveloper/wordpress-fitness-plugin.git,Wordpress fitness calculators plugin,,2
419,https://github.com/KingAlliance/dongdong.git,Professional fitness software,,2
420,https://github.com/control-fitness/generator-cf-react.git,Control Fitness ReactJS Generator,"yo,yeoman,yeoman-generator,react,reactjs",2
421,https://github.com/oneleif/onefit.git,Fitness Tracker/Logger/Planner,python,2
422,https://github.com/dmcvicar/Life-Savings.git,A New Fitness App,,2
423,https://github.com/kiselev-dv/IntervalTimer.git,Fitness timer for android,android,2
424,https://github.com/stcejorPmodnar/altariel.git,Fitness is litness,,2
425,https://github.com/neighborhoods/KojoFitness.git,Fitness functions for K≈çj≈ç.,,2
426,https://github.com/MxD-lab/TekuGame.git,iOS Fitness RPG,,2
427,https://github.com/jdimatteo/TeamRun.git,multiplayer iphone fitness game,,2
428,https://github.com/unused/bierfit.git,Bier Fitness Tracker,,2
429,https://github.com/felixgyamfi/frontend.git,fitness-app FEND,,2
430,https://github.com/frtug/FitnessCalculator.git,Check your fitness,,2
431,https://github.com/zentech/Trainingtime.git,Android Fitness Application,,2
432,https://github.com/XposedRunner/PhysicalFitnessRunner.git,born for Physical Fitness,,2
433,https://github.com/rhisling/fitness-app.git,Angular fitness app,,2
434,https://github.com/mertkiray/MuscleGenerator.git,Android Fitness Application,,2
435,https://github.com/themegrill/fitclub.git,WordPress theme for fitness,,2
436,https://github.com/elr/fiteoo.git,Online Fitness-Assistent,,2
437,https://github.com/cggvuhh/Gold-Gym.git,Gold-Gym-Fitness,,2
438,https://github.com/thiendangit/social-graphql-laravel-backend.git,Fitness for everyone,,2
439,https://github.com/Matrixuniverses/Citadel-Fitness.git,Citadel Fitness project,,2
440,https://github.com/jaideep/o2.git,spa n fitness,,2
441,https://github.com/mdelaossa/flexbot.git,fitness-centric hubot,,2
442,https://github.com/claireaustin/Hackathon_CanDev2018-10-20.git,Automating data fitness assessment,hackathon,2
443,https://github.com/Internlol/cs326-final-gamma.git,326 fitness scheduling app ,,2
444,https://github.com/TheAppWizard/FitnessAppSwiftUI.git,Fitness Application  Concept,,2
445,https://github.com/andreioprisan/iburnd.git,"A social fitness and nutrition platform, powering iburnd.com (PHP, Codeignite MVC, jquery, solr, mysql, mongodb)",,2
446,https://github.com/Uzzije/Pondeye.git,Django backend for a journal sharing app for fitness goals. Front end written in Ionic Framework.,,2
447,https://github.com/jerielng/fitme.git,"FitMe, an Android fitness app that generates workouts based on given user input","android,exercise,udacity,udacity-android-nanodegree,fitness,mobile,google",2
448,https://github.com/kamauvick/maxifit.git,A fitness app From DevGrishy,,2
449,https://github.com/nickyromero/highstep.git,iOS fitness application with HealthKit,,2
450,https://github.com/nirajbpant/Fitness-Pal-App.git,Repo for fitness pal app,,2
451,https://github.com/kamauvick/maxifit.git,A fitness app From DevGrishy,,2
452,https://github.com/Lazaro-manuel/FitnessApp.git,Bem vindo ao Fitness app,,2
453,https://github.com/Interzepter/Freestyle-power.git,Sajt za novi fitness brend,,2
454,https://github.com/joshjhargreaves/blinkschedule.git,Make automatic Blink Fitness reservations,,2
455,https://github.com/egeucak/PepeFit.git,A fitness app for gyms,,2
456,https://github.com/jcdev08/ReactNative_Health.git,fitness & health react native app,,2
457,https://github.com/iceice815/Mobile_Proj2.git,A fitness app for elders,,2
458,https://github.com/creare-site/site-fitness-coming-soon.git,Site Fitness - Coming Soon | WebsiteMarket,"creare-site,site-fitness,coming-soon,websitemarket",2
459,https://github.com/cheniel/pebble-fit.git,Fitness tracker watchface for Pebble,,2
460,https://github.com/thetbf/tbfgym.git,Total Body Fitness Gym Jhajjar,,2
461,https://github.com/nmtoan251998/fitness-tracker.git,Fitness tracker with IOT device,"iot,python,nodejs,expressjs,socket-io,redis,bootstrap4,puppeteer",2
462,https://github.com/rub-ksv/Kalman-Fitness-Fatigue.git,Estimate fitness and fatigue better via Kalman filtering (on top of the classical fitness-fatigue model),,2
463,https://github.com/anil3a/google-fitness-php.git,Get Google Fitness Steps with Google Fitness of Google API PHP Client,,2
464,https://github.com/poshaughnessy/strava-hack.git,pebble {code} health and fitness hackathon entry,,2
465,https://github.com/dkhlv/workoutplus.git,iOS app for tracking fitness routines,,2
466,https://github.com/filonov/kachculator.git,"Calculator for fitness, bodybuilding and powerlifting.",,2
467,https://github.com/noel-jean-paul/seng202-team4-project.git,Step-by-Step desktop fitness tracker ,,2
468,https://github.com/sabdelkhaliq/showcase-fitness-tracker.git,Fitness tracker app built using react native,"reactjs,react-native,javascript,redux",2
469,https://github.com/jakeingit/bridgeto10k.git,Full Fitness Android App for Running,,2
470,https://github.com/yeahdongcn/RSImageFitness.git,UIImage category to get fitness image.,,2
471,https://github.com/huyhoang1521/Fit-App.git,Fitness App for iOS and Android devices,,2
472,https://github.com/dj-techs/Fx2---react.git,"Fitness site built with react, redux",,2
473,https://github.com/raman5282/Track-your-Health.git,Website to track your health and fitness,,2
474,https://github.com/broadinstitute/concensusGLM.git, Microbial fitness inference from barcode counts.,,2
475,https://github.com/PHD-to-HTML/fitness-website.git,A awesome single page fitness website ,,2
476,https://github.com/KrasnovVitaliy/flutter_fitness_timer.git,Basic fitness timer based on flutter framework,,2
477,https://github.com/tommyhchoe/FitnessSocialApp.git,A social fitness app for gym-goers,,2
478,https://github.com/gautambajaj/FitBook.git,A social network designed to promote fitness,,2
479,https://github.com/kahhauyap/Fict.git,Fitness & Health Diet Tracker - Android App,,2
480,https://github.com/gautambajaj/FitBook.git,A social network designed to promote fitness,,2
481,https://github.com/RileyDow/MyFitnessRoutines.git,Android app to do fitness routines.,,2
482,https://github.com/Kerollmops/random-wheel-rs.git,A little implementation of fitness proportionate selection,,2
483,https://github.com/Vaishnvee-Shinde/Vaishnvee-Shinde.github.io.git,Fitness-First Website Project During Covid19 Pandemic,"fitness,covid-19,covid19-tracker,fitness-website,diet-managment,exercise",2
484,https://github.com/AkilLis/fitbook.git,Your healthcare management and fitness search engine,,2
485,https://github.com/FredReinink/Wellness-app.git,Health and fitness tracker web application,,2
486,https://github.com/lispcast/intro-clojure-test.git,Fitness routines for the LispCast Intro to clojure.test Course http://www.purelyfunctional.tv/intro-clojure-test,,2
487,https://github.com/RodrigoDLPontes/Fitso.git,A social fitness app for fitness freaks and sports enthusiasts encouraging them to play and train together.,,2
488,https://github.com/iwanmitowski/ConsoleFitnessDiary.git,"üèãÔ∏èConsole Fitness Diaryüìñ where you can track your fitness program, exercises, sets, repetitions and maximum lifted weight on each exercise.",,2
489,https://github.com/angelikatyborska/fitness-class-schedule.git,A Ruby on Rails app for managing fitness class reservations.,,2
490,https://github.com/ajagnic/NeuralNetwork.git,Multilayer Perceptron using mutations and fitness to train.,,2
491,https://github.com/DrProgrammerGabs/Fitness-Speed-Tracker.git,Fitness Speed Tracker for Google Wearable Devices (Android App),"java,app,application,mobile,philippines,android,android-application,fitness,health",2
492,https://github.com/FLaMeZz04/HomeFitness.git,Home Fitness is an Workout App which includes training,,2
493,https://github.com/planetk/jFitnessBot.git,A botliga.de client based on team fitness estimations,,2
494,https://github.com/jay51/fitness-q-a.git,fitness app for asking question. inspired by stackoverflow,,2
495,https://github.com/milbin/Curli.git,A fitness app that aims to help you workout smarter,,2
496,https://github.com/brh55/mymacrosnow.git,:pizza: Calculate macronutrients for each week throughout your fitness plan,fitness,2
497,https://github.com/jignesh13/StepHorizontalProgess.git,horizontal progessview with step divider use in many fitness app,"stepdivider,horizontal,progessview,java,android,customview",2
498,https://github.com/mirosdev/fm.git,Pro Angular and Spring Boot Practice - Fitness Manager App,,2
499,https://github.com/emmanuel-carreira/eat-easy.git,A simple macronutrients counter for your fitness routine.,,2
500,https://github.com/richardsprague/amazonhalor.git,Reading and analysis tools for Amazon Halo fitness band,,2
501,https://github.com/ColinConduff/Iron-Eater-Workout-Web-App.git,(No longer active) Laravel Fitness Log Web App,,2
502,https://github.com/skalnik/life-fitness-grapher.git,Creates graphs out of the data from Life Fitness machines,,2
503,https://github.com/thelinuxlich/gfitadm.git,Sistema administrativo de academias de fitness em Groovy/Griffon,,2
504,https://github.com/chstein/sportdiary.git,"Track your training, your fitness and your health",,2
505,https://github.com/erolkavvas/cobrascape.git,constraint-based modeling for allelic variation (COBRA for fitness landSCAPEs),,2
506,https://github.com/slyforce/GeneticComposition.git,Generate melodies with a genetic algorithmic with LSTM fitness functions,,2
507,https://github.com/eslamharidy/Fitness-App.git,Fitness App Using React-Redux and React MaterialUI,,2
508,https://github.com/taliesinb/EvolutionGraphs.git,"Representing biological evolution with mutation, fitness, generation, and selection graphs",,2
509,https://github.com/jacobjorgensen/IT426-Midterm-HikingApp.git,A Hiking application for tracking Hike data and fitness information,,2
510,https://github.com/NingthoibiDevi/Daily_Fitness.git,UI of a Daily_Fitness app using ReactNative,,2
511,https://github.com/dmaulikr/miband-api.git,iOS POD for work with MiBand Fitness Trackers,,2
512,https://github.com/martincostello/apple-fitness-workout-mapper.git,Visualise multiple journeys from Apple Fitness on a map,"dotnet,fitness-app,typescript,googlemaps",2
513,https://github.com/dslosky/Climbing-Fitness-Tracker.git,Multi-tenant web application to track climbing fitness,,2
514,https://github.com/SCCapstone/FitLivin.git,FitLivin is a fitness application for android users.,,2
515,https://github.com/msio/Fitness-Ionic2-Meteor.git,Fitness App written in Ionic 2 and Meteor Framework,,2
516,https://github.com/WatShout/watshout-android.git,"{""WatShout's mobile fitness tracker app for Android""}","android,sports,running",2
517,https://github.com/superjakegough/fitapp.git,fitness app build with flutter (work in progress),,2
518,https://github.com/PSNineteen/Gym-Website.git,This is the gym website for Pinnacle Fitness. #1,,2
519,https://github.com/VasuGoel/fitness-tracker.git,Modern Fitness Tracker app built using the MERN stack.,,2
520,https://github.com/Dirk-Sandberg/36500.git,Little app to keep track of some fitness goals,,2
521,https://github.com/zombiiieeeesss/outbreak-backend.git,:skull: Backend for the Zombie fitness game Outbreak (title WIP),,2
522,https://github.com/JordanLittell/trakMyRun.git,"Fitness-tracking application built with rails, javascript, backbone, and bootstrap",,2
523,https://github.com/lietu/ebjoy.git,Exercise / fitness bike as a USB game controller,,2
524,https://github.com/MooseyAnon/sentence-segmentation.git,"simple sentence segmentation, fitness function and stimulated annealing function",,2
525,https://github.com/fitpal/fitpal.git,A web application that pairs you with a fitness partner,,2
526,https://github.com/Georgiy10427/OpenBand.git,Open firmware for ttgo T-Wristband fitness bracelet.,,2
527,https://github.com/EngrTaofeek/cita.git,Android app for booking exercise and fitness sessions,,2
528,https://github.com/chingu-voyages/v21-bears-team-04.git,Social Fitness App | Voyage-21 | https://chingu.io/,,2
529,https://github.com/johnnymillergh/muscle-and-fitness-server.git,"[Under HEAVY construction] Muscle & Fitness server. A Spring Cloud microservice-based, back-end server for managing data of muscle and fitness.","muscle-and-fitness,spring-cloud,spring-cloud-gateway,spring-boot-admin,docker,jib,mybatis,mybatis-plus,spring-boot,consul,docker-compose",2
530,https://github.com/rossmojgani/FitnessApp.git,"XdHacks2019 Fitness App to give personalized diet/nutrition and workout plan based on an individuals goals, current fitness, and other attributes.","javascript,nodejs,reactjs,mysql-database,server,client",2
531,https://github.com/DepMap-Analytics/CoRe.git,R package for the identification of core-fitness and common-essential genes from joint analyses of multiple genome-wide CRISPR-Cas9 screens,,2
532,https://github.com/CyraX-Joy/CTRL-fit-Website.git,"This Project is focused on ‚ÄúFitness and Health‚Äù Which Helps users to start their Journey on Weight Loss and gain, Muscle gain, Fit From Home, Yoga and Meditation.",,2
533,https://github.com/BabesGotByte/Gym-Trainer-Expert-System.git,"This Gym trainer expert system is to automate the generation of fitness plans and to create a convenient and easy-to-use application for fitness freaks, trying to get fit. The system is a rule-based expert system with its fitness plans generating function. It can be used in gyms and yoga centers to recommend fitness plans.",,2
534,https://github.com/Jpmaloiv/OptiFit.git,"{""A Fitness Application that uses API's to calculate BMI and find local gyms""}",,2
535,https://github.com/lucianobajr/GsFit.git,Fitness App for monitoring and controlling student performance in relation to physical evaluation,"sqflite-database,pdf,pdf-converter,status-active,font-awesome,fitness,gym,workout,share,html-to-pdf,fancy-dialog,ux-design,ui-components,custom-icons,dynamic-images,bmi,bmi-calculator,crud-application,appointments,payment",2
536,https://github.com/matheusloures/ctff.git,A Ionic Web App for managing Fitness Classes - Student and Teacher with coin management,,2
537,https://github.com/Kovak/CBLFitnessTracker.git,"{""An application for tracking students' performance in the Connecticut Fitness Tests""}",,2
538,https://github.com/Heavyshield/NitGains.git,"A polyglot mobile Fitness application in nit, java and soon objective-c","nit,android,ios,timer,sharedpreferences",2
539,https://github.com/dadasilva/MacBikeTrainer.git,macOS App to connect and have fun with Wahoo Fitness Cycling Trainer,,2
540,https://github.com/webdino/runfirefox.git,Web-based fitness tracking application. Official app of the Run Firefox jogging team.,,2
541,https://github.com/PawanSai94/WRISTLET.git,The bracelet on your wrist is a smart multipurpose wearable for all fitness enthusiasts.,,2
542,https://github.com/sueroj/TopChallenger.git,"[Under Construction] Web application for fitness challenges, achievements, and leaderboards using the Strava API.",,2
543,https://github.com/tcstewart95/ActiveTrails.git,Combining fitness and great user experience in a mobile app powered by Flutter.,,2
544,https://github.com/ThasianX/531-BBB.git,Fitness app tailored for my gym program of 5/3/1 Boring But Big. ,,2
545,https://github.com/Apsistec/expert-fit.git,"FItness App for users, customers, employees using Stripe, Ionic  Angular and FIrebase","ionic,angular,firebase,stripe,pwa",2
546,https://github.com/faarwa/CustomFit.git,An iOS app that allows creation of custom Fitbit fitness challenges.,,2
547,https://github.com/gskielian/Magnetometer-Based-Joint-Positioning.git,Wearable arm-band for detecting theta and phi rotation with applications for both VR and fitness.,,2
548,https://github.com/tonylukasavage/Repper-iPhone.git,A native iPhone fitness app for calculating your rep maxes on lifts,,2
549,https://github.com/AymenMokhtari/personal_coach_Android_App.git,"Health & Fitness App ,  it allows you to Keep track of your food, exercise and weight",,2
550,https://github.com/teddykoker/lift.git,A new way to share fitness programs and measure progress. Golang + React + MongoDB,,2
551,https://github.com/raimsargado/Push.git,A Flutter application for Fitness enthusiasts to track their workout progress.  #get_it #sembast #bloc,,2
552,https://github.com/Rohitgta77/ActivityTrackerApp.git,A Fitness Android Application mointor or manage your excerise time and schedule.,,2
553,https://github.com/marioeguiluz/swiftui-widgets-fitness.git,"Example project with SwiftUI, Combine and Widgets, using Apple Fitness app UI as the base",,2
554,https://github.com/arc298/fitness.git,A 5-day PPLUL split fitness program focused on strength and aesthetics,,2
555,https://github.com/jakechamblee/Fitness_tracker_webapp.git,Fitness CRUD app that automatically visualizes your progress. Built with Django.,"django,fitness-app,plotly",2
556,https://github.com/jcarless/CodersWhoLift.git,Fitness application that makes it easier for users to keep track of their workout progress.,,2
557,https://github.com/tonylukasavage/Repper-Android.git,A native Android fitness app  for calculating your rep maxes on lifts,,2
558,https://github.com/RichardLiuLiu/Fitness_Tracking_System.git,Real-time fitness monitoring and location tracking system (Spring + Maven + MongoDB + MySQL + RabbitMQ + Docker).,,2
559,https://github.com/natsudragneel-x/MatchMyPose.git,A fitness app built using flutter. Submission for MakeUC Hackathon 2020.,"flutter,fitness,hackathon",2
560,https://github.com/dalloliogm/essentiality_characterization.git,"Characterization of properties of Essential/Core Fitness genes detected by Hart, 2015",,2
561,https://github.com/william-abboud/S.W.E.A.T.git,S.W.E.A.T is a personal tool for reaching your fitness goals,,2
562,https://github.com/renotesting/renotesting.github.io.git,"Website for Reno Fitness, a kickboxing/Muay Thai studio located in Calgary, Alberta.",,2
563,https://github.com/szarleydwarf/my_fitness_buddy.git,Application that will help find fitness partners based on activities and location,,2
564,https://github.com/cbsudux/AI-Fitness-Coach.git,An AI Fitness Coach that corrects your workout form and counts your reps.,,2
565,https://github.com/ciregbulem/FitHub.git,Web application for analyzing fitness data in a user-friendly manner!,,2
566,https://github.com/ssesena/GymBuddies.git,Android App for meeting people with similar fitness interest and experience.,,2
567,https://github.com/vmware-tanzu-labs/opa-policy.git,OPA bundles of Policies to be used with conftest for fitness function testing your platform,,2
568,https://github.com/alexpaul/Garmin-Manual-Upload.git,"Manually uploading your Garmin watch data to you fitness software of choice e.g Strava, MapMyFitness, ....",,2
569,https://github.com/sonnytron/FitTrainerBackEnd.git,This will be a Django back-end for my Android/iOS Fitness application,,2
570,https://github.com/baabar69/Flutter-Fitness-App.git,A flutter based fitness app with the integration of social media to enhance user engagement,,2
571,https://github.com/vmware-tanzu-labs/opa-policy.git,OPA bundles of Policies to be used with conftest for fitness function testing your platform,,2
572,https://github.com/alexpaul/Garmin-Manual-Upload.git,"Manually uploading your Garmin watch data to you fitness software of choice e.g Strava, MapMyFitness, ....",,2
573,https://github.com/rotaruciprian81/Fitness-mobile-app-with-JQuerry-mobile.git,"Fitness mobile app has been developed using JQuerry mobile, HTML, CSS, JavaScript and JSON files. ",,2
574,https://github.com/Fixbee/bushido.git,The official website for bushido Academy of martial arts and fitness hub,,2
575,https://github.com/JLU-Neal/ModifiedGA.git,"It is well known that when the fitness function is relatively complex, the optimization time cost of the genetic algorithm will be extremely large. To address this issue, the surrogate model was employed to predict the fitness value of the optimization problem in order to reduce the number of actual calculated fitness values. In this project, the tSNE(t-Stochastic neighbour Embedding), the least-square method, and Affinity Propagation were fused in the genetic algorithm to evaluate partial individuals‚Äô fitness. Sufficient benchmark numerical experiments were conducted, and the results proved that the strategy could reduce the number of calculations of the fitness function with similar accuracy to that of a simple genetic algorithm.",,2
576,https://github.com/mayank-1/TrackBack.git,A fitness Time Monitoring Application which lets you know your total workout time. Built using IONIC 4 + ANGULAR,,2
577,https://github.com/isalew/mean-workout.git,"Set fitness goals, design workouts, log exercises, and stay fit with MEAN Workout. Built using the MEAN JS stack.",,2
578,https://github.com/brentmaxwell/FIT.NET.git,"A .NET Library for FIT (Flexible and Interoperable Data Transfer) files, used by Garmin and other fitness devices",,2
579,https://github.com/andrewdavidcoleman/LevelUp.git,React | Nivo Data Visualization | Bootstrap | Sass. Web UI for fitness goal and performance tracking working in tandem with LevelUpAPI.,,2
580,https://github.com/ArkadiyD/SAGOMEA.git,SAGOMEA is an efficient surrogate-assisted Evolutionary Algorithm for combinatorial (discrete) optimization problems with expensive fitness functions.,,2
581,https://github.com/yasharmaster/odometer.git,:hourglass: This android application displays distance covered and calories burnt using GPS. :satellite: Useful for joggers and fitness freaks.,,2
582,https://github.com/AnuranDutta/Fullstack_Fitness_Website.git,"All in one full-stack fitness app with login authentication, diet planner, bmi calculator, chat, blogs and news forums. ",,2
583,https://github.com/EABonney/MyPersonalFitness.git,A personal fitness tracking application. Mainly for triathlon specific activities but does support strength training and other activities as well.,,2
584,https://github.com/WellnessLab/trackers_api.git,"An unofficial library to communicate with health and fitness trackers. Currently, this library supports MI Band 2. ","miband2,android,java,fitness-tracker,fitnessdk",2
585,https://github.com/SouthernFriedScientist/reStepper.git,"{""A machine that walks your fitness tracker when you need credit for steps that weren't logged. ""}",,2
586,https://github.com/staticshreyas/MyFitnessPal.git,Keep a track of your fitness using our very own API which helps you set goals for a better lifestyle.,"swift,swiftui,ios-swift,ios,ios-app,fitness-app,fitness,fitness-tracker",2
587,https://github.com/jrreimer/Modelling-optimal-responses-and-fitness-consequences-in-a-changing-Arctic----code.git,"Matlab scripts and supporting files used in manuscript ""Modelling optimal responses and fitness consequences in a changing Arctic""",,2
588,https://github.com/arfin97/BestFit.git,Bestfit is a blog that is primarily focused on the fitness of a personal.  Made using Djang and Java Script. üí™ üíª,,2
589,https://github.com/iamkhattar/fitness-first.git,"fitness-first is a project that was undertaken to brush up our PHP, HTML and CSS Skills.",,2
590,https://github.com/1904cs-golf-ibis/rpgym.git,"NES themed web app that gamifies fitness. The app allows users to create avatars based on the workout statistics recorded on their Strava accounts, and use them to battle one another. Strava is a free workout tracking app.",,2
591,https://github.com/emdelponte/paper-FGSC-fitness.git,"A research compendium with data, R codes, figures and versions of the manuscript for a research aimed to assess and compare the fitness of strains of the F. graminearum species complex causing Fusarium head blight in Brazil",,2
592,https://github.com/pg07codes/elixirDTU.git,the website for ELIXIR :muscle: - health :green_apple:  and fitness  :sweat_drops: society of Delhi Technological University,"dtu,elixir,health,wellness,fitness",2
593,https://github.com/elniebiet/Remote-Fitness-Monitoring-Mobile-App.git,"MSc Project, Health and Fitness Monitoring Mobile App that is linked to PC Software. Developed in Core Java.",,2
594,https://github.com/abishekvashok/vCare.git,vCare helps you detect early stage lung cancer with data from your smarwatches and fitness trackers using Machine Learning.,,2
595,https://github.com/viparthasarathy/fitness-tracker.git,Angular SPA with a Rails JSON API that allows users to track fitness related information and returns stats.,,2
596,https://github.com/brunomveri/sudo.git,"Community-driven platform to find the best outdoor fitness and sports areas in your city. Sudo was made as a final project for the Lighthouse Labs Web Development Bootcamp by Eric Bennett, Bruno Verissimo, and Luke Oloffs.",,2
597,https://github.com/BerwinZ/VR_Fitness_Bike.git,"This repo is the display part for the VR Fitness Bike. Sensor and edge devices attached to the real bike will send the speed and direction data from the bike with trainer, then the bike in the VR world will go with the same speed and direction. This repo is the game play of bike.","unity,virtual-reality,htc-vive,vive",2
598,https://github.com/jcandan/example_fitness.git,"An example Drupal 8 fitness module which features custom content entities, composer dependencies, and a custom Entity Reference Field Type plugin.",,2
599,https://github.com/pfrazee/doubter.git,"Assistive compiler. Takes a collection of source files, generates all possible output program permutations, runs each program, measures it for fitness, and outputs the best program.",,2
600,https://github.com/kyledewey/Parallel-Genetic-Algorithm-Framework.git,A basic genetic algorithm framework that supports SMP parallel fitness calculation.  Includes an implementation that solves instances of the large parsimony problem (phylogenetic tree construction).,,2
601,https://github.com/my-apft/myapft.git,"Realtime U.S. Army Physical Fitness Calculator (APFT). Computes the total APFT score based on push-ups, sit-ups, and the 2 mile run. Automatically saves your scores.",,2
602,https://github.com/juliacamacho/36hrfitness.git,36 Hour Fitness is an AI-powered virtual personal trainer that enhances the quality of home workouts and enables people to live healthier lives while social distancing.,,2
603,https://github.com/jacob-ogre/chlamy-wt-var.git,"Repository for paper ""Extensive Cross-Environment Fitness Variation Lies Along A Single Axis Of Genetic Variation In The Model Alga, Chlamydomonas reinhardtii"", Malcom et al.",,2
604,https://github.com/ZacharyEspiritu/FitFarm.git,Placed 3rd at hackTrin III. A fitness-based farm management simulator where players raise their own farm through real-world physical exercise.,,2
605,https://github.com/vpatov/midiMozart.git,"A music composer that uses either genetic algorithms (with myself serving as the non-automated subjective fitness function), or my own fine-tuned heuristics and rules of thumb.",,2
606,https://github.com/galoberlyn/altitude_gym.git,"{""A Gamified Membership Monitoring Web Application to manage gym member's subscription with gamified features to develop member's engagement towards health and fitness""}",,2
607,https://github.com/zoxxx/Weight-Loss-Smoothies-App.git,"Simple Cordova app that features large list of 300+ weight loss smoothie recipes. Similar approach can be used for different kind of health, fitness and medical info apps.",,2
608,https://github.com/BlackSpade741/motivate-me.git,A prototype mobile phone application designed to help young people and students stay active and keep working towards their fitness goals. ,,2
609,https://github.com/Sunk1st/FitnessApp.git,"A Fitness app for counting calories and protein. Utilizes the Nutritionix API for food data. Programmed using the Python Stack (Python, Django, MySQL) (Built in 2016)",,2
610,https://github.com/s3geek/fitnessking.git,"FitnessKing is a Magento Module ( Magento is a Zend Framework Project ) for Fitness, Nutrition, Gym, and Workout Management. The focus of FitnessKing is Security, Swiftness, and Scalability (S3)",,2
611,https://github.com/tejasa97/meals_suggestor.git,Meals Suggestor is an app you can use to plan out your meals for the week to reach your fitness goals,"docker,redis,flask,sqlalchemy-orm,python",2
612,https://github.com/GRy82/AutonoFitRepo.git,"{""AutonoFit is a fitness/exercise web application that supplies users with convenient, automatically generated exercise routines.  These routines are based on the user's fitness goals, the amount of time they have available, and the equipment they have at their disposal.  Generate a one-time workout, or progress through a customized program test change.""}",,2
613,https://github.com/viplav10/Association-Rule-Mining-Genetic-Algorithms-.git,The project aims to mine the billing and retail data of a big supermarket chain by Association rule mining using Genetic Algorithms . Every potential association will be given a relative fitness  which would then be compared with the fitness of the all the other associations. The more powerful association will be selected for reproduction creating the next generation of  associations . ,,2
614,https://github.com/collinsbj/FitCount.git,"{""FitCount is a simple iOS/watchOS app aimed at fitness facilities that want to reward their members for working out hard in their facility. When activated FitCount will track the user's location and heart rate. Then, whenever the user is in their gym they will earn points added to their FitCount whenever their heart rate goes above a threshold. These points will be redeemable at their fitness facility for stuff...and things too!""}",,2
615,https://github.com/vrushti-mody/Medi.co.git,"Medico aims to make the appointment booking process seamless and create a community to educate users with the help of health tips, first aid advice, fitness tips and much more!","doctors,pandemic",2
616,https://github.com/JuCJeff/Scale-Boy-Demo-Fullstack.git,This is the repository for Scale Boy fitness kitchen robot full-stack web application project on Raspberry Pi for Human Computer Interaction undergraduate research study in University of Wisconsin-Madison.,,2
617,https://github.com/hardikk2002/GOLD-s-GYM-.git,"{""This is a Gold's GYM website. Gold GYM is an American chain of international co-ed fitness centers originally started by Joe Gold. Here user can see all the latest news and get updates.""}",,2
618,https://github.com/benlower/tableau-wdc-mshealth.git,This project creates a WDC for Tableau to bring in data from the Microsoft Health API (e.g. data from a Microsoft Band fitness tracker). The data can then be analyzed and explored using Tableau.,,2
619,https://github.com/papichayaq/Gym_Data_Warehouse.git,"Data Warehousing and Data Mining course project. Designing and performing ETL process to create SSIS database and SSAS data cubes for Gym and Fitness Center BI, using MS SQL Server and Visual Studio 2017.",sql,2
620,https://github.com/evmiguel/workout-cookbook.git,"Workout Cookbook is a fitness platform that seeks to bridge mobile applications and voice assistants, while promoting healthy living and tech saavy interactions. It is currently taking open source contributions; take a ticket to work on it!",,2
621,https://github.com/chrisbarber7/FitnessViewer.git,"Plan is to pull data from various fitness websites and combine information to provide details not available on individual sites.  Start with Strava (activities), Fitbit/Withings (weight, HR & sleep) & Elite HRV.   Hoping to learn a few things along the way.",,2
622,https://github.com/GyanPrakashSinghIIITG/SudokuSolver-With-Genetic-Algorithm.git,"Genetic Algorithm has been applied to  9x9 sudoku to obtain unique solution. It uses mainly selection,crossover,mutation along with a fitness function to converge to a unique solution.",,2
623,https://github.com/msimms/StraenWeb.git,Fitness tracking website and companion to the Straen mobile app. Has cherrypy and flask front ends. Implements live tracking. Serves as platform for analytics and automated workout plan generation. An example instantiation is at http://straen-app.com,"fitness-tracker,cherrypy,live-tracking,python,flask,celery",2
624,https://github.com/ShoukriKattan/foog.co.git,"Foog.co is a concept around health and fitness - The backend uses Parse.com, and front-end is an iOS application using Parse iOS libraries as well as other components. Project uses swift",,2
625,https://github.com/sprhlabsinc/Wellth---Android.git,"Wellth is a social app where you can connect with friends or people who have same Health issues as you and Share any Health, Food and Fitness related info, Photos and Videos with Health Friends.",,2
626,https://github.com/Matrix02/FitZone.git,"A web app about Fitness and diet, combining both to deliver quality content to clients, the app is build with Spring Boot in the back-end while Angular 8 in the front-end",,2
627,https://github.com/erleiuat/Fitness-Under-Control.git,"Fitness Under Control ist deine L√∂sung den Papierkram endlich loszuwerden. Wir bieten eine L√∂sung welche dir die M√∂glichkeit gibt deine Trainingspl√§ne online zu verwalten. Du kannst eigene √úbungen erfassen, eigene Pl√§ne erstellen und Pl√§ne anderer User verwenden.","php,html,css,jquery,javascript,sql,mysql",2
628,https://github.com/harry1357931/NeuralNetwork-ErrorBackPropagation.git,"The program in this repository creates a 3 layer neural network with 1 hidden layer to find to find out a non linear function that best fits the input data. In this program, i implemented Error Back Propagation Algorithm to train the neural network and used Gradient descent to find out local minimum of the function. Then, i used 5 fold cross validation to find out average fitness of a model.",,2
629,https://github.com/AnthonnyMitch/WOD-Tribe.git,"{""WOD tribe allow athletes to login into their account and see what's the Workout Of the Day (WOD). Also, athletes are able to use different tools on their user page to achieve their fitness goals. These tools are a fitness calculator and a recipes generator. Both of these tools were designed to help athletes improve their nutrition. Moreover, WOD Tribe possesses a secret path that allows trainers to create WOD and save them for future days. All the WOD created by the trainer will automatically display on all the athlete's page.""}",,2
630,https://github.com/asynchronous-machine-learning/Asynchronous-Differentially-Private-Learning-on-Distributed-Private-Data.git, We develop asynchronous differentially-private algorithms for collaboratively training machine-learning models on multiple private datasets. The asynchronous nature of the algorithms implies that a central learner interacts with the private data owners one-on-one whenever they are available for communication without needing to aggregate query responses to construct gradients of the entire fitness function.,,2
631,https://github.com/vdjonsson/abopt.git,"AbOpt is a tool for antibody optimization. This computational method jointly constrains the antibody design space and solves for antibody cocktails to address virus escape. Our contributions are: a new statistical model, the saturated LASSO (satlasso) for feature selection and a new combinatorial optimization algorithm that inputs fitness landscapes and solves for antibody cocktails that can address escape through virus mutations.",,2
632,https://github.com/saxes20/EvolutionarySimulation.git,"An accurate simulation of the biological process of evolution. Each generated organism has their own statistics for survival and reproductive ability. These statistics, along with many other evolutionary factors, will affect the fitness of the organism. With random mutations that bring up different alleles for the chosen trait, eye color, the population evolves towards the most advantageous allele. Last modified:  ",,2
633,https://github.com/V3RS/fitness-deck.git,Fitness Deck is a unique way to stay active using a deck of playing cards with a modern front-end design using React. The goal is to get through all 52 cards. Each suit is a different exercise and the amount that is given is dependent on the difficulty.,,2
634,https://github.com/haz3141/fit-chain.git,A fitness tracker app with token rewards. This app was created to help motivate users into staying active by rewarding the user for posting their health related activities to the FitChain blockchain network with a digital token that is distributed amongst the users of the FitChain network.,,2
635,https://github.com/AnthonyBloomer/fitness-insights-dashboard.git, I have started to track my daily intake and exercise using MyFitnessPal and other mobile apps. This project pulls data from those sources and sends to New Relic Insights. This allows me to create visualisations and query my fitness and intake data using NRQL.,"nrql,newrelic,newrelic-insights,myfitnesspal,mapmywalk,dashboard,heroku",2
636,https://github.com/AryanShrivastava/get_fit_by_mk.git,"This Project is a health and fitness app , developed on flutter platform . This app was given by startup ""Get fit by Mk"" as a project. And my own freelancing platform ""Comet tech developer"" which is directly run and managed by me completed the project with all functionality and graphics .",,2
637,https://github.com/Asheeshkrsharma/CVRP-genetic.git,"The capacitated vehicle routing problem is a well-studied combinatorial computing problem. There are many ways to solve the problem like evolutionary computing, reinforcement learning and exact methods. A genetic algorithm was implemented to solve a given CVRP instance with 250 customers. An evolutionary computing approach was chosen because of the following reasons: 1. The exact methods like branch and cut explore the entire search space which is most of the time unfeasible given the computation time. A genetic algorithm can be fine tuned to explore the search space in a specific way.  2. In this case, the constraints are very simple; maximum vehicle capacity of 500 and a vehicle can visit a customer only once. A real world CVRP can have multiple objectives and constraints like traffic conditions, number of turns, multiple depots etc. A genetic algorithm can adapt to these constraints without the need to change the entire programmatic structure by simply formulating the fitness function again.",,2
638,https://github.com/a-a-ahmed/pentbox1.8.git,"PenTBox is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. PenTBox is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.",,2
639,https://github.com/MahirAhmed/MARTTOPS.git,"{""MARTTOPS Is The Online Store Where People Can Purchase All\xa0Types Of Products. Like: Shoes, Clothes, Watches, Origami, Sports, Electronics, Pets, Movies, Health & Fitness, Beauty, Islamic Items, Home & Kitchen, Books And Many More Products... People Can Also Post Their Ads Here By Contacting Us. We'll Sell Their Products More Fastly And Securely Than Others. Here, We Are Selling Our All Products In Cheapest Prices Than The Prices Of Markets And The Online Stores. Visit More At: http://www.marttops.webs.com""}",,2
640,https://github.com/jalexiscv/php-iGenetic.git,"This class can be used to optimize order of sequences with Genetic algorithm.  It can take an array with a sequence of objects to optimize and it applies genetic algorithm to evolve the sequence.  The class applies a given number of generations to perform elitistic selection with a given fitness function, applies cross-over and mutation.  The resulting sequence of objects is stored as an array class variable.  An example is provided to optimize a sequence of cities to travel.",,2
641,https://github.com/tskazinski/AZME.git,"The objective of this simulation is to recreate a simplified closed-system micro-economy for the user to witness how wealth flow carries out given the specified economic rules and parameters. The user will eventually have the ability to set initial setup parameters and rules, and then will have the ability to tweak the simulation parameters during the execution of the simulation. The end goal is to have all rules and parameters recorded in a database along with their performance ratings with respect to sustainability, efficiency, and maintaining high equality indexes. These recorded parameters along with their performance ratings would then be subjected to genetic algorithm computations where new sets of rules and parameters would coalesce to be tested out again for their performance ratings or fitness levels. Continuing this process we would be able to evaluate what (simplified) economic system approach theoretically would be the most optimal economic strategy.",,2
642,https://github.com/AAlwajeeh/ArabicSF.git,"ArabicSF: is a C# application that is consists of a novel Arabic Stylometric Features Tool and other preproccessing tools which are inspired by other works such as Khoja stemmer, Light Stemmer, etc. - ***Note: This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. -  If you find this code useful, please cite the following paper:  - Mahmoud Al-Ayyoub, Ahmed Alwajeeh and Ismail Hmeidi. An extensive study of authorship authentication of Arabic articles. International Journal of Web Information Systems (IJWIS) 13(1), 2017. doi: 10.1108/IJWIS-03-2016-0011","arabic,text-processing,feature-extraction,preprocessing",2
643,https://github.com/DVD-R/FunfitV2.git," Funfit is an interactive, location orientated strategy game which the user capture or conquer real world territories. The app encourages physical activities such as walking, jogging and running and with a competitive environment. Funfit blends the fun of an interactive game with the rational concerns of fitness for an engaging app that is beneficial for all ages. When developing this application, our hope is to harness the elements of an engaging, competitive real world game, and integrate it into an application that would embolden youth and even children to go outdoors and exercise. FunFit exploit the concept of gamification to establish a reward system in the form of power-ups and coins that our users can collect in the game process. These inclusions in our game will be implemented with Android platform, Google Maps, Places API and we will use PARSE API to store data. Our team hope these aspects will be appealing to users for them to keep playing and excel in the game.",,2
644,https://github.com/vizielod/Szakdolgozat-2019-Thesis.git,"This is a repository of my BSc Final Project (Thesis) at BME. The project combines using Unity and Android Studio. My goal is to write a VR game for Android devices. It is going to be a CardBoard game using Motion Tracking Sensors from the Notch company. They have an SDK for Android Studio, which I will use for the real time communication between the sensors and my Unity Game. The Game is going to be a kickstarter project of a more complex Fitness game, in which the player has to avoid to get hit by a wall or a box. The player has to get into the right body position or jump/squat to get through the cut-out part of the wall.",,2
645,https://github.com/Prabhat123456/ContinuaHealthAppliance.git,The Continua Design Guidelines (CDG) defines a framework of underlying standards and criteria that are required to ensure the interoperability of components1 used for applications monitoring personal health and wellness. They also contain design guidelines that further clarify the underlying standards or specifications by reducing options or by adding missing features to improve interoperability. These guidelines focus on the following interfaces: - Personal Health Devices (PHD) Interface - Interface between a PHD and a Personal Health Gateway (PHG). - Services Interface ‚Äì Interface between PHG and a Health & Fitness Service (HFS). - Healthcare Information System (HIS) Interface ‚Äì Interface between a HFS and a HIS. So I developed a framework which you can plugin in your mobile Apps and Start Communicating with Any Oximeter and Thermometer which adhere to the basic principles of Continua Architecture,,2
646,https://github.com/joneshshrestha/Evolution-Simulator.git,"The simulator will be built with Javascript as primary development language aided by HTML, CSS and other libraries for frontend purpose. As our Machine learning library we‚Äôll be using Tensorflow.js, a low level ML library recently acquired by Google Inc. Our main objective is to build a graphics environment that enable users to create a completely artificial creature that will evolve to walk, run or even jump over obstacles to reach an objective point. Users will be given tools to create Nodes, Bones and Muscles which will help them generate an artificial creature. Just as in the process of Natural Selection of Evolution, multiple creatures are created with the same structure but different brain. These batches of creatures are called generation. All these creatures will try their best to achieve maximum speed to reach the objective point. Through the process of crossover and mutation, few creatures that performed better than the rest will be chosen and using their genes new offsprings are created. This process is continued until certain error rate or fitness level is reached.",,2
647,https://github.com/geeksourcecodes/math.git,"The MIT License (MIT)  Copyright (c) 2013-present Benjamin Morel  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,2
648,https://github.com/witcherxd/witcher-guard-bot-v12.git,"MIT License  Copyright (c) 2021 Witcher Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",,2
649,https://github.com/TheLittleEngineers/CC2-32K-EPROM-CARTRIDGE-2012-V2R0.git,"This is an EPROM Cartridge for the Tandy Radio Shack TRS-80 Color Computer 1,2 and 3. It will probably work with the Dragon Data Dragon computers as well. It uses a 27C512 EPROM jumper selected as two 32K banks. The CoCo 1, 2 and Dragon can only access the first 16K of each bank. The CoCo 3 can access the entire 32K of each bank, minus the 0xFFnn I/O and Vector page. The project has been shared to github: https://github.com/TheLittleEngineers/CC2-32K-EPROM-CARTRIDGE-2012-V2R0. Many other similar cartridges are forthcoming. There are much better designs in my possession and I intend to post them all, in no particular order.  The project is released under a Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0) License [https://creativecommons.org/licenses/by-sa/4.0/]  github: https://github.com/TheLittleEngineers/CC2-32K-EPROM-CARTRIDGE-2012-V2R0  OSHpark: https://oshpark.com/shared_projects/wl9Kmtit  Please note: This is derived from an original design by ""Little"" John Eric and/or his father ""Big"" John Robert (J.R.) by ""Uncle"" Robert Allen. It should be thoroughly scrutinized and verified prior to actual use of any kind. DISCLAIMER: The following article is provided for informational purposes only. Any attempt to modify your computer without the proper skills to do so may void your computer. Any attempt to modify your computer without unplugging it first may void you. This Information is provided ""as-is"" with no guarantee of fitness for any purpose, either explicit or implied. We disclaim any and all responsibility for losses incurred through the use of this information. By using this information, you are deemed to have accepted these conditions of use, and you agree NOT to sue us. CLARIFICATION: The above disclaimer states as plainly as possible that if you decide to make use of any of the information contained within this document that you do so at your own risk. Designing hardware for the CoCo (ColorComputer) and other vintage hardware is a hobby of ours and is not motivated by any desire of profits. As this is a not for profit venture, obviously we can\'t afford not to disclaim the use of this information.",,2
650,https://github.com/admin1i/https---apps.facebook.com-artexas--by_.git,"       Apache License                            Version 2.0, January 2004                         http://www.apache.org/licenses/     TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION     1. Definitions.        ""License"" shall mean the terms and conditions for use, reproduction,       and distribution as defined by Sections 1 through 9 of this document.        ""Licensor"" shall mean the copyright owner or entity authorized by       the copyright owner that is granting the License.        ""Legal Entity"" shall mean the union of the acting entity and all       other entities that control, are controlled by, or are under common       control with that entity. For the purposes of this definition,       ""control"" means (i) the power, direct or indirect, to cause the       direction or management of such entity, whether by contract or       otherwise, or (ii) ownership of fifty percent (50%) or more of the       outstanding shares, or (iii) beneficial ownership of such entity.        ""You"" (or ""Your"") shall mean an individual or Legal Entity       exercising permissions granted by this License.        ""Source"" form shall mean the preferred form for making modifications,       including but not limited to software source code, documentation       source, and configuration files.        ""Object"" form shall mean any form resulting from mechanical       transformation or translation of a Source form, including but       not limited to compiled object code, generated documentation,       and conversions to other media types.        ""Work"" shall mean the work of authorship, whether in Source or       Object form, made available under the License, as indicated by a       copyright notice that is included in or attached to the work       (an example is provided in the Appendix below).        ""Derivative Works"" shall mean any work, whether in Source or Object       form, that is based on (or derived from) the Work and for which the       editorial revisions, annotations, elaborations, or other modifications       represent, as a whole, an original work of authorship. For the purposes       of this License, Derivative Works shall not include works that remain       separable from, or merely link (or bind by name) to the interfaces of,       the Work and Derivative Works thereof.        ""Contribution"" shall mean any work of authorship, including       the original version of the Work and any modifications or additions       to that Work or Derivative Works thereof, that is intentionally       submitted to Licensor for inclusion in the Work by the copyright owner       or by an individual or Legal Entity authorized to submit on behalf of       the copyright owner. For the purposes of this definition, ""submitted""       means any form of electronic, verbal, or written communication sent       to the Licensor or its representatives, including but not limited to       communication on electronic mailing lists, source code control systems,       and issue tracking systems that are managed by, or on behalf of, the       Licensor for the purpose of discussing and improving the Work, but       excluding communication that is conspicuously marked or otherwise       designated in writing by the copyright owner as ""Not a Contribution.""        ""Contributor"" shall mean Licensor and any individual or Legal Entity       on behalf of whom a Contribution has been received by Licensor and       subsequently incorporated within the Work.     2. Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.     3. Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.     4. Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:        (a) You must give any other recipients of the Work or           Derivative Works a copy of this License; and        (b) You must cause any modified files to carry prominent notices           stating that You changed the files; and        (c) You must retain, in the Source form of any Derivative Works           that You distribute, all copyright, patent, trademark, and           attribution notices from the Source form of the Work,           excluding those notices that do not pertain to any part of           the Derivative Works; and        (d) If the Work includes a ""NOTICE"" text file as part of its           distribution, then any Derivative Works that You distribute must           include a readable copy of the attribution notices contained           within such NOTICE file, excluding those notices that do not           pertain to any part of the Derivative Works, in at least one           of the following places: within a NOTICE text file distributed           as part of the Derivative Works; within the Source form or           documentation, if provided along with the Derivative Works; or,           within a display generated by the Derivative Works, if and           wherever such third-party notices normally appear. The contents           of the NOTICE file are for informational purposes only and           do not modify the License. You may add Your own attribution           notices within Derivative Works that You distribute, alongside           or as an addendum to the NOTICE text from the Work, provided           that such additional attribution notices cannot be construed           as modifying the License.        You may add Your own copyright statement to Your modifications and       may provide additional or different license terms and conditions       for use, reproduction, or distribution of Your modifications, or       for any such Derivative Works as a whole, provided Your use,       reproduction, and distribution of the Work otherwise complies with       the conditions stated in this License.     5. Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.     6. Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.     7. Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an ""AS IS"" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.     8. Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.     9. Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.     END OF TERMS AND CONDITIONS",,2
651,https://github.com/minecraft77/blk-stealthspider.git,"                    GNU AFFERO GENERAL PUBLIC LICENSE                        Version 3, 19 November 2007   Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.    A secondary benefit of defending all users\' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.    The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.    An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU Affero General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Remote Network Interaction; Use with the GNU General Public License.    Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      <one line to give the program\'s name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as published     by the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <http://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a ""Source"" link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see <http://www.gnu.org/licenses/>.",,2
652,https://github.com/Noykarde/NoykardeRepository.git,"                    GNU GENERAL PUBLIC LICENSE                        Version 3, 29 June 2007   Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.                              Preamble    The GNU General Public License is a free, copyleft license for software and other kinds of works.    The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.  We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors.  You can apply it to your programs, too.    When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.    To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights.  Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.    For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.    Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.    For the developers\' and authors\' protection, the GPL clearly explains that there is no warranty for this free software.  For both users\' and authors\' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.    Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so.  This is fundamentally incompatible with the aim of protecting users\' freedom to change the software.  The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable.  Therefore, we have designed this version of the GPL to prohibit the practice for those products.  If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.    Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary.  To prevent this, the GPL assures that patents cannot be used to render the program non-free.    The precise terms and conditions for copying, distribution and modification follow.                         TERMS AND CONDITIONS    0. Definitions.    ""This License"" refers to version 3 of the GNU General Public License.    ""Copyright"" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.    ""The Program"" refers to any copyrightable work licensed under this License.  Each licensee is addressed as ""you"".  ""Licensees"" and ""recipients"" may be individuals or organizations.    To ""modify"" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a ""modified version"" of the earlier work or a work ""based on"" the earlier work.    A ""covered work"" means either the unmodified Program or a work based on the Program.    To ""propagate"" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.    To ""convey"" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.    An interactive user interface displays ""Appropriate Legal Notices"" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.    1. Source Code.    The ""source code"" for a work means the preferred form of the work for making modifications to it.  ""Object code"" means any non-source form of a work.    A ""Standard Interface"" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.    The ""System Libraries"" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A ""Major Component"", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.    The ""Corresponding Source"" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work\'s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.    The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.    The Corresponding Source for a work in source code form is that same work.    2. Basic Permissions.    All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.    You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.    Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.    3. Protecting Users\' Legal Rights From Anti-Circumvention Law.    No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.    When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work\'s users, your or third parties\' legal rights to forbid circumvention of technological measures.    4. Conveying Verbatim Copies.    You may convey verbatim copies of the Program\'s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.    You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.    5. Conveying Modified Source Versions.    You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:      a) The work must carry prominent notices stating that you modified     it, and giving a relevant date.      b) The work must carry prominent notices stating that it is     released under this License and any conditions added under section     7.  This requirement modifies the requirement in section 4 to     ""keep intact all notices"".      c) You must license the entire work, as a whole, under this     License to anyone who comes into possession of a copy.  This     License will therefore apply, along with any applicable section 7     additional terms, to the whole of the work, and all its parts,     regardless of how they are packaged.  This License gives no     permission to license the work in any other way, but it does not     invalidate such permission if you have separately received it.      d) If the work has interactive user interfaces, each must display     Appropriate Legal Notices; however, if the Program has interactive     interfaces that do not display Appropriate Legal Notices, your     work need not make them do so.    A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an ""aggregate"" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation\'s users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.    6. Conveying Non-Source Forms.    You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:      a) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by the     Corresponding Source fixed on a durable physical medium     customarily used for software interchange.      b) Convey the object code in, or embodied in, a physical product     (including a physical distribution medium), accompanied by a     written offer, valid for at least three years and valid for as     long as you offer spare parts or customer support for that product     model, to give anyone who possesses the object code either (1) a     copy of the Corresponding Source for all the software in the     product that is covered by this License, on a durable physical     medium customarily used for software interchange, for a price no     more than your reasonable cost of physically performing this     conveying of source, or (2) access to copy the     Corresponding Source from a network server at no charge.      c) Convey individual copies of the object code with a copy of the     written offer to provide the Corresponding Source.  This     alternative is allowed only occasionally and noncommercially, and     only if you received the object code with such an offer, in accord     with subsection 6b.      d) Convey the object code by offering access from a designated     place (gratis or for a charge), and offer equivalent access to the     Corresponding Source in the same way through the same place at no     further charge.  You need not require recipients to copy the     Corresponding Source along with the object code.  If the place to     copy the object code is a network server, the Corresponding Source     may be on a different server (operated by you or a third party)     that supports equivalent copying facilities, provided you maintain     clear directions next to the object code saying where to find the     Corresponding Source.  Regardless of what server hosts the     Corresponding Source, you remain obligated to ensure that it is     available for as long as needed to satisfy these requirements.      e) Convey the object code using peer-to-peer transmission, provided     you inform other peers where the object code and Corresponding     Source of the work are being offered to the general public at no     charge under subsection 6d.    A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.    A ""User Product"" is either (1) a ""consumer product"", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, ""normally used"" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.    ""Installation Information"" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.    If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).    The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.    Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.    7. Additional Terms.    ""Additional permissions"" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.    When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.    Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:      a) Disclaiming warranty or limiting liability differently from the     terms of sections 15 and 16 of this License; or      b) Requiring preservation of specified reasonable legal notices or     author attributions in that material or in the Appropriate Legal     Notices displayed by works containing it; or      c) Prohibiting misrepresentation of the origin of that material, or     requiring that modified versions of such material be marked in     reasonable ways as different from the original version; or      d) Limiting the use for publicity purposes of names of licensors or     authors of the material; or      e) Declining to grant rights under trademark law for use of some     trade names, trademarks, or service marks; or      f) Requiring indemnification of licensors and authors of that     material by anyone who conveys the material (or modified versions of     it) with contractual assumptions of liability to the recipient, for     any liability that these contractual assumptions directly impose on     those licensors and authors.    All other non-permissive additional terms are considered ""further restrictions"" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.    If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.    Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.    8. Termination.    You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).    However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.    Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.    Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.    9. Acceptance Not Required for Having Copies.    You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.    10. Automatic Licensing of Downstream Recipients.    Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.    An ""entity transaction"" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party\'s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.    You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.    11. Patents.    A ""contributor"" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor\'s ""contributor version"".    A contributor\'s ""essential patent claims"" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, ""control"" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.    Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor\'s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.    In the following three paragraphs, a ""patent license"" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To ""grant"" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.    If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  ""Knowingly relying"" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient\'s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.    If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.    A patent license is ""discriminatory"" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.    Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.    12. No Surrender of Others\' Freedom.    If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.    13. Use with the GNU Affero General Public License.    Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.    14. Revised Versions of this License.    The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.    Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU General Public License ""or any later version"" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.    If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy\'s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.    Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.    15. Disclaimer of Warranty.    THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.    16. Limitation of Liability.    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.    17. Interpretation of Sections 15 and 16.    If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.                       END OF TERMS AND CONDITIONS              How to Apply These Terms to Your New Programs    If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.    To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the ""copyright"" line and a pointer to where the full notice is found.      {one line to give the program\'s name and a brief idea of what it does.}     Copyright (C) {year}  {name of author}      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <http://www.gnu.org/licenses/>.  Also add information on how to contact you by electronic and paper mail.    If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:      {project}  Copyright (C) {year}  {fullname}     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w\'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c\' for details.  The hypothetical commands `show w\' and `show c\' should show the appropriate parts of the General Public License.  Of course, your program\'s commands might be different; for a GUI interface, you would use an ""about box"".    You should also get your employer (if you work as a programmer) or school, if any, to sign a ""copyright disclaimer"" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see <http://www.gnu.org/licenses/>.    The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read <http://www.gnu.org/philosophy/why-not-lgpl.html>.",,2
653,https://github.com/honeybeeluv07/Deus-Vult-Ministries-Org.git,"The US Commandery Knights Templar Holy Order\'s expectations as participants in our local communities as a team of rescue & response units within the regions across America. The USC KT are formed together as retired Veterans, Military Servicemen, Law Enforcement Officials, Patriots, Freedom Lovers of Liberty, Guardians of our Great Nation, Ministers & Nuns, hardworking individuals formed together in unity under The Word of God as our Virtues of Conduct through our Love, Honor, Dedication of Servitude to our LORD & Savior Jesus Christ forever and ever.  Under such Rights & Privileges is our USC KT Memberships understanding of our Terms & Privileges -This work is licensed under Creative Commons\' Attribution-ShareAlike 3.0 United States (CC BY-SA 3.0) - http://creativecommons.org/licenses/by-sa/3.0/us/  If you use these icons, please add a link to Iconic (http://somerandomdude.com/work/iconic/) somewhere on your site or in your app.    LEGAL MUMBO-JUMBO  You are free:  to Share ‚Äî to copy, distribute and transmit the work to Remix ‚Äî to adapt the work to make commercial use of the work  Under the following conditions:  Attribution ‚Äî You must attribute the work in the manner specified by the author or licensor (but not in any way that suggests that they endorse you or your use of the work). Share Alike ‚Äî If you alter, transform, or build upon this work, you may distribute the resulting work only under the same or similar license to this one. With the understanding that:  Waiver ‚Äî Any of the above conditions can be waived if you get permission from the copyright holder. Public Domain ‚Äî Where the work or any of its elements is in the public domain under applicable law, that status is in no way affected by the license. Other Rights ‚Äî In no way are any of the following rights affected by the license: Your fair dealing or fair use rights, or other applicable copyright exceptions and limitations; Apart from the remix rights granted under this license, the author\'s moral rights; Rights other persons may have either in the work itself or in how the work is used, such as publicity or privacy rights. Notice ‚Äî For any reuse or distribution, you must make clear to others the license terms of this work. The best way to do this is with a link to this web page.   Full License   THE WORK (AS DEFINED BELOW) IS PROVIDED UNDER THE TERMS OF THIS CREATIVE COMMONS PUBLIC LICENSE (""CCPL"" OR ""LICENSE""). THE WORK IS PROTECTED BY COPYRIGHT AND/OR OTHER APPLICABLE LAW. ANY USE OF THE WORK OTHER THAN AS AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.  BY EXERCISING ANY RIGHTS TO THE WORK PROVIDED HERE, YOU ACCEPT AND AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE. TO THE EXTENT THIS LICENSE MAY BE CONSIDERED TO BE A CONTRACT, THE LICENSOR GRANTS YOU THE RIGHTS CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.  1. Definitions  ""Collective Work"" means a work, such as a periodical issue, anthology or encyclopedia, in which the Work in its entirety in unmodified form, along with one or more other contributions, constituting separate and independent works in themselves, are assembled into a collective whole. A work that constitutes a Collective Work will not be considered a Derivative Work (as defined below) for the purposes of this License. ""Creative Commons Compatible License"" means a license that is listed at http://creativecommons.org/compatiblelicenses that has been approved by Creative Commons as being essentially equivalent to this License, including, at a minimum, because that license: (i) contains terms that have the same purpose, meaning and effect as the License Elements of this License; and, (ii) explicitly permits the relicensing of derivatives of works made available under that license under this License or either a Creative Commons unported license or a Creative Commons jurisdiction license with the same License Elements as this License. ""Derivative Work"" means a work based upon the Work or upon the Work and other pre-existing works, such as a translation, musical arrangement, dramatization, fictionalization, motion picture version, sound recording, art reproduction, abridgment, condensation, or any other form in which the Work may be recast, transformed, or adapted, except that a work that constitutes a Collective Work will not be considered a Derivative Work for the purpose of this License. For the avoidance of doubt, where the Work is a musical composition or sound recording, the synchronization of the Work in timed-relation with a moving image (""synching"") will be considered a Derivative Work for the purpose of this License. ""License Elements"" means the following high-level license attributes as selected by Licensor and indicated in the title of this License: Attribution, ShareAlike. ""Licensor"" means the individual, individuals, entity or entities that offers the Work under the terms of this License. ""Original Author"" means the individual, individuals, entity or entities who created the Work. ""Work"" means the copyrightable work of authorship offered under the terms of this License. ""You"" means an individual or entity exercising rights under this License who has not previously violated the terms of this License with respect to the Work, or who has received express permission from the Licensor to exercise rights under this License despite a previous violation. 2. Fair Use Rights. Nothing in this license is intended to reduce, limit, or restrict any rights arising from fair use, first sale or other limitations on the exclusive rights of the copyright owner under copyright law or other applicable laws.  3. License Grant. Subject to the terms and conditions of this License, Licensor hereby grants You a worldwide, royalty-free, non-exclusive, perpetual (for the duration of the applicable copyright) license to exercise the rights in the Work as stated below:  to reproduce the Work, to incorporate the Work into one or more Collective Works, and to reproduce the Work as incorporated in the Collective Works; to create and reproduce Derivative Works provided that any such Derivative Work, including any translation in any medium, takes reasonable steps to clearly label, demarcate or otherwise identify that changes were made to the original Work. For example, a translation could be marked ""The original work was translated from English to Spanish,"" or a modification could indicate ""The original work has been modified.""; to distribute copies or phonorecords of, display publicly, perform publicly, and perform publicly by means of a digital audio transmission the Work including as incorporated in Collective Works; to distribute copies or phonorecords of, display publicly, perform publicly, and perform publicly by means of a digital audio transmission Derivative Works. For the avoidance of doubt, where the Work is a musical composition:  Performance Royalties Under Blanket Licenses. Licensor waives the exclusive right to collect, whether individually or, in the event that Licensor is a member of a performance rights society (e.g. ASCAP, BMI, SESAC), via that society, royalties for the public performance or public digital performance (e.g. webcast) of the Work. Mechanical Rights and Statutory Royalties. Licensor waives the exclusive right to collect, whether individually or via a music rights agency or designated agent (e.g. Harry Fox Agency), royalties for any phonorecord You create from the Work (""cover version"") and distribute, subject to the compulsory license created by 17 USC Section 115 of the US Copyright Act (or the equivalent in other jurisdictions). Webcasting Rights and Statutory Royalties. For the avoidance of doubt, where the Work is a sound recording, Licensor waives the exclusive right to collect, whether individually or via a performance-rights society (e.g. SoundExchange), royalties for the public digital performance (e.g. webcast) of the Work, subject to the compulsory license created by 17 USC Section 114 of the US Copyright Act (or the equivalent in other jurisdictions). The above rights may be exercised in all media and formats whether now known or hereafter devised. The above rights include the right to make such modifications as are technically necessary to exercise the rights in other media and formats. All rights not expressly granted by Licensor are hereby reserved.  4. Restrictions. The license granted in Section 3 above is expressly made subject to and limited by the following restrictions:  You may distribute, publicly display, publicly perform, or publicly digitally perform the Work only under the terms of this License, and You must include a copy of, or the Uniform Resource Identifier for, this License with every copy or phonorecord of the Work You distribute, publicly display, publicly perform, or publicly digitally perform. You may not offer or impose any terms on the Work that restrict the terms of this License or the ability of a recipient of the Work to exercise of the rights granted to that recipient under the terms of the License. You may not sublicense the Work. You must keep intact all notices that refer to this License and to the disclaimer of warranties. When You distribute, publicly display, publicly perform, or publicly digitally perform the Work, You may not impose any technological measures on the Work that restrict the ability of a recipient of the Work from You to exercise of the rights granted to that recipient under the terms of the License. This Section 4(a) applies to the Work as incorporated in a Collective Work, but this does not require the Collective Work apart from the Work itself to be made subject to the terms of this License. If You create a Collective Work, upon notice from any Licensor You must, to the extent practicable, remove from the Collective Work any credit as required by Section 4(c), as requested. If You create a Derivative Work, upon notice from any Licensor You must, to the extent practicable, remove from the Derivative Work any credit as required by Section 4(c), as requested. You may distribute, publicly display, publicly perform, or publicly digitally perform a Derivative Work only under: (i) the terms of this License; (ii) a later version of this License with the same License Elements as this License; (iii) either the Creative Commons (Unported) license or a Creative Commons jurisdiction license (either this or a later license version) that contains the same License Elements as this License (e.g. Attribution-ShareAlike 3.0 (Unported)); (iv) a Creative Commons Compatible License. If you license the Derivative Work under one of the licenses mentioned in (iv), you must comply with the terms of that license. If you license the Derivative Work under the terms of any of the licenses mentioned in (i), (ii) or (iii) (the ""Applicable License""), you must comply with the terms of the Applicable License generally and with the following provisions: (I) You must include a copy of, or the Uniform Resource Identifier for, the Applicable License with every copy or phonorecord of each Derivative Work You distribute, publicly display, publicly perform, or publicly digitally perform; (II) You may not offer or impose any terms on the Derivative Works that restrict the terms of the Applicable License or the ability of a recipient of the Work to exercise the rights granted to that recipient under the terms of the Applicable License; (III) You must keep intact all notices that refer to the Applicable License and to the disclaimer of warranties; and, (IV) when You distribute, publicly display, publicly perform, or publicly digitally perform the Work, You may not impose any technological measures on the Derivative Work that restrict the ability of a recipient of the Derivative Work from You to exercise the rights granted to that recipient under the terms of the Applicable License. This Section 4(b) applies to the Derivative Work as incorporated in a Collective Work, but this does not require the Collective Work apart from the Derivative Work itself to be made subject to the terms of the Applicable License. If You distribute, publicly display, publicly perform, or publicly digitally perform the Work (as defined in Section 1 above) or any Derivative Works (as defined in Section 1 above) or Collective Works (as defined in Section 1 above), You must, unless a request has been made pursuant to Section 4(a), keep intact all copyright notices for the Work and provide, reasonable to the medium or means You are utilizing: (i) the name of the Original Author (or pseudonym, if applicable) if supplied, and/or (ii) if the Original Author and/or Licensor designate another party or parties (e.g. a sponsor institute, publishing entity, journal) for attribution (""Attribution Parties"") in Licensor\'s copyright notice, terms of service or by other reasonable means, the name of such party or parties; the title of the Work if supplied; to the extent reasonably practicable, the Uniform Resource Identifier, if any, that Licensor specifies to be associated with the Work, unless such URI does not refer to the copyright notice or licensing information for the Work; and, consistent with Section 3(b) in the case of a Derivative Work, a credit identifying the use of the Work in the Derivative Work (e.g., ""French translation of the Work by Original Author,"" or ""Screenplay based on original Work by Original Author""). The credit required by this Section 4(c) may be implemented in any reasonable manner; provided, however, that in the case of a Derivative Work or Collective Work, at a minimum such credit will appear, if a credit for all contributing authors of the Derivative Work or Collective Work appears, then as part of these credits and in a manner at least as prominent as the credits for the other contributing authors. For the avoidance of doubt, You may only use the credit required by this Section for the purpose of attribution in the manner set out above and, by exercising Your rights under this License, You may not implicitly or explicitly assert or imply any connection with, sponsorship or endorsement by the Original Author, Licensor and/or Attribution Parties, as appropriate, of You or Your use of the Work, without the separate, express prior written permission of the Original Author, Licensor and/or Attribution Parties. 5. Representations, Warranties and Disclaimer  UNLESS OTHERWISE MUTUALLY AGREED TO BY THE PARTIES IN WRITING, LICENSOR OFFERS THE WORK AS-IS AND ONLY TO THE EXTENT OF ANY RIGHTS HELD IN THE LICENSED WORK BY THE LICENSOR. THE LICENSOR MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE WORK, EXPRESS, IMPLIED, STATUTORY OR OTHERWISE, INCLUDING, WITHOUT LIMITATION, WARRANTIES OF TITLE, MARKETABILITY, MERCHANTIBILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OF ABSENCE OF ERRORS, WHETHER OR NOT DISCOVERABLE. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OF IMPLIED WARRANTIES, SO SUCH EXCLUSION MAY NOT APPLY TO YOU.  6. Limitation on Liability. EXCEPT TO THE EXTENT REQUIRED BY APPLICABLE LAW, IN NO EVENT WILL LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY FOR ANY SPECIAL, INCIDENTAL, CONSEQUENTIAL, PUNITIVE OR EXEMPLARY DAMAGES ARISING OUT OF THIS LICENSE OR THE USE OF THE WORK, EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.  7. Termination  This License and the rights granted hereunder will terminate automatically upon any breach by You of the terms of this License. Individuals or entities who have received Derivative Works or Collective Works from You under this License, however, will not have their licenses terminated provided such individuals or entities remain in full compliance with those licenses. Sections 1, 2, 5, 6, 7, and 8 will survive any termination of this License. Subject to the above terms and conditions, the license granted here is perpetual (for the duration of the applicable copyright in the Work). Notwithstanding the above, Licensor reserves the right to release the Work under different license terms or to stop distributing the Work at any time; provided, however that any such election will not serve to withdraw this License (or any other license that has been, or is required to be, granted under the terms of this License), and this License will continue in full force and effect unless terminated as stated above. 8. Miscellaneous  Each time You distribute or publicly digitally perform the Work (as defined in Section 1 above) or a Collective Work (as defined in Section 1 above), the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License. Each time You distribute or publicly digitally perform a Derivative Work, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License. If any provision of this License is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this License, and without further action by the parties to this agreement, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable. No term or provision of this License shall be deemed waived and no breach consented to unless such waiver or consent shall be in writing and signed by the party to be charged with such waiver or consent. This License constitutes the entire agreement between the parties with respect to the Work licensed here. There are no understandings, agreements or representations with respect to the Work not specified here. Licensor shall not be bound by any additional provisions that may appear in any communication from You. This License may not be modified without the mutual written agreement of the Licensor and Yo","usc-kt-order,knights-templar",2
654,https://github.com/githubhack/agar.io-Cheats.git,"/*The MIT License (MIT) Copyright (c) 2015 Apostolique Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposBot // @namespace   AposBot // @include     http://agar.io/* // @version     3.568 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposBotVersion = 3.568;  //TODO: Team mode //      Detect when people are merging //      Split to catch smaller targets //      Angle based cluster code //      Better wall code //      In team mode, make allies be obstacles.  Number.prototype.mod = function(n) {     return ((this % n) + n) % n; };  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data[""data""]);             console.log(""hmm: "" + data[""data""][""object""][""sha""]);             sha = data[""data""][""object""][""sha""];              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              $.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/bot.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm,"""");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"")+11,latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposBotVersion + 0.0000);                                   if(latestVersion > myVersion)                 {                     update(""aposBot"", ""bot.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/bot.user.js/"");                 }                 console.log(\'Current bot.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Apos Bot!"");  var f = window; var g = window.jQuery;  var aposBot = aposBot || {}; aposBot.name = ""AposBot "" + aposBotVersion; aposBot.mainLoop = function() {}; aposBot.utility = {};  var u = aposBot.utility;  u.splitDistance = 710; console.log(""Apos Bot!"");  if (f.botList == null) {     f.botList = [];     g(\'#locationUnknown\').append(g(\'<select id=""bList"" class=""form-control"" onchange=""setBotIndex($(this).val());"" />\'));     g(\'#locationUnknown\').addClass(\'form-group\'); }  for (var i = f.botList.length - 1; i >= 0; i--) {     if (f.botList[i][0] == ""Human"") {         f.botList.splice(i, 1);     } }   //Given an angle value that was gotten from valueAndleBased(), //returns a new value that scales it appropriately. u.paraAngleValue = function(angleValue, range) {     return (15 / (range[1])) * (angleValue * angleValue) - (range[1] / 6); };  u.valueAngleBased = function(angle, range) {     var leftValue = (angle - range[0]).mod(360);     var rightValue = (u.rangeToAngle(range) - angle).mod(360);      var bestValue = Math.min(leftValue, rightValue);      if (bestValue <= range[1]) {         return u.paraAngleValue(bestValue, range);     }     return -1; };  u.computeDistance = function(x1, y1, x2, y2) {     var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!     var ydis = y1 - y2;     var distance = Math.sqrt(xdis * xdis + ydis * ydis);      return distance; };  u.computeDistanceFromCircleEdge = function(x1, y1, x2, y2, s2) {     var tempD = u.computeDistance(x1, y1, x2, y2);      var offsetX = 0;     var offsetY = 0;      var ratioX = tempD / (x1 - x2);     var ratioY = tempD / (y1 - y2);      offsetX = x1 - (s2 / ratioX);     offsetY = y1 - (s2 / ratioY);      u.drawPoint(offsetX, offsetY, 5, """");      return u.computeDistance(x2, y2, offsetX, offsetY); };  u.compareSize = function(player1, player2, ratio) {     if (player1.size * player1.size * ratio < player2.size * player2.size) {         return true;     }     return false; };  u.canSplit = function(player1, player2) {     return u.compareSize(player1, player2, 2.66) && !u.compareSize(player1, player2, 7); };  u.isItMe = function(player, cell) {     if (u.getMode() == "":teams"") {         var currentColor = player[0].color;         var currentRed = currentColor.substring(1,3);         var currentGreen = currentColor.substring(3,5);         var currentBlue = currentColor.substring(5,7);                  var currentTeam = u.getTeam(currentRed, currentGreen, currentBlue);          var cellColor = cell.color;          var cellRed = cellColor.substring(1,3);         var cellGreen = cellColor.substring(3,5);         var cellBlue = cellColor.substring(5,7);          var cellTeam = getTeam(cellRed, cellGreen, cellBlue);          if (currentTeam == cellTeam && !cell.isVirus()) {             return true;         }          //console.log(""COLOR: "" + color);      } else {         for (var i = 0; i < player.length; i++) {             if (cell.id == player[i].id) {                 return true;             }         }     }     return false; };  u.getTeam = function(red, green, blue) {     if (red == ""ff"") {         return 0;     } else if (green == ""ff"") {         return 1;     }     return 2; };  u.isFood = function(blob, cell) {     if (!cell.isVirus() && u.compareSize(cell, blob, 1.33) || (cell.size <= 11)) {         return true;     }     return false; } ; u.isThreat = function(blob, cell) {     if (!cell.isVirus() && u.isFood(cell, blob)) {         return true;     }     return false;     /*if (!cell.isVirus() && compareSize(blob, cell, 1.33)) {         return true;     }     return false;*/ };  u.isVirus = function(blob, cell) {     if (cell.isVirus() && u.compareSize(cell, blob, 1.30)) {         return true;     } else if (cell.isVirus() && cell.color.substring(3,5).toLowerCase() != ""ff"") {         return true;     }     return false; };  u.isSplitTarget = function(blob, cell) {     /*if (u.canSplit(cell, blob)) {         return true;     }*/     return false; };  u.getTimeToRemerge = function(mass){     return ((mass*0.02) + 30); };  u.separateListBasedOnFunction = function(listToUse, blob) {     var foodElementList = [];     var threatList = [];     var virusList = [];     var splitTargetList = [];      var player = u.getPlayer();      Object.keys(listToUse).forEach(function(element, index) {         var isMe = u.isItMe(player, listToUse[element]);          if (!isMe) {             if (u.isFood(blob, listToUse[element])/* && listToUse[element].isNotMoving()*/) {                 //IT\'S FOOD!                 foodElementList.push(listToUse[element]);                  if (u.isSplitTarget(blob, listToUse[element])) {                     u.drawCircle(listToUse[element].x, listToUse[element].y, listToUse[element].size + 50, 7);                     u.splitTargetList.push(listToUse[element]);                 }             } else if (u.isThreat(blob, listToUse[element])) {                 //IT\'S DANGER!                 threatList.push(listToUse[element]);             } else if (u.isVirus(blob, listToUse[element])) {                 //IT\'S VIRUS!                 virusList.push(listToUse[element]);             }         }/*else if(isMe && (getBlobCount(getPlayer()) > 0)){             //Attempt to make the other cell follow the mother one             foodElementList.push(listToUse[element]);         }*/     });      foodList = [];     for (var i = 0; i < foodElementList.length; i++) {         foodList.push([foodElementList[i].x, foodElementList[i].y, foodElementList[i].size]);     }      return [foodList, threatList, virusList, splitTargetList]; };  u.getAll = function(blob) {     var dotList = [];     var player = u.getPlayer();     var interNodes = u.getMemoryCells();      dotList = u.separateListBasedOnFunction(interNodes, blob);      return dotList; };  u.clusterFood = function(foodList, blobSize) {     var clusters = [];     var addedCluster = false;      //1: x     //2: y     //3: size or value     //4: Angle, not set here.      for (var i = 0; i < foodList.length; i++) {         for (var j = 0; j < clusters.length; j++) {             if (u.computeDistance(foodList[i][0], foodList[i][1], clusters[j][0], clusters[j][1]) < blobSize * 1.5) {                 clusters[j][0] = (foodList[i][0] + clusters[j][0]) / 2;                 clusters[j][1] = (foodList[i][1] + clusters[j][1]) / 2;                 clusters[j][2] += foodList[i][2];                 addedCluster = true;                 break;             }         }         if (!addedCluster) {             clusters.push([foodList[i][0], foodList[i][1], foodList[i][2], 0]);         }         addedCluster = false;     }     return clusters; };  u.getAngle = function(x1, y1, x2, y2) {     //Handle vertical and horizontal lines.      if (x1 == x2) {         if (y1 < y2) {             return 271;             //return 89;         } else {             return 89;         }     }      return (Math.round(Math.atan2(-(y1 - y2), -(x1 - x2)) / Math.PI * 180 + 180)); };  u.slope = function(x1, y1, x2, y2) {     var m = (y1 - y2) / (x1 - x2);      return m; };  u.slopeFromAngle = function(degree) {     if (degree == 270) {         degree = 271;     } else if (degree == 90) {         degree = 91;     }     return Math.tan((degree - 180) / 180 * Math.PI); };  //Given two points on a line, finds the slope of a perpendicular line crossing it. u.inverseSlope = function(x1, y1, x2, y2) {     var m = slope(x1, y1, x2, y2);     return (-1) / m; };  //Given a slope and an offset, returns two points on that line. u.pointsOnLine = function(slope, useX, useY, distance) {     var b = useY - slope * useX;     var r = Math.sqrt(1 + slope * slope);      var newX1 = (useX + (distance / r));     var newY1 = (useY + ((distance * slope) / r));     var newX2 = (useX + ((-distance) / r));     var newY2 = (useY + (((-distance) * slope) / r));      return [         [newX1, newY1],         [newX2, newY2]     ]; };  u.followAngle = function(angle, useX, useY, distance) {     var slope = u.slopeFromAngle(angle);     var coords = u.pointsOnLine(slope, useX, useY, distance);      var side = (angle - 90).mod(360);     if (side < 180) {         return coords[1];     } else {         return coords[0];     } };  //Using a line formed from point a to b, tells if point c is on S side of that line. u.isSideLine = function(a, b, c) {     if ((b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0) {         return true;     }     return false; };  //angle range2 is within angle range2 //an Angle is a point and a distance between an other point [5, 40] u.angleRangeIsWithin = function(range1, range2) {     if (range2[0] == (range2[0] + range2[1]).mod(360)) {         return true;     }     //console.log(""r1: "" + range1[0] + "", "" + range1[1] + "" ... r2: "" + range2[0] + "", "" + range2[1]);      var distanceFrom0 = (range1[0] - range2[0]).mod(360);     var distanceFrom1 = (range1[1] - range2[0]).mod(360);      if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 < distanceFrom1) {         return true;     }     return false; };  u.angleRangeIsWithinInverted = function(range1, range2) {     var distanceFrom0 = (range1[0] - range2[0]).mod(360);     var distanceFrom1 = (range1[1] - range2[0]).mod(360);      if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 > distanceFrom1) {         return true;     }     return false; };  u.angleIsWithin = function(angle, range) {     var diff = (u.rangeToAngle(range) - angle).mod(360);     if (diff >= 0 && diff <= range[1]) {         return true;     }     return false; };  u.rangeToAngle = function(range) {     return (range[0] + range[1]).mod(360); };  u.anglePair = function(range) {     return (range[0] + "", "" + u.rangeToAngle(range) + "" range: "" + range[1]); };  u.computeAngleRanges = function(blob1, blob2) {     var mainAngle = u.getAngle(blob1.x, blob1.y, blob2.x, blob2.y);     var leftAngle = (mainAngle - 90).mod(360);     var rightAngle = (mainAngle + 90).mod(360);      var blob1Left = u.followAngle(leftAngle, blob1.x, blob1.y, blob1.size);     var blob1Right = u.followAngle(rightAngle, blob1.x, blob1.y, blob1.size);      var blob2Left = u.followAngle(rightAngle, blob2.x, blob2.y, blob2.size);     var blob2Right = u.followAngle(leftAngle, blob2.x, blob2.y, blob2.size);      var blob1AngleLeft = u.getAngle(blob2.x, blob2.y, blob1Left[0], blob1Left[1]);     var blob1AngleRight = u.getAngle(blob2.x, blob2.y, blob1Right[0], blob1Right[1]);      var blob2AngleLeft = u.getAngle(blob1.x, blob1.y, blob2Left[0], blob2Left[1]);     var blob2AngleRight = u.getAngle(blob1.x, blob1.y, blob2Right[0], blob2Right[1]);      var blob1Range = (blob1AngleRight - blob1AngleLeft).mod(360);     var blob2Range = (blob2AngleRight - blob2AngleLeft).mod(360);      var tempLine = u.followAngle(blob2AngleLeft, blob2Left[0], blob2Left[1], 400);     //drawLine(blob2Left[0], blob2Left[1], tempLine[0], tempLine[1], 0);      if ((blob1Range / blob2Range) > 1) {         drawPoint(blob1Left[0], blob1Left[1], 3, """");         drawPoint(blob1Right[0], blob1Right[1], 3, """");         drawPoint(blob1.x, blob1.y, 3, """" + blob1Range + "", "" + blob2Range + "" R: "" + (Math.round((blob1Range / blob2Range) * 1000) / 1000));     }      //drawPoint(blob2.x, blob2.y, 3, """" + blob1Range); };  u.debugAngle = function(angle, text) {     var player = u.getPlayer();     var line1 = u.followAngle(angle, player[0].x, player[0].y, 300);     u.drawLine(player[0].x, player[0].y, line1[0], line1[1], 5);     u.drawPoint(line1[0], line1[1], 5, """" + text); };  //TODO: Don\'t let this function do the radius math. u.getEdgeLinesFromPoint = function(blob1, blob2, radius) {     var px = blob1.x;     var py = blob1.y;      var cx = blob2.x;     var cy = blob2.y;      //var radius = blob2.size;      /*if (blob2.isVirus()) {         radius = blob1.size;     } else if(canSplit(blob1, blob2)) {         radius += splitDistance;     } else {         radius += blob1.size * 2;     }*/      var shouldInvert = false;      var tempRadius = u.computeDistance(px, py, cx, cy);     if (tempRadius <= radius) {         radius = tempRadius - 5;         shouldInvert = true;     }      var dx = cx - px;     var dy = cy - py;     var dd = Math.sqrt(dx * dx + dy * dy);     var a = Math.asin(radius / dd);     var b = Math.atan2(dy, dx);      var t = b - a;     var ta = {         x: radius * Math.sin(t),         y: radius * -Math.cos(t)     };      t = b + a;     var tb = {         x: radius * -Math.sin(t),         y: radius * Math.cos(t)     };      var angleLeft = u.getAngle(cx + ta.x, cy + ta.y, px, py);     var angleRight = u.getAngle(cx + tb.x, cy + tb.y, px, py);     var angleDistance = (angleRight - angleLeft).mod(360);      /*if (shouldInvert) {         var temp = angleLeft;         angleLeft = (angleRight + 180).mod(360);         angleRight = (temp + 180).mod(360);         angleDistance = (angleRight - angleLeft).mod(360);     }*/      return [angleLeft, angleDistance, [cx + tb.x, cy + tb.y],         [cx + ta.x, cy + ta.y]     ]; };  u.invertAngle = function(range) {     var angle1 = u.rangeToAngle(badAngles[i]);     var angle2 = (badAngles[i][0] - angle1).mod(360);     return [angle1, angle2]; };  u.addWall = function(listToUse, blob) {     //var mapSizeX = Math.abs(f.getMapStartX - f.getMapEndX);     //var mapSizeY = Math.abs(f.getMapStartY - f.getMapEndY);     //var distanceFromWallX = mapSizeX/3;     //var distanceFromWallY = mapSizeY/3;     var distanceFromWallY = 2000;     var distanceFromWallX = 2000;     if (blob.x < f.getMapStartX() + distanceFromWallX) {         //LEFT         //console.log(""Left"");         listToUse.push([             [90, true],             [270, false], u.computeDistance(getMapStartX(), blob.y, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(90, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(270, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.y < getMapStartY() + distanceFromWallY) {         //TOP         //console.log(""TOP"");         listToUse.push([             [180, true],             [0, false], u.computeDistance(blob.x, getMapStartY, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(180, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(360, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.x > getMapEndX() - distanceFromWallX) {         //RIGHT         //console.log(""RIGHT"");         listToUse.push([             [270, true],             [90, false], u.computeDistance(getMapEndX(), blob.y, blob.x, blob.y)         ]);         var lineLeft = u.followAngle(270, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(90, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     if (blob.y > getMapEndY() - distanceFromWallY) {         //BOTTOM         //console.log(""BOTTOM"");         listToUse.push([             [0, true],             [180, false], u.computeDistance(blob.x, getMapEndY(), blob.x, blob.y)         ]);         var lineLeft = u.followAngle(0, blob.x, blob.y, 190 + blob.size);         var lineRight = u.followAngle(180, blob.x, blob.y, 190 + blob.size);         u.drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);         u.drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);     }     return listToUse; };  //listToUse contains angles in the form of [angle, boolean]. //boolean is true when the range is starting. False when it\'s ending. //range = [[angle1, true], [angle2, false]]  u.getAngleIndex = function(listToUse, angle) {     if (listToUse.length == 0) {         return 0;     }      for (var i = 0; i < listToUse.length; i++) {         if (angle <= listToUse[i][0]) {             return i;         }     }      return listToUse.length; };  u.addAngle = function(listToUse, range) {     //#1 Find first open element     //#2 Try to add range1 to the list. If it is within other range, don\'t add it, set a boolean.     //#3 Try to add range2 to the list. If it is withing other range, don\'t add it, set a boolean.      //TODO: Only add the new range at the end after the right stuff has been removed.      var newListToUse = listToUse.slice();      var startIndex = 1;      if (newListToUse.length > 0 && !newListToUse[0][1]) {         startIndex = 0;     }      var startMark = u.getAngleIndex(newListToUse, range[0][0]);     var startBool = startMark.mod(2) != startIndex;      var endMark = u.getAngleIndex(newListToUse, range[1][0]);     var endBool = endMark.mod(2) != startIndex;      var removeList = [];      if (startMark != endMark) {         //Note: If there is still an error, this would be it.         var biggerList = 0;         if (endMark == newListToUse.length) {             biggerList = 1;         }          for (var i = startMark; i < startMark + (endMark - startMark).mod(newListToUse.length + biggerList); i++) {             removeList.push((i).mod(newListToUse.length));         }     } else if (startMark < newListToUse.length && endMark < newListToUse.length) {         var startDist = (newListToUse[startMark][0] - range[0][0]).mod(360);         var endDist = (newListToUse[endMark][0] - range[1][0]).mod(360);          if (startDist < endDist) {             for (var i = 0; i < newListToUse.length; i++) {                 removeList.push(i);             }         }     }      removeList.sort(function(a, b){return b-a;});      for (var i = 0; i < removeList.length; i++) {         newListToUse.splice(removeList[i], 1);     }      if (startBool) {         newListToUse.splice(u.getAngleIndex(newListToUse, range[0][0]), 0, range[0]);     }     if (endBool) {         newListToUse.splice(u.getAngleIndex(newListToUse, range[1][0]), 0, range[1]);     }      return newListToUse; };  u.getAngleRange = function(blob1, blob2, index, radius) {     var angleStuff = u.getEdgeLinesFromPoint(blob1, blob2, radius);      var leftAngle = angleStuff[0];     var rightAngle = u.rangeToAngle(angleStuff);     var difference = angleStuff[1];      u.drawPoint(angleStuff[2][0], angleStuff[2][1], 3, """");     u.drawPoint(angleStuff[3][0], angleStuff[3][1], 3, """");      //console.log(""Adding badAngles: "" + leftAngle + "", "" + rightAngle + "" diff: "" + difference);      var lineLeft = u.followAngle(leftAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);     var lineRight = u.followAngle(rightAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);      if (blob2.isVirus()) {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 6);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 6);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 6);     } else if(getCells().hasOwnProperty(blob2.id)) {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 0);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 0);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 0);     } else {         u.drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 3);         u.drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 3);         u.drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 3);     }      return [leftAngle, difference]; };  //Given a list of conditions, shift the angle to the closest available spot respecting the range given. u.shiftAngle = function(listToUse, angle, range) {     //TODO: shiftAngle needs to respect the range! DONE?     for (var i = 0; i < listToUse.length; i++) {         if (u.angleIsWithin(angle, listToUse[i])) {             //console.log(""Shifting needed!"");              var angle1 = listToUse[i][0];             var angle2 = u.rangeToAngle(listToUse[i]);              var dist1 = (angle - angle1).mod(360);             var dist2 = (angle2 - angle).mod(360);              if (dist1 < dist2) {                 if (u.angleIsWithin(angle1, range)) {                     return angle1;                 } else {                     return angle2;                 }             } else {                 if (u.angleIsWithin(angle2, range)) {                     return angle2;                 } else {                     return angle1;                 }             }         }     }     //console.log(""No Shifting Was needed!"");     return angle; };  /**  * This is the main bot logic. This is called quite often.  * @param  followMouse Is a boolean. If set to true, it means the user is asking for the bot to follow the mouse coordinates.  * @return A 2 dimensional array with coordinates for every cells.  [[x, y], [x, y]]  */ u.findDestination = function(followMouse) {     var player = getPlayer();     var interNodes = getMemoryCells();     //console.warn(""findDestination(followMouse) was called from line "" + arguments.callee.caller.toString());      if ( /*!toggle*/ 1) {          //The following code converts the mouse position into an         //absolute game coordinate.         var useMouseX = u.screenToGameX(getMouseX());         var useMouseY = u.screenToGameY(getMouseY());         tempPoint = [useMouseX, useMouseY, 1];          //The current destination that the cells were going towards.         var tempMoveX = getPointX();         var tempMoveY = getPointY();          //This variable will be returned at the end.         //It will contain the destination choices for all the cells.         //BTW!!! ERROR ERROR ABORT MISSION!!!!!!! READ BELOW -----------         //         //SINCE IT\'S STUPID NOW TO ASK EACH CELL WHERE THEY WANT TO GO,         //THE BOT SHOULD SIMPLY PICK ONE AND THAT\'S IT, I MEAN WTF....         var destinationChoices = []; //destination, size, danger          //Just to make sure the player is alive.         if (player.length > 0) {              //Loop through all the player\'s cells.             for (var k = 0; k < player.length; k++) {                 if (true) {                     u.drawPoint(player[k].x, player[k].y + player[k].size, 0, """" + (getLastUpdate() - player[k].birth) + "" / "" + (30000 + (player[k].birthMass * 57) - (getLastUpdate() - player[k].birth)) + "" / "" + player[k].birthMass);                 }             }               //Loops only for one cell for now.             for (var k = 0; /*k < player.length*/ k < 1; k++) {                  //console.log(""Working on blob: "" + k);                  u.drawCircle(player[k].x, player[k].y, player[k].size + u.splitDistance, 5);                 //drawPoint(player[0].x, player[0].y - player[0].size, 3, """" + Math.floor(player[0].x) + "", "" + Math.floor(player[0].y));                  //var allDots = processEverything(interNodes);                  //loop through everything that is on the screen and                 //separate everything in it\'s own category.                 var allIsAll = u.getAll(player[k]);                  //The food stored in element 0 of allIsAll                 var allPossibleFood = allIsAll[0];                 //The threats are stored in element 1 of allIsAll                 var allPossibleThreats = allIsAll[1];                 //The viruses are stored in element 2 of allIsAll                 var allPossibleViruses = allIsAll[2];                  //The bot works by removing angles in which it is too                 //dangerous to travel towards to.                 var badAngles = [];                 var obstacleList = [];                  var isSafeSpot = true;                 var isMouseSafe = true;                  var clusterAllFood = u.clusterFood(allPossibleFood, player[k].size);                  //console.log(""Looking for enemies!"");                  //Loop through all the cells that were identified as threats.                 for (var i = 0; i < allPossibleThreats.length; i++) {                      var enemyDistance = u.computeDistanceFromCircleEdge(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y, allPossibleThreats[i].size);                      allPossibleThreats[i].enemyDist = enemyDistance;                 }                  /*allPossibleThreats.sort(function(a, b){                     return a.enemyDist-b.enemyDist;                 })*/                  for (var i = 0; i < allPossibleThreats.length; i++) {                      var enemyDistance = u.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                      var splitDangerDistance = allPossibleThreats[i].size + u.splitDistance + 150;                      var normalDangerDistance = allPossibleThreats[i].size + 150;                      var shiftDistance = player[k].size;                      //console.log(""Found distance."");                      var enemyCanSplit = u.canSplit(player[k], allPossibleThreats[i]);                                          for (var j = clusterAllFood.length - 1; j >= 0 ; j--) {                         var secureDistance = (enemyCanSplit ? splitDangerDistance : normalDangerDistance);                         if (u.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, clusterAllFood[j][0], clusterAllFood[j][1]) < secureDistance)                             clusterAllFood.splice(j, 1);                     }                      //console.log(""Removed some food."");                      if (enemyCanSplit) {                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance, 0);                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance + shiftDistance, 6);                     } else {                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance, 3);                         u.drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance + shiftDistance, 6);                     }                      if (allPossibleThreats[i].danger && getLastUpdate() - allPossibleThreats[i].dangerTimeOut > 1000) {                          allPossibleThreats[i].danger = false;                     }                      /*if ((enemyCanSplit && enemyDistance < splitDangerDistance) ||                         (!enemyCanSplit && enemyDistance < normalDangerDistance)) {                         allPossibleThreats[i].danger = true;                         allPossibleThreats[i].dangerTimeOut = f.getLastUpdate();                     }*/                      //console.log(""Figured out who was important."");                      if ((enemyCanSplit && enemyDistance < splitDangerDistance) || (enemyCanSplit && allPossibleThreats[i].danger)) {                          badAngles.push(u.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance).concat(allPossibleThreats[i].enemyDist));                      } else if ((!enemyCanSplit && enemyDistance < normalDangerDistance) || (!enemyCanSplit && allPossibleThreats[i].danger)) {                          badAngles.push(u.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance).concat(allPossibleThreats[i].enemyDist));                      } else if (enemyCanSplit && enemyDistance < splitDangerDistance + shiftDistance) {                         var tempOb = u.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance + shiftDistance);                         var angle1 = tempOb[0];                         var angle2 = u.rangeToAngle(tempOb);                          obstacleList.push([[angle1, true], [angle2, false]]);                     } else if (!enemyCanSplit && enemyDistance < normalDangerDistance + shiftDistance) {                         var tempOb = u.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance + shiftDistance);                         var angle1 = tempOb[0];                         var angle2 = u.rangeToAngle(tempOb);                          obstacleList.push([[angle1, true], [angle2, false]]);                     }                     //console.log(""Done with enemy: "" + i);                 }                  //console.log(""Done looking for enemies!"");                  var goodAngles = [];                 var stupidList = [];                  for (var i = 0; i < allPossibleViruses.length; i++) {                     if (player[k].size < allPossibleViruses[i].size) {                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size + 10, 3);                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size * 2, 6);                      } else {                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size + 50, 3);                         u.drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size * 2, 6);                     }                 }                  for (var i = 0; i < allPossibleViruses.length; i++) {                     var virusDistance = u.computeDistance(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].x, player[k].y);                     if (player[k].size < allPossibleViruses[i].size) {                         if (virusDistance < (allPossibleViruses[i].size * 2)) {                             var tempOb = u.getAngleRange(player[k], allPossibleViruses[i], i, allPossibleViruses[i].size + 10);                             var angle1 = tempOb[0];                             var angle2 = u.rangeToAngle(tempOb);                             obstacleList.push([[angle1, true], [angle2, false]]);                         }                     } else {                         if (virusDistance < (player[k].size * 2)) {                             var tempOb = u.getAngleRange(player[k], allPossibleViruses[i], i, player[k].size + 50);                             var angle1 = tempOb[0];                             var angle2 = u.rangeToAngle(tempOb);                             obstacleList.push([[angle1, true], [angle2, false]]);                         }                     }                 }                  if (badAngles.length > 0) {                     //NOTE: This is only bandaid wall code. It\'s not the best way to do it.                     stupidList = u.addWall(stupidList, player[k]);                 }                  for (var i = 0; i < badAngles.length; i++) {                     var angle1 = badAngles[i][0];                     var angle2 = u.rangeToAngle(badAngles[i]);                     stupidList.push([[angle1, true], [angle2, false], badAngles[i][2]]);                 }                  //stupidList.push([[45, true], [135, false]]);                 //stupidList.push([[10, true], [200, false]]);                  stupidList.sort(function(a, b){                     //console.log(""Distance: "" + a[2] + "", "" + b[2]);                     return a[2]-b[2];                 });                  //console.log(""Added random noob stuff."");                  var sortedInterList = [];                 var sortedObList = [];                  for (var i = 0; i < stupidList.length; i++) {                     //console.log(""Adding to sorted: "" + stupidList[i][0][0] + "", "" + stupidList[i][1][0]);                     var tempList = u.addAngle(sortedInterList, stupidList[i]);                      if (tempList.length == 0) {                         console.log(""MAYDAY IT\'S HAPPENING!"");                         break;                     } else {                         sortedInterList = tempList;                     }                 }                  for (var i = 0; i < obstacleList.length; i++) {                     sortedObList = u.addAngle(sortedObList, obstacleList[i]);                      if (sortedObList.length == 0) {                         break;                     }                 }                  var offsetI = 0;                 var obOffsetI = 1;                  if (sortedInterList.length > 0 && sortedInterList[0][1]) {                     offsetI = 1;                 }                 if (sortedObList.length > 0 && sortedObList[0][1]) {                     obOffsetI = 0;                 }                  var goodAngles = [];                 var obstacleAngles = [];                  for (var i = 0; i < sortedInterList.length; i += 2) {                     var angle1 = sortedInterList[(i + offsetI).mod(sortedInterList.length)][0];                     var angle2 = sortedInterList[(i + 1 + offsetI).mod(sortedInterList.length)][0];                     var diff = (angle2 - angle1).mod(360);                     goodAngles.push([angle1, diff]);                 }                  for (var i = 0; i < sortedObList.length; i += 2) {                     var angle1 = sortedObList[(i + obOffsetI).mod(sortedObList.length)][0];                     var angle2 = sortedObList[(i + 1 + obOffsetI).mod(sortedObList.length)][0];                     var diff = (angle2 - angle1).mod(360);                     obstacleAngles.push([angle1, diff]);                 }                  for (var i = 0; i < goodAngles.length; i++) {                     var line1 = u.followAngle(goodAngles[i][0], player[k].x, player[k].y, 100 + player[k].size);                     var line2 = u.followAngle((goodAngles[i][0] + goodAngles[i][1]).mod(360), player[k].x, player[k].y, 100 + player[k].size);                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 1);                     u.drawLine(player[k].x, player[k].y, line2[0], line2[1], 1);                      u.drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 1);                      //drawPoint(player[0].x, player[0].y, 2, """");                      u.drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                     u.drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                 }                  for (var i = 0; i < obstacleAngles.length; i++) {                     var line1 = u.followAngle(obstacleAngles[i][0], player[k].x, player[k].y, 50 + player[k].size);                     var line2 = u.followAngle((obstacleAngles[i][0] + obstacleAngles[i][1]).mod(360), player[k].x, player[k].y, 50 + player[k].size);                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 6);                     u.drawLine(player[k].x, player[k].y, line2[0], line2[1], 6);                      u.drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 6);                      //drawPoint(player[0].x, player[0].y, 2, """");                      u.drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                     u.drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                 }                  if (followMouse && goodAngles.length == 0) {                     //This is the follow the mouse mode                     var distance = u.computeDistance(player[k].x, player[k].y, tempPoint[0], tempPoint[1]);                      var shiftedAngle = u.shiftAngle(obstacleAngles, u.getAngle(tempPoint[0], tempPoint[1], player[k].x, player[k].y), [0, 360]);                      var destination = u.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                      destinationChoices = destination;                     u.drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                     //tempMoveX = destination[0];                     //tempMoveY = destination[1];                  } else if (goodAngles.length > 0) {                     var bIndex = goodAngles[0];                     var biggest = goodAngles[0][1];                     for (var i = 1; i < goodAngles.length; i++) {                         var size = goodAngles[i][1];                         if (size > biggest) {                             biggest = size;                             bIndex = goodAngles[i];                         }                     }                     var perfectAngle = (bIndex[0] + bIndex[1] / 2).mod(360);                      perfectAngle = u.shiftAngle(obstacleAngles, perfectAngle, bIndex);                      var line1 = u.followAngle(perfectAngle, player[k].x, player[k].y, verticalDistance());                      destinationChoices = line1;                     u.drawLine(player[k].x, player[k].y, line1[0], line1[1], 7);                     //tempMoveX = line1[0];                     //tempMoveY = line1[1];                 } else if (badAngles.length > 0 && goodAngles == 0) {                     //When there are enemies around but no good angles                     //You\'re likely screwed. (This should never happen.)                      console.log(""Failed"");                     destinationChoices = [tempMoveX, tempMoveY];                     /*var angleWeights = [] //Put weights on the angles according to enemy distance                     for (var i = 0; i < allPossibleThreats.length; i++){                         var dist = computeDistance(player[k].x, player[k].y, allPossibleThreats[i].x, allPossibleThreats[i].y);                         var angle = getAngle(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                         angleWeights.push([angle,dist]);                     }                     var maxDist = 0;                     var finalAngle = 0;                     for (var i = 0; i < angleWeights.length; i++){                         if (angleWeights[i][1] > maxDist){                             maxDist = angleWeights[i][1];                             finalAngle = (angleWeights[i][0] + 180).mod(360);                         }                     }                     var line1 = followAngle(finalAngle,player[k].x,player[k].y,f.verticalDistance());                     drawLine(player[k].x, player[k].y, line1[0], line1[1], 2);                     destinationChoices.push(line1);*/                 } else if (clusterAllFood.length > 0) {                     for (var i = 0; i < clusterAllFood.length; i++) {                         //console.log(""mefore: "" + clusterAllFood[i][2]);                         //This is the cost function. Higher is better.                              var clusterAngle = u.getAngle(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                              clusterAllFood[i][2] = clusterAllFood[i][2] * 6 - u.computeDistance(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                             //console.log(""Current Value: "" + clusterAllFood[i][2]);                              //(goodAngles[bIndex][1] / 2 - (Math.abs(perfectAngle - clusterAngle)));                              clusterAllFood[i][3] = clusterAngle;                              u.drawPoint(clusterAllFood[i][0], clusterAllFood[i][1], 1, """");                             //console.log(""After: "" + clusterAllFood[i][2]);                     }                      var bestFoodI = 0;                     var bestFood = clusterAllFood[0][2];                     for (var i = 1; i < clusterAllFood.length; i++) {                         if (bestFood < clusterAllFood[i][2]) {                             bestFood = clusterAllFood[i][2];                             bestFoodI = i;                         }                     }                      //console.log(""Best Value: "" + clusterAllFood[bestFoodI][2]);                      var distance = u.computeDistance(player[k].x, player[k].y, clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1]);                      var shiftedAngle = u.shiftAngle(obstacleAngles, u.getAngle(clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1], player[k].x, player[k].y), [0, 360]);                      var destination = u.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                      destinationChoices = destination;                     //tempMoveX = destination[0];                     //tempMoveY = destination[1];                     u.drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                 } else {                     //If there are no enemies around and no food to eat.                     destinationChoices = [tempMoveX, tempMoveY];                 }                  u.drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """");                 //drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """" + Math.floor(computeDistance(tempPoint[0], tempPoint[1], I, J)));                 //drawLine(tempPoint[0], tempPoint[1], player[0].x, player[0].y, 6);                 //console.log(""Slope: "" + slope(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Angle: "" + getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Side: "" + (getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) - 90).mod(360));                 tempPoint[2] = 1;                  //console.log(""Done working on blob: "" + i);             }              //TODO: Find where to go based on destinationChoices.             /*var dangerFound = false;             for (var i = 0; i < destinationChoices.length; i++) {                 if (destinationChoices[i][2]) {                     dangerFound = true;                     break;                 }             }             destinationChoices.sort(function(a, b){return b[1] - a[1]});             if (dangerFound) {                 for (var i = 0; i < destinationChoices.length; i++) {                     if (destinationChoices[i][2]) {                         tempMoveX = destinationChoices[i][0][0];                         tempMoveY = destinationChoices[i][0][1];                         break;                     }                 }             } else {                 tempMoveX = destinationChoices.peek()[0][0];                 tempMoveY = destinationChoices.peek()[0][1];                 //console.log(""Done "" + tempMoveX + "", "" + tempMoveY);             }*/         }         //console.log(""MOVING RIGHT NOW!"");          //console.log(""______Never lied ever in my life."");          return destinationChoices;     } };  /**  * A conversion from the screen\'s horizontal coordinate system  * to the game\'s horizontal coordinate system.  * @param x in the screen\'s coordinate system  * @return x in the game\'s coordinate system  */ u.screenToGameX = function(x) {     return (x - getWidth() / 2) / getRatio() + getX(); };  /**  * A conversion from the screen\'s vertical coordinate system  * to the game\'s vertical coordinate system.  * @param y in the screen\'s coordinate system  * @return y in the game\'s coordinate system  */ u.screenToGameY = function(y) {     return (y - getHeight() / 2) / getRatio() + getY(); };  u.drawPoint = function(x_1, y_1, drawColor, text) {     f.drawPoint(x_1, y_1, drawColor, text); };  u.drawArc = function(x_1, y_1, x_2, y_2, x_3, y_3, drawColor) {     f.drawArc(x_1, y_1, x_2, y_2, x_3, y_3, drawColor); };  u.drawLine = function(x_1, y_1, x_2, y_2, drawColor) {     f.drawLine(x_1, y_1, x_2, y_2, drawColor); };  u.drawCircle = function(x_1, y_1, radius, drawColor) {     f.drawCircle(x_1, y_1, radius, drawColor); };  /**  * Some horse shit of some sort.  * @return Horse Shit  */ u.screenDistance = function() {     var temp = f.getScreenDistance();     return temp; };  /**  * Tells you if the game is in Dark mode.  * @return Boolean for dark mode.  */ u.getDarkBool = function() {     return f.getDarkBool(); };  /**  * Tells you if the mass is shown.  * @return Boolean for player\'s mass.  */ u.getMassBool = function() {     return f.getMassBool(); };  /**  * This is a copy of everything that is shown on screen.  * Normally stuff will time out when off the screen, this  * memorizes everything that leaves the screen for a little  * while longer.  * @return The memory object.  */ u.getMemoryCells = function() {     return f.getMemoryCells(); };  /**  * [getCellsArray description]  * @return {[type]} [description]  */ u.getCellsArray = function() {     return f.getCellsArray(); };  /**  * This is the original ""getMemoryCells"" without the memory part.  * @return Non memorized object.  */ u.getCells = function() {     return f.getCells(); };  /**  * Returns an array with all the player\'s cells.  * @return Player\'s cells  */ u.getPlayer = function () {     return f.getPlayer(); };  /**  * The canvas\' width.  * @return Integer Width  */ u.getWidth = function() {     return f.getWidth(); };  /**  * The canvas\' height  * @return Integer Height  */ u.getHeight = function() {     return f.getHeight(); };  /**  * Scaling ratio of the canvas. The bigger this ration,  * the further that you see.  * @return Screen scaling ratio.  */ u.getRatio = function() {     return f.getRatio(); };  /**  * [getOffsetX description]  * @return {[type]} [description]  */ u.getOffsetX = function() {     return f.getOffsetX(); };  u.getOffsetY = function() {     return f.getOffsetY(); };  u.getX = function() {     return f.getX(); };  u.getY = function() {     return f.getY(); };  u.getPointX = function() {     return f.getPointX(); };  u.getPointY = function() {     return f.getPointY(); };  /**  * The X location of the mouse.  * @return Integer X  */ u.getMouseX = function() {     return f.getMouseX(); };  /**  * The Y location of the mouse.  * @return Integer Y  */ u.getMouseY = function() {     return f.getMouseY(); };  /**  * A timestamp since the last time the server sent any data.  * @return Last update timestamp  */ u.getUpdate = function() {     return f.getLastUpdate(); };  /**  * The game\'s current mode. ("":ffa"", "":experimental"", "":teams"". "":party"")  * @return {[type]} [description]  */ u.getMode = function() {     return f.getMode(); };  f.botList.push([""AposBot "" + aposBotVersion, u.findDestination]);  u.bList = g(\'#bList\'); g(\'<option />\', {value: (f.botList.length - 1), text: ""AposBot""}).appendTo(bList);",,2
655,https://github.com/osman21/agarbot.js.git,"/*The MIT License (MIT)  Copyright (c) 2015 Apostolique  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.*/  // ==UserScript== // @name        AposBot // @namespace   AposBot // @include     http://agarz.com/* // @version     3.645 // @grant       none // @author      http://www.twitch.tv/apostolique // ==/UserScript==  var aposBotVersion = 3.645;  //TODO: Team mode //      Detect when people are merging //      Split to catch smaller targets //      Angle based cluster code //      Better wall code //      In team mode, make allies be obstacles.  /* Number.prototype.mod = function(n) {     return ((this % n) + n) % n; }; */  Array.prototype.peek = function() {     return this[this.length - 1]; };  var sha = ""efde0488cc2cc176db48dd23b28a20b90314352b""; function getLatestCommit() {     window.jQuery.ajax({             url: ""https://api.github.com/repos/apostolique/Agar.io-bot/git/refs/heads/master"",             cache: false,             dataType: ""jsonp""         }).done(function(data) {             console.dir(data.data);             console.log(""hmm: "" + data.data.object.sha);             sha = data.data.object.sha;              function update(prefix, name, url) {                 window.jQuery(document.body).prepend(""<div id=\'"" + prefix + ""Dialog\' style=\'position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 100; display: none;\'>"");                 window.jQuery(\'#\' + prefix + \'Dialog\').append(""<div id=\'"" + prefix + ""Message\' style=\'width: 350px; background-color: #FFFFFF; margin: 100px auto; border-radius: 15px; padding: 5px 15px 5px 15px;\'>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<h2>UPDATE TIME!!!</h2>"");                 window.jQuery(\'#\' + prefix + \'Message\').append(""<p>Grab the update for: <a id=\'"" + prefix + ""Link\' href=\'"" + url + ""\' target=\\""_blank\\"">"" + name + ""</a></p>"");                 window.jQuery(\'#\' + prefix + \'Link\').on(\'click\', function() {                     window.jQuery(""#"" + prefix + ""Dialog"").hide();                     window.jQuery(""#"" + prefix + ""Dialog"").remove();                 });                 window.jQuery(""#"" + prefix + ""Dialog"").show();             }              $.get(\'https://raw.githubusercontent.com/Apostolique/Agar.io-bot/master/bot.user.js?\' + Math.floor((Math.random() * 1000000) + 1), function(data) {                 var latestVersion = data.replace(/(\\r\\n|\\n|\\r)/gm,"""");                 latestVersion = latestVersion.substring(latestVersion.indexOf(""// @version"")+11,latestVersion.indexOf(""// @grant""));                  latestVersion = parseFloat(latestVersion + 0.0000);                 var myVersion = parseFloat(aposBotVersion + 0.0000);                                   if(latestVersion > myVersion)                 {                     update(""aposBot"", ""bot.user.js"", ""https://github.com/Apostolique/Agar.io-bot/blob/"" + sha + ""/bot.user.js/"");                 }                 console.log(\'Current bot.user.js Version: \' + myVersion + "" on Github: "" + latestVersion);             });          }).fail(function() {}); } getLatestCommit();  console.log(""Running Apos Bot!"");  var f = window; var g = window.jQuery;   console.log(""Apos Bot!"");  window.botList = window.botList || [];  /*function QuickBot() {     this.name = ""QuickBot V1"";     this.customParameters = {};     this.keyAction = function(key) {};     this.displayText = function() {return [];};     this.mainLoop = function() {         return [screenToGameX(getMouseX()),                 screenToGameY(getMouseY())];     }; }  window.botList.push(new QuickBot());*/  function AposBot() {     this.name = ""AposBot "" + aposBotVersion;      this.toggleFollow = false;     this.keyAction = function(key) {         if (81 == key.keyCode) {             console.log(""Toggle Follow Mouse!"");             this.toggleFollow = !this.toggleFollow;         }     };      this.displayText = function() {         return [""Q - Follow Mouse: "" + (this.toggleFollow ? ""On"" : ""Off"")];     };      // Using mod function instead the prototype directly as it is very slow     this.mod = function(num, mod) {         if (mod & (mod - 1) === 0 && mod !== 0) {             return num & (mod - 1);         }         return num < 0 ? ((num % mod) + mod) % mod : num % mod;     };     this.splitDistance = 710;      this.isMerging = function(cell1, cell2) {                 var dist = this.computeDistance(cell1.x, cell1.y, cell2.x, cell2.y, cell1.size, cell2.size);                  //debug logging         if (false){         var params = [cell1.x, cell1.y, cell2.x, cell2.y, cell1.size, cell2.size, dist];         var debugString = params.join("", "");         console.log(""Merge:"" + debugString);         }                  return dist <= -50;     };      //Given an angle value that was gotten from valueAndleBased(),     //returns a new value that scales it appropriately.     this.paraAngleValue = function(angleValue, range) {         return (15 / (range[1])) * (angleValue * angleValue) - (range[1] / 6);     };      this.getMass = function(size) {         return Math.pow(size / 10, 2);     };      this.valueAngleBased = function(angle, range) {         var leftValue = this.mod(angle - range[0], 360);         var rightValue = this.mod(this.rangeToAngle(range) - angle, 360);          var bestValue = Math.min(leftValue, rightValue);          if (bestValue <= range[1]) {             return this.paraAngleValue(bestValue, range);         }         return -1;     };      this.computeDistance = function(x1, y1, x2, y2, s1, s2) {         // Make sure there are no null optional params.         s1 = s1 || 0;         s2 = s2 || 0;         var xdis = x1 - x2; // <--- FAKE AmS OF COURSE!         var ydis = y1 - y2;         var distance = Math.sqrt(xdis * xdis + ydis * ydis) - (s1 + s2);          return distance;     };      // Get a distance that is Inexpensive on the cpu for various purpaces     this.computeInexpensiveDistance = function(x1, y1, x2, y2, s1, s2) {         // Make sure there are no null optional params.         s1 = s1 || 0;         s2 = s2 || 0;         var xdis = x1 - x2;         var ydis = y1 - y2;         // Get abs quickly         xdis = xdis < 0 ? xdis * -1 : xdis;         ydis = ydis < 0 ? ydis * -1 : ydis;          var distance = xdis + ydis;          return distance;     };      this.computeDistanceFromCircleEdgeDeprecated = function(x1, y1, x2, y2, s2) {         var tempD = this.computeDistance(x1, y1, x2, y2);          var offsetX = 0;         var offsetY = 0;          var ratioX = tempD / (x1 - x2);         var ratioY = tempD / (y1 - y2);          offsetX = x1 - (s2 / ratioX);         offsetY = y1 - (s2 / ratioY);          drawPoint(offsetX, offsetY, 5, """");          return this.computeDistance(x2, y2, offsetX, offsetY);     };      this.compareSize = function(player1, player2, ratio) {         if (player1.size * player1.size * ratio < player2.size * player2.size) {             return true;         }         return false;     },      this.canSplit = function(player1, player2) {         return this.compareSize(player1, player2, 2.8) && !this.compareSize(player1, player2, 20);     };      this.isItMe = function(player, cell) {         if (getMode() == "":teams"") {             var currentColor = player[0].color;             var currentRed = currentColor.substring(1,3);             var currentGreen = currentColor.substring(3,5);             var currentBlue = currentColor.substring(5,7);                          var currentTeam = this.getTeam(currentRed, currentGreen, currentBlue);              var cellColor = cell.color;              var cellRed = cellColor.substring(1,3);             var cellGreen = cellColor.substring(3,5);             var cellBlue = cellColor.substring(5,7);              var cellTeam = this.getTeam(cellRed, cellGreen, cellBlue);              if (currentTeam == cellTeam && !cell.isVirus()) {                 return true;             }              //console.log(""COLOR: "" + color);          } else {             for (var i = 0; i < player.length; i++) {                 if (cell.id == player[i].id) {                     return true;                 }             }         }         return false;     };      this.getTeam = function(red, green, blue) {         if (red == ""ff"") {             return 0;         } else if (green == ""ff"") {             return 1;         }         return 2;     };      this.isFood = function(blob, cell) {         if (!cell.isVirus() && this.compareSize(cell, blob, 1.33) || (cell.size <= 13)) {             return true;         }         return false;     };      this.isThreat = function(blob, cell) {                  if (!cell.isVirus() && this.compareSize(blob, cell, 1.30)) {             return true;         }         return false;     };      this.isVirus = function(blob, cell) {         if (blob == null) {             if (cell.isVirus()){return true;}              else {return false;}         }                  if (cell.isVirus() && this.compareSize(cell, blob, 1.2)) {             return true;         } else if (cell.isVirus() && cell.color.substring(3,5).toLowerCase() != ""ff"") {             return true;         }         return false;     };      this.isSplitTarget = function(that, blob, cell) {         if (that.canSplit(cell, blob)) {             return true;         }         return false;     };      this.getTimeToRemerge = function(mass){         return ((mass*0.02) + 30);     };      this.separateListBasedOnFunction = function(that, listToUse, blob) {         var foodElementList = [];         var threatList = [];         var virusList = [];         var splitTargetList = [];          var player = getPlayer();                  var mergeList = [];          Object.keys(listToUse).forEach(function(element, index) {             var isMe = that.isItMe(player, listToUse[element]);              if (!isMe) {                 if (that.isFood(blob, listToUse[element]) && listToUse[element].isNotMoving()) {                     //IT\'S FOOD!                     foodElementList.push(listToUse[element]);                                       } else if (that.isThreat(blob, listToUse[element])) {                     //IT\'S DANGER!                     threatList.push(listToUse[element]);                     mergeList.push(listToUse[element]);                 } else if (that.isVirus(blob, listToUse[element])) {                     //IT\'S VIRUS!                     virusList.push(listToUse[element]);                 }                 else if (that.isSplitTarget(that, blob, listToUse[element])) {                         drawCircle(listToUse[element].x, listToUse[element].y, listToUse[element].size + 50, 7);                         splitTargetList.push(listToUse[element]);                         //foodElementList.push(listToUse[element]);                         mergeList.push(listToUse[element]);                 }                 else {if (that.isVirus(null, listToUse[element])==false) {mergeList.push(listToUse[element]);}                     }             }/*else if(isMe && (getBlobCount(getPlayer()) > 0)){                 //Attempt to make the other cell follow the mother one                 foodElementList.push(listToUse[element]);             }*/         });          foodList = [];         for (var i = 0; i < foodElementList.length; i++) {             foodList.push([foodElementList[i].x, foodElementList[i].y, foodElementList[i].size]);         }                  //console.log(""Merglist length: "" +  mergeList.length)         //cell merging         for (var i = 0; i < mergeList.length; i++) {             for (var z = 0; z < mergeList.length; z++) {                 if (z != i && that.isMerging(mergeList[i], mergeList[z])) { //z != i &&                          //found cells that appear to be merging - if they constitute a threat add them to the theatlist                                                  //clone us a new cell                         var newThreat = {};                         var prop;                                                  for (prop in mergeList[i]) {                             newThreat[prop] = mergeList[i][prop];                         }                                                  //average distance and sum the size                         newThreat.x = (mergeList[i].x + mergeList[z].x)/2;                         newThreat.y = (mergeList[i].y + mergeList[z].y)/2;                         newThreat.size = (mergeList[i].size + mergeList[z].size);                         newThreat.nopredict = true;                         //check its a threat                         if (that.isThreat(blob, newThreat)) {                              //IT\'S DANGER!                             threatList.push(newThreat);                         }                                                               }             }         }                  return [foodList, threatList, virusList, splitTargetList];     };      this.getAll = function(blob) {         var dotList = [];         var player = getPlayer();         var interNodes = getMemoryCells();          dotList = this.separateListBasedOnFunction(this, interNodes, blob);          return dotList;     };      this.clusterFood = function(foodList, blobSize) {         var clusters = [];         var addedCluster = false;          //1: x         //2: y         //3: size or value         //4: Angle, not set here.          for (var i = 0; i < foodList.length; i++) {             for (var j = 0; j < clusters.length; j++) {                 if (this.computeInexpensiveDistance(foodList[i][0], foodList[i][1], clusters[j][0], clusters[j][1]) < blobSize * 2) {                     clusters[j][0] = (foodList[i][0] + clusters[j][0]) / 2;                     clusters[j][1] = (foodList[i][1] + clusters[j][1]) / 2;                     clusters[j][2] += foodList[i][2];                     addedCluster = true;                     break;                 }             }             if (!addedCluster) {                 clusters.push([foodList[i][0], foodList[i][1], foodList[i][2], 0]);             }             addedCluster = false;         }         return clusters;     };      this.getAngle = function(x1, y1, x2, y2) {         //Handle vertical and horizontal lines.          if (x1 == x2) {             if (y1 < y2) {                 return 271;                 //return 89;             } else {                 return 89;             }         }          return (Math.round(Math.atan2(-(y1 - y2), -(x1 - x2)) / Math.PI * 180 + 180));     };      this.slope = function(x1, y1, x2, y2) {         var m = (y1 - y2) / (x1 - x2);          return m;     };      this.slopeFromAngle = function(degree) {         if (degree == 270) {             degree = 271;         } else if (degree == 90) {             degree = 91;         }         return Math.tan((degree - 180) / 180 * Math.PI);     };      //Given two points on a line, finds the slope of a perpendicular line crossing it.     this.inverseSlope = function(x1, y1, x2, y2) {         var m = this.slope(x1, y1, x2, y2);         return (-1) / m;     };      //Given a slope and an offset, returns two points on that line.     this.pointsOnLine = function(slope, useX, useY, distance) {         var b = useY - slope * useX;         var r = Math.sqrt(1 + slope * slope);          var newX1 = (useX + (distance / r));         var newY1 = (useY + ((distance * slope) / r));         var newX2 = (useX + ((-distance) / r));         var newY2 = (useY + (((-distance) * slope) / r));          return [             [newX1, newY1],             [newX2, newY2]         ];     };      this.followAngle = function(angle, useX, useY, distance) {         var slope = this.slopeFromAngle(angle);         var coords = this.pointsOnLine(slope, useX, useY, distance);          var side = this.mod(angle - 90, 360);         if (side < 180) {             return coords[1];         } else {             return coords[0];         }     };      //Using a line formed from point a to b, tells if point c is on S side of that line.     this.isSideLine = function(a, b, c) {         if ((b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0) {             return true;         }         return false;     };      //angle range2 is within angle range2     //an Angle is a point and a distance between an other point [5, 40]     this.angleRangeIsWithin = function(range1, range2) {         if (range2[0] == this.mod(range2[0] + range2[1], 360)) {             return true;         }         //console.log(""r1: "" + range1[0] + "", "" + range1[1] + "" ... r2: "" + range2[0] + "", "" + range2[1]);          var distanceFrom0 = this.mod(range1[0] - range2[0], 360);         var distanceFrom1 = this.mod(range1[1] - range2[0], 360);          if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 < distanceFrom1) {             return true;         }         return false;     };      this.angleRangeIsWithinInverted = function(range1, range2) {         var distanceFrom0 = this.mod(range1[0] - range2[0], 360);         var distanceFrom1 = this.mod(range1[1] - range2[0], 360);          if (distanceFrom0 < range2[1] && distanceFrom1 < range2[1] && distanceFrom0 > distanceFrom1) {             return true;         }         return false;     };      this.angleIsWithin = function(angle, range) {         var diff = this.mod(this.rangeToAngle(range) - angle, 360);         if (diff >= 0 && diff <= range[1]) {             return true;         }         return false;     };      this.rangeToAngle = function(range) {         return this.mod(range[0] + range[1], 360);     };      this.anglePair = function(range) {         return (range[0] + "", "" + this.rangeToAngle(range) + "" range: "" + range[1]);     };      this.computeAngleRanges = function(blob1, blob2) {         var mainAngle = this.getAngle(blob1.x, blob1.y, blob2.x, blob2.y);         var leftAngle = this.mod(mainAngle - 90, 360);         var rightAngle = this.mod(mainAngle + 90, 360);          var blob1Left = this.followAngle(leftAngle, blob1.x, blob1.y, blob1.size);         var blob1Right = this.followAngle(rightAngle, blob1.x, blob1.y, blob1.size);          var blob2Left = this.followAngle(rightAngle, blob2.x, blob2.y, blob2.size);         var blob2Right = this.followAngle(leftAngle, blob2.x, blob2.y, blob2.size);          var blob1AngleLeft = this.getAngle(blob2.x, blob2.y, blob1Left[0], blob1Left[1]);         var blob1AngleRight = this.getAngle(blob2.x, blob2.y, blob1Right[0], blob1Right[1]);          var blob2AngleLeft = this.getAngle(blob1.x, blob1.y, blob2Left[0], blob2Left[1]);         var blob2AngleRight = this.getAngle(blob1.x, blob1.y, blob2Right[0], blob2Right[1]);          var blob1Range = this.mod(blob1AngleRight - blob1AngleLeft, 360);         var blob2Range = this.mod(blob2AngleRight - blob2AngleLeft, 360);          var tempLine = this.followAngle(blob2AngleLeft, blob2Left[0], blob2Left[1], 400);         //drawLine(blob2Left[0], blob2Left[1], tempLine[0], tempLine[1], 0);          if ((blob1Range / blob2Range) > 1) {             drawPoint(blob1Left[0], blob1Left[1], 3, """");             drawPoint(blob1Right[0], blob1Right[1], 3, """");             drawPoint(blob1.x, blob1.y, 3, """" + blob1Range + "", "" + blob2Range + "" R: "" + (Math.round((blob1Range / blob2Range) * 1000) / 1000));         }          //drawPoint(blob2.x, blob2.y, 3, """" + blob1Range);     };      this.debugAngle = function(angle, text) {         var player = getPlayer();         var line1 = this.followAngle(angle, player[0].x, player[0].y, 300);         drawLine(player[0].x, player[0].y, line1[0], line1[1], 5);         drawPoint(line1[0], line1[1], 5, """" + text);     };      //TODO: Don\'t let this function do the radius math.     this.getEdgeLinesFromPoint = function(blob1, blob2, radius) {         var px = blob1.x;         var py = blob1.y;          var cx = blob2.x;         var cy = blob2.y;          //var radius = blob2.size;          /*if (blob2.isVirus()) {             radius = blob1.size;         } else if(canSplit(blob1, blob2)) {             radius += splitDistance;         } else {             radius += blob1.size * 2;         }*/          var shouldInvert = false;          var tempRadius = this.computeDistance(px, py, cx, cy);         if (tempRadius <= radius) {             radius = tempRadius - 5;             shouldInvert = true;         }          var dx = cx - px;         var dy = cy - py;         var dd = Math.sqrt(dx * dx + dy * dy);         var a = Math.asin(radius / dd);         var b = Math.atan2(dy, dx);          var t = b - a;         var ta = {             x: radius * Math.sin(t),             y: radius * -Math.cos(t)         };          t = b + a;         var tb = {             x: radius * -Math.sin(t),             y: radius * Math.cos(t)         };          var angleLeft = this.getAngle(cx + ta.x, cy + ta.y, px, py);         var angleRight = this.getAngle(cx + tb.x, cy + tb.y, px, py);         var angleDistance = this.mod(angleRight - angleLeft, 360);          /*if (shouldInvert) {             var temp = angleLeft;             angleLeft = this.mod(angleRight + 180, 360);             angleRight = this.mod(temp + 180, 360);             angleDistance = this.mod(angleRight - angleLeft, 360);         }*/          return [angleLeft, angleDistance, [cx + tb.x, cy + tb.y],             [cx + ta.x, cy + ta.y]         ];     };      this.invertAngle = function(range) { // Where are you getting all of these vars from? (badAngles and angle)         var angle1 = this.rangeToAngle(badAngles[i]);         var angle2 = this.mod(badAngles[i][0] - angle, 360);         return [angle1, angle2];     },      this.addWall = function(listToUse, blob) {         //var mapSizeX = Math.abs(f.getMapStartX - f.getMapEndX);         //var mapSizeY = Math.abs(f.getMapStartY - f.getMapEndY);         //var distanceFromWallX = mapSizeX/3;         //var distanceFromWallY = mapSizeY/3;         var distanceFromWallY = 2000;         var distanceFromWallX = 2000;         if (blob.x < getMapStartX() + distanceFromWallX) {             //LEFT             //console.log(""Left"");             listToUse.push([                 [115, true],                 [245, false], this.computeInexpensiveDistance(getMapStartX(), blob.y, blob.x, blob.y)             ]);             var lineLeft = this.followAngle(115, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(245, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.y < getMapStartY() + distanceFromWallY) {             //TOP             //console.log(""TOP"");             listToUse.push([                 [205, true],                 [335, false], this.computeInexpensiveDistance(blob.x, getMapStartY(), blob.x, blob.y)             ]);             var lineLeft = this.followAngle(205, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(335, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.x > getMapEndX() - distanceFromWallX) {             //RIGHT             //console.log(""RIGHT"");             listToUse.push([                 [295, true],                 [65, false], this.computeInexpensiveDistance(getMapEndX(), blob.y, blob.x, blob.y)             ]);             var lineLeft = this.followAngle(295, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(65, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         if (blob.y > getMapEndY() - distanceFromWallY) {             //BOTTOM             //console.log(""BOTTOM"");             listToUse.push([                 [25, true],                 [155, false], this.computeInexpensiveDistance(blob.x, getMapEndY(), blob.x, blob.y)             ]);             var lineLeft = this.followAngle(25, blob.x, blob.y, 190 + blob.size);             var lineRight = this.followAngle(155, blob.x, blob.y, 190 + blob.size);             drawLine(blob.x, blob.y, lineLeft[0], lineLeft[1], 5);             drawLine(blob.x, blob.y, lineRight[0], lineRight[1], 5);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob.x, blob.y, 5);         }         return listToUse;     };      //listToUse contains angles in the form of [angle, boolean].     //boolean is true when the range is starting. False when it\'s ending.     //range = [[angle1, true], [angle2, false]]      this.getAngleIndex = function(listToUse, angle) {         if (listToUse.length === 0) {             return 0;         }          for (var i = 0; i < listToUse.length; i++) {             if (angle <= listToUse[i][0]) {                 return i;             }         }          return listToUse.length;     };      this.addAngle = function(listToUse, range) {         //#1 Find first open element         //#2 Try to add range1 to the list. If it is within other range, don\'t add it, set a boolean.         //#3 Try to add range2 to the list. If it is withing other range, don\'t add it, set a boolean.          //TODO: Only add the new range at the end after the right stuff has been removed.          var newListToUse = listToUse.slice();          var startIndex = 1;          if (newListToUse.length > 0 && !newListToUse[0][1]) {             startIndex = 0;         }          var startMark = this.getAngleIndex(newListToUse, range[0][0]);         var startBool = this.mod(startMark, 2) != startIndex;          var endMark = this.getAngleIndex(newListToUse, range[1][0]);         var endBool = this.mod(endMark, 2) != startIndex;          var removeList = [];          if (startMark != endMark) {             //Note: If there is still an error, this would be it.             var biggerList = 0;             if (endMark == newListToUse.length) {                 biggerList = 1;             }              for (var i = startMark; i < startMark + this.mod(endMark - startMark, newListToUse.length + biggerList); i++) {                 removeList.push(this.mod(i, newListToUse.length));             }         } else if (startMark < newListToUse.length && endMark < newListToUse.length) {             var startDist = this.mod(newListToUse[startMark][0] - range[0][0], 360);             var endDist = this.mod(newListToUse[endMark][0] - range[1][0], 360);              if (startDist < endDist) {                 for (var i = 0; i < newListToUse.length; i++) {                     removeList.push(i);                 }             }         }          removeList.sort(function(a, b){return b-a;});          for (var i = 0; i < removeList.length; i++) {             newListToUse.splice(removeList[i], 1);         }          if (startBool) {             newListToUse.splice(this.getAngleIndex(newListToUse, range[0][0]), 0, range[0]);         }         if (endBool) {             newListToUse.splice(this.getAngleIndex(newListToUse, range[1][0]), 0, range[1]);         }          return newListToUse;     };      this.getAngleRange = function(blob1, blob2, index, radius) {         var angleStuff = this.getEdgeLinesFromPoint(blob1, blob2, radius);          var leftAngle = angleStuff[0];         var rightAngle = this.rangeToAngle(angleStuff);         var difference = angleStuff[1];          drawPoint(angleStuff[2][0], angleStuff[2][1], 3, """");         drawPoint(angleStuff[3][0], angleStuff[3][1], 3, """");          //console.log(""Adding badAngles: "" + leftAngle + "", "" + rightAngle + "" diff: "" + difference);          var lineLeft = this.followAngle(leftAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);         var lineRight = this.followAngle(rightAngle, blob1.x, blob1.y, 150 + blob1.size - index * 10);          if (blob2.isVirus()) {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 6);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 6);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 6);         } else if(getCells().hasOwnProperty(blob2.id)) {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 0);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 0);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 0);         } else {             drawLine(blob1.x, blob1.y, lineLeft[0], lineLeft[1], 3);             drawLine(blob1.x, blob1.y, lineRight[0], lineRight[1], 3);             drawArc(lineLeft[0], lineLeft[1], lineRight[0], lineRight[1], blob1.x, blob1.y, 3);         }          return [leftAngle, difference];     };      //Given a list of conditions, shift the angle to the closest available spot respecting the range given.     this.shiftAngle = function(listToUse, angle, range) {         //TODO: shiftAngle needs to respect the range! DONE?         for (var i = 0; i < listToUse.length; i++) {             if (this.angleIsWithin(angle, listToUse[i])) {                 //console.log(""Shifting needed!"");                  var angle1 = listToUse[i][0];                 var angle2 = this.rangeToAngle(listToUse[i]);                  var dist1 = this.mod(angle - angle1, 360);                 var dist2 = this.mod(angle2 - angle, 360);                  if (dist1 < dist2) {                     if (this.angleIsWithin(angle1, range)) {                         return angle1;                     } else {                         return angle2;                     }                 } else {                     if (this.angleIsWithin(angle2, range)) {                         return angle2;                     } else {                         return angle1;                     }                 }             }         }         //console.log(""No Shifting Was needed!"");         return angle;     };      /**      * This is the main bot logic. This is called quite often.      * @return A 2 dimensional array with coordinates for every cells.  [[x, y], [x, y]]      */     this.mainLoop = function() {         var player = getPlayer();         var interNodes = getMemoryCells();          if ( /*!toggle*/ 1) {             //The following code converts the mouse position into an             //absolute game coordinate.             var useMouseX = screenToGameX(getMouseX());             var useMouseY = screenToGameY(getMouseY());             tempPoint = [useMouseX, useMouseY, 1];              //The current destination that the cells were going towards.             var tempMoveX = getPointX();             var tempMoveY = getPointY();              drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() - (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() - (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);             drawLine(getX() + (1920 / 2) / getZoomlessRatio(), getY() - (1080 / 2) / getZoomlessRatio(), getX() + (1920 / 2) / getZoomlessRatio(), getY() + (1080 / 2) / getZoomlessRatio(), 7);              //This variable will be returned at the end.             //It will contain the destination choices for all the cells.             //BTW!!! ERROR ERROR ABORT MISSION!!!!!!! READ BELOW -----------             //             //SINCE IT\'S STUPID NOW TO ASK EACH CELL WHERE THEY WANT TO GO,             //THE BOT SHOULD SIMPLY PICK ONE AND THAT\'S IT, I MEAN WTF....             var destinationChoices = []; //destination, size, danger              //Just to make sure the player is alive.             if (player.length > 0) {                  //Loop through all the player\'s cells.                 for (var k = 0; k < player.length; k++) {                     if (true) {                         drawPoint(player[k].x, player[k].y + player[k].size, 0, """" + (getLastUpdate() - player[k].birth) + "" / "" + (30000 + (player[k].birthMass * 57) - (getLastUpdate() - player[k].birth)) + "" / "" + player[k].birthMass);                     }                 }                   //Loops only for one cell for now.                 for (var k = 0; /*k < player.length*/ k < 1; k++) {                      //console.log(""Working on blob: "" + k);                      drawCircle(player[k].x, player[k].y, player[k].size + this.splitDistance, 5);                     //drawPoint(player[0].x, player[0].y - player[0].size, 3, """" + Math.floor(player[0].x) + "", "" + Math.floor(player[0].y));                      //var allDots = processEverything(interNodes);                      //loop through everything that is on the screen and                     //separate everything in it\'s own category.                     var allIsAll = this.getAll(player[k]);                      //The food stored in element 0 of allIsAll                     var allPossibleFood = allIsAll[0];                     //The threats are stored in element 1 of allIsAll                     var allPossibleThreats = allIsAll[1];                     //The viruses are stored in element 2 of allIsAll                     var allPossibleViruses = allIsAll[2];                      //The bot works by removing angles in which it is too                     //dangerous to travel towards to.                     var badAngles = [];                     var obstacleList = [];                      var isSafeSpot = true;                     var isMouseSafe = true;                      var clusterAllFood = this.clusterFood(allPossibleFood, player[k].size);                      //console.log(""Looking for enemies!"");                      //Loop through all the cells that were identified as threats.                     for (var i = 0; i < allPossibleThreats.length; i++) {                          var enemyDistance = this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y, allPossibleThreats[i].size);                          allPossibleThreats[i].enemyDist = enemyDistance;                     }                      /*allPossibleThreats.sort(function(a, b){                         return a.enemyDist-b.enemyDist;                     })*/                      for (var i = 0; i < allPossibleThreats.length; i++) {                          var enemyDistance = this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                          var splitDangerDistance = allPossibleThreats[i].size + this.splitDistance + 150;                          var normalDangerDistance = allPossibleThreats[i].size + 150;                          var shiftDistance = player[k].size;                          //console.log(""Found distance."");                          var enemyCanSplit = this.canSplit(player[k], allPossibleThreats[i]);                         var secureDistance = (enemyCanSplit ? splitDangerDistance : normalDangerDistance);                                                  for (var j = clusterAllFood.length - 1; j >= 0 ; j--) {                             if (this.computeDistance(allPossibleThreats[i].x, allPossibleThreats[i].y, clusterAllFood[j][0], clusterAllFood[j][1]) < secureDistance + shiftDistance)                                 clusterAllFood.splice(j, 1);                         }                          //console.log(""Removed some food."");                          if (enemyCanSplit) {                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance, 0);                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, splitDangerDistance + shiftDistance, 6);                         } else {                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance, 3);                             drawCircle(allPossibleThreats[i].x, allPossibleThreats[i].y, normalDangerDistance + shiftDistance, 6);                         }                          if (allPossibleThreats[i].danger && getLastUpdate() - allPossibleThreats[i].dangerTimeOut > 1000) {                              allPossibleThreats[i].danger = false;                         }                          /*if ((enemyCanSplit && enemyDistance < splitDangerDistance) ||                             (!enemyCanSplit && enemyDistance < normalDangerDistance)) {                              allPossibleThreats[i].danger = true;                             allPossibleThreats[i].dangerTimeOut = f.getLastUpdate();                         }*/                          //console.log(""Figured out who was important."");                          if ((enemyCanSplit && enemyDistance < splitDangerDistance) || (enemyCanSplit && allPossibleThreats[i].danger)) {                              badAngles.push(this.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance).concat(allPossibleThreats[i].enemyDist));                          } else if ((!enemyCanSplit && enemyDistance < normalDangerDistance) || (!enemyCanSplit && allPossibleThreats[i].danger)) {                              badAngles.push(this.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance).concat(allPossibleThreats[i].enemyDist));                          } else if (enemyCanSplit && enemyDistance < splitDangerDistance + shiftDistance) {                             var tempOb = this.getAngleRange(player[k], allPossibleThreats[i], i, splitDangerDistance + shiftDistance);                             var angle1 = tempOb[0];                             var angle2 = this.rangeToAngle(tempOb);                              obstacleList.push([[angle1, true], [angle2, false]]);                         } else if (!enemyCanSplit && enemyDistance < normalDangerDistance + shiftDistance) {                             var tempOb = this.getAngleRange(player[k], allPossibleThreats[i], i, normalDangerDistance + shiftDistance);                             var angle1 = tempOb[0];                             var angle2 = this.rangeToAngle(tempOb);                              obstacleList.push([[angle1, true], [angle2, false]]);                         }                         //console.log(""Done with enemy: "" + i);                     }                      //console.log(""Done looking for enemies!"");                      var goodAngles = [];                     var stupidList = [];                      for (var i = 0; i < allPossibleViruses.length; i++) {                         if (player[k].size < allPossibleViruses[i].size) {                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size + 10, 3);                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, allPossibleViruses[i].size * 2, 6);                          } else {                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size + 50, 3);                             drawCircle(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].size * 2, 6);                         }                     }                      for (var i = 0; i < allPossibleViruses.length; i++) {                         var virusDistance = this.computeDistance(allPossibleViruses[i].x, allPossibleViruses[i].y, player[k].x, player[k].y);                         if (player[k].size < allPossibleViruses[i].size) {                             if (virusDistance < (allPossibleViruses[i].size * 2)) {                                 var tempOb = this.getAngleRange(player[k], allPossibleViruses[i], i, allPossibleViruses[i].size + 10);                                 var angle1 = tempOb[0];                                 var angle2 = this.rangeToAngle(tempOb);                                 obstacleList.push([[angle1, true], [angle2, false]]);                             }                         } else {                             if (virusDistance < (player[k].size * 2)) {                                 var tempOb = this.getAngleRange(player[k], allPossibleViruses[i], i, player[k].size + 50);                                 var angle1 = tempOb[0];                                 var angle2 = this.rangeToAngle(tempOb);                                 obstacleList.push([[angle1, true], [angle2, false]]);                             }                         }                     }                      if (badAngles.length > 0) {                         //NOTE: This is only bandaid wall code. It\'s not the best way to do it.                         stupidList = this.addWall(stupidList, player[k]);                     }                      for (var i = 0; i < badAngles.length; i++) {                         var angle1 = badAngles[i][0];                         var angle2 = this.rangeToAngle(badAngles[i]);                         stupidList.push([[angle1, true], [angle2, false], badAngles[i][2]]);                     }                      //stupidList.push([[45, true], [135, false]]);                     //stupidList.push([[10, true], [200, false]]);                      stupidList.sort(function(a, b){                         //console.log(""Distance: "" + a[2] + "", "" + b[2]);                         return a[2]-b[2];                     });                      //console.log(""Added random noob stuff."");                      var sortedInterList = [];                     var sortedObList = [];                      for (var i = 0; i < stupidList.length; i++) {                         //console.log(""Adding to sorted: "" + stupidList[i][0][0] + "", "" + stupidList[i][1][0]);                         var tempList = this.addAngle(sortedInterList, stupidList[i]);                          if (tempList.length === 0) {                             console.log(""MAYDAY IT\'S HAPPENING!"");                             break;                         } else {                             sortedInterList = tempList;                         }                     }                      for (var i = 0; i < obstacleList.length; i++) {                         sortedObList = this.addAngle(sortedObList, obstacleList[i]);                          if (sortedObList.length === 0) {                             break;                         }                     }                      var offsetI = 0;                     var obOffsetI = 1;                      if (sortedInterList.length > 0 && sortedInterList[0][1]) {                         offsetI = 1;                     }                     if (sortedObList.length > 0 && sortedObList[0][1]) {                         obOffsetI = 0;                     }                      var goodAngles = [];                     var obstacleAngles = [];                      for (var i = 0; i < sortedInterList.length; i += 2) {                         var angle1 = sortedInterList[this.mod(i + offsetI, sortedInterList.length)][0];                         var angle2 = sortedInterList[this.mod(i + 1 + offsetI, sortedInterList.length)][0];                         var diff = this.mod(angle2 - angle1, 360);                         goodAngles.push([angle1, diff]);                     }                      for (var i = 0; i < sortedObList.length; i += 2) {                         var angle1 = sortedObList[this.mod(i + obOffsetI, sortedObList.length)][0];                         var angle2 = sortedObList[this.mod(i + 1 + obOffsetI, sortedObList.length)][0];                         var diff = this.mod(angle2 - angle1, 360);                         obstacleAngles.push([angle1, diff]);                     }                      for (var i = 0; i < goodAngles.length; i++) {                         var line1 = this.followAngle(goodAngles[i][0], player[k].x, player[k].y, 100 + player[k].size);                         var line2 = this.followAngle(this.mod(goodAngles[i][0] + goodAngles[i][1], 360), player[k].x, player[k].y, 100 + player[k].size);                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 1);                         drawLine(player[k].x, player[k].y, line2[0], line2[1], 1);                          drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 1);                          //drawPoint(player[0].x, player[0].y, 2, """");                          drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                         drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                     }                      for (var i = 0; i < obstacleAngles.length; i++) {                         var line1 = this.followAngle(obstacleAngles[i][0], player[k].x, player[k].y, 50 + player[k].size);                         var line2 = this.followAngle(this.mod(obstacleAngles[i][0] + obstacleAngles[i][1], 360), player[k].x, player[k].y, 50 + player[k].size);                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 6);                         drawLine(player[k].x, player[k].y, line2[0], line2[1], 6);                          drawArc(line1[0], line1[1], line2[0], line2[1], player[k].x, player[k].y, 6);                          //drawPoint(player[0].x, player[0].y, 2, """");                          drawPoint(line1[0], line1[1], 0, """" + i + "": 0"");                         drawPoint(line2[0], line2[1], 0, """" + i + "": 1"");                     }                      if (this.toggleFollow && goodAngles.length === 0) {                         //This is the follow the mouse mode                         var distance = this.computeDistance(player[k].x, player[k].y, tempPoint[0], tempPoint[1]);                          var shiftedAngle = this.shiftAngle(obstacleAngles, this.getAngle(tempPoint[0], tempPoint[1], player[k].x, player[k].y), [0, 360]);                          var destination = this.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                          destinationChoices = destination;                         drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                         //tempMoveX = destination[0];                         //tempMoveY = destination[1];                      } else if (goodAngles.length > 0) {                         var bIndex = goodAngles[0];                         var biggest = goodAngles[0][1];                         for (var i = 1; i < goodAngles.length; i++) {                             var size = goodAngles[i][1];                             if (size > biggest) {                                 biggest = size;                                 bIndex = goodAngles[i];                             }                         }                         var perfectAngle = this.mod(bIndex[0] + bIndex[1] / 2, 360);                          perfectAngle = this.shiftAngle(obstacleAngles, perfectAngle, bIndex);                          var line1 = this.followAngle(perfectAngle, player[k].x, player[k].y, verticalDistance());                          destinationChoices = line1;                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 7);                         //tempMoveX = line1[0];                         //tempMoveY = line1[1];                     } else if (badAngles.length > 0 && goodAngles.length === 0) {                         //When there are enemies around but no good angles                         //You\'re likely screwed. (This should never happen.)                          console.log(""Failed"");                         destinationChoices = [tempMoveX, tempMoveY];                         /*var angleWeights = [] //Put weights on the angles according to enemy distance                         for (var i = 0; i < allPossibleThreats.length; i++){                             var dist = this.computeDistance(player[k].x, player[k].y, allPossibleThreats[i].x, allPossibleThreats[i].y);                             var angle = this.getAngle(allPossibleThreats[i].x, allPossibleThreats[i].y, player[k].x, player[k].y);                             angleWeights.push([angle,dist]);                         }                         var maxDist = 0;                         var finalAngle = 0;                         for (var i = 0; i < angleWeights.length; i++){                             if (angleWeights[i][1] > maxDist){                                 maxDist = angleWeights[i][1];                                 finalAngle = this.mod(angleWeights[i][0] + 180, 360);                             }                         }                         var line1 = this.followAngle(finalAngle,player[k].x,player[k].y,f.verticalDistance());                         drawLine(player[k].x, player[k].y, line1[0], line1[1], 2);                         destinationChoices.push(line1);*/                     } else if (clusterAllFood.length > 0) {                         for (var i = 0; i < clusterAllFood.length; i++) {                             //console.log(""mefore: "" + clusterAllFood[i][2]);                             //This is the cost function. Higher is better.                                  var clusterAngle = this.getAngle(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                                  clusterAllFood[i][2] = clusterAllFood[i][2] * 6 - this.computeDistance(clusterAllFood[i][0], clusterAllFood[i][1], player[k].x, player[k].y);                                 //console.log(""Current Value: "" + clusterAllFood[i][2]);                                  //(goodAngles[bIndex][1] / 2 - (Math.abs(perfectAngle - clusterAngle)));                                  clusterAllFood[i][3] = clusterAngle;                                  drawPoint(clusterAllFood[i][0], clusterAllFood[i][1], 1, """");                                 //console.log(""After: "" + clusterAllFood[i][2]);                         }                          var bestFoodI = 0;                         var bestFood = clusterAllFood[0][2];                         for (var i = 1; i < clusterAllFood.length; i++) {                             if (bestFood < clusterAllFood[i][2]) {                                 bestFood = clusterAllFood[i][2];                                 bestFoodI = i;                             }                         }                          //console.log(""Best Value: "" + clusterAllFood[bestFoodI][2]);                          var distance = this.computeDistance(player[k].x, player[k].y, clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1]);                          var shiftedAngle = this.shiftAngle(obstacleAngles, this.getAngle(clusterAllFood[bestFoodI][0], clusterAllFood[bestFoodI][1], player[k].x, player[k].y), [0, 360]);                          var destination = this.followAngle(shiftedAngle, player[k].x, player[k].y, distance);                          destinationChoices = destination;                         //tempMoveX = destination[0];                         //tempMoveY = destination[1];                         drawLine(player[k].x, player[k].y, destination[0], destination[1], 1);                     } else {                         //If there are no enemies around and no food to eat.                         destinationChoices = [tempMoveX, tempMoveY];                     }                      drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """");                     //drawPoint(tempPoint[0], tempPoint[1], tempPoint[2], """" + Math.floor(this.computeDistance(tempPoint[0], tempPoint[1], I, J)));                     //drawLine(tempPoint[0], tempPoint[1], player[0].x, player[0].y, 6);                     //console.log(""Slope: "" + slope(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Angle: "" + getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) + "" Side: "" + this.mod(getAngle(tempPoint[0], tempPoint[1], player[0].x, player[0].y) - 90, 360));                     tempPoint[2] = 1;                      //console.log(""Done working on blob: "" + i);                 }                  //TODO: Find where to go based on destinationChoices.                 /*var dangerFound = false;                 for (var i = 0; i < destinationChoices.length; i++) {                     if (destinationChoices[i][2]) {                         dangerFound = true;                         break;                     }                 }                  destinationChoices.sort(function(a, b){return b[1] - a[1]});                  if (dangerFound) {                     for (var i = 0; i < destinationChoices.length; i++) {                         if (destinationChoices[i][2]) {                             tempMoveX = destinationChoices[i][0][0];                             tempMoveY = destinationChoices[i][0][1];                             break;                         }                     }                 } else {                     tempMoveX = destinationChoices.peek()[0][0];                     tempMoveY = destinationChoices.peek()[0][1];                     //console.log(""Done "" + tempMoveX + "", "" + tempMoveY);                 }*/             }             //console.log(""MOVING RIGHT NOW!"");              //console.log(""______Never lied ever in my life."");              return destinationChoices;         }     }; }; window.botList.push(new AposBot());  window.updateBotList(); //This function might not exist yet.",,2
656,https://github.com/arashstar1/bot-lua.git,"Code  Issues 0  Pull requests 0  Pulse  MaTaDoR/ 3233fdf V 5.7 MaTaDoR @MaTaDoRTeaMMaTaDoRTeaM committed on GitHub about 1 month ago 2 changed files 2,704 additions and 0 deletions cli/tg/tdcli.lua @@ -0,0 +1,2704 @@ +--[[ +   This program is free software; you can redistribute it and/or modify +   it under the terms of the GNU General Public License as published by +   the Free Software Foundation; either version 2 of the License, or +   (at your option) any later version. + +   This program is distributed in the hope that it will be useful, +   but WITHOUT ANY WARRANTY; without even the implied warranty of +   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the +   GNU General Public License for more details. + +   You should have received a copy of the GNU General Public License +   along with this program; if not, write to the Free Software +   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, +   MA 02110-1301, USA. + +]]-- + +-- Vector example form is like this: {[0] = v} or {v1, v2, v3, [0] = v} +-- If false or true crashed your telegram-cli, try to change true to 1 and false to 0 + +-- Main Bot Framework +local M = {} + +-- @chat_id = user, group, channel, and broadcast +-- @group_id = normal group +-- @channel_id = channel and broadcast +local function getChatId(chat_id) +  local chat = {} +  local chat_id = tostring(chat_id) + +  if chat_id:match(\'^-100\') then +    local channel_id = chat_id:gsub(\'-100\', \'\') +    chat = {ID = channel_id, type = \'channel\ +  else +    local group_id = chat_id:gsub(\'-\', \'\') +    chat = {ID = group_id, type = \'group\ +  end + +  return chat +end + +local function getInputFile(file) +  if file:match(\'/\') then +    infile = {ID = ""InputFileLocal"", path_ = file} +  elseif file:match(\'^%d+$\') then +    infile = {ID = ""InputFileId"", id_ = file} +  else +    infile = {ID = ""InputFilePersistentId"", persistent_id_ = file} +  end + +  return infile +end + +-- User can send bold, italic, and monospace text uses HTML or Markdown format. +local function getParseMode(parse_mode) +  if parse_mode then +    local mode = parse_mode:lower() + +    if mode == \'markdown\' or mode == \'md\' then +      P = {ID = ""TextParseModeMarkdown""} +    elseif mode == \'html\' then +      P = {ID = ""TextParseModeHTML""} +    end +  end + +  return P +end + +-- Returns current authorization state, offline request +local function getAuthState(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAuthState"", +  }, dl_cb, cmd) +end + +M.getAuthState = getAuthState + +-- Sets user\'s phone number and sends authentication code to the user. +-- Works only when authGetState returns authStateWaitPhoneNumber. +-- If phone number is not recognized or another error has happened, returns an error. Otherwise returns authStateWaitCode +-- @phone_number User\'s phone number in any reasonable format +-- @allow_flash_call Pass True, if code can be sent via flash call to the specified phone number +-- @is_current_phone_number Pass true, if the phone number is used on the current device. Ignored if allow_flash_call is False +local function setAuthPhoneNumber(phone_number, allow_flash_call, is_current_phone_number, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetAuthPhoneNumber"", +    phone_number_ = phone_number, +    allow_flash_call_ = allow_flash_call, +    is_current_phone_number_ = is_current_phone_number +  }, dl_cb, cmd) +end + +M.setAuthPhoneNumber = setAuthPhoneNumber + +-- Resends authentication code to the user. +-- Works only when authGetState returns authStateWaitCode and next_code_type of result is not null. +-- Returns authStateWaitCode on success +local function resendAuthCode(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResendAuthCode"", +  }, dl_cb, cmd) +end + +M.resendAuthCode = resendAuthCode + +-- Checks authentication code. +-- Works only when authGetState returns authStateWaitCode. +-- Returns authStateWaitPassword or authStateOk on success +-- @code Verification code from SMS, Telegram message, voice call or flash call +-- @first_name User first name, if user is yet not registered, 1-255 characters +-- @last_name Optional user last name, if user is yet not registered, 0-255 characters +local function checkAuthCode(code, first_name, last_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthCode"", +    code_ = code, +    first_name_ = first_name, +    last_name_ = last_name +  }, dl_cb, cmd) +end + +M.checkAuthCode = checkAuthCode + +-- Checks password for correctness. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateOk on success +-- @password Password to check +local function checkAuthPassword(password, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthPassword"", +    password_ = password +  }, dl_cb, cmd) +end + +M.checkAuthPassword = checkAuthPassword + +-- Requests to send password recovery code to email. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateWaitPassword on success +local function requestAuthPasswordRecovery(dl_cb, cmd) +  tdcli_function ({ +    ID = ""RequestAuthPasswordRecovery"", +  }, dl_cb, cmd) +end + +M.requestAuthPasswordRecovery = requestAuthPasswordRecovery + +-- Recovers password with recovery code sent to email. +-- Works only when authGetState returns authStateWaitPassword. +-- Returns authStateOk on success +-- @recovery_code Recovery code to check +local function recoverAuthPassword(recovery_code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""RecoverAuthPassword"", +    recovery_code_ = recovery_code +  }, dl_cb, cmd) +end + +M.recoverAuthPassword = recoverAuthPassword + +-- Logs out user. +-- If force == false, begins to perform soft log out, returns authStateLoggingOut after completion. +-- If force == true then succeeds almost immediately without cleaning anything at the server, but returns error with code 401 and description ""Unauthorized"" +-- @force If true, just delete all local data. Session will remain in list of active sessions +local function resetAuth(force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResetAuth"", +    force_ = force or nil +  }, dl_cb, cmd) +end + +M.resetAuth = resetAuth + +-- Check bot\'s authentication token to log in as a bot. +-- Works only when authGetState returns authStateWaitPhoneNumber. +-- Can be used instead of setAuthPhoneNumber and checkAuthCode to log in. +-- Returns authStateOk on success +-- @token Bot token +local function checkAuthBotToken(token, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckAuthBotToken"", +    token_ = token +  }, dl_cb, cmd) +end + +M.checkAuthBotToken = checkAuthBotToken + +-- Returns current state of two-step verification +local function getPasswordState(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetPasswordState"", +  }, dl_cb, cmd) +end + +M.getPasswordState = getPasswordState + +-- Changes user password. +-- If new recovery email is specified, then error EMAIL_UNCONFIRMED is returned and password change will not be applied until email confirmation. +-- Application should call getPasswordState from time to time to check if email is already confirmed +-- @old_password Old user password +-- @new_password New user password, may be empty to remove the password +-- @new_hint New password hint, can be empty +-- @set_recovery_email Pass True, if recovery email should be changed +-- @new_recovery_email New recovery email, may be empty +local function setPassword(old_password, new_password, new_hint, set_recovery_email, new_recovery_email, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetPassword"", +    old_password_ = old_password, +    new_password_ = new_password, +    new_hint_ = new_hint, +    set_recovery_email_ = set_recovery_email, +    new_recovery_email_ = new_recovery_email +  }, dl_cb, cmd) +end + +M.setPassword = setPassword + +-- Returns set up recovery email. +-- This method can be used to verify a password provided by the user +-- @password Current user password +local function getRecoveryEmail(password, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecoveryEmail"", +    password_ = password +  }, dl_cb, cmd) +end + +M.getRecoveryEmail = getRecoveryEmail + +-- Changes user recovery email. +-- If new recovery email is specified, then error EMAIL_UNCONFIRMED is returned and email will not be changed until email confirmation. +-- Application should call getPasswordState from time to time to check if email is already confirmed. +-- If new_recovery_email coincides with the current set up email succeeds immediately and aborts all other requests waiting for email confirmation +-- @password Current user password +-- @new_recovery_email New recovery email +local function setRecoveryEmail(password, new_recovery_email, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetRecoveryEmail"", +    password_ = password, +    new_recovery_email_ = new_recovery_email +  }, dl_cb, cmd) +end + +M.setRecoveryEmail = setRecoveryEmail + +-- Requests to send password recovery code to email +local function requestPasswordRecovery(dl_cb, cmd) +  tdcli_function ({ +    ID = ""RequestPasswordRecovery"", +  }, dl_cb, cmd) +end + +M.requestPasswordRecovery = requestPasswordRecovery + +-- Recovers password with recovery code sent to email +-- @recovery_code Recovery code to check +local function recoverPassword(recovery_code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""RecoverPassword"", +    recovery_code_ = tostring(recovery_code) +  }, dl_cb, cmd) +end + +M.recoverPassword = recoverPassword + +-- Returns current logged in user +local function getMe(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMe"", +  }, dl_cb, cmd) +end + +M.getMe = getMe + +-- Returns information about a user by its identifier, offline request if current user is not a bot +-- @user_id User identifier +local function getUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getUser = getUser + +-- Returns full information about a user by its identifier +-- @user_id User identifier +local function getUserFull(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUserFull"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getUserFull = getUserFull + +-- Returns information about a group by its identifier, offline request if current user is not a bot +-- @group_id Group identifier +local function getGroup(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGroup"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.getGroup = getGroup + +-- Returns full information about a group by its identifier +-- @group_id Group identifier +local function getGroupFull(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGroupFull"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.getGroupFull = getGroupFull + +-- Returns information about a channel by its identifier, offline request if current user is not a bot +-- @channel_id Channel identifier +local function getChannel(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChannel"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.getChannel = getChannel + +-- Returns full information about a channel by its identifier, cached for at most 1 minute +-- @channel_id Channel identifier +local function getChannelFull(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChannelFull"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.getChannelFull = getChannelFull + +-- Returns information about a secret chat by its identifier, offline request +-- @secret_chat_id Secret chat identifier +local function getSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.getSecretChat = getSecretChat + +-- Returns information about a chat by its identifier, offline request if current user is not a bot +-- @chat_id Chat identifier +local function getChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.getChat = getChat + +-- Returns information about a message +-- @chat_id Identifier of the chat, message belongs to +-- @message_id Identifier of the message to get +local function getMessage(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMessage"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.getMessage = getMessage + +-- Returns information about messages. +-- If message is not found, returns null on the corresponding position of the result +-- @chat_id Identifier of the chat, messages belongs to +-- @message_ids Identifiers of the messages to get +local function getMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.getMessages = getMessages + +-- Returns information about a file, offline request +-- @file_id Identifier of the file to get +local function getFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.getFile = getFile + +-- Returns information about a file by its persistent id, offline request +-- @persistent_file_id Persistent identifier of the file to get +local function getFilePersistent(persistent_file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetFilePersistent"", +    persistent_file_id_ = persistent_file_id +  }, dl_cb, cmd) +end + +M.getFilePersistent = getFilePersistent + +-- Returns list of chats in the right order, chats are sorted by (order, chat_id) in decreasing order. +-- For example, to get list of chats from the beginning, the offset_order should be equal 2^63 - 1 +-- @offset_order Chat order to return chats from +-- @offset_chat_id Chat identifier to return chats from +-- @limit Maximum number of chats to be returned +local function getChats(offset_order, offset_chat_id, limit, dl_cb, cmd) +  if not limit or limit > 20 then +    limit = 20 +  end + +  tdcli_function ({ +    ID = ""GetChats"", +    offset_order_ = offset_order or 9223372036854775807, +    offset_chat_id_ = offset_chat_id or 0, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChats = getChats + +-- Searches public chat by its username. +-- Currently only private and channel chats can be public. +-- Returns chat if found, otherwise some error is returned +-- @username Username to be resolved +local function searchPublicChat(username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchPublicChat"", +    username_ = username +  }, dl_cb, cmd) +end + +M.searchPublicChat = searchPublicChat + +-- Searches public chats by prefix of their username. +-- Currently only private and channel (including supergroup) chats can be public. +-- Returns meaningful number of results. +-- Returns nothing if length of the searched username prefix is less than 5. +-- Excludes private chats with contacts from the results +-- @username_prefix Prefix of the username to search +local function searchPublicChats(username_prefix, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchPublicChats"", +    username_prefix_ = username_prefix +  }, dl_cb, cmd) +end + +M.searchPublicChats = searchPublicChats + +-- Searches for specified query in the title and username of known chats, offline request. +-- Returns chats in the order of them in the chat list +-- @query Query to search for, if query is empty, returns up to 20 recently found chats +-- @limit Maximum number of chats to be returned +local function searchChats(query, limit, dl_cb, cmd) +  if not limit or limit > 20 then +    limit = 20 +  end + +  tdcli_function ({ +    ID = ""SearchChats"", +    query_ = query, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchChats = searchChats + +-- Adds chat to the list of recently found chats. +-- The chat is added to the beginning of the list. +-- If the chat is already in the list, at first it is removed from the list +-- @chat_id Identifier of the chat to add +local function addRecentlyFoundChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddRecentlyFoundChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.addRecentlyFoundChat = addRecentlyFoundChat + +-- Deletes chat from the list of recently found chats +-- @chat_id Identifier of the chat to delete +local function deleteRecentlyFoundChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentlyFoundChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.deleteRecentlyFoundChat = deleteRecentlyFoundChat + +-- Clears list of recently found chats +local function deleteRecentlyFoundChats(dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentlyFoundChats"", +  }, dl_cb, cmd) +end + +M.deleteRecentlyFoundChats = deleteRecentlyFoundChats + +-- Returns list of common chats with an other given user. +-- Chats are sorted by their type and creation date +-- @user_id User identifier +-- @offset_chat_id Chat identifier to return chats from, use 0 for the first request +-- @limit Maximum number of chats to be returned, up to 100 +local function getCommonChats(user_id, offset_chat_id, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""GetCommonChats"", +    user_id_ = user_id, +    offset_chat_id_ = offset_chat_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getCommonChats = getCommonChats + +-- Returns messages in a chat. +-- Automatically calls openChat. +-- Returns result in reverse chronological order, i.e. in order of decreasing message.message_id +-- @chat_id Chat identifier +-- @from_message_id Identifier of the message near which we need a history, you can use 0 to get results from the beginning, i.e. from oldest to newest +-- @offset Specify 0 to get results exactly from from_message_id or negative offset to get specified message and some newer messages +-- @limit Maximum number of messages to be returned, should be positive and can\'t be greater than 100. +-- If offset is negative, limit must be greater than -offset. +-- There may be less than limit messages returned even the end of the history is not reached +local function getChatHistory(chat_id, from_message_id, offset, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""GetChatHistory"", +    chat_id_ = chat_id, +    from_message_id_ = from_message_id, +    offset_ = offset or 0, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChatHistory = getChatHistory + +-- Deletes all messages in the chat. +-- Can\'t be used for channel chats +-- @chat_id Chat identifier +-- @remove_from_chat_list Pass true, if chat should be removed from the chat list +local function deleteChatHistory(chat_id, remove_from_chat_list, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChatHistory"", +    chat_id_ = chat_id, +    remove_from_chat_list_ = remove_from_chat_list +  }, dl_cb, cmd) +end + +M.deleteChatHistory = deleteChatHistory + +-- Searches for messages with given words in the chat. +-- Returns result in reverse chronological order, i. e. in order of decreasimg message_id. +-- Doesn\'t work in secret chats +-- @chat_id Chat identifier to search in +-- @query Query to search for +-- @from_message_id Identifier of the message from which we need a history, you can use 0 to get results from beginning +-- @limit Maximum number of messages to be returned, can\'t be greater than 100 +-- @filter Filter for content of searched messages +-- filter = Empty|Animation|Audio|Document|Photo|Video|Voice|PhotoAndVideo|Url|ChatPhoto +local function searchChatMessages(chat_id, query, from_message_id, limit, filter, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""SearchChatMessages"", +    chat_id_ = chat_id, +    query_ = query, +    from_message_id_ = from_message_id, +    limit_ = limit, +    filter_ = { +      ID = \'SearchMessagesFilter\' .. filter +    }, +  }, dl_cb, cmd) +end + +M.searchChatMessages = searchChatMessages + +-- Searches for messages in all chats except secret chats. Returns result in reverse chronological order, i. e. in order of decreasing (date, chat_id, message_id) +-- @query Query to search for +-- @offset_date Date of the message to search from, you can use 0 or any date in the future to get results from the beginning +-- @offset_chat_id Chat identifier of the last found message or 0 for the first request +-- @offset_message_id Message identifier of the last found message or 0 for the first request +-- @limit Maximum number of messages to be returned, can\'t be greater than 100 +local function searchMessages(query, offset_date, offset_chat_id, offset_message_id, limit, dl_cb, cmd) +  if not limit or limit > 100 then +    limit = 100 +  end + +  tdcli_function ({ +    ID = ""SearchMessages"", +    query_ = query, +    offset_date_ = offset_date, +    offset_chat_id_ = offset_chat_id, +    offset_message_id_ = offset_message_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchMessages = searchMessages + +-- Invites bot to a chat (if it is not in the chat) and send /start to it. +-- Bot can\'t be invited to a private chat other than chat with the bot. +-- Bots can\'t be invited to broadcast channel chats and secret chats. +-- Returns sent message. +-- UpdateChatTopMessage will not be sent, so returned message should be used to update chat top message +-- @bot_user_id Identifier of the bot +-- @chat_id Identifier of the chat +-- @parameter Hidden parameter sent to bot for deep linking (https://api.telegram.org/bots#deep-linking) +-- parameter=start|startgroup or custom as defined by bot creator +local function sendBotStartMessage(bot_user_id, chat_id, parameter, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendBotStartMessage"", +    bot_user_id_ = bot_user_id, +    chat_id_ = chat_id, +    parameter_ = parameter +  }, dl_cb, cmd) +end + +M.sendBotStartMessage = sendBotStartMessage + +-- Sends result of the inline query as a message. +-- Returns sent message. +-- UpdateChatTopMessage will not be sent, so returned message should be used to update chat top message. +-- Always clears chat draft message +-- @chat_id Chat to send message +-- @reply_to_message_id Identifier of a message to reply to or 0 +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works in secret chats +-- @from_background Pass true, if the message is sent from background +-- @query_id Identifier of the inline query +-- @result_id Identifier of the inline result +local function sendInlineQueryResultMessage(chat_id, reply_to_message_id, disable_notification, from_background, query_id, result_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendInlineQueryResultMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    query_id_ = query_id, +    result_id_ = result_id +  }, dl_cb, cmd) +end + +M.sendInlineQueryResultMessage = sendInlineQueryResultMessage + +-- Forwards previously sent messages. +-- Returns forwarded messages in the same order as message identifiers passed in message_ids. +-- If message can\'t be forwarded, null will be returned instead of the message. +-- UpdateChatTopMessage will not be sent, so returned messages should be used to update chat top message +-- @chat_id Identifier of a chat to forward messages +-- @from_chat_id Identifier of a chat to forward from +-- @message_ids Identifiers of messages to forward +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works if messages are forwarded to secret chat +-- @from_background Pass true, if the message is sent from background +local function forwardMessages(chat_id, from_chat_id, message_ids, disable_notification, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ForwardMessages"", +    chat_id_ = chat_id, +    from_chat_id_ = from_chat_id, +    message_ids_ = message_ids, -- vector +    disable_notification_ = disable_notification, +    from_background_ = 1 +  }, dl_cb, cmd) +end + +M.forwardMessages = forwardMessages + +-- Changes current ttl setting in a secret chat and sends corresponding message +-- @chat_id Chat identifier +-- @ttl New value of ttl in seconds +local function sendChatSetTtlMessage(chat_id, ttl, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatSetTtlMessage"", +    chat_id_ = chat_id, +    ttl_ = ttl +  }, dl_cb, cmd) +end + +M.sendChatSetTtlMessage = sendChatSetTtlMessage + +-- Deletes messages. +-- UpdateDeleteMessages will not be sent for messages deleted through that function +-- @chat_id Chat identifier +-- @message_ids Identifiers of messages to delete +local function deleteMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.deleteMessages = deleteMessages + +-- Deletes all messages in the chat sent by the specified user. +-- Works only in supergroup channel chats, needs appropriate privileges +-- @chat_id Chat identifier +-- @user_id User identifier +local function deleteMessagesFromUser(chat_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteMessagesFromUser"", +    chat_id_ = chat_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.deleteMessagesFromUser = deleteMessagesFromUser + +-- Edits text of text or game message. +-- Non-bots can edit message in a limited period of time. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup Bots only. New message reply markup +-- @input_message_content New text content of the message. Should be of type InputMessageText +local function editMessageText(chat_id, message_id, reply_markup, text, disable_web_page_preview, parse_mode, dl_cb, cmd) +  local TextParseMode = getParseMode(parse_mode) + +  tdcli_function ({ +    ID = ""EditMessageText"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {}, +      parse_mode_ = TextParseMode, +    }, +  }, dl_cb, cmd) +end + +M.editMessageText = editMessageText + +-- Edits message content caption. +-- Non-bots can edit message in a limited period of time. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup Bots only. New message reply markup +-- @caption New message content caption, 0-200 characters +local function editMessageCaption(chat_id, message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditMessageCaption"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editMessageCaption = editMessageCaption + +-- Bots only. +-- Edits message reply markup. +-- Returns edited message after edit is complete server side +-- @chat_id Chat the message belongs to +-- @message_id Identifier of the message +-- @reply_markup New message reply markup +local function editMessageReplyMarkup(inline_message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageCaption"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editMessageReplyMarkup = editMessageReplyMarkup + +-- Bots only. +-- Edits text of an inline text or game message sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +-- @input_message_content New text content of the message. Should be of type InputMessageText +local function editInlineMessageText(inline_message_id, reply_markup, text, disable_web_page_preview, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageText"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {} +    }, +  }, dl_cb, cmd) +end + +M.editInlineMessageText = editInlineMessageText + +-- Bots only. +-- Edits caption of an inline message content sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +-- @caption New message content caption, 0-200 characters +local function editInlineMessageCaption(inline_message_id, reply_markup, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageCaption"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup, -- reply_markup:ReplyMarkup +    caption_ = caption +  }, dl_cb, cmd) +end + +M.editInlineMessageCaption = editInlineMessageCaption + +-- Bots only. +-- Edits reply markup of an inline message sent via bot +-- @inline_message_id Inline message identifier +-- @reply_markup New message reply markup +local function editInlineMessageReplyMarkup(inline_message_id, reply_markup, dl_cb, cmd) +  tdcli_function ({ +    ID = ""EditInlineMessageReplyMarkup"", +    inline_message_id_ = inline_message_id, +    reply_markup_ = reply_markup -- reply_markup:ReplyMarkup +  }, dl_cb, cmd) +end + +M.editInlineMessageReplyMarkup = editInlineMessageReplyMarkup + + +-- Sends inline query to a bot and returns its results. +-- Unavailable for bots +-- @bot_user_id Identifier of the bot send query to +-- @chat_id Identifier of the chat, where the query is sent +-- @user_location User location, only if needed +-- @query Text of the query +-- @offset Offset of the first entry to return +local function getInlineQueryResults(bot_user_id, chat_id, latitude, longitude, query, offset, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetInlineQueryResults"", +    bot_user_id_ = bot_user_id, +    chat_id_ = chat_id, +    user_location_ = { +      ID = ""Location"", +      latitude_ = latitude, +      longitude_ = longitude +    }, +    query_ = query, +    offset_ = offset +  }, dl_cb, cmd) +end + +M.getInlineQueryResults = getInlineQueryResults + +-- Bots only. +-- Sets result of the inline query +-- @inline_query_id Identifier of the inline query +-- @is_personal Does result of the query can be cached only for specified user +-- @results Results of the query +-- @cache_time Allowed time to cache results of the query in seconds +-- @next_offset Offset for the next inline query, pass empty string if there is no more results +-- @switch_pm_text If non-empty, this text should be shown on the button, which opens private chat with the bot and sends bot start message with parameter switch_pm_parameter +-- @switch_pm_parameter Parameter for the bot start message +local function answerInlineQuery(inline_query_id, is_personal, cache_time, next_offset, switch_pm_text, switch_pm_parameter, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AnswerInlineQuery"", +    inline_query_id_ = inline_query_id, +    is_personal_ = is_personal, +    results_ = results, --vector<InputInlineQueryResult>, +    cache_time_ = cache_time, +    next_offset_ = next_offset, +    switch_pm_text_ = switch_pm_text, +    switch_pm_parameter_ = switch_pm_parameter +  }, dl_cb, cmd) +end + +M.answerInlineQuery = answerInlineQuery + +-- Sends callback query to a bot and returns answer to it. +-- Unavailable for bots +-- @chat_id Identifier of the chat with a message +-- @message_id Identifier of the message, from which the query is originated +-- @payload Query payload +-- @text Text of the answer +-- @show_alert If true, an alert should be shown to the user instead of a toast +-- @url URL to be open +local function getCallbackQueryAnswer(chat_id, message_id, text, show_alert, url, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetCallbackQueryAnswer"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    payload_ = { +      ID = ""CallbackQueryAnswer"", +      text_ = text, +      show_alert_ = show_alert, +      url_ = url +    }, +  }, dl_cb, cmd) +end + +M.getCallbackQueryAnswer = getCallbackQueryAnswer + +-- Bots only. +-- Sets result of the callback query +-- @callback_query_id Identifier of the callback query +-- @text Text of the answer +-- @show_alert If true, an alert should be shown to the user instead of a toast +-- @url Url to be opened +-- @cache_time Allowed time to cache result of the query in seconds +local function answerCallbackQuery(callback_query_id, text, show_alert, url, cache_time, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AnswerCallbackQuery"", +    callback_query_id_ = callback_query_id, +    text_ = text, +    show_alert_ = show_alert, +    url_ = url, +    cache_time_ = cache_time +  }, dl_cb, cmd) +end + +M.answerCallbackQuery = answerCallbackQuery + +-- Bots only. +-- Updates game score of the specified user in the game +-- @chat_id Chat a message with the game belongs to +-- @message_id Identifier of the message +-- @edit_message True, if message should be edited +-- @user_id User identifier +-- @score New score +-- @force Pass True to update the score even if it decreases. If score is 0, user will be deleted from the high scores table +local function setGameScore(chat_id, message_id, edit_message, user_id, score, force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetGameScore"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    edit_message_ = edit_message, +    user_id_ = user_id, +    score_ = score, +    force_ = force +  }, dl_cb, cmd) +end + +M.setGameScore = setGameScore + +-- Bots only. +-- Updates game score of the specified user in the game +-- @inline_message_id Inline message identifier +-- @edit_message True, if message should be edited +-- @user_id User identifier +-- @score New score +-- @force Pass True to update the score even if it decreases. If score is 0, user will be deleted from the high scores table +local function setInlineGameScore(inline_message_id, edit_message, user_id, score, force, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetInlineGameScore"", +    inline_message_id_ = inline_message_id, +    edit_message_ = edit_message, +    user_id_ = user_id, +    score_ = score, +    force_ = force +  }, dl_cb, cmd) +end + +M.setInlineGameScore = setInlineGameScore + +-- Bots only. +-- Returns game high scores and some part of the score table around of the specified user in the game +-- @chat_id Chat a message with the game belongs to +-- @message_id Identifier of the message +-- @user_id User identifie +local function getGameHighScores(chat_id, message_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetGameHighScores"", +    chat_id_ = chat_id, +    message_id_ = message_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getGameHighScores = getGameHighScores + +-- Bots only. +-- Returns game high scores and some part of the score table around of the specified user in the game +-- @inline_message_id Inline message identifier +-- @user_id User identifier +local function getInlineGameHighScores(inline_message_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetInlineGameHighScores"", +    inline_message_id_ = inline_message_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getInlineGameHighScores = getInlineGameHighScores + +-- Deletes default reply markup from chat. +-- This method needs to be called after one-time keyboard or ForceReply reply markup has been used. +-- UpdateChatReplyMarkup will be send if reply markup will be changed +-- @chat_id Chat identifier +-- @message_id Message identifier of used keyboard +local function deleteChatReplyMarkup(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChatReplyMarkup"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.deleteChatReplyMarkup = deleteChatReplyMarkup + +-- Sends notification about user activity in a chat +-- @chat_id Chat identifier +-- @action Action description +-- action = Typing|Cancel|RecordVideo|UploadVideo|RecordVoice|UploadVoice|UploadPhoto|UploadDocument|GeoLocation|ChooseContact|StartPlayGame +local function sendChatAction(chat_id, action, progress, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatAction"", +    chat_id_ = chat_id, +    action_ = { +      ID = ""SendMessage"" .. action .. ""Action"", +      progress_ = progress or 100 +    } +  }, dl_cb, cmd) +end + +M.sendChatAction = sendChatAction + +-- Sends notification about screenshot taken in a chat. +-- Works only in secret chats +-- @chat_id Chat identifier +local function sendChatScreenshotTakenNotification(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendChatScreenshotTakenNotification"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.sendChatScreenshotTakenNotification = sendChatScreenshotTakenNotification + +-- Chat is opened by the user. +-- Many useful activities depends on chat being opened or closed. For example, in channels all updates are received only for opened chats +-- @chat_id Chat identifier +local function openChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""OpenChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.openChat = openChat + +-- Chat is closed by the user. +-- Many useful activities depends on chat being opened or closed. +-- @chat_id Chat identifier +local function closeChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CloseChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.closeChat = closeChat + +-- Messages are viewed by the user. +-- Many useful activities depends on message being viewed. For example, marking messages as read, incrementing of view counter, updating of view counter, removing of deleted messages in channels +-- @chat_id Chat identifier +-- @message_ids Identifiers of viewed messages +local function viewMessages(chat_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ViewMessages"", +    chat_id_ = chat_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.viewMessages = viewMessages + +-- Message content is opened, for example the user has opened a photo, a video, a document, a location or a venue or have listened to an audio or a voice message +-- @chat_id Chat identifier of the message +-- @message_id Identifier of the message with opened content +local function openMessageContent(chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""OpenMessageContent"", +    chat_id_ = chat_id, +    message_id_ = message_id +  }, dl_cb, cmd) +end + +M.openMessageContent = openMessageContent + +-- Returns existing chat corresponding to the given user +-- @user_id User identifier +local function createPrivateChat(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreatePrivateChat"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.createPrivateChat = createPrivateChat + +-- Returns existing chat corresponding to the known group +-- @group_id Group identifier +local function createGroupChat(group_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateGroupChat"", +    group_id_ = getChatId(group_id).ID +  }, dl_cb, cmd) +end + +M.createGroupChat = createGroupChat + +-- Returns existing chat corresponding to the known channel +-- @channel_id Channel identifier +local function createChannelChat(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateChannelChat"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.createChannelChat = createChannelChat + +-- Returns existing chat corresponding to the known secret chat +-- @secret_chat_id SecretChat identifier +local function createSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.createSecretChat = createSecretChat + +-- Creates new group chat and send corresponding messageGroupChatCreate, returns created chat +-- @user_ids Identifiers of users to add to the group +-- @title Title of new group chat, 0-255 characters +local function createNewGroupChat(user_ids, title, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewGroupChat"", +    user_ids_ = user_ids, -- vector +    title_ = title +  }, dl_cb, cmd) +end + +M.createNewGroupChat = createNewGroupChat + +-- Creates new channel chat and send corresponding messageChannelChatCreate, returns created chat +-- @title Title of new channel chat, 0-255 characters +-- @is_supergroup True, if supergroup chat should be created +-- @about Information about the channel, 0-255 characters +local function createNewChannelChat(title, is_supergroup, about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewChannelChat"", +    title_ = title, +    is_supergroup_ = is_supergroup, +    about_ = about +  }, dl_cb, cmd) +end + +M.createNewChannelChat = createNewChannelChat + +-- Creates new secret chat, returns created chat +-- @user_id Identifier of a user to create secret chat with +local function createNewSecretChat(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CreateNewSecretChat"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.createNewSecretChat = createNewSecretChat + +-- Creates new channel supergroup chat from existing group chat and send corresponding messageChatMigrateTo and messageChatMigrateFrom. Deactivates group +-- @chat_id Group chat identifier +local function migrateGroupChatToChannelChat(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""MigrateGroupChatToChannelChat"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.migrateGroupChatToChannelChat = migrateGroupChatToChannelChat + +-- Changes chat title. +-- Title can\'t be changed for private chats. +-- Title will not change until change will be synchronized with the server. +-- Title will not be changed if application is killed before it can send request to the server. +-- There will be update about change of the title on success. Otherwise error will be returned +-- @chat_id Chat identifier +-- @title New title of a chat, 0-255 characters +local function changeChatTitle(chat_id, title, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatTitle"", +    chat_id_ = chat_id, +    title_ = title +  }, dl_cb, cmd) +end + +M.changeChatTitle = changeChatTitle + +-- Changes chat photo. +-- Photo can\'t be changed for private chats. +-- Photo will not change until change will be synchronized with the server. +-- Photo will not be changed if application is killed before it can send request to the server. +-- There will be update about change of the photo on success. Otherwise error will be returned +-- @chat_id Chat identifier +-- @photo New chat photo. You can use zero InputFileId to delete photo. Files accessible only by HTTP URL are not acceptable +local function changeChatPhoto(chat_id, photo, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatPhoto"", +    chat_id_ = chat_id, +    photo_ = getInputFile(photo) +  }, dl_cb, cmd) +end + +M.changeChatPhoto = changeChatPhoto + +-- Changes chat draft message +-- @chat_id Chat identifier +-- @draft_message New draft message, nullable +local function changeChatDraftMessage(chat_id, reply_to_message_id, text, disable_web_page_preview, clear_draft, parse_mode, dl_cb, cmd) +  local TextParseMode = getParseMode(parse_mode) + +  tdcli_function ({ +    ID = ""ChangeChatDraftMessage"", +    chat_id_ = chat_id, +    draft_message_ = { +      ID = ""DraftMessage"", +      reply_to_message_id_ = reply_to_message_id, +      input_message_text_ = { +        ID = ""InputMessageText"", +        text_ = text, +        disable_web_page_preview_ = disable_web_page_preview, +        clear_draft_ = clear_draft, +        entities_ = {}, +        parse_mode_ = TextParseMode, +      }, +    }, +  }, dl_cb, cmd) +end + +M.changeChatDraftMessage = changeChatDraftMessage + +-- Adds new member to chat. +-- Members can\'t be added to private or secret chats. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_id Identifier of the user to add +-- @forward_limit Number of previous messages from chat to forward to new member, ignored for channel chats +local function addChatMember(chat_id, user_id, forward_limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddChatMember"", +    chat_id_ = chat_id, +    user_id_ = user_id, +    forward_limit_ = forward_limit or 50 +  }, dl_cb, cmd) +end + +M.addChatMember = addChatMember + +-- Adds many new members to the chat. +-- Currently, available only for channels. +-- Can\'t be used to join the channel. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_ids Identifiers of the users to add +local function addChatMembers(chat_id, user_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddChatMembers"", +    chat_id_ = chat_id, +    user_ids_ = user_ids -- vector +  }, dl_cb, cmd) +end + +M.addChatMembers = addChatMembers + +-- Changes status of the chat member, need appropriate privileges. +-- In channel chats, user will be added to chat members if he is yet not a member and there is less than 200 members in the channel. +-- Status will not be changed until chat state will be synchronized with the server. +-- Status will not be changed if application is killed before it can send request to the server +-- @chat_id Chat identifier +-- @user_id Identifier of the user to edit status, bots can be editors in the channel chats +-- @status New status of the member in the chat +-- status = Creator|Editor|Moderator|Member|Left|Kicked +local function changeChatMemberStatus(chat_id, user_id, status, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatMemberStatus"", +    chat_id_ = chat_id, +    user_id_ = user_id, +    status_ = { +      ID = ""ChatMemberStatus"" .. status +    }, +  }, dl_cb, cmd) +end + +M.changeChatMemberStatus = changeChatMemberStatus + +-- Returns information about one participant of the chat +-- @chat_id Chat identifier +-- @user_id User identifier +local function getChatMember(chat_id, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChatMember"", +    chat_id_ = chat_id, +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.getChatMember = getChatMember + +-- Asynchronously downloads file from cloud. +-- Updates updateFileProgress will notify about download progress. +-- Update updateFile will notify about successful download +-- @file_id Identifier of file to download +local function downloadFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DownloadFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.downloadFile = downloadFile + +-- Stops file downloading. +-- If file already downloaded do nothing. +-- @file_id Identifier of file to cancel download +local function cancelDownloadFile(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CancelDownloadFile"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.cancelDownloadFile = cancelDownloadFile + +-- Next part of a file was generated +-- @generation_id Identifier of the generation process +-- @ready Number of bytes already generated. Negative number means that generation has failed and should be terminated +local function setFileGenerationProgress(generation_id, ready, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetFileGenerationProgress"", +    generation_id_ = generation_id, +    ready_ = ready +  }, dl_cb, cmd) +end + +M.setFileGenerationProgress = setFileGenerationProgress + +-- Finishes file generation +-- @generation_id Identifier of the generation process +local function finishFileGeneration(generation_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""FinishFileGeneration"", +    generation_id_ = generation_id +  }, dl_cb, cmd) +end + +M.finishFileGeneration = finishFileGeneration + +-- Generates new chat invite link, previously generated link is revoked. +-- Available for group and channel chats. +-- Only creator of the chat can export chat invite link +-- @chat_id Chat identifier +local function exportChatInviteLink(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ExportChatInviteLink"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.exportChatInviteLink = exportChatInviteLink + +-- Checks chat invite link for validness and returns information about the corresponding chat +-- @invite_link Invite link to check. Should begin with ""https://telegram.me/joinchat/"" +local function checkChatInviteLink(link, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckChatInviteLink"", +    invite_link_ = link +  }, dl_cb, cmd) +end + +M.checkChatInviteLink = checkChatInviteLink + +-- Imports chat invite link, adds current user to a chat if possible. +-- Member will not be added until chat state will be synchronized with the server. +-- Member will not be added if application is killed before it can send request to the server +-- @invite_link Invite link to import. Should begin with ""https://telegram.me/joinchat/"" +local function importChatInviteLink(invite_link, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ImportChatInviteLink"", +    invite_link_ = invite_link +  }, dl_cb, cmd) +end + +M.importChatInviteLink = importChatInviteLink + +-- Adds user to black list +-- @user_id User identifier +local function blockUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""BlockUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.blockUser = blockUser + +-- Removes user from black list +-- @user_id User identifier +local function unblockUser(user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UnblockUser"", +    user_id_ = user_id +  }, dl_cb, cmd) +end + +M.unblockUser = unblockUser + +-- Returns users blocked by the current user +-- @offset Number of users to skip in result, must be non-negative +-- @limit Maximum number of users to return, can\'t be greater than 100 +local function getBlockedUsers(offset, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetBlockedUsers"", +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getBlockedUsers = getBlockedUsers + +-- Adds new contacts/edits existing contacts, contacts user identifiers are ignored. +-- Returns list of corresponding users in the same order as input contacts. +-- If contact doesn\'t registered in Telegram, user with id == 0 will be returned +-- @contacts List of contacts to import/edit +local function importContacts(phone_number, first_name, last_name, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ImportContacts"", +    contacts_ = {[0] = { +      phone_number_ = tostring(phone_number), +      first_name_ = tostring(first_name), +      last_name_ = tostring(last_name), +      user_id_ = user_id +      }, +    }, +  }, dl_cb, cmd) +end + +M.importContacts = importContacts + +-- Searches for specified query in the first name, last name and username of the known user contacts +-- @query Query to search for, can be empty to return all contacts +-- @limit Maximum number of users to be returned +local function searchContacts(query, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchContacts"", +    query_ = query, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.searchContacts = searchContacts + +-- Deletes users from contacts list +-- @user_ids Identifiers of users to be deleted +local function deleteContacts(user_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteContacts"", +    user_ids_ = user_ids -- vector +  }, dl_cb, cmd) +end + +M.deleteContacts = deleteContacts + +-- Returns profile photos of the user. +-- Result of this query can\'t be invalidated, so it must be used with care +-- @user_id User identifier +-- @offset Photos to skip, must be non-negative +-- @limit Maximum number of photos to be returned, can\'t be greater than 100 +local function getUserProfilePhotos(user_id, offset, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetUserProfilePhotos"", +    user_id_ = user_id, +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getUserProfilePhotos = getUserProfilePhotos + +-- Returns stickers corresponding to given emoji +-- @emoji String representation of emoji. If empty, returns all known stickers +local function getStickers(emoji, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickers"", +    emoji_ = emoji +  }, dl_cb, cmd) +end + +M.getStickers = getStickers + +-- Returns list of installed sticker sets without archived sticker sets +-- @is_masks Pass true to return masks, pass false to return stickers +local function getStickerSets(is_masks, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerSets"", +    is_masks_ = is_masks +  }, dl_cb, cmd) +end + +M.getStickerSets = getStickerSets + +-- Returns list of archived sticker sets +-- @is_masks Pass true to return masks, pass false to return stickers +-- @offset_sticker_set_id Identifier of the sticker set from which return the result +-- @limit Maximum number of sticker sets to return +local function getArchivedStickerSets(is_masks, offset_sticker_set_id, limit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetArchivedStickerSets"", +    is_masks_ = is_masks, +    offset_sticker_set_id_ = offset_sticker_set_id, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getArchivedStickerSets = getArchivedStickerSets + +-- Returns list of trending sticker sets +local function getTrendingStickerSets(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetTrendingStickerSets"" +  }, dl_cb, cmd) +end + +M.getTrendingStickerSets = getTrendingStickerSets + +-- Returns list of sticker sets attached to a file, currently only photos and videos can have attached sticker sets +-- @file_id File identifier +local function getAttachedStickerSets(file_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAttachedStickerSets"", +    file_id_ = file_id +  }, dl_cb, cmd) +end + +M.getAttachedStickerSets = getAttachedStickerSets + +-- Returns information about sticker set by its identifier +-- @set_id Identifier of the sticker set +local function getStickerSet(set_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerSet"", +    set_id_ = set_id +  }, dl_cb, cmd) +end + +M.getStickerSet = getStickerSet + +-- Searches sticker set by its short name +-- @name Name of the sticker set +local function searchStickerSet(name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SearchStickerSet"", +    name_ = name +  }, dl_cb, cmd) +end + +M.searchStickerSet = searchStickerSet + +-- Installs/uninstalls or enables/archives sticker set. +-- Official sticker set can\'t be uninstalled, but it can be archived +-- @set_id Identifier of the sticker set +-- @is_installed New value of is_installed +-- @is_archived New value of is_archived +local function updateStickerSet(set_id, is_installed, is_archived, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UpdateStickerSet"", +    set_id_ = set_id, +    is_installed_ = is_installed, +    is_archived_ = is_archived +  }, dl_cb, cmd) +end + +M.updateStickerSet = updateStickerSet + +-- Trending sticker sets are viewed by the user +-- @sticker_set_ids Identifiers of viewed trending sticker sets +local function viewTrendingStickerSets(sticker_set_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ViewTrendingStickerSets"", +    sticker_set_ids_ = sticker_set_ids -- vector +  }, dl_cb, cmd) +end + +M.viewTrendingStickerSets = viewTrendingStickerSets + +-- Changes the order of installed sticker sets +-- @is_masks Pass true to change masks order, pass false to change stickers order +-- @sticker_set_ids Identifiers of installed sticker sets in the new right order +local function reorderStickerSets(is_masks, sticker_set_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ReorderStickerSets"", +    is_masks_ = is_masks, +    sticker_set_ids_ = sticker_set_ids -- vector +  }, dl_cb, cmd) +end + +M.reorderStickerSets = reorderStickerSets + +-- Returns list of recently used stickers +-- @is_attached Pass true to return stickers and masks recently attached to photo or video files, pass false to return recently sent stickers +local function getRecentStickers(is_attached, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecentStickers"", +    is_attached_ = is_attached +  }, dl_cb, cmd) +end + +M.getRecentStickers = getRecentStickers + +-- Manually adds new sticker to the list of recently used stickers. +-- New sticker is added to the beginning of the list. +-- If the sticker is already in the list, at first it is removed from the list +-- @is_attached Pass true to add the sticker to the list of stickers recently attached to photo or video files, pass false to add the sticker to the list of recently sent stickers +-- @sticker Sticker file to add +local function addRecentSticker(is_attached, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddRecentSticker"", +    is_attached_ = is_attached, +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.addRecentSticker = addRecentSticker + +-- Removes a sticker from the list of recently used stickers +-- @is_attached Pass true to remove the sticker from the list of stickers recently attached to photo or video files, pass false to remove the sticker from the list of recently sent stickers +-- @sticker Sticker file to delete +local function deleteRecentSticker(is_attached, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteRecentSticker"", +    is_attached_ = is_attached, +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.deleteRecentSticker = deleteRecentSticker + +-- Clears list of recently used stickers +-- @is_attached Pass true to clear list of stickers recently attached to photo or video files, pass false to clear the list of recently sent stickers +local function clearRecentStickers(is_attached, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ClearRecentStickers"", +    is_attached_ = is_attached +  }, dl_cb, cmd) +end + +M.clearRecentStickers = clearRecentStickers + +-- Returns emojis corresponding to a sticker +-- @sticker Sticker file identifier +local function getStickerEmojis(sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetStickerEmojis"", +    sticker_ = getInputFile(sticker) +  }, dl_cb, cmd) +end + +M.getStickerEmojis = getStickerEmojis + +-- Returns saved animations +local function getSavedAnimations(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSavedAnimations"", +  }, dl_cb, cmd) +end + +M.getSavedAnimations = getSavedAnimations + +-- Manually adds new animation to the list of saved animations. +-- New animation is added to the beginning of the list. +-- If the animation is already in the list, at first it is removed from the list. +-- Only non-secret video animations with MIME type ""video/mp4"" can be added to the list +-- @animation Animation file to add. Only known to server animations (i. e. successfully sent via message) can be added to the list +local function addSavedAnimation(animation, dl_cb, cmd) +  tdcli_function ({ +    ID = ""AddSavedAnimation"", +    animation_ = getInputFile(animation) +  }, dl_cb, cmd) +end + +M.addSavedAnimation = addSavedAnimation + +-- Removes animation from the list of saved animations +-- @animation Animation file to delete +local function deleteSavedAnimation(animation, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteSavedAnimation"", +    animation_ = getInputFile(animation) +  }, dl_cb, cmd) +end + +M.deleteSavedAnimation = deleteSavedAnimation + +-- Returns up to 20 recently used inline bots in the order of the last usage +local function getRecentInlineBots(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetRecentInlineBots"", +  }, dl_cb, cmd) +end + +M.getRecentInlineBots = getRecentInlineBots + +-- Get web page preview by text of the message. +-- Do not call this function to often +-- @message_text Message text +local function getWebPagePreview(message_text, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetWebPagePreview"", +    message_text_ = message_text +  }, dl_cb, cmd) +end + +M.getWebPagePreview = getWebPagePreview + +-- Returns notification settings for a given scope +-- @scope Scope to return information about notification settings +-- scope = Chat(chat_id)|PrivateChats|GroupChats|AllChats| +local function getNotificationSettings(scope, chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetNotificationSettings"", +    scope_ = { +      ID = \'NotificationSettingsFor\' .. scope, +      chat_id_ = chat_id or nil +    }, +  }, dl_cb, cmd) +end + +M.getNotificationSettings = getNotificationSettings + +-- Changes notification settings for a given scope +-- @scope Scope to change notification settings +-- @notification_settings New notification settings for given scope +-- scope = Chat(chat_id)|PrivateChats|GroupChats|AllChats| +local function setNotificationSettings(scope, chat_id, mute_for, show_preview, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetNotificationSettings"", +    scope_ = { +      ID = \'NotificationSettingsFor\' .. scope, +      chat_id_ = chat_id or nil +    }, +    notification_settings_ = { +      ID = ""NotificationSettings"", +      mute_for_ = mute_for, +      sound_ = ""default"", +      show_preview_ = show_preview +    } +  }, dl_cb, cmd) +end + +M.setNotificationSettings = setNotificationSettings + +-- Resets all notification settings to the default value. +-- By default the only muted chats are supergroups, sound is set to \'default\' and message previews are showed +local function resetAllNotificationSettings(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResetAllNotificationSettings"" +  }, dl_cb, cmd) +end + +M.resetAllNotificationSettings = resetAllNotificationSettings + +-- Uploads new profile photo for logged in user. +-- Photo will not change until change will be synchronized with the server. +-- Photo will not be changed if application is killed before it can send request to the server. +-- If something changes, updateUser will be sent +-- @photo_path Path to new profile photo +local function setProfilePhoto(photo_path, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetProfilePhoto"", +    photo_path_ = photo_path +  }, dl_cb, cmd) +end + +M.setProfilePhoto = setProfilePhoto + +-- Deletes profile photo. +-- If something changes, updateUser will be sent +-- @profile_photo_id Identifier of profile photo to delete +local function deleteProfilePhoto(profile_photo_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteProfilePhoto"", +    profile_photo_id_ = profile_photo_id +  }, dl_cb, cmd) +end + +M.deleteProfilePhoto = deleteProfilePhoto + +-- Changes first and last names of logged in user. +-- If something changes, updateUser will be sent +-- @first_name New value of user first name, 1-255 characters +-- @last_name New value of optional user last name, 0-255 characters +local function changeName(first_name, last_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeName"", +    first_name_ = first_name, +    last_name_ = last_name +  }, dl_cb, cmd) +end + +M.changeName = changeName + +-- Changes about information of logged in user +-- @about New value of userFull.about, 0-255 characters +local function changeAbout(about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeAbout"", +    about_ = about +  }, dl_cb, cmd) +end + +M.changeAbout = changeAbout + +-- Changes username of logged in user. +-- If something changes, updateUser will be sent +-- @username New value of username. Use empty string to remove username +local function changeUsername(username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeUsername"", +    username_ = username +  }, dl_cb, cmd) +end + +M.changeUsername = changeUsername + +-- Changes user\'s phone number and sends authentication code to the new user\'s phone number. +-- Returns authStateWaitCode with information about sent code on success +-- @phone_number New user\'s phone number in any reasonable format +-- @allow_flash_call Pass True, if code can be sent via flash call to the specified phone number +-- @is_current_phone_number Pass true, if the phone number is used on the current device. Ignored if allow_flash_call is False +local function changePhoneNumber(phone_number, allow_flash_call, is_current_phone_number, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangePhoneNumber"", +    phone_number_ = phone_number, +    allow_flash_call_ = allow_flash_call, +    is_current_phone_number_ = is_current_phone_number +  }, dl_cb, cmd) +end + +M.changePhoneNumber = changePhoneNumber + +-- Resends authentication code sent to change user\'s phone number. +-- Works only if in previously received authStateWaitCode next_code_type was not null. +-- Returns authStateWaitCode on success +local function resendChangePhoneNumberCode(dl_cb, cmd) +  tdcli_function ({ +    ID = ""ResendChangePhoneNumberCode"", +  }, dl_cb, cmd) +end + +M.resendChangePhoneNumberCode = resendChangePhoneNumberCode + +-- Checks authentication code sent to change user\'s phone number. +-- Returns authStateOk on success +-- @code Verification code from SMS, voice call or flash call +local function checkChangePhoneNumberCode(code, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CheckChangePhoneNumberCode"", +    code_ = code +  }, dl_cb, cmd) +end + +M.checkChangePhoneNumberCode = checkChangePhoneNumberCode + +-- Returns all active sessions of logged in user +local function getActiveSessions(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetActiveSessions"", +  }, dl_cb, cmd) +end + +M.getActiveSessions = getActiveSessions + +-- Terminates another session of logged in user +-- @session_id Session identifier +local function terminateSession(session_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""TerminateSession"", +    session_id_ = session_id +  }, dl_cb, cmd) +end + +M.terminateSession = terminateSession + +-- Terminates all other sessions of logged in user +local function terminateAllOtherSessions(dl_cb, cmd) +  tdcli_function ({ +    ID = ""TerminateAllOtherSessions"", +  }, dl_cb, cmd) +end + +M.terminateAllOtherSessions = terminateAllOtherSessions + +-- Gives or revokes all members of the group editor rights. +-- Needs creator privileges in the group +-- @group_id Identifier of the group +-- @anyone_can_edit New value of anyone_can_edit +local function toggleGroupEditors(group_id, anyone_can_edit, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleGroupEditors"", +    group_id_ = getChatId(group_id).ID, +    anyone_can_edit_ = anyone_can_edit +  }, dl_cb, cmd) +end + +M.toggleGroupEditors = toggleGroupEditors + +-- Changes username of the channel. +-- Needs creator privileges in the channel +-- @channel_id Identifier of the channel +-- @username New value of username. Use empty string to remove username +local function changeChannelUsername(channel_id, username, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChannelUsername"", +    channel_id_ = getChatId(channel_id).ID, +    username_ = username +  }, dl_cb, cmd) +end + +M.changeChannelUsername = changeChannelUsername + +-- Gives or revokes right to invite new members to all current members of the channel. +-- Needs creator privileges in the channel. +-- Available only for supergroups +-- @channel_id Identifier of the channel +-- @anyone_can_invite New value of anyone_can_invite +local function toggleChannelInvites(channel_id, anyone_can_invite, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleChannelInvites"", +    channel_id_ = getChatId(channel_id).ID, +    anyone_can_invite_ = anyone_can_invite +  }, dl_cb, cmd) +end + +M.toggleChannelInvites = toggleChannelInvites + +-- Enables or disables sender signature on sent messages in the channel. +-- Needs creator privileges in the channel. +-- Not available for supergroups +-- @channel_id Identifier of the channel +-- @sign_messages New value of sign_messages +local function toggleChannelSignMessages(channel_id, sign_messages, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ToggleChannelSignMessages"", +    channel_id_ = getChatId(channel_id).ID, +    sign_messages_ = sign_messages +  }, dl_cb, cmd) +end + +M.toggleChannelSignMessages = toggleChannelSignMessages + +-- Changes information about the channel. +-- Needs creator privileges in the broadcast channel or editor privileges in the supergroup channel +-- @channel_id Identifier of the channel +-- @about New value of about, 0-255 characters +local function changeChannelAbout(channel_id, about, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChannelAbout"", +    channel_id_ = getChatId(channel_id).ID, +    about_ = about +  }, dl_cb, cmd) +end + +M.changeChannelAbout = changeChannelAbout + +-- Pins a message in a supergroup channel chat. +-- Needs editor privileges in the channel +-- @channel_id Identifier of the channel +-- @message_id Identifier of the new pinned message +-- @disable_notification True, if there should be no notification about the pinned message +local function pinChannelMessage(channel_id, message_id, disable_notification, dl_cb, cmd) +  tdcli_function ({ +    ID = ""PinChannelMessage"", +    channel_id_ = getChatId(channel_id).ID, +    message_id_ = message_id, +    disable_notification_ = disable_notification +  }, dl_cb, cmd) +end + +M.pinChannelMessage = pinChannelMessage + +-- Removes pinned message in the supergroup channel. +-- Needs editor privileges in the channel +-- @channel_id Identifier of the channel +local function unpinChannelMessage(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""UnpinChannelMessage"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.unpinChannelMessage = unpinChannelMessage + +-- Reports some supergroup channel messages from a user as spam messages +-- @channel_id Channel identifier +-- @user_id User identifier +-- @message_ids Identifiers of messages sent in the supergroup by the user, the list should be non-empty +local function reportChannelSpam(channel_id, user_id, message_ids, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ReportChannelSpam"", +    channel_id_ = getChatId(channel_id).ID, +    user_id_ = user_id, +    message_ids_ = message_ids -- vector +  }, dl_cb, cmd) +end + +M.reportChannelSpam = reportChannelSpam + +-- Returns information about channel members or kicked from channel users. +-- Can be used only if channel_full->can_get_members == true +-- @channel_id Identifier of the channel +-- @filter Kind of channel users to return, defaults to channelMembersRecent +-- @offset Number of channel users to skip +-- @limit Maximum number of users be returned, can\'t be greater than 200 +-- filter = Recent|Administrators|Kicked|Bots +local function getChannelMembers(channel_id, offset, filter, limit, dl_cb, cmd) +  if not limit or limit > 200 then +    limit = 200 +  end + +  tdcli_function ({ +    ID = ""GetChannelMembers"", +    channel_id_ = getChatId(channel_id).ID, +    filter_ = { +      ID = ""ChannelMembers"" .. filter +    }, +    offset_ = offset, +    limit_ = limit +  }, dl_cb, cmd) +end + +M.getChannelMembers = getChannelMembers + +-- Deletes channel along with all messages in corresponding chat. +-- Releases channel username and removes all members. +-- Needs creator privileges in the channel. +-- Channels with more than 1000 members can\'t be deleted +-- @channel_id Identifier of the channel +local function deleteChannel(channel_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteChannel"", +    channel_id_ = getChatId(channel_id).ID +  }, dl_cb, cmd) +end + +M.deleteChannel = deleteChannel + +-- Returns list of created public channels +local function getCreatedPublicChannels(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetCreatedPublicChannels"" +  }, dl_cb, cmd) +end + +M.getCreatedPublicChannels = getCreatedPublicChannels + +-- Closes secret chat +-- @secret_chat_id Secret chat identifier +local function closeSecretChat(secret_chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""CloseSecretChat"", +    secret_chat_id_ = secret_chat_id +  }, dl_cb, cmd) +end + +M.closeSecretChat = closeSecretChat + +-- Returns user that can be contacted to get support +local function getSupportUser(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetSupportUser"", +  }, dl_cb, cmd) +end + +M.getSupportUser = getSupportUser + +-- Returns background wallpapers +local function getWallpapers(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetWallpapers"", +  }, dl_cb, cmd) +end + +M.getWallpapers = getWallpapers + +-- Registers current used device for receiving push notifications +-- @device_token Device token +-- device_token = apns|gcm|mpns|simplePush|ubuntuPhone|blackberry +local function registerDevice(device_token, token, device_token_set, dl_cb, cmd) +  local dToken = {ID = device_token .. \'DeviceToken\', token_ = token} + +  if device_token_set then +    dToken = {ID = ""DeviceTokenSet"", token_ = device_token_set} -- tokens:vector<DeviceToken> +  end + +  tdcli_function ({ +    ID = ""RegisterDevice"", +    device_token_ = dToken +  }, dl_cb, cmd) +end + +M.registerDevice = registerDevice + +-- Returns list of used device tokens +local function getDeviceTokens(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetDeviceTokens"", +  }, dl_cb, cmd) +end + +M.getDeviceTokens = getDeviceTokens + +-- Changes privacy settings +-- @key Privacy key +-- @rules New privacy rules +-- @privacyKeyUserStatus Privacy key for managing visibility of the user status +-- @privacyKeyChatInvite Privacy key for managing ability of invitation of the user to chats +-- @privacyRuleAllowAll Rule to allow all users +-- @privacyRuleAllowContacts Rule to allow all user contacts +-- @privacyRuleAllowUsers Rule to allow specified users +-- @user_ids User identifiers +-- @privacyRuleDisallowAll Rule to disallow all users +-- @privacyRuleDisallowContacts Rule to disallow all user contacts +-- @privacyRuleDisallowUsers Rule to disallow all specified users +-- key = UserStatus|ChatInvite +-- rules = AllowAll|AllowContacts|AllowUsers(user_ids)|DisallowAll|DisallowContacts|DisallowUsers(user_ids) +local function setPrivacy(key, rule, allowed_user_ids, disallowed_user_ids, dl_cb, cmd) +  local rules = {[0] = {ID = \'PrivacyRule\' .. rule}} + +  if allowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      [0] = { +        ID = ""PrivacyRuleAllowUsers"", +        user_ids_ = allowed_user_ids -- vector +      }, +    } +  end +  if disallowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      [0] = { +        ID = ""PrivacyRuleDisallowUsers"", +        user_ids_ = disallowed_user_ids -- vector +      }, +    } +  end +  if allowed_user_ids and disallowed_user_ids then +    rules = { +      { +        ID = \'PrivacyRule\' .. rule +      }, +      { +        ID = ""PrivacyRuleAllowUsers"", +        user_ids_ = allowed_user_ids +      }, +      [0] = { +        ID = ""PrivacyRuleDisallowUsers"", +        user_ids_ = disallowed_user_ids +      }, +    } +  end +  tdcli_function ({ +    ID = ""SetPrivacy"", +    key_ = { +      ID = \'PrivacyKey\' .. key +    }, +    rules_ = { +      ID = ""PrivacyRules"", +      rules_ = rules +    }, +  }, dl_cb, cmd) +end + +M.setPrivacy = setPrivacy + +-- Returns current privacy settings +-- @key Privacy key +-- key = UserStatus|ChatInvite +local function getPrivacy(key, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetPrivacy"", +    key_ = { +      ID = ""PrivacyKey"" .. key +    }, +  }, dl_cb, cmd) +end + +M.getPrivacy = getPrivacy + +-- Returns value of an option by its name. +-- See list of available options on https://core.telegram.org/tdlib/options +-- @name Name of the option +local function getOption(name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetOption"", +    name_ = name +  }, dl_cb, cmd) +end + +M.getOption = getOption + +-- Sets value of an option. +-- See list of available options on https://core.telegram.org/tdlib/options. +-- Only writable options can be set +-- @name Name of the option +-- @value New value of the option +local function setOption(name, option, value, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetOption"", +    name_ = name, +    value_ = { +      ID = \'Option\' .. option, +      value_ = value +    }, +  }, dl_cb, cmd) +end + +M.setOption = setOption + +-- Changes period of inactivity, after which the account of currently logged in user will be automatically deleted +-- @ttl New account TTL +local function changeAccountTtl(days, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeAccountTtl"", +    ttl_ = { +      ID = ""AccountTtl"", +      days_ = days +    }, +  }, dl_cb, cmd) +end + +M.changeAccountTtl = changeAccountTtl + +-- Returns period of inactivity, after which the account of currently logged in user will be automatically deleted +local function getAccountTtl(dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetAccountTtl"", +  }, dl_cb, cmd) +end + +M.getAccountTtl = getAccountTtl + +-- Deletes the account of currently logged in user, deleting from the server all information associated with it. +-- Account\'s phone number can be used to create new account, but only once in two weeks +-- @reason Optional reason of account deletion +local function deleteAccount(reason, dl_cb, cmd) +  tdcli_function ({ +    ID = ""DeleteAccount"", +    reason_ = reason +  }, dl_cb, cmd) +end + +M.deleteAccount = deleteAccount + +-- Returns current chat report spam state +-- @chat_id Chat identifier +local function getChatReportSpamState(chat_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""GetChatReportSpamState"", +    chat_id_ = chat_id +  }, dl_cb, cmd) +end + +M.getChatReportSpamState = getChatReportSpamState + +-- Reports chat as a spam chat or as not a spam chat. +-- Can be used only if ChatReportSpamState.can_report_spam is true. +-- After this request ChatReportSpamState.can_report_spam became false forever +-- @chat_id Chat identifier +-- @is_spam_chat If true, chat will be reported as a spam chat, otherwise it will be marked as not a spam chat +local function changeChatReportSpamState(chat_id, is_spam_chat, dl_cb, cmd) +  tdcli_function ({ +    ID = ""ChangeChatReportSpamState"", +    chat_id_ = chat_id, +    is_spam_chat_ = is_spam_chat +  }, dl_cb, cmd) +end + +M.changeChatReportSpamState = changeChatReportSpamState + +-- Bots only. +-- Informs server about number of pending bot updates if they aren\'t processed for a long time +-- @pending_update_count Number of pending updates +-- @error_message Last error\'s message +local function setBotUpdatesStatus(pending_update_count, error_message, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetBotUpdatesStatus"", +    pending_update_count_ = pending_update_count, +    error_message_ = error_message +  }, dl_cb, cmd) +end + +M.setBotUpdatesStatus = setBotUpdatesStatus + +-- Returns Ok after specified amount of the time passed +-- @seconds Number of seconds before that function returns +local function setAlarm(seconds, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SetAlarm"", +    seconds_ = seconds +  }, dl_cb, cmd) +end + +M.setAlarm = setAlarm + +-- Text message +-- @text Text to send +-- @disable_notification Pass true, to disable notification about the message, doesn\'t works in secret chats +-- @from_background Pass true, if the message is sent from background +-- @reply_markup Bots only. Markup for replying to message +-- @disable_web_page_preview Pass true to disable rich preview for link in the message text +-- @clear_draft Pass true if chat draft message should be deleted +-- @entities Bold, Italic, Code, Pre, PreCode and TextUrl entities contained in the text. Non-bot users can\'t use TextUrl entities. Can\'t be used with non-null parse_mode +-- @parse_mode Text parse mode, nullable. Can\'t be used along with enitities +local function sendMessage(chat_id, reply_to_message_id, disable_notification, text, disable_web_page_preview, parse_mode) +  local TextParseMode = getParseMode(parse_mode) +   +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = 1, +    reply_markup_ = nil, +    input_message_content_ = { +      ID = ""InputMessageText"", +      text_ = text, +      disable_web_page_preview_ = disable_web_page_preview, +      clear_draft_ = 0, +      entities_ = {}, +      parse_mode_ = TextParseMode, +    }, +  }, dl_cb, nil) +end + +M.sendMessage = sendMessage + +-- Animation message +-- @animation Animation file to send +-- @thumb Animation thumb, if available +-- @width Width of the animation, may be replaced by the server +-- @height Height of the animation, may be replaced by the server +-- @caption Animation caption, 0-200 characters +local function sendAnimation(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, animation, width, height, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageAnimation"", +      animation_ = getInputFile(animation), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      width_ = width or \'\', +      height_ = height or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendAnimation = sendAnimation + +-- Audio message +-- @audio Audio file to send +-- @album_cover_thumb Thumb of the album\'s cover, if available +-- @duration Duration of audio in seconds, may be replaced by the server +-- @title Title of the audio, 0-64 characters, may be replaced by the server +-- @performer Performer of the audio, 0-64 characters, may be replaced by the server +-- @caption Audio caption, 0-200 characters +local function sendAudio(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, audio, duration, title, performer, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageAudio"", +      audio_ = getInputFile(audio), +      --album_cover_thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      duration_ = duration or \'\', +      title_ = title or \'\', +      performer_ = performer or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendAudio = sendAudio + +-- Document message +-- @document Document to send +-- @thumb Document thumb, if available +-- @caption Document caption, 0-200 characters +local function sendDocument(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, document, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageDocument"", +      document_ = getInputFile(document), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      caption_ = caption +    }, +  }, dl_cb, cmd) +end + +M.sendDocument = sendDocument + +-- Photo message +-- @photo Photo to send +-- @caption Photo caption, 0-200 characters +local function sendPhoto(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, photo, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessagePhoto"", +      photo_ = getInputFile(photo), +      added_sticker_file_ids_ = {}, +      width_ = 0, +      height_ = 0, +      caption_ = caption +    }, +  }, dl_cb, cmd) +end + +M.sendPhoto = sendPhoto + +-- Sticker message +-- @sticker Sticker to send +-- @thumb Sticker thumb, if available +local function sendSticker(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, sticker, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageSticker"", +      sticker_ = getInputFile(sticker), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +    }, +  }, dl_cb, cmd) +end + +M.sendSticker = sendSticker + +-- Video message +-- @video Video to send +-- @thumb Video thumb, if available +-- @duration Duration of video in seconds +-- @width Video width +-- @height Video height +-- @caption Video caption, 0-200 characters +local function sendVideo(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, video, duration, width, height, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVideo"", +      video_ = getInputFile(video), +      --thumb_ = { +        --ID = ""InputThumb"", +        --path_ = path, +        --width_ = width, +        --height_ = height +      --}, +      added_sticker_file_ids_ = {}, +      duration_ = duration or \'\', +      width_ = width or \'\', +      height_ = height or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendVideo = sendVideo + +-- Voice message +-- @voice Voice file to send +-- @duration Duration of voice in seconds +-- @waveform Waveform representation of the voice in 5-bit format +-- @caption Voice caption, 0-200 characters +local function sendVoice(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, voice, duration, waveform, caption, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVoice"", +      voice_ = getInputFile(voice), +      duration_ = duration or \'\', +      waveform_ = waveform or \'\', +      caption_ = caption or \'\' +    }, +  }, dl_cb, cmd) +end + +M.sendVoice = sendVoice + +-- Message with location +-- @latitude Latitude of location in degrees as defined by sender +-- @longitude Longitude of location in degrees as defined by sender +local function sendLocation(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, latitude, longitude, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageLocation"", +      location_ = { +        ID = ""Location"", +        latitude_ = latitude, +        longitude_ = longitude +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendLocation = sendLocation + +-- Message with information about venue +-- @venue Venue to send +-- @latitude Latitude of location in degrees as defined by sender +-- @longitude Longitude of location in degrees as defined by sender +-- @title Venue name as defined by sender +-- @address Venue address as defined by sender +-- @provider Provider of venue database as defined by sender. Only ""foursquare"" need to be supported currently +-- @id Identifier of the venue in provider database as defined by sender +local function sendVenue(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, latitude, longitude, title, address, id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageVenue"", +      venue_ = { +        ID = ""Venue"", +        location_ = { +          ID = ""Location"", +          latitude_ = latitude, +          longitude_ = longitude +        }, +        title_ = title, +        address_ = address, +        provider_ = \'foursquare\', +        id_ = id +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendVenue = sendVenue + +-- User contact message +-- @contact Contact to send +-- @phone_number User\'s phone number +-- @first_name User first name, 1-255 characters +-- @last_name User last name +-- @user_id User identifier if known, 0 otherwise +local function sendContact(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, phone_number, first_name, last_name, user_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageContact"", +      contact_ = { +        ID = ""Contact"", +        phone_number_ = phone_number, +        first_name_ = first_name, +        last_name_ = last_name, +        user_id_ = user_id +      }, +    }, +  }, dl_cb, cmd) +end + +M.sendContact = sendContact + +-- Message with a game +-- @bot_user_id User identifier of a bot owned the game +-- @game_short_name Game short name +local function sendGame(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, bot_user_id, game_short_name, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageGame"", +      bot_user_id_ = bot_user_id, +      game_short_name_ = game_short_name +    }, +  }, dl_cb, cmd) +end + +M.sendGame = sendGame + +-- Forwarded message +-- @from_chat_id Chat identifier of the message to forward +-- @message_id Identifier of the message to forward +local function sendForwarded(chat_id, reply_to_message_id, disable_notification, from_background, reply_markup, from_chat_id, message_id, dl_cb, cmd) +  tdcli_function ({ +    ID = ""SendMessage"", +    chat_id_ = chat_id, +    reply_to_message_id_ = reply_to_message_id, +    disable_notification_ = disable_notification, +    from_background_ = from_background, +    reply_markup_ = reply_markup, +    input_message_content_ = { +      ID = ""InputMessageForwarded"", +      from_chat_id_ = from_chat_id, +      message_id_ = message_id +    }, +  }, dl_cb, cmd) +end + +M.sendForwarded = sendForwarded + +return M cli/tg/tgcli (Binary file not shown.) 0 comments on commit 3233fdf  Comment on 3233fdf   Leave a comment Comment  Desktop version",,2
657,https://github.com/shellystar/fitness-course-registration-system.git,this is a website for fitness course registration; implemented with python and Django.,,1
658,https://github.com/Myronic/Fitness_App.git,Fitness web app(front end),,1
659,https://github.com/fettlehub/fettle.git,Fitness Club Managment System,,1
660,https://github.com/HamjASB/Fit-Got-U.git,Fitness For you,,1
661,https://github.com/KumarArab/Fitness-App.git,A cross platform mobile Fitness app.,,1
662,https://github.com/seansabour/wdp-fitness-demo.git,A simple fitness tracker built on IBM Cloud,"fitbit,bluemix,cloudant",1
663,https://github.com/kseniacold/java-fitness-logger.git,Java desktop fitness logger application,,1
664,https://github.com/dru1208/fitness-app.git,"front-end react portion of fitness application, addressing nutritional, fitness, and social information for users.",,1
665,https://github.com/ishrivatsa/catalogsvc.git,Catalog service repo - this is part of the larger ACME fitness application,"golang,microservice,catalog,mongodb",1
666,https://github.com/sakebook/android-sample-fit.git,Google Fitness API use sample for Android,,1
667,https://github.com/bshetti/cart.git,Cart Service for Acme Fitness Online Store,,1
668,https://github.com/1lucianmoldovan/node-fitness-app.git,Fitness App,,1
669,https://github.com/arunrajora/health-bait.git,an android app for health and fitness,"android,health,fitness,group-creation,splitting,firebase-database",1
670,https://github.com/sooheib/GYM_ANDROID.git,FITNESS/GYM APP,,1
671,https://github.com/harsh29/planfit.git,fitness planner app.,,1
672,https://github.com/latne1ec/HappyTime.git,Wahoo Fitness Device Hackathon ,,1
673,https://github.com/zusiwu1115/S308.FinalProject.Group6.git,Fitness club membership systems,,1
674,https://github.com/javidsheik/wear-fitness.git,iot - wearables - fitness ,,1
675,https://github.com/abalomenos/health-link.git,"Health and Fitness App, utilizing MongoDB, Express.js, React.js, Node.js and Materialize.",,1
676,https://github.com/kronik/fita.git,FitA - Your personal fitness assistant,,1
677,https://github.com/fitstats/fitstats.git,"Finally, a single place to collect, view, and analyze your fitness data from apps you already use.",,1
678,https://github.com/gilangarinata/flutter_fitness_app.git,UI Flutter for Fitness App,,1
679,https://github.com/gautamkrishnan91/fitness-pro.git,A sample phonegap fitness application,,1
680,https://github.com/giffy1/My-Activities.git,"This is the starter code for CS390MB Mobile Health Sensing. My Activities is a daily health monitoring application, which tracks personal fitness, heart rate, sociability and frequent locations. The framework is provided; be ambitious!",,1
681,https://github.com/Sakshi16/FitHub.git,A fitness app that encourages users to complete and upload fitness challenges and compete for the top position on the leaderboard.,,1
682,https://github.com/lcohensf/dev-msg-handler.git,Salesforce1 Labs app (2net fitness) Heroku component.,,1
683,https://github.com/jungpil/nkoi.git,NK fitness landscapes model of open innovation,,1
684,https://github.com/azamd/BodyUp.git,an All In One Fitness Platform,,1
685,https://github.com/jonmill/otf-tracker.git,3rd Party Orangetheory Fitness Data Analysis,,1
686,https://github.com/Superfour-hackathons/FeelFit.git,An e-commerce website for fitness products,"hackathon-project,hackathon-2021,webpage,ecommerce-website",1
687,https://github.com/mccoset16/BeFit.git,BeFit Fitness mod is a calorie counter and tracker currently being developed for Beat Saber.,,1
688,https://github.com/SWENG500-Team1/FitnessForSplunk.git,A Splunk App for Ingesting Fitness Data from multiple providers and comparing performance.,,1
689,https://github.com/rreinold/FitnessDashboard_IonicApp.git,"Using Ionic, Cordova and D3.js to build an app version of my Fitness Dashboard",,1
690,https://github.com/cupcaketees/PocketFitness.git,An android application assisting in health and fitness goals and lifestyle,,1
691,https://github.com/jhong01/ProgressPics.git,Android application to track fitness progress using pictures,,1
692,https://github.com/lukevt/fitnessproject.git,Web app for a fitness company created with MERN stack.,,1
693,https://github.com/danrichmond/fitness-app.git,Fitness application developed by our ACM software development group.,,1
694,https://github.com/wogandmush/SSWD_Assignment.git,Build a web application for a Fitness Centre,,1
695,https://github.com/David1Socha/GitFit.git,A social fitness application created for software engineering class,,1
696,https://github.com/raj312/FitnessTrackerApplication.git,"{""An iOS application that will cover many aspects of the user's fitness work such as progress tracking, logging workouts and much more functionality""}",,1
697,https://github.com/shayanzamani/fitness-landscape.git,#fitness-landscape #fitness-landscape-analysis,,1
698,https://github.com/Gor1x/Coach.OK.git,Fitness!,,1
699,https://github.com/kotenko88/dietafit.git,fitness,,1
700,https://github.com/dhruv-vachhani/Sports-Academy-Info.git,"A website which give info about different sports academy and other fitness center. also about achivements, tournaments etc.","django,python",1
701,https://github.com/TheIncredibleIllmo/fitness-tracker.git,A fitness tracker for fitness people,,1
702,https://github.com/KLivingston726/Fitnesspal.git,Fitness App,,1
703,https://github.com/n12babu/HSA-Fitness-Blog.git,Fitness Blog,,1
704,https://github.com/Evercise/evercise.git,fitness marketplace,,1
705,https://github.com/sean7218/fitness-frog.git,fitness tracker,,1
706,https://github.com/tblessing1s/fitness_assessment.git,Fitness Assessment,,1
707,https://github.com/Sidharthpk/Trainee.git,Fitness app,,1
708,https://github.com/pb82/fitness-backend.git,fitness-backend,,1
709,https://github.com/tonyparka78/Fayetteville_State-Senior_Project.git,Fitness Website,"html,javascript,nodejs,css,express,full-stack,mysql,bootstrap,ejs",1
710,https://github.com/lazzy-77/brotein.git,Fitness App ,,1
711,https://github.com/Miniwe/fitns.git,Fitness NS,,1
712,https://github.com/rhodeproject/gotta_fit.git,fitness scheduling,,1
713,https://github.com/csgalileo/9_fitness.git,Personal Fitness,,1
714,https://github.com/xmlking/fitness-tracking.git,Fitness Tracker,,1
715,https://github.com/AdamKmet1997/myFitness.git,fitness website,,1
716,https://github.com/dairon321/EQUIPO8_FBM11_PPI2020.git,OLYMPO FITNESS,,1
717,https://github.com/hoganic/FitnessApp.git,Fitness Application,,1
718,https://github.com/rojasleon/fitness.git,Fitness App,,1
719,https://github.com/altruong/fitness-journal-backend.git,Fitness backend,,1
720,https://github.com/rookasrudzianskas/JS_FITNESS_TRACKER.git,FITNESS TRACKER,,1
721,https://github.com/ysabate/PR-daily.git,fitness website,,1
722,https://github.com/hoganic/FitnessApp.git,Fitness Application,,1
723,https://github.com/rojasleon/fitness.git,Fitness App,,1
724,https://github.com/altruong/fitness-journal-backend.git,Fitness backend,,1
725,https://github.com/uzirthapa/Firebird-Fitness.git,Firebird Fitness,,1
726,https://github.com/D3dWiz/FitnessManager.git,Fitness Manager,,1
727,https://github.com/pft86/pft86.git,fitness site,,1
728,https://github.com/rhargr/SoloFit.git,fitness App,,1
729,https://github.com/nassemshabo/fitness_website.git,fitness_website,,1
730,https://github.com/BSmalls6/fitness_tracker-13.git,fitness tracker,,1
731,https://github.com/BorislavNikolov/Corpus.git,Fitness Blog,,1
732,https://github.com/nichez/fitness-app.git,fitness tracker,,1
733,https://github.com/sempercoder/fiTracker.git,fitness tracker,,1
734,https://github.com/Vytautasns/tracker.git,Fitness tracker,,1
735,https://github.com/floofydoug/batopets.git,Fitness gamification,,1
736,https://github.com/sajjadjafaribojd/nargesfitness.ir.git,"health, fitness",,1
737,https://github.com/allemas/my-measures.git,Fitness tracker ,,1
738,https://github.com/deeromtechnologies/befit.git,Fitness website,,1
739,https://github.com/HAFDIAHMED/gym_fitness.git,gym fitness,"html,css,javascript,js,gym,fitness",1
740,https://github.com/zivolution921/universifit2.git,fitness app,,1
741,https://github.com/SammyNajd/FitBook.git,Fitness tracker,,1
742,https://github.com/WilliamMajanja/Ian-Hillary-Lydia.git,Fitness Websites ,,1
743,https://github.com/fitformemrugel/P90X-Journey.git,Health&Fitness,,1
744,https://github.com/cpryor24/quarter-1-project.git,Fitness App,,1
745,https://github.com/akhaya/stackathon.git,fitness app,,1
746,https://github.com/One-More-Rep/One-More-Rep.git,Fitness App ,,1
747,https://github.com/mashrur29/Athletio.git,Fitness Application,"android-application,fitness-app",1
748,https://github.com/haronka1999/FitnessApp.git,fitness app,,1
749,https://github.com/danijelvasov/Fit-Box-app.git,Fitness app.,,1
750,https://github.com/davidrasm/Lumiere.git,BEAST 2 package for phylodynamics with adaptive molecular evolution using the Marginal Fitness Birth-Death model,,1
751,https://github.com/brookgao/CityU-Fitness.git,An app that help book CityU Physical Fitness Room and make some records,,1
752,https://github.com/Hexcles/pebbly-fit.git,A 24-hour background fitness tracker on Pebble (still under development!),,1
753,https://github.com/YvonneGi/weplay.git,Weplay app help users to search for fitness activities in their location.,,1
754,https://github.com/krithikha2001/Fitness-tracker.git,Keep track of your fitness . Get to know how fit you are!,,1
755,https://github.com/JohnWinter13/fit_together.git,A cross-platform mobile app built with flutter to help people organize fitness events,"flutter,flutter-apps,dart",1
756,https://github.com/vJechsmayr/FitForFun_prSoftwareEngineering.git,JavaFX Desktop Application FitForFun - Tracking Fitness Activitys and read GPS Data (Jan 2016),"javafx,desktop-application,java,fitness-app,gps-tracking",1
757,https://github.com/MattMcLennan/myPersonalFitnessTrainer.git,Final demo day project. A web application that allows a user the full personal fitness experience,,1
758,https://github.com/mjohnson11/VLTE_PIPELINES.git,"Pipelines for fitness assay, sequencing, etc. analysis of the VLTE (""very"" long term evolution experiment (yeast))",,1
759,https://github.com/jeremytedwards/fb-armageddon.git,A fitness tracker based application for gamifying your fitness data,,1
760,https://github.com/kevinyang14/Beast.git,Fitness made fun.,,1
761,https://github.com/joanaz/upcoin.git,A fitness virtual currency,,1
762,https://github.com/matthewowallace/phpfinalproject.git,HealthJam fitness site (ecommerce) ,,1
763,https://github.com/Subhadip313/Fitness-Guide-360.git,Fitness related static website,,1
764,https://github.com/EthannYakabuski/GhostPB.git,Mobile Fitness App: Android,,1
765,https://github.com/manoj-choudhari-git/MyFitnessLog.git,Fitness Logging Application,,1
766,https://github.com/Mciocca/fitness-tracker-server.git,Server for fitness-tracker,,1
767,https://github.com/dfelt/stepstep.git,A mobile fitness game,,1
768,https://github.com/trayburn/fitness.git,My fitness blog,,1
769,https://github.com/vvictorov/TimerApp.git,Android Fitness Timer Application,,1
770,https://github.com/TIS2019-FMFI/fitness.git,Fitness club booking system,,1
771,https://github.com/skillitzimberg/nope.git,AWS Hackathon Fitness Incentivizer,,1
772,https://github.com/linermgn/trainings.git,My fitness trainings,,1
773,https://github.com/beratbarancevik/gymdog-ios.git,Fitness tracker iOS App,,1
774,https://github.com/KamiQuasi/fitapp.git,Fitness tracking application,,1
775,https://github.com/stigsfoot/glassfit.git,Google Glass Fitness App,,1
776,https://github.com/philcallister/schedule.git,Mobile Fitness Scheduling app,,1
777,https://github.com/code-with-sam/moveclub.git,blockchain based fitness tracking,"steem,steemconnect",1
778,https://github.com/brycesulin/iFIT.git,iOS Fitness/Health App,"ios,swift,health,fitness",1
779,https://github.com/ooad-2019-2020/Grupa3-Treneri.git,Tema: Fitness centar,,1
780,https://github.com/stefanpopescu/pole-fitness.git,pole fitness app,,1
781,https://github.com/Subroto5412/Fitness-Diet.git,Fitness and Diet,,1
782,https://github.com/zmervey18/Fitzilla.git,Routine-Fitness Front-end,,1
783,https://github.com/pokharelsrj/easyfitness.git,A Fitness Website model,,1
784,https://github.com/julien-leroy/naofit.git,Fitness programme for NAO,,1
785,https://github.com/hrsky/iFitness.git,a fitness android app,,1
786,https://github.com/urbansurvivalfitness/usfit-denver.git,urban survival fitness - denver,,1
787,https://github.com/pjay79/move_Sass.git,Fitness Website Landing Page,"html,css,javascript,sass",1
788,https://github.com/elraffy/Go-Fitness.git,Landing Web  about fitness,,1
789,https://github.com/rk891014/Fitcurve_web.git,a girl fitness website,,1
790,https://github.com/iabhishek5007/FitenessApp.git,Fitness Training App UI,,1
791,https://github.com/vpatt1031/mongo_fitness_tracker.git,Fitness Tracker Using Mongo,,1
792,https://github.com/aerobicio/aerobic.io.git,Fitness tracking for friends,,1
793,https://github.com/awray13/FitnessWebsite.git,Student Project - Fitness Website,,1
794,https://github.com/python2and3developer/fitness_tracker.git,Fitness tracker in Django,,1
795,https://github.com/Mecope1/fitness-tracker.git,Fitness Tracking App,,1
796,https://github.com/chintanb33/skfitnessstudio.git,SK Fitness Studio,,1
797,https://github.com/SDen4/loftschool-stage-1-fitness-centre.git,Fitness centre project,,1
798,https://github.com/rk891014/Fitcurve.git,A girls fitness app,,1
799,https://github.com/bretthop/FitJournal.git,A Fitness Journal,,1
800,https://github.com/Sahedeva/fitnessCalculator.git,Calculating fitness energy expenditures,,1
801,https://github.com/tlynam/strongape.git,Fitness journal and programs,,1
802,https://github.com/frostent/Pro-Scout-Fitness.git,Fitness Kids Sports Adults,,1
803,https://github.com/kuntakinte/CrissFit.git,Learning more about fitness,,1
804,https://github.com/philcallister/fitnesstrackr.git,Fitness Tracker Project,,1
805,https://github.com/cnaut/glean.git,Personal fitness analytics,,1
806,https://github.com/miazga/BazaFitness.git,Projekt bazy dla fitness,,1
807,https://github.com/rpolacheck/jab.git,Jab Fitness Website,,1
808,https://github.com/ayush013/alpha-aesthetics.git,ONE RELIGION - FITNESS!,,1
809,https://github.com/nawazumar/upfitness.git,Fitness Contact Form,,1
810,https://github.com/m-burgess-codes/Weightloss-Calculator.git,Basic Fitness Calculators,,1
811,https://github.com/neighborhoods/PrefabFitness.git,Fitness UseCases for Prefab.,,1
812,https://github.com/rbermani/android-fitnesscalc.git,Android Fitness Calculator App,,1
813,https://github.com/davidlaughlin/Lifts.git,Fitness Tracking and Progress,,1
814,https://github.com/zstonerock/zstonerock.github.io.git,Stonerock Fitness Website,,1
815,https://github.com/edwdeapri/udacity-udacifitness.git,A triathalon fitness application,"react-native,javascript,triathlon,fitness",1
816,https://github.com/joshwhit99/RPGFitness.git,RPG Fitness app,,1
817,https://github.com/AmI-2018/fitness-partner.git,Fitness Partner website:,,1
818,https://github.com/Seif-Naouali/OSC_VERA.git,Fitness_Local_App,,1
819,https://github.com/SmartPracticeschool/llSPS-INT-1481-Body-Fitness-Prediction.git,Body Fitness Prediction,,1
820,https://github.com/kelleykelleymoore/kelleykelleymoore.git,Health & Fitness Blog,,1
821,https://github.com/vaughandroid/vigor-abandoned.git,Yet another fitness app,,1
822,https://github.com/katzenp/fitness.git,Fitness app development,,1
823,https://github.com/urain/Fitness-Calculator.git,Python fitness calculator,,1
824,https://github.com/knipferrc/fitme.git,Fitness management made easy,"react,fitness,react-dom,app",1
825,https://github.com/blakepastra/driveapi.git,API For Drive Fitness,,1
826,https://github.com/MariannaUcy95/epl435.git,The Fitness Club Prototype,,1
827,https://github.com/Jessicalong627/fitness-tracker.git,A fitness tracking app,,1
828,https://github.com/Mystic5523/kendo.git,Fitness for Kendo website,,1
829,https://github.com/bobsany16/fitness-club-application.git,SBU Fitness Club application.,,1
830,https://github.com/eliajada/CapstoneHealth.git,Fitness Tracker Android App,"java,android,fitness-tracker",1
831,https://github.com/austinf34/austinf34.github.io.git,Fitness and Nutrition App,,1
832,https://github.com/bmclaugh28GH/fitness_app2_bcm.git,fitness_app2_bcm,,1
833,https://github.com/supreeth7/thrive-gatsby.git,Thrive - Everything Fitness,,1
834,https://github.com/Terhands/FiTracker.git,Fitness tracking android application.,,1
835,https://github.com/nicholasraphael/workwithapp.git,fitness app for students,,1
836,https://github.com/SCOBannon/FitChoice.git,fitness exercise app,,1
837,https://github.com/neighborhoods/BakeryFitness.git,Fitness functions for Bakery.,,1
838,https://github.com/Build-Week-Anywhere-Fitness-1/Front-End.git,Manages fitness class schedules,,1
839,https://github.com/maximebj/fitness.plugin.git,Fitness Schedule WordPress Plugin,,1
840,https://github.com/UWRealityLab/vrcapstone20sp-team5.git,MR Fitness - Ball Blitz,,1
841,https://github.com/thenativeweb/stethoskop.git,stethoskop measures application fitness.,,1
842,https://github.com/wujessica/Routime.git,A fitness-oriented app.,,1
843,https://github.com/mikemoye14/Bicycle-Fitness-Tracker.git,Bicycle Fitness Tracker,,1
844,https://github.com/DoubleAxion/EndoMove.git,Fitness From Within,,1
845,https://github.com/AnthonyASanchez/FitZ.git,FitZ fitness app,,1
846,https://github.com/davidbeijinho/fitness-app.git,A simple fitness app,,1
847,https://github.com/adamgolab/Class-Rosters.git,Orangetheory Fitness Class Rosters,,1
848,https://github.com/xypkent/FitnessMall.git,Microservice Fitness Mall,,1
849,https://github.com/devharipragaz007/fitnesscloud-api.git,Fitness Cloud API,,1
850,https://github.com/graceweidmann/frontend.git,fitness app project,,1
851,https://github.com/wikkiw/FitnessFunctions.git,Repository of fitness functions.,,1
852,https://github.com/dandraws/Keep-Moving-MF.git,Dance based fitness program,,1
853,https://github.com/waqasjuttt/Fitness_ClubApp.git,All about on Fitness,,1
854,https://github.com/ScottBain96/FitnessBuddy.git,Fitness Buddy Android Application,,1
855,https://github.com/rohitjain00/FatBurn.git,Fitness based web application,,1
856,https://github.com/Yeroshenko/Fites-trainer.git,Website for fitness trainer,,1
857,https://github.com/cschucode/fitness_monkey_flutter.git,Fitness Monkey Mobile App,,1
858,https://github.com/nuclearsheep540/gonsalves-fitness.git,Gonsalves Fitness PT Website,,1
859,https://github.com/unfadable211/relentlesspower.git,fitness motivating clients worldwide,,1
860,https://github.com/andreatodeschini/Wsd-fit.git,Web Sales Dashboard - fitness,,1
861,https://github.com/danfullerton/NateDavidDan.git,sponsor YMCA fitness,,1
862,https://github.com/akivab/pim.git,new fitness center,,1
863,https://github.com/raulb/prowellness.git,A complete fitness page,,1
864,https://github.com/Belax8/ft-api.git,"{""Fitness Tracker's API""}","django,django-rest-framework,django-rest-framework-addon",1
865,https://github.com/bstaub/fitness-tracker.git,fitness-tracker (Material App),,1
866,https://github.com/AbbyJoe/chatbot-EOS.git,a health fitness chatbot,,1
867,https://github.com/WerdienJihed/fitnessClub.git,fitness club website template,,1
868,https://github.com/mghijs/fitness-fatigue.git,Fitness and fatigue modelling,,1
869,https://github.com/firebase55/gym.git,30Days Fitness App,,1
870,https://github.com/chamila111/fitness-survey-form.git,fitness survey form,,1
871,https://github.com/NidhiBhanushali3701/Fooducate-App.git,Fitness Tracker App,"fitness-tracker,food-tracking,step-tracking,fooducate,firebase,flutter,java,ios,dart,android-studio",1
872,https://github.com/Twidget/Moulden.git,Moulden Fitness Reporting,,1
873,https://github.com/graykwise/fitness-app.git,Friend-based fitness app.,,1
874,https://github.com/BCButcher/fitness_tracker.git,Fitness Tracked (MongoDB Homework),,1
875,https://github.com/nikitashaw13/Aptitude.git,An Android fitness application,,1
876,https://github.com/andremaconi/SiteTCCSaborFitness.git,Site TCC Sabor Fitness,,1
877,https://github.com/Grisha-Kramer/Fitbook.git,A fitness tracking app,,1
878,https://github.com/cristianfchq/flutterfitnesss.git,app fitness aprendiendo flutter,,1
879,https://github.com/Azerdaoui/Fitness-Tracker-App-Flutter.git,A Fitness Tracker App,,1
880,https://github.com/hamitdaylak/fitness.git,basit fitness programƒ±,,1
881,https://github.com/Vinsanety/VahalaFitness.git,Vahala Fitness website,,1
882,https://github.com/Sirojiddin-Kh/Fitness-Web-App.git,Fitness-Web-App üèÉ\u200d‚ôÇÔ∏è,"django,python,backend,fitness-app,developer,pycharm",1
883,https://github.com/dabowheel/chronofeed.git,Fitness and Health,,1
884,https://github.com/maciejbukowski/Fituous.git,fitness web app,,1
885,https://github.com/j-nguyen/FitGrind.git,To track fitness goals,"android,fitness,java,fitness-app",1
886,https://github.com/lehner-lab/Fitness-Landscapes-Dataviz.git,Visualisation of fitness landscapes,,1
887,https://github.com/curest0x1021/FitnessApp-Kotlin.git,Fitness app with Kotlin,,1
888,https://github.com/thakur1199/Calishred_Fitness.git,Website for Calishred Fitness,,1
889,https://github.com/cornell-dti/flux-fitness.git,Flux Fitness functionality work.,,1
890,https://github.com/jvlam318/d3-fitness-tracker.git,Fitness activities tracking application,,1
891,https://github.com/sebasvil20/Fitness-App.git,ReactJs Fitness Project,,1
892,https://github.com/mishraaditya595/Unlock-Tracker.git,Android Fitness Tracker,"android,android-application,kotlin,kotlin-android,mvvm-architecture,coroutines,gcp,room-database,google-maps,googlecloudplatform,dagger,hilt-dependency-injection,view-binding",1
893,https://github.com/jrogozen/tsuyoku-web.git,tsuyoku fitness app,,1
894,https://github.com/danreardon/fbpost.git,App for fitness posts,,1
895,https://github.com/ZachBach/Mongoose-Fitness-App.git,Fitness-tracker application,,1
896,https://github.com/TeissierYannis/Salle-de-sport.git,SIO #1 Fitness website,,1
897,https://github.com/pastmos/Fitnecs.git,Insurance fitness app,,1
898,https://github.com/Sjouke91/Fittrackv2.0.git,fitness app v2,,1
899,https://github.com/VHarris113/fitness-tracker.git,A fun fitness tracker,,1
900,https://github.com/thefitnessfreaks/The-Fitness-Freaks.git,Health and Fitness,,1
901,https://github.com/acvogel/teamusa.git,Team USA Fitness Challenge,,1
902,https://github.com/HealthyCodersClub/99dips.git,99Dips Fitness Application,,1
903,https://github.com/kpstar/LomiApp-ObjectC-.git,Fitness App (Objective C),,1
904,https://github.com/kilo-mike/fitness_project.git,Projekt fitness club ,,1
905,https://github.com/havandenberg/react-fitness-club.git,React Fitness Club,,1
906,https://github.com/fullstuck/php-fitness.git,Fitness System Information App,,1
907,https://github.com/krangii17/FitnessApp.git,This is fitness application,,1
908,https://github.com/ipcoleman/fitbitdash.git,Personal fitness statistics dashboard,,1
909,https://github.com/tadamiura/fitness-app.git,Fitness app in progress,,1
910,https://github.com/abayo-luc/besty.git,Your mental fitness partner. ,,1
911,https://github.com/Ryukxxx/getin_shape.git,Fitness app in development.,,1
912,https://github.com/altruong/fitness-journal-frontend.git,Fitness journal frontend ,"nextjs,graphql,apollo,typescript",1
913,https://github.com/Eclipsu/Fitness-Bot.git,Discord bot about fitness.,,1
914,https://github.com/Virtruvian1/Pure-Fitness.git,Pure Fitness Web App aimed at automating fitness and nutrition. Built with ASP.NET Core MVC. | ¬©2020 - Pure Fitness,"webapp,health,fitness,automation,mvc,asp-net-core",1
915,https://github.com/arthurkam/ecse428--ihealthpal.git,"{""ihealthpal is a website to track user's fitness, and healthy status. Users can set up their own fitness goals. The website will recommand proper exercise and food according to users' goals.    ""}",,1
916,https://github.com/jiangyuanhk/MyRunsApp.git,A fitness tracking android application,,1
917,https://github.com/dcplindia/BidFitness.git,A Fitness based Auction site,,1
918,https://github.com/deathrai/fitness-pizza.git,Kivy Python App for fitness,,1
919,https://github.com/ShunshunL/gymFairyQuizApp.git,A quiz app about fitness,,1
920,https://github.com/punkundermyskin/pRunner.git,üèÉ\u200d‚ôÇÔ∏èpRunner - fitness tracking iOS app,,1
921,https://github.com/catpea/fitness.git,Markdown source for fitness advice.,"fitness,bodybuilding,bodybuilder,workout,interval-training,crossfit",1
922,https://github.com/ludwig-vaan/Udacifitness.git,React Native App of fitness,,1
923,https://github.com/Aditya-Ohri/SmartFit.git,Intelligent AI Fitness Training Platform,,1
924,https://github.com/ayo-dami/Custom-Fitness-Calculator.git,Custom Fitness Calculator for wordpress,,1
925,https://github.com/patmood/interval_trainer.git,Fitness timer for interval training,,1
926,https://github.com/vroy/rubybody.git,Ruby gem for fitness calculations,,1
927,https://github.com/elevationfitness/elevationfit.com-api-docs.git,API docs for Elevation Fitness,,1
928,https://github.com/vivchar/timer.git,Fitmer STAGE - interval fitness timer,,1
929,https://github.com/RohitBh-GT/Fitness-Website.git,Fitness website for SF Hacks,,1
930,https://github.com/vivchar/timer.git,Fitmer STAGE - interval fitness timer,,1
931,https://github.com/RohitBh-GT/Fitness-Website.git,Fitness website for SF Hacks,,1
932,https://github.com/deathrai/fitness-pizza.git,Kivy Python App for fitness,,1
933,https://github.com/jiangyuanhk/MyRunsApp.git,A fitness tracking android application,,1
934,https://github.com/dcplindia/BidFitness.git,A Fitness based Auction site,,1
935,https://github.com/ShunshunL/gymFairyQuizApp.git,A quiz app about fitness,,1
936,https://github.com/catpea/fitness.git,Markdown source for fitness advice.,"fitness,bodybuilding,bodybuilder,workout,interval-training,crossfit",1
937,https://github.com/punkundermyskin/pRunner.git,üèÉ\u200d‚ôÇÔ∏èpRunner - fitness tracking iOS app,,1
938,https://github.com/orkist/FS.git,Website for Fitness Snob #WSPGHWOMEN,,1
939,https://github.com/B-xu/MoveWorkout.git,A bodyweight fitness Android app,,1
940,https://github.com/Build-Week-Anywhere-Fitness-2021/front-end.git,Front-End For Anywhere Fitness,,1
941,https://github.com/sahil211999/sigMobileFitness.git,Fitness app for sig mobile,,1
942,https://github.com/bzaley/Vigor.git,Android Fitness Application using Springboot,,1
943,https://github.com/Neha0595/Guruzzi.git,Mental and Physical Fitness app,,1
944,https://github.com/firebase55/fullFtness_aPP.git,fitness app using frgment classes,,1
945,https://github.com/doanburak97/FitnessApplication.git,Fitness Application with the Firebase,,1
946,https://github.com/ga-labs-fitness-visualization/fitness-visualization.git,Fitness visualization utilizing Fitbit API,,1
947,https://github.com/andresolerc/soulheartgrit.git,Fitness coaching and healthy ideas,"fitness,health",1
948,https://github.com/hansbrougha/fitness-tracker.git,Fitness Tracker created with MongoDB,,1
949,https://github.com/kostovd72/Yoga.git,Swift 3 Yoga fitness app,,1
950,https://github.com/mitvad/40FatMin.git,Fitness app for Apple Watch,,1
951,https://github.com/douglasboyce/eFitness.git,React Fitness and Exercise Log,,1
952,https://github.com/sofamonster/trainingtracker.git,Simple webOS fitness tracker app.,,1
953,https://github.com/lielasus/FNF.git,Fight and Fitness Mobile Application,,1
954,https://github.com/RutgersSoftwareEngineeringGroup13/Be-Healthy.git,Be-Healthy Health & Fitness App,,1
955,https://github.com/JeffKGabriel/yoked.git,social fitness react-native app,,1
956,https://github.com/FossenWang/Power.git,a fitness app on android,,1
957,https://github.com/Fcc-Hackthon-Ak-Group/Fitness_match.git,Fitness data show on matchDay,,1
958,https://github.com/redcodered/fitboy.git,Fitness and Nutrition Planning App,,1
959,https://github.com/PapayaStyle/newfitnesspoint.git,Angular project for fitness-point,,1
960,https://github.com/lm380/Fitness-webapp.git,Spring boot fitness web application,,1
961,https://github.com/Zefty/FitTracAPI.git,FitTrac | Fitness tracking for everyone!,,1
962,https://github.com/RayOkaah/otrek.git,"Otrek, A Social Fitness App.",,1
963,https://github.com/samchitranshi/awesomefitness.git,This is a fitness website.,,1
964,https://github.com/LOGANATHANAN/DEVSPACE-hackathon.git,Indoor fitness and health tips,,1
965,https://github.com/khoamle/exercise-api.git,API for fitness-app project,,1
966,https://github.com/zbanks/poesidon.git,Much swimming. Very fitness. Wow.,,1
967,https://github.com/aduric/fidi.git,Fitness Instrument Digital Interface Protocol,,1
968,https://github.com/utshaweu/Refuel_Fitness_and_Gym_Theme.git,Refuel - Fitness and Gym Theme,,1
969,https://github.com/pushpendrakukreti/E-Fitness.git,E-Fitness using Asp.Net,,1
970,https://github.com/soumakofc/fitness_app.git,A fitness app in flutter,,1
971,https://github.com/frdayvz85/Frontend-Gymproject.git,Full Responsive Frontend fitness project,,1
972,https://github.com/xuwudawei/King-David.git,Jeremiah Fitness Company Marketing Website,,1
973,https://github.com/mmerc00/FitnessTrackerApp.git,Fitness application using React & MongoDB,"reactjs,mongodb",1
974,https://github.com/control-fitness/react-cf-graphql-client.git,GraphQL client for Control Fitness,graphql,1
975,https://github.com/Fedtness/FitnessApp.git,Fitness mobile app - React native,"react-native,react,fitness-app",1
976,https://github.com/nionio78/Fitness-Page.git,Landing page for fitness club,,1
977,https://github.com/jayden2/AllStarFitness.git,All Star Fitness Dashboard Application,,1
978,https://github.com/yingchengsun/Together-Fitness-Center.git,"Website for ""Together Fitness Center""",,1
979,https://github.com/nicolasromer/fitplan.git,pure php fitness app prototype,,1
980,https://github.com/OsipchikMinsk/FinalWebDevEpamFitness.git,Final task in EPAM (Fitness),,1
981,https://github.com/JRyanSaunders/Fitness-App.git,React Native Fitness Mobile App,,1
982,https://github.com/AhmedHussein22/Flutter-Fitness-APP.git,Flutter Fitness APP using API ,,1
983,https://github.com/SametSisartenep/rcfitness.git,Rc tools for fitness tracking,,1
984,https://github.com/devmatt3/toptierfitness.git,Website for Top Tier Fitness,,1
985,https://github.com/hvats16/fitness-webpage.git,Portfolio of my fitness webpage,,1
986,https://github.com/plewinska/V-Fitness---Wellness-Event-2011.git,V Fitness & Wellness Event 2011,,1
987,https://github.com/nmanikiran/ngFitness.git,Fitness app with angular firebase,"angular,firebase,rxjs,fitness,authentication,firestore,angularfire2,material,angular-cli,typescript",1
988,https://github.com/AmI-2018/fitness-partner-code.git,Code for Fitness Partner Project,,1
989,https://github.com/jsondoo/FitnessDB.git,Managing the best fitness centers ,"database,heroku,postgresql,node-js,fitness,database-gui",1
990,https://github.com/ayushkarnawat/profit.git,Exploring evolutionary protein fitness landscapes,"protein-structure,protein-sequences,fitness-landscape,protein-evolution,nlp-machine-learning,pytorch,bayesian-inference,semi-supervised-learning,optimization,gradient-free-optimization",1
991,https://github.com/rajchandra3/c2c_sugura_droga.git,data entigrity and health & fitness,,1
992,https://github.com/Koato/ReactFitness.git,Proyecto en React para fitness,,1
993,https://github.com/Rajeev-Ranjanc/HTML-Development.git,A Website of Gym Fitness.,,1
994,https://github.com/gdmoney/fitness.git,fitness tracking and exercise log,"exercise,log,workout,fitness",1
995,https://github.com/ExpertMobileDev/Health-Fitness-iOS-App.git,health and fitness iOS app,,1
996,https://github.com/ayo-dami/enhanced.git,Fitness tracker bot for discord,,1
997,https://github.com/AnilKSahoo9/fitness-tracking-n-visualization-system.git,Fitness Tracking n Visualization System,,1
998,https://github.com/Aniket1272/FitneesFreaks.git,Fitness Guide website for beginners,,1
999,https://github.com/cbg-ethz/QuasiFit.git,QuasiFit is a Bayesian MCMC sampler for inferring fitness landscapes in the quasispecies model subject to mutation-selection equilibrium.,,1
1000,https://github.com/nkovidreddy/FitnFab.git,This project aims in building an online fitness meter and providing diet plans to users based on their calorie intake.,,1
1001,https://github.com/sidrk/LivFit.git,A website for fitness freaks to get together to find information and plan workouts üèãÔ∏è\u200d‚ôÇÔ∏è built in PHP!,"php,xampp,xslt,mysql",1
1002,https://github.com/nav9/differentialEvolution.git,An implementation of the famous Differential Evolution Computational Intelligence algorithm formulated by Storn and Price. This algorithm uses the Otsu criterion as the fitness function and can be used to threshold grayscale images using multiple thresholds. ,,1
1003,https://github.com/Its-Vinay/fit1.git,"fitness app that can count steps , distance ,calories burned ,timer ,exercise details ,training ,and a good UI",,1
1004,https://github.com/jcs98/Heartbeat.git,"{""A fitness app which measures the user's heart rate using the phone's camera and flash""}",,1
1005,https://github.com/matallica81/SmartLift.git,Fitness app for Android and Android Wear OS used for fitness tracking and prediction.,,1
1006,https://github.com/mian-ali/GymWebsite.git,Fitness website to be linked with a fitness app. Started as a school project.,"fitness,gym-environment,gym,gym-website,gym-website-templete,gym-application,gym-sourcecode",1
1007,https://github.com/ramonmeza/Fitness-Website.git,Fitness website to be linked with a fitness app. Started as a school project.,,1
1008,https://github.com/gigimscarborough/Fit2Me.git,Fit2Me is a fitness app designed to connect trainers and fitness seekers with workouts and venues,,1
1009,https://github.com/RdotSilva/Python-Flask-Fitness-Blog.git,Fitness Blog built using Python and Flask allowing users to share fitness and workout routines.,,1
1010,https://github.com/hardik0899/Fitwatch.git,A simple android based application for fitness freaks. Basically its a fitness timer stopwatch.,,1
1011,https://github.com/Lego25994/fitness-tracker-backend.git,Backend for the Part 25994 Fitness Tracker app (Hot Dog Fitness).,,1
1012,https://github.com/amglovier/amglovier.github.io.git,My personal health and fitness blog.,,1
1013,https://github.com/shevart/FitnessNotes.git,FitnessNotes - app for notes your fitness events. ,"android,android-application,android-app,mvp-architecture",1
1014,https://github.com/TheAidanOGrady/KeepFit-Android.git,Basic fitness tracking application for Android,,1
1015,https://github.com/rharshit/FitnessTracker.git,Java app to track fitness data,,1
1016,https://github.com/bayanijulian/commit-fitness-app-android.git,a fitness app that creates motivation,,1
1017,https://github.com/aimenbatool/UdaciFitness-React-Native.git,A personal fitness activities tracking application.,"react-native,react,redux,real-world-project,react-native-navigation",1
1018,https://github.com/molnarjozsef/FitnessGo.git,A fitness application based on Pokemon Go,,1
1019,https://github.com/gigamike/bigmike.git,Big Mike Your personal fitness coach,,1
